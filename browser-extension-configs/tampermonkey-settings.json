{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"Wikiwand","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://*.wikipedia.org/*","https://www.wikiwand.com/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1676647515716,"data":{}},"enabled":true,"position":1,"file_url":"https://github.com/kidonng/cherry/raw/master/scripts/wikiwand.user.js","uuid":"845ac930-dd23-415c-9fb4-043f98ccad6b","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBXaWtpd2FuZAovLyBAdmVyc2lvbiAgICAgIDEuMS4wCi8vIEBkZXNjcmlwdGlvbiAgV2lraXdhbmQgYnJvd3NlciBleHRlbnNpb24gcmVwbGFjZW1lbnQKLy8gQGF1dGhvciAgICAgICBraWRvbm5nCi8vIEBuYW1lc3BhY2UgICAgaHR0cHM6Ly9naXRodWIuY29tL2tpZG9ubmcvY2hlcnJ5Ci8vIEBydW4tYXQgICAgICAgZG9jdW1lbnQtc3RhcnQKLy8gQG1hdGNoICAgICAgICBodHRwczovLyoud2lraXBlZGlhLm9yZy8qCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly93d3cud2lraXdhbmQuY29tLyoKLy8gPT0vVXNlclNjcmlwdD09Cgo7KCgpID0+IHsKICBjb25zdCB7IGhvc3RuYW1lLCBwYXRobmFtZSwgc2VhcmNoLCBoYXNoIH0gPSBsb2NhdGlvbgoKICBpZiAoaG9zdG5hbWUgPT09ICd3d3cud2lraXdhbmQuY29tJykgewogICAgcmV0dXJuIChkb2N1bWVudC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSAoKSA9PiB7CiAgICAgIGlmIChkb2N1bWVudC5yZWFkeVN0YXRlID09PSAnY29tcGxldGUnKQogICAgICAgIGRvY3VtZW50CiAgICAgICAgICAucXVlcnlTZWxlY3RvcihkZWNvZGVVUklDb21wb25lbnQoaGFzaC5yZXBsYWNlKCcvJywgJycpKSkKICAgICAgICAgIC5zY3JvbGxJbnRvVmlldygpCiAgICB9KQogIH0KCiAgY29uc3QgcGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyhzZWFyY2gpCiAgaWYgKAogICAgcGFyYW1zLmhhcygnYWN0aW9uJykgfHwKICAgIHBhcmFtcy5oYXMoJ29sZGlkJykgfHwKICAgIHBhcmFtcy5nZXQoJ29sZGZvcm1hdCcpID09PSAndHJ1ZScKICApCiAgICByZXR1cm4KCiAgLy8gMS4gL3dpa2kvdGl0bGUKICAvLyAyLiAvdy9pbmRleC5waHA/dGl0bGU9dGl0bGUmdmFyaWFudD1sYW5nCiAgLy8gMy4gL2xhbmcvdGl0bGUKICBjb25zdCBbLCB0eXBlLCBfdGl0bGVdID0gcGF0aG5hbWUuc3BsaXQoJy8nKQogIGNvbnN0IGxhbmcgPQogICAgdHlwZSA9PT0gJ3dpa2knCiAgICAgID8gaG9zdG5hbWUuc3BsaXQoJy4nKVswXQogICAgICA6IHR5cGUgPT09ICd3JwogICAgICA/IHBhcmFtcy5nZXQoJ3ZhcmlhbnQnKQogICAgICA6IHR5cGUKICBjb25zdCB0aXRsZSA9IHR5cGUgPT09ICd3JyA/IHBhcmFtcy5nZXQoJ3RpdGxlJykgOiBfdGl0bGUKCiAgaWYgKAogICAgdGl0bGUuc3RhcnRzV2l0aCgnU3BlY2lhbDonKSB8fAogICAgdGl0bGUuc3RhcnRzV2l0aCgnVXNlcjonKSB8fAogICAgdGl0bGUuc3RhcnRzV2l0aCgnVXNlcl90YWxrOicpCiAgKQogICAgcmV0dXJuCgogIGxvY2F0aW9uLmhyZWYgPSBgaHR0cHM6Ly93d3cud2lraXdhbmQuY29tLyR7bGFuZ30vJHt0aXRsZX0kewogICAgaGFzaCA/IGhhc2gucmVwbGFjZSgnY2l0ZV9ub3RlLScsICdjaXRlbm90ZScpIDogJycKICB9YAp9KSgpCg=="},{"name":"YouTube Skip Redirector","options":{"check_for_updates":false,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://www.youtube.com/redirect?*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1676647515718,"data":{}},"enabled":true,"position":2,"uuid":"15936936-9286-4aa5-9f5b-1a44c908090c","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBZb3VUdWJlIFNraXAgUmVkaXJlY3RvcgovLyBAbmFtZXNwYWNlICAgIGh0dHA6Ly90YW1wZXJtb25rZXkubmV0LwovLyBAdmVyc2lvbiAgICAgIDAuMQovLyBAZGVzY3JpcHRpb24gIFNraXAgWW91VHViZSBSZWRpcmVjdGlvbiBJbmZvcm1hdGlvbiBQYWdlCi8vIEBhdXRob3IgICAgICAgWW91Ci8vIEBtYXRjaCAgICAgICAgKjovL3d3dy55b3V0dWJlLmNvbS9yZWRpcmVjdD8qCi8vID09L1VzZXJTY3JpcHQ9PQoKY29uc3QgdGhlVVJMID0gZG9jdW1lbnQuVVJMCiAgICAucmVwbGFjZSgvLip5b3V0dWJlXC5jb20uKiZxPS9naSwgIiIpOwpjb25zdCBkZWNvZGVkVVJMID0gZGVjb2RlVVJJQ29tcG9uZW50KHRoZVVSTCk7Cgp3aW5kb3cubG9jYXRpb24uaHJlZiA9IChkZWNvZGVkVVJMKTs="},{"name":"ChatGPT: Parse q parameter to input","options":{"check_for_updates":false,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://chat.openai.com/chat*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1676647515720,"data":{}},"enabled":true,"position":3,"uuid":"f6b01bcd-9f7a-4170-be83-4283d93136e2","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIENoYXRHUFQ6IFBhcnNlIHEgcGFyYW1ldGVyIHRvIGlucHV0Ci8vIEBtYXRjaCAgICAgICBodHRwczovL2NoYXQub3BlbmFpLmNvbS9jaGF0KgovLyBAZ3JhbnQgICAgICAgbm9uZQovLyBAdmVyc2lvbiAgICAgMS4wCi8vIEBhdXRob3IgICAgICBzdHJhamsubWUKLy8gPT0vVXNlclNjcmlwdD09CgovLyBodHRwczovL2dpdGh1Yi5jb20vU3RyYWprL3NldHVwL2Jsb2IvMTY0ZGI5Yjk3YWM3MjhjNWJiYTRiNTQzZjRjYmM2YmU2OGYwOTYyZS91c2VyLXNjcmlwdHMvY2hhdGdwdC1xLXBhcmFtLXRvLWlucHV0LnVzZXIuanMKLy8gaHR0cHM6Ly90d2l0dGVyLmNvbS9TdHJhYWFqay9zdGF0dXMvMTU5OTU0MDY4ODI2NTIyMDA5NwoKY29uc3QgaW5wdXRTZWxlY3RvciA9ICJ0ZXh0YXJlYVtkYXRhLWlkPSdyb290J10iCgovLyBzZXRJbnRlcnZhbCB1bnRpbCBpbnB1dFNlbGVjdG9yIGlzIG9uIHRoZSBwYWdlCmNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4gewogIGNvbnN0IGlucHV0RWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGlucHV0U2VsZWN0b3IpCiAgaWYgKGlucHV0RWwpIHsKICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpCiAgICAvLyBQYXJzZSB0aGUgInEiIHBhcmFtIGZyb20gdGhlIHF1ZXJ5IHN0cmluZwogICAgY29uc3QgdXJsT2JqID0gbmV3IFVSTCh3aW5kb3cubG9jYXRpb24uaHJlZikKICAgIGNvbnN0IHEgPSB1cmxPYmouc2VhcmNoUGFyYW1zLmdldCgicSIpCiAgICBpZiAoIXEpIHJldHVybgoKICAgIC8vIFNldCB0aGUgaW5wdXQgZmllbGQgdG8gdGhlIHZhbHVlIG9mIHRoZSAicSIgcGFyYW0KICAgIGlucHV0RWwudmFsdWUgPSBxCgogICAgLy8gU3VibWl0IHRoZSBmb3JtCiAgICAvLyBjb25zdCBmb3JtID0gaW5wdXRFbC5jbG9zZXN0KCJmb3JtIikKICAgIC8vIGZvcm0uZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoInN1Ym1pdCIpKSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmCiAgICBjb25zdCBidXR0b24gPSBpbnB1dEVsLm5leHRFbGVtZW50U2libGluZwogICAgYnV0dG9uLmNsaWNrKCkKICB9Cn0sIDUwMCk="},{"name":"Zoom Redirector","options":{"check_for_updates":false,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://*.zoom.us/j/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1676658625889,"data":{}},"enabled":true,"position":4,"uuid":"655d2ca7-caed-453a-9dc9-c166a88ebec4","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBab29tIFJlZGlyZWN0b3IKLy8gQG5hbWVzcGFjZSAgICBodHRwOi8vdGFtcGVybW9ua2V5Lm5ldC8KLy8gQHZlcnNpb24gICAgICAwLjEKLy8gQGRlc2NyaXB0aW9uICBPcGVuIGRpcmVjdGx5IGluIFpvb20gQXBwIGluc3RlYWQgb2Ygb3BlbmluZyBhIHRhYgovLyBAYXV0aG9yICAgICAgIFlvdQovLyBAbWF0Y2ggICAgICAgICo6Ly8qLnpvb20udXMvai8qCi8vID09L1VzZXJTY3JpcHQ9PQoKY29uc3QgdXJsID0gZG9jdW1lbnQuVVJMCgkucmVwbGFjZSAoL2h0dHBzPzpcL1wvLipcLnpvb21cLnVzXC9qXC8oXHcrKVw/cHdkPShcdyspJC8sInpvb21tdGc6Ly96b29tLnVzL2pvaW4/Y29uZm5vPSQxJnB3ZD0kMiIpOwoKd2luZG93LmxvY2F0aW9uLmhyZWYgPSAodXJsKTs="},{"name":"Download github repo sub-folder","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["cdn.jsdelivr.net"],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://github.com/*","https://gist.github.com/*"],"orig_noframes":true,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1676658625890,"data":{}},"enabled":true,"position":5,"file_url":"https://greasyfork.org/scripts/411834-download-github-repo-sub-folder/code/Download%20github%20repo%20sub-folder.user.js","uuid":"8b96e64f-1dc9-4c8b-8960-573b84925c76","source":""},{"name":"Reddit highlight newest comments","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["/https?:\\/\\/((www|pay|[a-z]{2})\\.)?reddit\\.com\\/r\\/[a-zA-Z0-9_-]+\\/comments\\/.*/"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1676658625890,"data":{}},"enabled":true,"position":6,"file_url":"https://greasyfork.org/scripts/1868-reddit-highlight-newest-comments/code/Reddit%20highlight%20newest%20comments.user.js","uuid":"e4c4e1be-f2f6-4386-a49e-2844f0f4a270","source":""},{"name":"Subreddit tab icons","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://www.reddit.com/r/*","https://new.reddit.com/r/*","https://old.reddit.com/r/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1676658625891,"data":{}},"enabled":true,"position":7,"file_url":"https://greasyfork.org/scripts/460086-subreddit-tab-icons/code/Subreddit%20tab%20icons.user.js","uuid":"a2b1c162-5961-4279-bdae-37d135a060ac","source":""},{"name":"Sci-hub button","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://AJHPContents.com/*","*://aaas.org/*","*://aacrmeetingabstracts.org/*","*://aaiddjournals.org/*","*://aanda.org/*","*://aapgbulletin.datapages.com/*","*://aas.aanda.org/*","*://academic.mintel.com/*","*://accessible.com/*","*://acm.org/*","*://adisonline.com/*","*://adsabs.harvard.edu/*","*://adswww.harvard.edu/*","*://advan.physiology.org/*","*://aeaweb.org/*","*://agronomy-journal.org/*","*://agu.org/*","*://ahiv.alexanderstreet.com/*","*://aiaa.org/*","*://aimsciences.org/*","*://aip.org/*","*://ajcn.org/*","*://ajcp.ascpjournals.org/*","*://ajevonline.org/*","*://ajh.sagepub.com/*","*://ajp.psychiatryonline.org/*","*://ajpcell.physiology.org/*","*://ajpendo.physiology.org/*","*://ajpgi.physiology.org/*","*://ajph.aphapublications.org/*","*://ajpheart.physiology.org/*","*://ajplegacy.physiology.org/*","*://ajplung.physiology.org/*","*://ajpregu.physiology.org/*","*://ajprenal.physiology.org/*","*://ajrccm.atsjournals.org/*","*://ajrcmb.org/*","*://ajslp.asha.org/*","*://ajsonline.org/*","*://ajtmh.org/*","*://ala.org/*","*://als.dukejournals.org/*","*://americana.ncsu.edu/*","*://americanliterature.dukejournals.org/*","*://americanspeech.dukejournals.org/*","*://amjbot.org/*","*://ams.org/*","*://amsciepub.com/*","*://analusis.edpsciences.org/*","*://anb.org/*","*://andrologyjournal.org/*","*://animres.edpsciences.org/*","*://annals.org/*","*://annee-philologique.com/*","*://annphys.org/*","*://annualreviews.org/*","*://anthrosource.net/*","*://apex.ipap.jp/*","*://apidologie.org/*","*://app.harpweek.com/*","*://appliedradiology.com/*","*://apps.isiknowledge.com/*","*://aps.org/*","*://apsjournals.apsnet.org/*","*://archderm.ama-assn.org/*","*://archinte.ama-assn.org/*","*://archive.pepublishing.com/*","*://archives.chadwyck.com/*","*://archneur.ama-assn.org/*","*://archopht.ama-assn.org/*","*://archpsyc.ama-assn.org/*","*://archsurg.ama-assn.org/*","*://arjournals.annualreviews.org/*","*://artstor.org/*","*://asadl.org/*","*://asae.frymulti.com/*","*://ascelibrary.org/*","*://asianannals.ctsnetjournals.org/*","*://aslo.org/*","*://aspet.org/*","*://aspresolver.com/*","*://atypon-link.com/*","*://aviationweek.com/*","*://avmajournals.avma.org/*","*://bas.umdl.umich.edu/*","*://bbmt.org/*","*://bepress.com/*","*://berrymaninstitute.org/*","*://biochemj.org/*","*://biochemsoctrans.org/*","*://biol.uni.wroc.pl/*","*://biolbull.org/*","*://biolreprod.org/*","*://bioone.org/*","*://bioscirep.org/*","*://biotechniques.com/*","*://blackwell-synergy.com/*","*://bloodjournal.hematologylibrary.org/*","*://bmj.com/*","*://bna.birds.cornell.edu/*","*://bos.frb.org/*","*://botany.org/*","*://boundary2.dukejournals.org/*","*://britannica.com/*","*://bsas.org.uk/*","*://bssaonline.org/*","*://bul.sagepub.com/*","*://businessweek.com/*","*://cabdirect.org/*","*://cabi.org/*","*://cameraobscura.dukejournals.org/*","*://cancerres.aacrjournals.org/*","*://canreviews.aacrjournals.org/*","*://carbo.chemnetbase.com/*","*://cawq.ca/*","*://ccd.chemnetbase.com/*","*://ccl.sagepub.com/*","*://cell.com/*","*://cgd.aacrjournals.org/*","*://checkpoint.riag.com/*","*://chelonianjournals.org/*","*://chemnetbase.com/*","*://chestjournal.chestpubs.org/*","*://chicagomanualofstyle.org/*","*://china.eastview.com/*","*://choicesmagazine.org/*","*://chronicle.com/*","*://ci.nii.ac.jp/*","*://ciaonet.org/*","*://cindasdata.com/*","*://ciw.edu/*","*://cjc-online.ca/*","*://cl.uwpress.org/*","*://clevelandfed.org/*","*://clincancerres.aacrjournals.org/*","*://clinchem.org/*","*://clinmed.netprints.org/*","*://clinsci.org/*","*://cms.math.ca/*","*://cnki.en.eastview.com/*","*://collections.chadwyck.com/*","*://communicationencyclopedia.com/*","*://complit.dukejournals.org/*","*://computerworld.com/*","*://consumerinterests.org/*","*://contemporaryobgyn.net/*","*://content.karger.com/*","*://corporateaffiliations.com/*","*://crcnetbase.com/*","*://crl.acrl.org/*","*://crln.acrl.org/*","*://cro2.org/*","*://cshmonographs.org/*","*://cshprotocols.cshlp.org/*","*://csi.sagepub.com/*","*://dandini.emeraldinsight.com/*","*://darwin.edu.ar/*","*://db.chemsources.com/*","*://dccc.chemnetbase.com/*","*://dev.biologists.org/*","*://dfc.chemnetbase.com/*","*://dichtung-digital.de/*","*://digital.library.mcgill.ca/*","*://digitalmicrofilm.proquest.com/*","*://dioc.chemnetbase.com/*","*://discovermagazine.com/*","*://dl.acm.org/*","*://dl.begellhouse.com/*","*://dlib.eastview.com/*","*://dmd.aspetjournals.org/*","*://dmnp.chemnetbase.com/*","*://dx.doi.org/*","*://ebm.rsmjournals.com/*","*://ebook.rsc.org/*","*://economist.com/*","*://edgj.org/*","*://edm.sagepub.com/*","*://edpsciences.org/*","*://edrv.endojournals.org/*","*://educationbook.aacrjournals.org/*","*://eebo.chadwyck.com/*","*://eenews.net/*","*://ehq.sagepub.com/*","*://ejorel.com/*","*://electrochem.org/*","*://elementsmagazine.org/*","*://els.net/*","*://ema.sagepub.com/*","*://emeraldinsight.com/*","*://ems-ph.org/*","*://endo.endojournals.org/*","*://engineeringvillage2.com/*","*://enterprise.astm.org/*","*://epirev.oupjournals.org/*","*://epjap.org/*","*://epubs.ans.org/*","*://er.uwpress.org/*","*://erc.endocrinology-journals.org/*","*://erg.sagepub.com/*","*://esa.publisher.ingentaconnect.com/*","*://esajournals.org/*","*://etde.org/*","*://ethnohistory.dukejournals.org/*","*://europhysicsnews.org/*","*://evolutionary-ecology.com/*","*://exacteditions.com/*","*://extensionreport.osu.edu/*","*://facs.org/*","*://familiesinsociety.org/*","*://fao.org/*","*://fasebj.org/*","*://fhs.dukejournals.org/*","*://fiaf.chadwyck.com/*","*://find.acacamps.org/*","*://find.galegroup.com/*","*://firstsearch.oclc.org/*","*://fundingopps2.cos.com/*","*://fyesit.metapress.com/*","*://gateway.proquest.com/*","*://genesdev.cshlp.org/*","*://genetics.org/*","*://genome.cshlp.org/*","*://genomebiology.com/*","*://geology.gsapubs.org/*","*://giorgio.ingentaselect.com/*","*://global-sci.com/*","*://glq.dukejournals.org/*","*://gmr.minsocam.org/*","*://gpoaccess.gov/*","*://groveart.com/*","*://grovemusic.com/*","*://gsabulletin.gsapubs.org/*","*://gse-journal.org/*","*://gut.bmj.com/*","*://hahr.dukejournals.org/*","*://hapi.gseis.ucla.edu/*","*://heart.bmj.com/*","*://heinonline.org/*","*://hh.um.es/*","*://hope.dukejournals.org/*","*://hortsci.ashspublications.org/*","*://horttech.ashspublications.org/*","*://hsus.cambridge.org/*","*://hti.umich.edu/*","*://hull.ac.uk/*","*://ias.ac.in/*","*://ibe.sagepub.com/*","*://ibisworld.com/*","*://ibra.org.uk/*","*://icevirtuallibrary.com/*","*://icf.uab.es/*","*://ici.org/*","*://ida.liu.se/*","*://ieee.org/*","*://ieeexplore.ieee.org/*","*://ihserc.com/*","*://iimp.chadwyck.com/*","*://ijc.org/*","*://ijdb.ehu.es/*","*://ijee.ie/*","*://ijs.sgmjournals.org/*","*://impublications.com/*","*://inda.org/*","*://informahealthcare.com/*","*://informaworld.com/*","*://infotrac.galegroup.com/*","*://infoweb.newsbank.com/*","*://ingentaconnect.com/*","*://ingentaselect.com/*","*://inpractice.bmj.com/*","*://inscribe.iupress.org/*","*://int-res.com/*","*://interfaces.journal.informs.org/*","*://interscience.wiley.com/*","*://iop.org/*","*://iopscience.iop.org/*","*://iovs.org/*","*://ipap.jp/*","*://ir.uiowa.edu/*","*://isiknowledge.com/*","*://isr.journal.informs.org/*","*://itergateway.org/*","*://itn.is/*","*://iucn.org/*","*://iupac.org/*","*://iwaponline.com/*","*://jaaha.org/*","*://jama.ama-assn.org/*","*://jap.physiology.org/*","*://japr.fass.org/*","*://jas.fass.org/*","*://jbc.org/*","*://jbjs.org/*","*://jbmronline.org/*","*://jcb.rupress.org/*","*://jcem.endojournals.org/*","*://jco.ascopubs.org/*","*://jcp.bmj.com/*","*://jcs.biologists.org/*","*://jeb.biologists.org/*","*://jem.rupress.org/*","*://jgp.rupress.org/*","*://jgs.lyellcollection.org/*","*://jgslegacy.lyellcollection.org/*","*://jhortscib.org/*","*://jhr.uwpress.org/*","*://jhse.org/*","*://jimmunol.org/*","*://jleukbio.org/*","*://jlr.org/*","*://jme.endocrinology-journals.org/*","*://jmems.dukejournals.org/*","*://jmm.sgmjournals.org/*","*://jn.nutrition.org/*","*://jn.physiology.org/*","*://jneurosci.org/*","*://jnm.snmjournals.org/*","*://jnnp.bmj.com/*","*://jnrlse.org/*","*://joa.isa-arbor.com/*","*://joc.journal.informs.org/*","*://joe.endocrinology-journals.org/*","*://john-libbey-eurotext.fr/*","*://journal.ashspublications.org/*","*://journal.telospress.com/*","*://journals.ametsoc.org/*","*://journals.cambridge.org/*","*://journals.hil.unb.ca/*","*://journals.humankinetics.com/*","*://journals.iucr.org/*","*://journals.naspa.org/*","*://journals.sagamorepub.com/*","*://journals.tdl.org/*","*://journalstp.gracescientific.com/*","*://jove.com/*","*://jp.physoc.org/*","*://jpet.aspetjournals.org/*","*://jpsj.ipap.jp/*","*://jsad.com/*","*://jsedres.sepmonline.org/*","*://jslhr.asha.org/*","*://jstage.jst.go.jp/*","*://jstor.org/*","*://jswconline.org/*","*://jwildlifedis.org/*","*://jyi.org/*","*://kluwerlawonline.com/*","*://kluweronline.com/*","*://knovel.com/*","*://la.rsmjournals.com/*","*://labanimal.com/*","*://labor.dukejournals.org/*","*://landesbioscience.com/*","*://le.uwpress.org/*","*://lexis-nexis.com/*","*://lexisnexis.com/*","*://library.cqpress.com/*","*://library.pressdisplay.com/*","*://library.seg.org/*","*://libraryissues.com/*","*://liebertonline.com/*","*://link.springer-ny.com/*","*://link.springer.de/*","*://links.jstor.org/*","*://livingbird.org/*","*://lj.uwpress.org/*","*://mansci.journal.informs.org/*","*://mapress.com/*","*://math.ualberta.ca/*","*://mcponline.org/*","*://mcr.aacrjournals.org/*","*://mcr.sagepub.com/*","*://mend.endojournals.org/*","*://metapress.com/*","*://metla.fi/*","*://mic.sgmjournals.org/*","*://millerpublishing.com/*","*://minsocam.org/*","*://mitpressjournals.org/*","*://mktsci.journal.informs.org/*","*://mlajournals.org/*","*://mluri.sari.ac.uk/*","*://mmm.edpsciences.org/*","*://molbiolcell.org/*","*://molpharm.aspetjournals.org/*","*://mor.journal.informs.org/*","*://mp.bmj.com/*","*://mq.dukejournals.org/*","*://msp.berkeley.edu/*","*://msucares.com/*","*://muse.jhu.edu/*","*://museumoftheearth.org/*","*://mycologia.org/*","*://myinsight.ihsglobalinsight.com/*","*://nactateachers.org/*","*://nationaljournal.com/*","*://nature.com/*","*://nber.org/*","*://nc-apa.org/*","*://ncbi.nlm.nih.gov/*","*://ncbiotech.org/*","*://nccsdataweb.urban.org/*","*://ncdjjdp.org/*","*://ncjrs.org/*","*://nclive.org/*","*://ncph.org/*","*://ncpublicschools.org/*","*://ncsu.naxosmusiclibrary.com/*","*://ncte.org/*","*://nejm.org/*","*://netLibrary.com/*","*://netadvantage.standardandpoors.com/*","*://netlibrary.com/*","*://new.sourceoecd.org/*","*://news.reseau-concept.net/*","*://ngc.dukejournals.org/*","*://nho.sagepub.com/*","*://nonlin-processes-geophys.net/*","*://novel.dukejournals.org/*","*://npprj.spci.se/*","*://nrcresearchpress.com/*","*://nsarchive.chadwyck.com/*","*://nsrl.ttu.edu/*","*://nucl.annualreviews.org/*","*://nv-med.com/*","*://nybooks.com/*","*://observateurocde.org/*","*://oecd-ilibrary.org/*","*://oecdobserver.org/*","*://oed.com/*","*://oldcitypublishing.com/*","*://online.sagepub.com/*","*://onlinelibrary.wiley.com/*","*://ophthalmologytimes.modernmedicine.com/*","*://opticsinfobase.org/*","*://or.journal.informs.org/*","*://orgsci.journal.informs.org/*","*://osa-opn.org/*","*://ovidsp.ovid.com/*","*://oxfordlanguagedictionaries.com/*","*://oxfordmusiconline.com/*","*://pacificarchaeology.org/*","*://pads.dukejournals.org/*","*://palgrave-journals.com/*","*://papers.nber.org/*","*://pasj.asj.or.jp/*","*://peanutscience.com/*","*://pedagogy.dukejournals.org/*","*://perceptionweb.com/*","*://pgrsa.org/*","*://pharmacists.ca/*","*://pharmrev.aspetjournals.org/*","*://philreview.dukejournals.org/*","*://phycologia.org/*","*://physicsweb.org/*","*://physicsworldarchive.iop.org/*","*://physiolgenomics.physiology.org/*","*://physrev.physiology.org/*","*://plantcell.org/*","*://plantmanagementnetwork.org/*","*://plantphysiol.org/*","*://pld.chadwyck.com/*","*://podiatrytoday.com/*","*://poeticstoday.dukejournals.org/*","*://polymersdatabase.com/*","*://portal.acm.org/*","*://portal.euromonitor.com/*","*://portico.org/*","*://positions.dukejournals.org/*","*://pracademics.com/*","*://priory.com/*","*://prisma.chadwyck.com/*","*://products.asminternational.org/*","*://projecteuclid.org/*","*://proquest.safaribooksonline.com/*","*://proquest.umi.com/*","*://proxying.lib.ncsu.edu/*","*://ps.fass.org/*","*://ptp.ipap.jp/*","*://publicculture.dukejournals.org/*","*://publish.csiro.au/*","*://pubs.acs.org/*","*://pubs.aic.ca/*","*://pubs.amstat.org/*","*://pubservices.nrc-cnrc.ca/*","*://purl.access.gpo.gov/*","*://pwq.sagepub.com/*","*://qjps.com/*","*://quod.lib.umich.edu/*","*://radiology.rsna.org/*","*://railwayage.com/*","*://raj.sagepub.com/*","*://reading.org/*","*://redbooks.com/*","*://reference-global.com/*","*://referenceusa.com/*","*://refuniv.odyssi.com/*","*://reproduction-online.org/*","*://revista-iberoamericana.pitt.edu/*","*://revophth.com/*","*://rff.org/*","*://rhr.dukejournals.org/*","*://rnajournal.cshlp.org/*","*://rnd.edpsciences.org/*","*://ropercenter.uconn.edu/*","*://rothamsted.bbsrc.ac.uk/*","*://royalsociety.org.nz/*","*://rphr.endojournals.org/*","*://rsc.org/*","*://rsh.sagepub.com/*","*://sagamorepub.com/*","*://sanborn.umi.com/*","*://saq.dukejournals.org/*","*://sbrnet.com/*","*://schattauer.de/*","*://scholar.google.com/*","*://sciencedirect.com/*","*://sciencemag.org/*","*://scientific.net/*","*://seab.envmed.rochester.edu/*","*://search.ebscohost.com/*","*://search.epnet.com/*","*://search.marquiswhoswho.com/*","*://search.proquest.com/*","*://search.rdsinc.com/*","*://searchcenter.intelecomonline.net/*","*://seg.org/*","*://services.bepress.com/*","*://simplymap.com/*","*://site.ebrary.com/*","*://slac.stanford.edu/*","*://social.chass.ncsu.edu/*","*://socialtext.dukejournals.org/*","*://societyforchaostheory.org/*","*://spie.org/*","*://spiedl.org/*","*://springerlink.com/*","*://springerlink.de/*","*://springerlink.metapress.com/*","*://springerprotocols.com/*","*://ssh.dukejournals.org/*","*://stacks.iop.org/*","*://statpak.gov.pk/*","*://stepsheet.stsci.edu/*","*://stke.sciencemag.org/*","*://swissmedic.ch/*","*://symposium.cshlp.org/*","*://tandfonline.com/*","*://tannerlectures.utah.edu/*","*://tappi.micronexx.com/*","*://taw.sagepub.com/*","*://technologyreview.com/*","*://theannals.com/*","*://theater.dukejournals.org/*","*://thecochranelibrary.com/*","*://theiwrc.org/*","*://thejns.org/*","*://themerckindex.cambridgesoft.com/*","*://theses.com/*","*://thomist.org/*","*://toxnet.nlm.nih.gov/*","*://transci.journal.informs.org/*","*://trb.org/*","*://turf.lib.msu.edu/*","*://turpion.org/*","*://tvnews.vanderbilt.edu/*","*://uark.edu/*","*://uli.org/*","*://ulrichsweb.com/*","*://unstats.un.org/*","*://vdi.sagepub.com/*","*://veterinaryrecord.bmj.com/*","*://vetres.org/*","*://vha.usc.edu/*","*://victoriandatabase.com/*","*://victorianperiodicals.com/*","*://vir.sgmjournals.org/*","*://vnweb.hwwilsonweb.com/*","*://web.jbjs.org.uk/*","*://web.lexis-nexis.com/*","*://wgsn.com/*","*://whiv.alexanderstreet.com/*","*://wilsonweb2.hwwilson.com/*","*://wkap.nl/*","*://worldscinet.com/*","*://worldscinetarchives.com/*","*://worldshakesbib.org/*","*://wrds-web.wharton.upenn.edu/*","*://wssa.allenpress.com/*","*://wto.org/*","*://www-pub.iaea.org/*","*://www2.acs.ncsu.edu/*","*://www3.interscience.wiley.com/*","*://www3.nationaljournal.com/*","*://www3.stat.sinica.edu.tw/*","*://xlink.rsc.org/*","*://ybook.co.jp/*","*://zentralblatt-math.org/*","*://znaturforsch.com/*","http://*.aasv.org/*","http://*.acm.org/*","http://*.acs.org/*","http://*.baidu.com/*","http://*.biomedcentral.com/*","http://*.bioon.com.cn/*","http://*.bmj.com/*","http://*.cabdirect.org/*","http://*.cambridge.org/*","http://*.cell.com/*","http://*.cnki.com.cn/*","http://*.cnki.net/*","http://*.cqvip.com/*","http://*.csiro.au/*","http://*.csis.cn/*","http://*.edu.cn/*","http://*.edu/*","http://*.en.cnki.com.cn/*","http://*.europepmc.org/*","http://*.frontiersin.org/*","http://*.google.com.co.uk/*","http://*.google.com.hk/*","http://*.google.com/*","http://*.google.nl/*","http://*.j-csam.org/*","http://*.jstor.org/*","http://*.mr-gut.cn/*","http://*.nature.com/*","http://*.ncbi.nlm.nih.gov/*","http://*.oxfordjournals.org/*","http://*.physiology.org/*","http://*.plos.org/*","http://*.plosjournals.org/*","http://*.plosone.org/*","http://*.pnas.org/*","http://*.pubmed.cn/*","http://*.pubmed.com/*","http://*.pubmedcentral.nih.gov/*","http://*.pubmedcentralcanada.ca/*","http://*.researchgate.net/*","http://*.sci-hub.is/*","http://*.sci-hub.mu/*","http://*.sci-hub.se/*","http://*.sci-hub.tw/*","http://*.sciencedirect.com/*","http://*.sciencemag.org/*","http://*.springer.com/*","http://*.springerlink.com/*","http://*.tandfonline.com/*","http://*.tcsae.org/*","http://*.thelancet.com/*","http://*.wanfangdata.com.cn/*","http://*.wiley.com/*","http://*.worldscientific.com/*","http://*/doi/abs/*","http://*/doi/full/*","http://cqvip.com/*","http://doi.org/*","http://dx.doi.org/*","http://europepmc.org/*","http://inspirehep.net/","http://inspirehep.net/*","http://pubmed.cn/*","http://pubmed.com/*","http://pubmedcentralcanada.ca/*","http://researcherslinks.com/*","http://sci-hub.is/*","http://sci-hub.mu/*","http://sci-hub.se/*","http://sci-hub.tw/*","https://*.aasv.org/*","https://*.acs.org/*","https://*.aip.org/*","https://*.aps.org/*","https://*.arch-anim-breed.net/*","https://*.asm.org/*","https://*.bing.com/*","https://*.biomedcentral.com/*","https://*.bioon.com/*","https://*.bmj.com/","https://*.bmj.com/*","https://*.cambridge.org/*","https://*.cell.com/*","https://*.cn-ki.net/*","https://*.edu/*","https://*.frontiersin.org/*","https://*.futuremedicine.com/*","https://*.google.com.co.uk/*","https://*.google.com.hk/*","https://*.google.com/*","https://*.google.nl/*","https://*.ieee.org/*","https://*.journalofinfection.com/*","https://*.jstor.org/*","https://*.livestockscience.com/*","https://*.mr-gut.cn/*","https://*.nature.com/*","https://*.ncbi.nlm.nih.gov/*","https://*.oup.com/*","https://*.oxfordjournals.org/*","https://*.physiology.org/*","https://*.plos.org/*","https://*.plosjournals.org/*","https://*.plosone.org/*","https://*.royalsocietypublishing.org/*","https://*.sci-hub.mu/*","https://*.sci-hub.tw/*","https://*.sci-hub.win/*","https://*.sciencedirect.com/*","https://*.springer.com/*","https://*.tandfonline.com/*","https://*.unesp.br/*","https://*.webofknowledge.com/*","https://*.wikipedia.org/","https://*.wikipedia.org/*","https://*.wiley.com/*","https://*/doi/abs/*","https://*/doi/full/*","https://aip.scitation.org/","https://aip.scitation.org/*","https://arxiv.org/","https://arxiv.org/*","https://doi.org/*","https://en.wikipedia.org/","https://en.wikipedia.org/*","https://europepmc.org/*","https://ieeexplore.ieee.org/","https://ieeexplore.ieee.org/*","https://iopscience.iop.org/","https://iopscience.iop.org/*","https://journals.aps.org/","https://journals.aps.org/*","https://mp.weixin.qq.com/s*","https://paperpile.com/app","https://peerj.com/*","https://pnas.org/*","https://pubs.acs.org.ccindex.cn/*","https://pubs.rsc.org/*","https://sci-hub.mu/*","https://sci-hub.tw/*","https://sci-hub.win/*","https://science.sciencemag.org/","https://science.sciencemag.org/*","https://ui.adsabs.harvard.edu/","https://ui.adsabs.harvard.edu/*","https://www.ajas.info/*","https://www.biorxiv.org/*","https://www.ejog.org/*","https://www.ingentaconnect.com/*","https://www.koreascience.or.kr/article/*.page","https://www.mdpi.com/*","https://www.nrcresearchpress.com/","https://www.osapublishing.org/","https://www.osapublishing.org/*","https://www.prophy.science/","https://www.prophy.science/*","https://www.researchgate.net/","https://www.researchgate.net/*","https://www.scitation.org/","https://www.scitation.org/*","https://www.semanticscholar.org/","https://www.semanticscholar.org/*","https://www.worldscientific.com/","https://www.x-mol.com/paper/*","https://xueshu.baidu.com/*","https://zhuanlan.zhihu.com/p/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null},"storage":{"ts":1676658625891,"data":{}},"enabled":true,"position":8,"file_url":"https://greasyfork.org/scripts/370246-sci-hub-button/code/Sci-hub%20button.user.js","uuid":"a7cae67d-8f9d-4415-a65b-32ef3892f98a","source":""}],"settings":{"autoReload":true,"configMode":50,"editor_autoLint":true,"editor_autoLintMaxLen":"1000000","editor_autoSave":true,"editor_easySave":true,"editor_electricChars":true,"editor_enabled":true,"editor_fontSize":"100","editor_highlightSelectionMatches":"off","editor_highlightTrailingWhitespace":true,"editor_indentUnit":"4","editor_indentWithTabs":"tabs","editor_keyMap":"windows","editor_lineWrapping":false,"editor_linter_config":null,"editor_tabMode":"smart","editor_tabSize":"4","editor_theme":"default","editor_trimTrailingSpacesFromModifiedLines":true,"reset_sync":null,"run_sync":null,"script_blacklist_server":[{"rules":["/https?:\\/\\/userscripts\\.org\\/scripts\\/(source|version)/(102614).*\\.user\\.js/"],"severity":2},{"name":"SaveFrom.net helper","reason":"Shows advertisements","rules":["/https?:\\/\\/sf-addon\\.com\\/.*\\/.*\\.user\\.js/","/https?:\\/\\/.*\\.sf-helper\\.com\\/.*\\.user\\.js/"],"severity":3},{"reasons":{"en":"Used for a phishing compain to compromise users of baon-nutrition.com"},"rules":["/https?:\\/\\/files\\.ulysse\\.travel\\/.*\\.user\\.js/"],"severity":8}],"statistics_enabled":false,"sync_enabled":true,"sync_type":"2"}}