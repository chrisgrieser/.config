local bla = {
	Bytes = {
		["27788"] = 1,
		["27789"] = 1,
		["27790"] = 1,
		["27793"] = 1,
		["27794"] = 1,
		["27795"] = 1,
		["27833"] = 1,
		["27834"] = 1,
		["27835"] = 1,
	},
	Case = {
		camel = vim.NIL,
		capitalize = vim.NIL,
		convert = vim.NIL,
		dash = vim.NIL,
		dot = vim.NIL,
		lower = vim.NIL,
		menu = vim.NIL,
		pascal = vim.NIL,
		snake = vim.NIL,
		snake_upper = vim.NIL,
		space = vim.NIL,
		title = vim.NIL,
		upper = vim.NIL,
	},
	Edit = {
		_numbers = vim.NIL,
		after_commands = vim.NIL,
		align = vim.NIL,
		apply_change = vim.NIL,
		before_commands = vim.NIL,
		block_paste = vim.NIL,
		change = vim.NIL,
		convert_vimreg = vim.NIL,
		delete = vim.NIL,
		dot = vim.NIL,
		duplicate = vim.NIL,
		ex = vim.NIL,
		ex_done = vim.NIL,
		ex_get = vim.NIL,
		extra_spaces = {
			add = vim.NIL,
			remove = vim.NIL,
		},
		fill_register = vim.NIL,
		numbers = vim.NIL,
		paste = vim.NIL,
		post_process = vim.NIL,
		process = vim.NIL,
		process_visual = vim.NIL,
		replace = vim.NIL,
		replace_chars = vim.NIL,
		replace_expression = vim.NIL,
		replace_regions_with_text = vim.NIL,
		rotate = vim.NIL,
		run_ex = vim.NIL,
		run_macro = vim.NIL,
		run_normal = vim.NIL,
		run_visual = vim.NIL,
		shift = vim.NIL,
		skip_index = -1,
		store_widths = vim.NIL,
		surround = vim.NIL,
		surround_tags = vim.NIL,
		transpose = vim.NIL,
		xdelete = vim.NIL,
		yank = vim.NIL,
	},
	Funcs = {
		Cursor = vim.NIL,
		Scroll = {
			can_see_bof = vim.NIL,
			can_see_eof = vim.NIL,
			force = vim.NIL,
			get = vim.NIL,
			restore = vim.NIL,
		},
		byte2pos = vim.NIL,
		char_at_pos = vim.NIL,
		char_under_cursor = vim.NIL,
		curs2byte = vim.NIL,
		default_reg = vim.NIL,
		exit = vim.NIL,
		get_expr = vim.NIL,
		get_reg = vim.NIL,
		get_regs_1_9 = vim.NIL,
		get_vertcol = vim.NIL,
		infoline = vim.NIL,
		msg = vim.NIL,
		no_regions = vim.NIL,
		not_VM = vim.NIL,
		pad = vim.NIL,
		pos2byte = vim.NIL,
		redraw = vim.NIL,
		region_txt = vim.NIL,
		region_with_id = vim.NIL,
		regions_contents = vim.NIL,
		repeat_char = vim.NIL,
		restore_reg = vim.NIL,
		restore_regs = vim.NIL,
		restore_visual_marks = vim.NIL,
		search_chars = vim.NIL,
		set_reg = vim.NIL,
		set_statusline = vim.NIL,
		should_quit = vim.NIL,
		size = vim.NIL,
		special_statusline = vim.NIL,
		sync_minlines = vim.NIL,
		syntax = vim.NIL,
		toggle_option = vim.NIL,
	},
	Global = {
		active_regions = vim.NIL,
		all_empty = vim.NIL,
		backup_last_regions = vim.NIL,
		backup_regions = vim.NIL,
		change_mode = vim.NIL,
		check_mutliline = vim.NIL,
		collapse_regions = vim.NIL,
		cursor_mode = vim.NIL,
		erase_regions = vim.NIL,
		extend_mode = vim.NIL,
		filter_by_expression = vim.NIL,
		get_all_regions = vim.NIL,
		lines_with_regions = vim.NIL,
		merge_cursors = vim.NIL,
		merge_maps = vim.NIL,
		merge_overlapping = vim.NIL,
		merge_regions = vim.NIL,
		nearest_region = vim.NIL,
		new_cursor = vim.NIL,
		new_region = vim.NIL,
		one_region_per_line = vim.NIL,
		overlapping_regions = vim.NIL,
		rebuild_from_map = vim.NIL,
		region_at_pos = vim.NIL,
		regions_text = vim.NIL,
		remove_empty_lines = vim.NIL,
		remove_highlight = vim.NIL,
		remove_last_region = vim.NIL,
		remove_regions_by_id = vim.NIL,
		reorder_regions = vim.NIL,
		reset_byte_map = vim.NIL,
		reset_index = vim.NIL,
		reset_vars = vim.NIL,
		restore_regions = vim.NIL,
		select_region = vim.NIL,
		select_region_at_pos = vim.NIL,
		split_lines = vim.NIL,
		subtract_maps = vim.NIL,
		update_and_select_region = vim.NIL,
		update_cursor_highlight = vim.NIL,
		update_highlight = vim.NIL,
		update_indices = vim.NIL,
		update_map_and_select_region = vim.NIL,
		update_region_patterns = vim.NIL,
		update_regions = vim.NIL,
	},
	Insert = {
		apply_settings = vim.NIL,
		auto_end = vim.NIL,
		auto_start = vim.NIL,
		clear_hi = vim.NIL,
		cursors = {},
		index = -1,
		key = vim.NIL,
		replace = 0,
		start = vim.NIL,
		stop = vim.NIL,
		type = "",
		update_text = vim.NIL,
	},
	Maps = {
		disable = vim.NIL,
		enable = vim.NIL,
		["end"] = vim.NIL,
		map_esc_and_toggle = vim.NIL,
		mappings_toggle = vim.NIL,
		start = vim.NIL,
		unmap_esc_and_toggle = vim.NIL,
	},
	Regions = {
		{
			A = 27788,
			A_ = vim.NIL,
			B = 27790,
			B_ = vim.NIL,
			K = 27788,
			L = 647,
			a = 3,
			b = 5,
			bdiff = 0,
			char = vim.NIL,
			clear = vim.NIL,
			cur_Col = vim.NIL,
			cur_col = vim.NIL,
			cur_ln = vim.NIL,
			dir = 1,
			empty = vim.NIL,
			h = 0,
			highlight = vim.NIL,
			id = 1,
			index = 0,
			k = 3,
			l = 647,
			matches = {
				cursor = 15,
				region = { 14 },
			},
			move = vim.NIL,
			new = vim.NIL,
			ntabs = 0,
			pat = "\\<end\\>",
			remove = vim.NIL,
			remove_from_byte_map = vim.NIL,
			remove_highlight = vim.NIL,
			set_vcol = vim.NIL,
			shift = vim.NIL,
			txt = "end",
			update = vim.NIL,
			update_bytes_map = vim.NIL,
			update_content = vim.NIL,
			update_cursor = vim.NIL,
			update_cursor_pos = vim.NIL,
			update_highlight = vim.NIL,
			update_region = vim.NIL,
			update_vars = vim.NIL,
			vcol = 0,
			w = 3,
		},
		{
			A = 27793,
			A_ = vim.NIL,
			B = 27795,
			B_ = vim.NIL,
			K = 27793,
			L = 648,
			a = 2,
			b = 4,
			bdiff = 0,
			char = vim.NIL,
			clear = vim.NIL,
			cur_Col = vim.NIL,
			cur_col = vim.NIL,
			cur_ln = vim.NIL,
			dir = 1,
			empty = vim.NIL,
			h = 0,
			highlight = vim.NIL,
			id = 2,
			index = 1,
			k = 2,
			l = 648,
			matches = {
				cursor = 17,
				region = { 16 },
			},
			move = vim.NIL,
			new = vim.NIL,
			ntabs = 0,
			pat = "\\<end\\>",
			remove = vim.NIL,
			remove_from_byte_map = vim.NIL,
			remove_highlight = vim.NIL,
			set_vcol = vim.NIL,
			shift = vim.NIL,
			txt = "end",
			update = vim.NIL,
			update_bytes_map = vim.NIL,
			update_content = vim.NIL,
			update_cursor = vim.NIL,
			update_cursor_pos = vim.NIL,
			update_highlight = vim.NIL,
			update_region = vim.NIL,
			update_vars = vim.NIL,
			vcol = 0,
			w = 3,
		},
		{
			A = 27833,
			A_ = vim.NIL,
			B = 27835,
			B_ = vim.NIL,
			K = 27833,
			L = 649,
			a = 1,
			b = 3,
			bdiff = 0,
			char = vim.NIL,
			clear = vim.NIL,
			cur_Col = vim.NIL,
			cur_col = vim.NIL,
			cur_ln = vim.NIL,
			dir = 1,
			empty = vim.NIL,
			h = 0,
			highlight = vim.NIL,
			id = 3,
			index = 2,
			k = 1,
			l = 649,
			matches = {
				cursor = 19,
				region = { 18 },
			},
			move = vim.NIL,
			new = vim.NIL,
			ntabs = 0,
			pat = "\\<end\\>",
			remove = vim.NIL,
			remove_from_byte_map = vim.NIL,
			remove_highlight = vim.NIL,
			set_vcol = vim.NIL,
			shift = vim.NIL,
			txt = "end",
			update = vim.NIL,
			update_bytes_map = vim.NIL,
			update_content = vim.NIL,
			update_cursor = vim.NIL,
			update_cursor_pos = vim.NIL,
			update_highlight = vim.NIL,
			update_region = vim.NIL,
			update_vars = vim.NIL,
			vcol = 0,
			w = 3,
		},
	},
	Search = {
		add = vim.NIL,
		add_if_empty = vim.NIL,
		case = vim.NIL,
		ensure_is_set = vim.NIL,
		escape_pattern = vim.NIL,
		get_from_region = vim.NIL,
		get_pattern = vim.NIL,
		get_slash_reg = vim.NIL,
		join = vim.NIL,
		menu = vim.NIL,
		remove = vim.NIL,
		rewrite = vim.NIL,
		update_patterns = vim.NIL,
		validate = vim.NIL,
	},
	Vars = {
		ID = 3,
		IDs_list = { 1, 2, 3 },
		W = {},
		auto = 0,
		cinkeys = "0{,0},0),0],:,0#,!^F,o,O,e",
		clipboard = "unnamedplus",
		concealcursor = "",
		conceallevel = 0,
		def_reg = '"',
		deleting = 0,
		direction = 1,
		disabled_plugins = {},
		dot = "",
		eco = 0,
		extra_spaces = {},
		find_all_overlap = 0,
		indentkeys = "0{,0},0),0],:,0#,!^F,o,O,e,0=end,0=until",
		index = 2,
		insert = 0,
		merge = 0,
		motion = "",
		multiline = 0,
		nav_direction = 1,
		new_text = {},
		no_search = 0,
		noh = "noh|",
		oldcase = { 1, 1 },
		oldch = 0,
		oldfold = 1,
		oldhls = 0,
		oldlz = 0,
		oldmatches = {
			{
				group = "urls",
				id = 4,
				pattern = "http[s]\\?:\\/\\/[[:alnum:]%\\/_#.\\-?:=&@+~]*",
				priority = 10,
			},
			{
				group = "myAnnotations",
				id = 5,
				pattern = "\\<\\(NOTE\\|REQUIRED\\|BUG\\|WARN\\|WIP\\|TODO\\|HACK\\|INFO\\|FIX\\|CAVEAT\\|DEPRECATED\\)\\>",
				priority = 10,
			},
			{
				group = "urls",
				id = 6,
				pattern = "http[s]\\?:\\/\\/[[:alnum:]%\\/_#.\\-?:=&@+~]*",
				priority = 10,
			},
			{
				group = "myAnnotations",
				id = 7,
				pattern = "\\<\\(NOTE\\|REQUIRED\\|BUG\\|WARN\\|WIP\\|TODO\\|HACK\\|INFO\\|FIX\\|CAVEAT\\|DEPRECATED\\)\\>",
				priority = 10,
			},
			{
				group = "urls",
				id = 8,
				pattern = "http[s]\\?:\\/\\/[[:alnum:]%\\/_#.\\-?:=&@+~]*",
				priority = 10,
			},
			{
				group = "myAnnotations",
				id = 9,
				pattern = "\\<\\(NOTE\\|REQUIRED\\|BUG\\|WARN\\|WIP\\|TODO\\|HACK\\|INFO\\|FIX\\|CAVEAT\\|DEPRECATED\\)\\>",
				priority = 10,
			},
		},
		oldreg = { '"', '\t\t\t{function ()\n\t\t\t\treturn vim.b.VM_Selection or ""\n\t\t\tend},\n', "V" },
		oldregs_1_9 = {
			{ 1, '\t\t\t{function ()\n\t\t\t\treturn vim.b.VM_Selection or ""\n\t\t\tend},\n', "V" },
			{ 2, "require", "v" },
			{ 3, "b:VM_Selection", "v" },
			{ 4, "g:VM_set_statusline", "v" },
			{ 5, "h vm-infoline", "v" },
			{
				6,
				'\t-- { -- inspect treesitter related things\n\t-- \t"nvim-treesitter/playground",\n\t-- \tevent = "BufEnter",\n\t-- \tdependencies = "nvim-treesitter/nvim-treesitter",\n\t-- \tinit = function() vim.keymap.set("n", "<leader>t", ":TSPlaygroundToggle<CR>") end,\n\t-- },\n',
				"V",
			},
			{ 7, "\t\tenabled = false,\n", "V" },
			{ 8, "\t\topts = {},\n", "V" },
			{ 9, "\t\the \n", "V" },
		},
		oldsearch = { "fork", "v" },
		oldvirtual = "",
		oldwhichwrap = "b,s",
		restart_insert = 0,
		restore_scroll = 0,
		search = { "\\<end\\>" },
		silence = 0,
		single_region = 0,
		softtabstop = 3,
		statusline = "%#lualine_a_command# ﯠ%#lualine_a_command# %#lualine_a_command# keybindings.lua %#lualine_transitional_lualine_a_command_to_lualine_b_command# %#lualine_b_command# # lualine.lua %#lualine_transitional_lualine_b_command_to_lualine_c_normal# %<%#lualine_c_normal#%=%#lualine_transitional_lualine_a_command_to_lualine_c_normal# %#lualine_a_command# 647:8  ",
		storepos = {},
		synmaxcol = 3000,
		textwidth = 80,
		use_register = '"',
		using_regex = 0,
		visual_regex = 0,
		vmarks = { { 0, 0, 0, 0 }, { 0, 0, 0, 0 } },
		was_region_at_pos = 0,
		whole_word = 1,
		winline = 14,
		yanked = 0,
	},
}
