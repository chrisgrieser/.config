{
	"shebang": {
		"prefix": "shebang",
		"body": "#!/usr/bin/env osascript -l JavaScript"
	},
	"running check": {
		"prefix": "running check",
		"body": "Application(\"${1:appName}\").running()"
	},
	"check frontmost": {
		"prefix": "check frontmost",
		"body": "Application(\"${1:appName}\").frontmost();"
	},
	"running apps array": {
		"prefix": "running apps array",
		"body": "Application(\"System Events\").applicationProcesses.where({ backgroundOnly: false }).displayedName();"
	},
	"online JSON": {
		"prefix": "online JSON",
		"body": "const onlineJSON = (url) => JSON.parse(app.doShellScript(`curl -s \"${url}\"`));"
	},
	"notification": {
		"prefix": [
			"notification",
			"displayNotification"
		],
		"body": "app.displayNotification(\"\", { withTitle: \"${1:title}\", subtitle: \"${2:subtitle}\" })"
	},
	"app": {
		"prefix": "app (define)",
		"body": [
			"const app = Application.currentApplication()",
			"app.includeStandardAdditions = true;"
		]
	},
	"doShellScript": {
		"prefix": [
			"shell script",
			"doShellScript"
		],
		"body": "app.doShellScript(`${1:shellscript}`);"
	},
	"open location": {
		"prefix": "open location",
		"body": "app.openLocation(\"${1:url}\");"
	},
	"clipboard": {
		"prefix": "clipboard",
		"body": "app.setTheClipboardTo(\"${1:str}\");"
	},
	"home (JXA)": {
		"prefix": "home (JXA)",
		"body": "app.pathTo(\"home folder\")"
	},
	"exists (file)": {
		"prefix": "exists (file)",
		"body": "const fileExists = (filePath) => Application(\"Finder\").exists(Path(filePath));"
	},
	"Create new Draft": {
		"prefix": "Create new Draft",
		"body": "Application(\"Drafts\").Draft({ \"content\": \"My Draft Content\"}).make()",
		"description": "In the Drafts.app. See https://forums.getdrafts.com/t/create-new-draft-via-jxa/13940"
	},
	"window path (Finder)": {
		"prefix": "window path (Finder)",
		"body": [
			"function finderFrontWindow(){",
			"\tconst posixPath = (finderWindow) => $.NSURL.alloc.initWithString(finderWindow.target.url()).fileSystemRepresentation;",
			"\treturn posixPath(Application(\"Finder\").finderWindows[0]);",
			"}"
		]
	},
	"selection (Finder)": {
		"prefix": "selection (Finder)",
		"body": [
			"function finderSelection () {",
			"\tconst selection = decodeURI(Application(\"Finder\").selection()[0]?.url());",
			"\tif (selection === \"undefined\") return \"\"; // no selection",
			"\treturn selection.slice(7);",
			"}"
		]
	},
	"read file": {
		"prefix": "read file",
		"body": [
			"function readFile(path) {",
			"\tconst data = $.NSFileManager.defaultManager.contentsAtPath(path);",
			"\tconst str = $.NSString.alloc.initWithDataEncoding(data, $.NSUTF8StringEncoding);",
			"\treturn ObjC.unwrap(str);",
			"}"
		]
	},
	"write file": {
		"prefix": "write file",
		"body": [
			"function writeToFile(filepath, text) {",
			"\tconst str = $.NSString.alloc.initWithUTF8String(text);",
			"\tstr.writeToFileAtomicallyEncodingError(filepath, true, $.NSUTF8StringEncoding, null);",
			"}"
		]
	},
	"hide app": {
		"prefix": "hide app",
		"body": [
			"const process = Application(\"System Events\").applicationProcesses.byName(\"${1:processName}\");",
			"if (process) { process.visible = false; }"
		]
	},
	"browser URL": {
		"prefix": "browser URL",
		"body": "const url = Application(\"Vivaldi\").windows[0].activeTab.url();"
	},
	"browser title": {
		"prefix": "browser title",
		"body": "const title = Application(\"Vivaldi\").windows[0].activeTab.title();"
	},
	"browser URL & title (all-browser function)": {
		"prefix": "browser URL & title (function)",
		"body": [
			"function browserTab() {",
			"\tconst frontmostAppName = Application(\"System Events\").applicationProcesses.where({ frontmost: true }).name()[0];",
			"\tconst frontmostApp = Application(frontmostAppName);",
			"\tconst chromiumVariants = [\"Google Chrome\", \"Chromium\", \"Opera\", \"Vivaldi\", \"Brave Browser\", \"Microsoft Edge\"];",
			"\tconst webkitVariants = [\"Safari\", \"Webkit\"];",
			"\tlet title, url;",
			"\tif (chromiumVariants.some(appName => frontmostAppName.startsWith(appName))) {",
			"\t\turl = frontmostApp.windows[0].activeTab.url();",
			"\t\ttitle = frontmostApp.windows[0].activeTab.name();",
			"\t} else if (webkitVariants.some(appName => frontmostAppName.startsWith(appName))) {",
			"\t\turl = frontmostApp.documents[0].url();",
			"\t\ttitle = frontmostApp.documents[0].name();",
			"\t} else {",
			"\t\treturn \"You need a supported browser as your frontmost app\";",
			"\t}",
			"\t\treturn { \"url\": url, \"title\": title };",
			"}"
		]
	}
}
