# yaml-language-server: $schema=https://raw.githubusercontent.com/ajmarkow/espanso-schema-json/master/schemas/Espanso_Matches_File_Schema.json
#───────────────────────────────────────────────────────────────────────────────
matches:
  #─────────────────────────────────────────────────────────────────────────────
  - trigger: "!web"
    replace: https://chris-grieser.de/
  - trigger: "!masto"
    replace: https://pkm.social/@pseudometa
  - triggers: ["!blog", "!vim"]
    replace: https://nanotipsforvim.prose.sh
  - trigger: "!paypal"
    replace: https://www.paypal.me/ChrisGrieser
  - trigger: "!name"
    replace: Christopher Grieser
  #───────────────────────────────────────────────────────────────────────────
  - trigger: "!bug"
    replace: >
      Could you open a bug report at the GitHub repo? Reason being that the bug report forms asks for
      various information. I need to investigate the issue. (Also, I don't have the time to look into it
      right now, so a bug report will make sure that I can keep track of it.)
  - trigger: "!github"
    replace: >
      For bug reports, feature requests, or questions about my plugins and workflows, please create an
      issue in the corresponding GitHub repository. This email address is exclusively for academic
      purposes or business inquiries.


      *This is an automated message. Please do not reply to this email.*
  - triggers: ["!freeze", "!debugger"]
    replace: "setTimeout(() => { debugger }, 1000 * 1$|$)"
    label: "Freeze (DevTools)"
  #───────────────────────────────────────────────────────────────────────────
  - trigger: "!iso"
    replace: "{{todayISO}}"
    vars:
      - name: todayISO
        type: date
        params: { format: "%Y-%m-%d" }
  - trigger: "!today"
    replace: "{{today}}"
    vars:
      - name: today
        type: date
        params: { format: "%d.%m.%Y" }
  - trigger: "!la"
    replace: "(last accessed: {{today}})"
    label: Last Accessed
    vars:
      - name: today
        type: date
        params: { format: "%d.%m.%Y" }
  #─────────────────────────────────────────────────────────────────────────────
  - trigger: "!openai"
    replace: "{{apikey}}"
    label: get OpenAI API key
    vars:
      - name: apikey
        type: shell
        params:
          cmd: "source $HOME/.zshenv && echo -n $OPENAI_API_KEY"
  #─────────────────────────────────────────────────────────────────────────────
  - trigger: "!version"
    replace: "macOS {{version}} ({{architecture}})"
    vars:
      - name: version
        type: shell
        params:
          cmd: "sw_vers -productVersion"
      - name: architecture
        type: shell
        params:
          cmd: "uname -p"
  - trigger: "!nversion"
    replace: "{{neovimVersion}}"
    vars:
      - name: neovimVersion
        type: shell
        params:
          cmd:
            "export PATH=/usr/local/lib:/usr/local/bin:/opt/homebrew/bin/:$PATH ; nvim --version | head
            -n1"
  - trigger: "!oversion"
    replace: "Obsidian {{obsiVersion}}"
    vars:
      - name: obsiVersion
        type: shell
        params:
          cmd:
            'ls ~"/Library/Application Support/obsidian/"*".asar" | xargs -I {} basename {} | cut -d"."
            -f1-3 | cut -d"-" -f2'
