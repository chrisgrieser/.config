{
	"name": "Vimium C",
	"@time": "12/6/2024, 5:54:35 PM",
	"time": 1733504075154,
	"environment": {
		"extension": "2.11.3",
		"platform": "mac",
		"chromium": 131
	},
	"allBrowserUrls": true,
	"exclusionListenHash": false,
	"exclusionRules": [
		{
			"passKeys": "0 N f ",
			"pattern": "^https://.*.crunchyroll.com"
		},
		{
			"passKeys": "",
			"pattern": ":https://excalidraw.com/"
		},
		{
			"passKeys": "? ",
			"pattern": ":https://github.com/"
		},
		{
			"passKeys": "",
			"pattern": ":https://docs.google.com/"
		},
		{
			"passKeys": "",
			"pattern": ":https://mail.google.com/"
		},
		{
			"passKeys": "c j k ",
			"pattern": ":https://www.google.com/"
		},
		{
			"passKeys": "0 1 2 3 4 5 6 7 8 9 ? N f j k l n ",
			"pattern": ":https://www.youtube.com/"
		},
		{
			"passKeys": "? ",
			"pattern": ":https://devdocs.io/"
		},
		{
			"passKeys": "1 ? a g ",
			"pattern": ":https://www.inoreader.com/"
		},
		{
			"passKeys": "s ",
			"pattern": ":https://www.netflix.com/"
		}
	],
	"extAllowList": [
		"# Bonjourr",
		"dlnejlppicbjfcfcedcflplfjajinajd",
		"",
		"# modified versions of X New Tab and PDF Viewer,",
		"# NewTab Adapter, and Shortcuts Forwarding Tool",
		"hdnehngglnbnehkfcidabjckinphnief",
		"nacjakoppgmdcpemlfnfegmlhipddanj",
		"cglpcedifkgalfdklahhcchnjepcckfn",
		"clnalilglegcjmlgenoppklmfppddien",
		"# EdgeTranslate",
		"bocbaocobfecmglnmeaeppambideimao",
		"bfdogplmndidlpjfhoijckpakkdjkkil",
		"# SalaDict",
		"cdonnmffkdaoajfknoeeecmchibpmkmg",
		"idghocbbahafpfhjnfhpbfbmpegphmmp",
		""
	],
	"grabBackFocus": true,
	"keyLayout": 154,
	"keyMappings": [
		"#!no-check",
		"# INFO",
		"# combine commands: https://github.com/gdh1995/vimium-c/wiki/Auto-run-a-tree-of-commands#open-vomnibar-after-creating-a-new-tab",
		"# Info on Vimium-C mapping Syntax: https://github.com/gdh1995/vimium-c/issues/873",
		"# Google excludes `c` (cycle/copy) for Grepper https://www.grepper.com/documentation.php#using_keyboard_shortcuts",
		"#───────────────────────────────────────────────────────────────────────────────",
		"",
		"unmapAll",
		"",
		"# META",
		"map ? showHelp",
		"map g, focusOrLaunch url=\"chrome-extension://hfjbmagddngcpeloejdejnfgbamkjaeg/pages/options.html\"",
		"",
		"# MODES",
		"map i passNextKey",
		"map I enterInsertMode",
		"map gi focusInput select=\"end\"",
		"map v LinkHints.activateSelect # this is similar to WezTerm's QuickSelect mode",
		"",
		"# FIND",
		"unmap -",
		"map - enterFindMode",
		"map / enterFindMode",
		"map n performFind",
		"map N performBackwardsFind",
		"",
		"# LINK MODE",
		"map f LinkHints.activate",
		"map F LinkHints.activateWithQueue",
		"map yf LinkHints.activateCopyLinkUrl",
		"map yi LinkHints.activateCopyImage",
		"map yd LinkHints.activateDownloadImage",
		"",
		"# TABS",
		"map q closeTabsOnLeft",
		"map e closeTabsOnRight",
		"map m removeTab mayClose",
		"map u restoreTab",
		"",
		"# WASD",
		"map a previousTab",
		"map d nextTab",
		"map A moveTabLeft",
		"map D moveTabRight",
		"map w removeTab mayClose",
		"map s copyCurrentUrl $then=\"w\" # using then/else, since runKey does not work with the `mayClose` parameter",
		"map t Vomnibar.activateTabSelection",
		"",
		"# WINDOWS",
		"map M joinTabs",
		"map P moveTabToIncognito",
		"map <c-v> moveTabToNewWindow # due to my window tiling, this is creating a split, thus same mapping as in nvim",
		"",
		"# SCROLLING",
		"map j scrollDown",
		"map k scrollUp",
		"map J scrollDown count=3",
		"map K scrollUp count=3",
		"map gg scrollToTop",
		"map G scrollToBottom",
		"",
		"# MARKS",
		"# since ` activates marks, but is also the name of the mark for the last position, ",
		"# we need to map b to `, so \"bb\" goes to the last location",
		"map ` Marks.activate swap ",
		"mapKey b `",
		"map B Marks.activateCreate swap",
		"",
		"# HISTORY",
		"map h goBack",
		"map l goForward",
		"map gr Vomnibar.activateHistoryInNewTab",
		"",
		"# PAGES (NOT HISTORY)",
		"map H goPrevious",
		"map L goNext",
		"",
		"# INTERACTION",
		"map c Vomnibar.activateEditUrl",
		"map C toggleUrl",
		"map gu goUp",
		"map gU goToRoot",
		"map p togglePinTab",
		"map o autoOpen $else=\"openCopiedUrlInNewTab\" # open selection, and if no selection, open the URL from the clipboard",
		"map r reload",
		"map gs toggleViewSource",
		"",
		"# goto issues I authored ",
		"# https://github.com/gdh1995/vimium-c/wiki/Substitute-URLs-and-text-during-commands",
		"# https://github.com/gdh1995/vimium-c/discussions/996#discussioncomment-6752943",
		"# `sed` parameter uses `,` as delimiter (allow are: `/@#,`)",
		"map ga openUrl url=\"$S\" url_mask sed=\"s,(https://github.com/.+?/.[^/?]+).*,$1/issues?q=author:@me%20sort:updated-desc,\"",
		"",
		"# COPY URLS",
		"map yy copyCurrentUrl",
		"map yg copyCurrentUrl sed=\"s=https://github.com/(.+?/.[^/?]+).*=$1=\" # copy github part of an url https://github.com/gdh1995/vimium-c/wiki/Substitute-URLs-and-text-during-commands",
		"map ym copyCurrentUrl format=\"[${title}](${url})\" # copy as markdown link",
		"map yw copyWindowInfo format=\"${url}\" # copy links of all tabs",
		"map ya copyWindowInfo format=\"${title}\\u0020${url}\"",
		"",
		"# NUMBERS",
		"unmap 1",
		"unmap 2",
		"unmap 3",
		"unmap 4",
		"unmap 5",
		"unmap 6",
		"unmap 7",
		"unmap 8",
		"unmap 9",
		"unmap 0",
		"map 1 firstTab count=1",
		"map 2 firstTab count=2",
		"map 3 firstTab count=3",
		"map 4 firstTab count=4",
		"map 5 firstTab count=5",
		"map 6 firstTab count=6",
		"map 7 firstTab count=7",
		"map 8 firstTab count=8",
		"map 9 firstTab count=9",
		"map 0 lastTab",
		""
	],
	"regexFindMode": true,
	"scrollStepSize": 250,
	"searchEngines": "g https://www.google.com/search?q=%s",
	"userDefinedCss": [
		".HUD { ",
		"  max-width: 80vw;",
		"  width: auto;",
		"  min-width: 200px;",
		"  height: 21px;",
		"  line-height: 1;",
		"  font-size: 18px;",
		"  padding: 6px;",
		"}",
		""
	],
	"vimSync": true,
	"waitForEnter": false,
	"ignoreKeyboardLayout": 1,
	"ignoreCapsLock": 2,
	"mapModifier": 2
}
