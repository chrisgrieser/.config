# yaml-language-server: $schema=./schema/karabiner-mod-schema.json
#───────────────────────────────────────────────────────────────────────────────
# INFO this file has to come alphabetically before `finder-vim-mode.yaml` itself
#───────────────────────────────────────────────────────────────────────────────
anchors:
  - conditions:
      - &finder-app
        type: frontmost_application_if
        bundle_identifiers: [^com\.apple\.finder$]
      - &not-insert-mode
        type: variable_unless
        name: FINDER_INSERT_MODE
        value: true
      - &not-find-mode
        type: variable_unless
        name: FINDER_FIND_MODE
        value: true
      - &no-menu-open
        type: variable_unless
        name: FINDER_MENU_ACTIVE
        value: true
  - to:
      - &leave-insert-mode
        set_variable:
          name: FINDER_INSERT_MODE
          value: false
      - &remove-insert-notice
        set_notification_message:
          id: insert-notice
          text: ""
#───────────────────────────────────────────────────────────────────────────────
rules:
  - description: "Finder Vim Addons for Alfred (assuming Alfred Compatibility Mode)"
    manipulators:
      # FIX for <Esc> -> f18 binding
      # Alfred Custom Clipboard Search & screenshot history (cleanshot)
      - type: basic
        from: { key_code: escape }
        to_if_alone:
          - key_code: f18
          # on focus loss, renaming is aborted automatically
          - *leave-insert-mode
          - *remove-insert-notice
        to_if_held_down:
          - shell_command: open "cleanshot://open-history"
      # overwrite `-` search with my own Alfred-based search
      - type: basic
        from: { key_code: slash }
        to_if_alone:
          - key_code: f
            modifiers: [control, command]
          - *leave-insert-mode # on Alfred focus loss, renaming is aborted automatically
          - *remove-insert-notice
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *no-menu-open]
  #─────────────────────────────────────────────────────────────────────────────
  - description: "Finder Vim Extra keys"
    manipulators:
      # B: Signature ( append "_CG")
      - type: basic
        from: { key_code: b, modifiers: { mandatory: [shift] } }
        to:
          - shell_command: |
              selectedFiles=$(osascript -e '
                tell application "Finder" to set selectedFiles to (every item of (get selection))
                set out to ""
                repeat with theFile in selectedFiles
                  set out to out & (POSIX path of (theFile as text)) & linefeed
                end repeat
                return out
              ')
              if [[ -z "$selectedFiles" ]] ; then
                "$HOME/.config/karabiner/assets/finder-vim-mode/notificator" \
                  --title "Finder Vim Mode" --message "⚠️ No selection."
                exit 1
              fi

              echo "$selectedFiles" | sed -e 's|/$||' -e '/^$/d' | while read -r file; do
                filepathNoExt=$(echo "$file" | rev | cut -d. -f2- | rev)
                ext=$(echo "$file" | rev | cut -d. -f1 | rev)
                last3CharsOfFilename=$(echo "$filepathNoExt" | rev | cut -c-3 | rev)
                if [[ "$last3CharsOfFilename" == "_CG" ]]; then
                  nameWithoutSig=$(echo "$filepathNoExt" | rev | cut -c4- | rev)
                  newName="$nameWithoutSig.$ext"
                else
                  newName="${filepathNoExt}_CG.$ext"
                fi
                mv -n "$file" "$newName"
              done
              afplay "/System/Library/Components/CoreAudio.component/Contents/SharedSupport/SystemSounds/system/begin_record.caf" &
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *no-menu-open]
