title: ⇪ Hyper and ↹ Meh Key
homepage: https://github.com/chrisgrieser/dotfiles/karabiner
rules:
  #─────────────────────────────────────────────────────────────────────────────
  - description: "*️⃣ ⇪ Capslock  → Hyper/Esc"
    manipulators:
      - type: basic
        from:
          key_code: caps_lock
        to_if_alone:
          - key_code: escape
        to:
          - key_code: right_shift
            modifiers:
              - command
              - control
              - option
        conditions:
          - type: variable_unless
            name: LEADER_ACTIVE
            value: true
      # Avoid starting sysdiagnose with the built-in macOS shortcut cmd+shift+option+ctrl+,
      - from:
          key_code: comma
          modifiers:
            mandatory:
              - capslock
              - shift
              - option
              - control
        to:
          - key_code: vk_none
        type: basic
      # Map Esc to F18
      - type: basic
        from:
          key_code: escape
        to_if_alone:
          - key_code: f18
  #─────────────────────────────────────────────────────────────────────────────
  - description: "*️⃣ ⇪ Tab  → Meh/Tab"
    manipulators:
      - type: basic
        from:
          key_code: tab
        to_if_alone:
          - key_code: tab
        to:
          - key_code: right_shift
            modifiers:
              - control
              - option
  #─────────────────────────────────────────────────────────────────────────────
  - description: "*️⃣  \U0001F4C2 Open Locations (Globally Active)"
    manipulators:
      # Hyper + ⌫ = Open Trash
      - type: basic
        from:
          key_code: delete_or_backspace
          modifiers: {mandatory: [control, command, shift, option]}
        to:
          - shell_command: open "$HOME/.Trash"
          - key_code: vk_none
            hold_down_milliseconds: 200
          - key_code: "2" # list view
            modifiers: [command]
      # Hyper + F: Open $WD
      - type: basic
        from:
          key_code: f
          modifiers: {mandatory: [control, command, shift, option]}
        to:
          # with this method, it's not opened in a new window
          - shell_command: |
              target="$HOME/Library/Mobile Documents/com~apple~CloudDocs/File Hub/"
              osascript -e "
                set the_folder to (\"$target\") as POSIX file
                tell application \"Finder\"
                  activate
                  if front Finder window exists then
                    set target of front Finder window to the_folder
                  else
                    open the_folder
                  end if
                end tell"
  #─────────────────────────────────────────────────────────────────────────────
  - description: "*️⃣  \U0001F4C2 Restart App"
    manipulators:
      - type: basic
        from:
          key_code: r
          modifiers: {mandatory: [control, command, shift, option]}
        to:
          # INFO not done via Alfred because of https://github.com/neovide/neovide/issues/1604
          # INFO Quitting via wqall instead of cmd+Q so bufferleaving autocmds are triggered
          - shell_command: |
              FRONT_APP=$(osascript -e 'tell application "System Events" to return name of first process whose frontmost is true')
              if [[ "$FRONT_APP" == "neovide" ]]; then
                echo "vim.cmd.wq()" >"/tmp/nvim-automation"
              else
                killall "$FRONT_APP"
              fi

              while pgrep -q "$FRONT_APP"; do sleep 0.05; done

              if [[ "$FRONT_APP" == "neovide" ]]; then
                sleep 0.05
                export PATH=/usr/local/lib:/usr/local/bin:/opt/homebrew/bin/:$PATH
                neovide --frame=buttonless --notabs --geometry=101x32 -- -c "normal! '0"
              else
                open -a "$FRONT_APP"
              fi
      # Restart Alfred
      - type: basic
        from:
          key_code: "5"
          modifiers: {mandatory: [control, command, shift, option]}
        to:
          - shell_command: |
              osascript -e 'display notification "" with title "Restarting Alfred…"'
              killall -KILL "Alfred"
              killall "Alfred Preferences"
              while pgrep -q "Alfred"; do sleep 0.1; done
              sleep 0.1
              open -a Alfred\ 5
              osascript -e 'tell application id "com.runningwithcrayons.Alfred" to search'
  #─────────────────────────────────────────────────────────────────────────────
