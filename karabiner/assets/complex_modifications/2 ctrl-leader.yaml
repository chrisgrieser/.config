# yaml-language-server: $schema=./schema/karabiner-mod-schema.json
#â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
title: "ðŸ”º App Leader"
anchors:
  - conditions:
      - &leader-active { type: variable_if, name: LEADER_ACTIVE, value: true }
      - &leader-inactive { type: variable_unless, name: LEADER_ACTIVE, value: true }
      - &not-game 
        type: frontmost_application_unless
        file_paths:
          - "/Users/.*/Library/Application Support/Steam/steamapps/common/.*\\.app"
          - "/Applications/StarCraft II/.*"
  - to:
      - &deactivate-leader { set_variable: { name: LEADER_ACTIVE, value: false } }
      - &activate-leader { set_variable: { name: LEADER_ACTIVE, value: true } }
      - &remove-notice { set_notification_message: { id: leader-notice, text: "" } }
      - &set-notice { set_notification_message: { id: leader-notice, text: "ðŸ”º Leader" } }
#â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
rules:
  - description: "ðŸ”ºApp Switcher Leader: 2x L-Ctrl or 2x R-Cmd"
    manipulators:
      - type: basic
        from: { key_code: left_control }
        conditions: [*leader-inactive, *not-game]
        to: [{ key_code: left_control }]
        to_if_alone: [*activate-leader, *set-notice] # only if alone, so it can still be used as modifier
      - type: basic
        from: { key_code: right_command }
        conditions: [*leader-inactive, *not-game]
        to: [{ key_code: right_command }]
        to_if_alone: [*activate-leader, *set-notice] # only if alone, so it can still be used as modifier

      # Pass through 2x L-Ctrl for Alfred
      - type: basic
        from: { key_code: left_control }
        conditions: [*leader-active]
        to_if_alone:
          - key_code: left_control
          - key_code: left_control
          - *deactivate-leader
          - *remove-notice
      # Cancel (Hyper/Esc)
      - type: basic
        from: { key_code: caps_lock }
        conditions: [*leader-active]
        to_if_alone: [*deactivate-leader, *remove-notice]

  #â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  - description: "ðŸ”º App Switcher Actions"
    manipulators:
      - description: "[c]alendar"
        type: basic
        from: { key_code: c }
        conditions: [*leader-active]
        to: [{ shell_command: open -a 'Calendar' }, *deactivate-leader, *remove-notice]

      - description: "cs[v] Editor"
        type: basic
        from: { key_code: v }
        conditions: [*leader-active]
        to: [{ shell_command: open -a 'Easy CSV Editor' }, *deactivate-leader, *remove-notice]

      - description: "[âŽµ] ChatGPT"
        type: basic
        from: { key_code: "spacebar" }
        conditions: [*leader-active]
        to: [{ shell_command: open 'https://chatgpt.com/' }, *deactivate-leader, *remove-notice]

      - description: "[Ã¶] Mastodon (Ivory)"
        type: basic
        from: { key_code: semicolon } # Ã¶ on German keyboard
        conditions: [*leader-active]
        to: [{ shell_command: open -a "Ivory" }, *deactivate-leader, *remove-notice]

      - description: "[Ã–] Mastodon website"
        type: basic
        from: { key_code: semicolon, modifiers: { mandatory: [shift] } } # Ã– on German keyboard
        conditions: [*leader-active]
        to:
          - shell_command: open 'https://pkm.social/notifications'
          - *deactivate-leader
          - *remove-notice

      - description: "[,] System Preferences"
        type: basic
        from: { key_code: comma }
        conditions: [*leader-active]
        to: [{ shell_command: open -a 'System Preferences' }, *deactivate-leader, *remove-notice]

      - description: "[o]bsidian (main vault)"
        type: basic
        from: { key_code: o }
        conditions: [*leader-active]
        to:
          - shell_command: open "obsidian://open?vault=main-vault"
          - *deactivate-leader
          - *remove-notice

      - description: "[u] Obsidian (writing vault)"
        type: basic
        from: { key_code: u }
        conditions: [*leader-active]
        to:
          - shell_command: open "obsidian://open?vault=writing-vault"
          - *deactivate-leader
          - *remove-notice

      - description: "[j] Obsidian (PhD Vault)"
        type: basic
        from: { key_code: j }
        conditions: [*leader-active]
        to:
          - shell_command: open "obsidian://open?vault=phd-data-analysis"
          - *deactivate-leader
          - *remove-notice

      - description: "[d]iscord"
        type: basic
        from: { key_code: d }
        conditions: [*leader-active]
        to:
          - shell_command: open "https://discord.com/channels/170278487775510528/724117196363661392"
          - *deactivate-leader
          - *remove-notice

      - description: "[z]oom"
        type: basic
        from: { key_code: "y" } # switched y and z due to German Keyboard
        conditions: [*leader-active]
        to: [{ shell_command: open -a 'zoom.us' }, *deactivate-leader, *remove-notice]

      # - description: "[t]: Twilight Imperium"
      #   type: basic
      #   from: { key_code: t }
      #   conditions: [*leader-active]
      #   to: [{ shell_command: open -a 'Twilight Wars' }, *deactivate-leader, *remove-notice]

      - description: "[l] Termina[l]"
        type: basic
        from: { key_code: l } # l is quicker to reach for the right hand than t
        conditions: [*leader-active]
        to: [{ shell_command: open -a 'WezTerm' }, *deactivate-leader, *remove-notice]

      - description: "[i] Rem[i]nder"
        type: basic
        from: { key_code: i }
        conditions: [*leader-active]
        to:
          # open Smart List "Today"
          - shell_command: |
              osascript -e '
                tell application "Reminders" to activate
                tell application "System Events" to tell process "Reminders"
                  click menu item "Scheduled" of menu of menu item "Go To" of menu "View" of menu bar 1
                end tell'
          - *deactivate-leader
          - *remove-notice

      - description: "[n]eovide"
        type: basic
        from: { key_code: "n" }
        conditions: [*leader-active]
        to: [{ shell_command: open -a "Neovide" }, *deactivate-leader, *remove-notice]

      - description: "[s]lack"
        type: basic
        from: { key_code: s }
        conditions: [*leader-active]
        to: [{ shell_command: open -a 'Slack' }, *deactivate-leader, *remove-notice]

      - description: "[m]ail"
        type: basic
        from: { key_code: m }
        conditions: [*leader-active]
        to: [{ shell_command: open -a "Mimestream" }, *deactivate-leader, *remove-notice]

      - description: "[b]rowser"
        type: basic
        from: { key_code: b }
        conditions: [*leader-active]
        to: [{ shell_command: open -a "Brave Browser" }, *deactivate-leader, *remove-notice]

      - description: "[B]rowser & re-open last tab"
        type: basic
        from: { key_code: b, modifiers: { mandatory: [shift] } }
        conditions: [*leader-active]
        to:
          # FIX page reloading needed, since vimium is otherwise stuck
          - shell_command: |
              osascript -e '
                tell application "System Events" to tell process "Brave Browser"
                  set frontmost to true
                  click menu item "Reopen Closed Tab" of menu "File" of menu bar 1
                  click menu item "Reload This Page" of menu "View" of menu bar 1
                end tell'
          - *deactivate-leader
          - *remove-notice

      - description: "[f]inder"
        type: basic
        from: { key_code: f }
        conditions: [*leader-active]
        to: [*deactivate-leader, *remove-notice, { shell_command: open -a "Finder" }]

      - description: "[âŒ«] open trash"
        type: basic
        from: { key_code: delete_or_backspace }
        conditions: [*leader-active]
        to:
          - *deactivate-leader
          - *remove-notice
          - shell_command: |
              # to open the "unified" trash (iCloud trash + user trash), needs to use
              # AppleScript and not `open "$HOME/.Trash"`
              osascript -e' tell application "Finder" to open the trash'
              open -a 'Finder' # needed to activate Finder

      - description: "[h]ammerspoon console"
        type: basic
        from: { key_code: h }
        conditions: [*leader-active]
        to: [{ shell_command: open -a 'Hammerspoon' }, *deactivate-leader, *remove-notice]

      - description: "[k]arabiner-EventViewer"
        type: basic
        from: { key_code: k }
        conditions: [*leader-active]
        to: [{ shell_command: open -a 'Karabiner-EventViewer' }, *deactivate-leader, *remove-notice]

      - description: "[y]ouTube"
        type: basic
        from: { key_code: z } # switched y and z due to German Keyboard
        conditions: [*leader-active]
        to:
          - shell_command: open -a 'YouTube' || open 'https://www.youtube.com/'
          - *deactivate-leader
          - *remove-notice

      - description: "[a]lfred Preferences"
        type: basic
        from: { key_code: a }
        conditions: [*leader-active]
        to: [{ shell_command: open -a 'Alfred Preferences' }, *deactivate-leader, *remove-notice]

      - description: "[p]df Reader (Highlights)"
        type: basic
        from: { key_code: p }
        conditions: [*leader-active]
        to: [{ shell_command: open -a 'Highlights' }, *deactivate-leader, *remove-notice]

      - description: "Github notifications"
        type: basic
        from: { key_code: g }
        conditions: [*leader-active]
        to:
          - shell_command: |
              osascript -e 'tell application id "com.runningwithcrayons.Alfred" to run trigger "github-notifications" in workflow "de.chris-grieser.github"'
          - *deactivate-leader
          - *remove-notice

      - description: "Activity Monitor"
        type: basic
        from: { key_code: escape }
        conditions: [*leader-active]
        to: [{ shell_command: open -a 'Activity Monitor' }, *deactivate-leader, *remove-notice]

      - description: "WhatsApp"
        type: basic
        from: { key_code: w }
        conditions: [*leader-active]
        to:
          - shell_command: open 'https://web.whatsapp.com/'
          - *deactivate-leader
          - *remove-notice

      - description: "[q] Signal"
        type: basic
        from: { key_code: q }
        conditions: [*leader-active]
        to: [{ shell_command: open -a "Signal" }, *deactivate-leader, *remove-notice]

      - description: "M[e]ssenger"
        type: basic
        from: { key_code: e }
        conditions: [*leader-active]
        to:
          - shell_command: open 'https://www.messenger.com/'
          - *deactivate-leader
          - *remove-notice

      - description: "Reddit (Alfred)"
        type: basic
        from: { key_code: r }
        conditions: [*leader-active]
        to:
          - shell_command: |
              osascript -e 'tell application id "com.runningwithcrayons.Alfred" to run trigger "browse" in workflow "de.chris-grieser.reddit-browser"'
          - *deactivate-leader
          - *remove-notice

      - description: "[T]ransmission"
        type: basic
        from: { key_code: t, modifiers: { mandatory: [shift] } }
        conditions: [*leader-active]
        to: [{ shell_command: open -a 'Transmission' }, *deactivate-leader, *remove-notice]
