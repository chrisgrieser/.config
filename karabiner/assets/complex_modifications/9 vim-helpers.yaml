# yaml-language-server: $schema=../karabiner-mod-schema.json
title: vim helpers
rules:
  - description: "Neovide: ⇪R to restart, ⌘Q to Quit"
    manipulators:
      - type: basic
        from: { key_code: r, modifiers: { mandatory: [command, control, shift, option] } }
        conditions:
          - { type: frontmost_application_if, file_paths: ["[Nn]eovide"] }
        to:
          # INFO not done via Alfred because of https://github.com/neovide/neovide/issues/1604
          # INFO Quitting via :wqall instead of cmd+Q so bufferleaving autocmds are triggered
          - shell_command: |
              export PATH=/usr/local/lib:/usr/local/bin:/opt/homebrew/bin/:$PATH
              nvim --server "/tmp/nvim_server.pipe" --remote-send "<cmd>try|wqall|catch|qall|endtry<CR>"
              exitcode=$? # unresponsive server exists with code 2

              if [[ $exitcode -ne 0 ]] ; then
                osascript -e 'display notification "" with title "⚔️ Force killing nvim…"'
                killall -9 nvim neovide
              fi

              # wait until nvim not running anymore
              i=0
              while pgrep -xq "nvim" ; do 
                i=$((i+1))
                sleep 0.1
                [[ $i -gt 30 ]] && return
              done

              # Restart (configured to reopen last file if opened without arg)
              open -a "Neovide"
      # INFO explicitly remapping cmd+q ensures that cursor position and changes
      # are saved. Also, fixing the neovide issue of sometimes having nvim
      # processes left behind.
      - type: basic
        from: { key_code: q, modifiers: { mandatory: [command] } }
        to:
          - shell_command: |
              export PATH=/usr/local/lib:/usr/local/bin:/opt/homebrew/bin/:$PATH
              nvim --server "/tmp/nvim_server.pipe" --remote-send "<cmd>try|wqall|catch|qall|endtry<CR>"
              # unresponsive server exists with code 2
              exitcode=$?

              if [[ $exitcode -ne 0 ]] ; then
                osascript -e 'display notification "" with title "⚔️ Force killing nvim…"'
                killall -9 nvim neovide
              fi
        conditions:
          - { type: frontmost_application_if, file_paths: ["[Nn]eovide"] }
  #─────────────────────────────────────────────────────────────────────────────
  - description: "HACK <S-Space> to f2 / Ctrl-s for various apps"
    manipulators:
      - type: basic
        from: { key_code: spacebar, modifiers: { mandatory: [shift] } }
        to:
          - key_code: f2
        conditions:
          - type: frontmost_application_if
            file_paths:
              - "[Nn]eovide"
              - ^/Applications/WezTerm\.app
      # various apps for svim
      - type: basic
        from: { key_code: spacebar, modifiers: { mandatory: [shift] } }
        to:
          - { key_code: s, modifiers: [control] }
        conditions:
          - type: frontmost_application_if
            bundle_identifiers:
              - ^com\.brave\.Browser$
              - ^com\.vivaldi\.Vivaldi$
              - ^com\.tinyspeck\.slackmacgap$
              - ^com\.hnc\.Discord$
              - ^com\.apptorium\.SideNotes-paddle$
              - ^com\.mimestream\.Mimestream$
  #─────────────────────────────────────────────────────────────────────────────
  # FIX ^ for vim
  - description: "Grave ^ -> f1, and that in turn remapped in the app"
    manipulators:
      - type: basic
        from: { key_code: non_us_backslash }
        conditions:
          - { type: input_source_if, input_sources: [language: ^de$] }
          - type: frontmost_application_if
            file_paths: [^/Applications/Obsidian\.app, "[Nn]eovide"]
        to:
          - { key_code: f1 }
  #─────────────────────────────────────────────────────────────────────────────
  - description: "vim motions: special characters in US layout"
    manipulators:
      # ⚒️ {}@^~|: German to US layout for vim
      # Curly Brace {
      - type: basic
        from: { key_code: "8", modifiers: { mandatory: [option] } }
        conditions:
          - { type: input_source_if, input_sources: [language: ^de$] }
          - type: frontmost_application_if
            file_paths:
              - ^/Applications/Obsidian\.app
        to:
          - select_input_source: { input_source_id: ^com\.apple\.keylayout\.US$ }
          - { key_code: vk_none, hold_down_milliseconds: 20 }
          - { key_code: open_bracket, modifiers: [shift] }
        to_after_key_up:
          - select_input_source: { input_source_id: ^com\.apple\.keylayout\.ABC-QWERTZ$ }
      # Curly Brace }
      - type: basic
        from: { key_code: "9", modifiers: { mandatory: [option] } }
        conditions:
          - { type: input_source_if, input_sources: [language: ^de$] }
          - type: frontmost_application_if
            file_paths:
              - ^/Applications/Obsidian\.app
              - "[Nn]eovide"
        to:
          - select_input_source: { input_source_id: ^com\.apple\.keylayout\.US$ }
          - { key_code: vk_none, hold_down_milliseconds: 20 }
          - { key_code: close_bracket, modifiers: [shift] }
        to_after_key_up:
          - select_input_source: { input_source_id: ^com\.apple\.keylayout\.ABC-QWERTZ$ }
      # at @
      - type: basic
        from: { key_code: l, modifiers: { mandatory: [option] } }
        conditions:
          - { type: input_source_if, input_sources: [language: ^de$] }
          - type: frontmost_application_if
            file_paths:
              - ^/Applications/Obsidian\.app
              - "[Nn]eovide"
        to:
          - { select_input_source: { input_source_id: ^com\.apple\.keylayout\.US$ } }
          - { key_code: vk_none, hold_down_milliseconds: 20 }
          - { key_code: "2", modifiers: [shift] }
        to_after_key_up:
          - select_input_source: { input_source_id: ^com\.apple\.keylayout\.ABC-QWERTZ$ }
