# yaml-language-server: $schema=../karabiner-mod-schema.json
title: vim helpers
rules:
  - description: "Neovide: ⇪R to restart, ⌘Q to Quit"
    manipulators:
      - type: basic
        from: { key_code: r, modifiers: { mandatory: [command, control, shift, option] } }
        conditions:
          - { type: frontmost_application_if, file_paths: ["[Nn]eovide"] }
        to:
          # INFO not done via Alfred because of https://github.com/neovide/neovide/issues/1604
          # INFO Quitting via :wqall instead of cmd+Q so bufferleaving autocmds are triggered
          - shell_command: |
              export PATH=/usr/local/lib:/usr/local/bin:/opt/homebrew/bin/:$PATH
              if ! nvim --server "/tmp/nvim_server.pipe" --remote-send "<cmd>try|wqall|catch|qall|endtry<CR>" ; then
                osascript -e 'display notification "" with title "⚔️ Force killing nvim…"'
                killall -9 nvim neovide
              fi

              # wait until nvim not running anymore
              i=0
              while pgrep -xq "nvim" ; do 
                i=$((i+1))
                sleep 0.1
                if [[ $i -gt 30 ]] ; then
                  osascript -e 'display notification "" with title "⚔️ Force killing nvim…"'
                  killall -9 nvim neovide
                  break
                fi
              done

              # Restart (config reopens last file if no arg)
              open -a "Neovide"
      # INFO explicitly remapping cmd+q ensures that cursor position and changes
      # are saved. Also, fixing the neovide issue of sometimes having nvim
      # processes left behind.
      - type: basic
        from: { key_code: q, modifiers: { mandatory: [command] } }
        to:
          - shell_command: |
              export PATH=/usr/local/lib:/usr/local/bin:/opt/homebrew/bin/:$PATH
              if ! nvim --server "/tmp/nvim_server.pipe" --remote-send "<cmd>try|wqall|catch|qall|endtry<CR>" ; then
                osascript -e 'display notification "" with title "⚔️ Force killing nvim…"'
                killall -9 nvim neovide
              fi
        conditions:
          - { type: frontmost_application_if, file_paths: ["[Nn]eovide"] }
  #─────────────────────────────────────────────────────────────────────────────
  - description: "HACK svim-apps: <S-Space> to f2"
    manipulators:
      - type: basic
        from: { key_code: spacebar, modifiers: { mandatory: [shift] } }
        to:
          - { key_code: s, modifiers: [control] }
        conditions:
          - type: frontmost_application_if
            bundle_identifiers:
              - ^com\.brave\.Browser$
              - ^com\.vivaldi\.Vivaldi$
              - ^com\.tinyspeck\.slackmacgap$
              - ^com\.hnc\.Discord$
              - ^com\.apptorium\.SideNotes-paddle$
              - ^com\.mimestream\.Mimestream$
