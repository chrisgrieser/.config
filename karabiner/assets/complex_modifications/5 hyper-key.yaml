# yaml-language-server: $schema=./schema/karabiner-mod-schema.json
title: ⇪ Hyper
anchors:
  - from:
      modifiers: &hyper
        # INFO not using cmd+opt+ctrl+shift to avoid triggering system
        # diagnosis via cmd+opt+ctrl+shift+.
        mandatory: [command, control, option]
  #─────────────────────────────────────────────────────────────────────────────
rules:
  - description: "*️⃣ ⇪ Capslock → Hyper/Esc"
    manipulators:
      - type: basic
        # optional modifiers, so accidental `shift+caps` does not trigger actual capslock
        from: { key_code: caps_lock, modifiers: { optional: [shift, control, option, command] } }
        to_if_alone:
          - { key_code: escape, lazy: true }
        to:
          - { key_code: right_command, modifiers: [control, option], lazy: true }
      #─────────────────────────────────────────────────────────────────────────────
      # Map Esc to F18 (clipboard / screenshot history)
      - type: basic
        from: { key_code: escape }
        to_if_alone:
          - key_code: f18
        to_if_held_down:
          - shell_command: open "cleanshot://open-history"
        # INFO condition to avoid conflict with finder-vim-mode;
        # mapping to f18 in Finder is done in `finder-vim-alfred-addon.yaml`
        conditions:
          - { type: frontmost_application_unless, bundle_identifiers: [^com\.apple\.finder$] }
  #─────────────────────────────────────────────────────────────────────────────
  - description: "Close Notification"
    manipulators:
      - type: basic
        from: { key_code: "9", modifiers: *hyper }
        to:
          - shell_command: |
              osascript -e '
                Application("System Events")
                  .applicationProcesses.byName("NotificationCenter")
                  .windows[0]
                  .groups[0]
                  .scrollAreas[0]
                  .uiElements[0]
                  .groups()
                  .map(banner => banner.actions().slice(-1)[0])
                  .forEach(banner => banner.perform())
              '
  #─────────────────────────────────────────────────────────────────────────────
  - description: "Insert Mode Vim: ⇪ Hyper Movements"
    manipulators:
      # Movement
      - type: basic
        from: { key_code: h, modifiers: *hyper }
        to:
          - key_code: left_arrow
      - type: basic
        from: { key_code: j, modifiers: *hyper }
        to:
          - key_code: down_arrow
      - type: basic
        from: { key_code: k, modifiers: *hyper }
        to:
          - key_code: up_arrow
      - type: basic
        from: { key_code: l, modifiers: *hyper }
        to:
          - key_code: right_arrow
      # word to the left
      - type: basic
        from: { key_code: i, modifiers: *hyper }
        to:
          - { key_code: left_arrow, modifiers: [option] }
      # word to the right
      - type: basic
        from: { key_code: o, modifiers: *hyper }
        to:
          - { key_code: right_arrow, modifiers: [option] }
      # delete word (use ⌘J from utility hotkeys for changing a word)
      - type: basic
        from: { key_code: spacebar, modifiers: *hyper }
        to:
          - { key_code: right_arrow, modifiers: [option] } # to the right end of the word
          - { key_code: delete_or_backspace, modifiers: [option] } # delete word
          - key_code: delete_or_backspace # delete the space
          - key_code: right_arrow # go to next word
