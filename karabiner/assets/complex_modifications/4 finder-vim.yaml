title: "Finder Vim Controls"
homepage: https://github.com/chrisgrieser/dotfiles/karabiner
maintainers: [pseudometa (chrisgrieser)]
version: [1.2.0]
anchors:
  - conditions:
      - &finder-app
        type: frontmost_application_if
        bundle_identifiers: [^com\.apple\.finder$]
      - &finder-or-alfred-app # for Alfred Compatibility Mode
        type: frontmost_application_if
        bundle_identifiers: 
          - ^com\.runningwithcrayons\.Alfred$
          - ^com\.apple\.finder$
      - &is-German-keyboard
        type: input_source_if
        input_sources:
          - language: ^de$
      - &not-German-keyboard
        type: input_source_unless
        input_sources:
          - language: ^de$
      - &is-insert-mode
        type: variable_if
        name: FINDER_INSERT_MODE
        value: true
      - &not-insert-mode
        type: variable_unless
        name: FINDER_INSERT_MODE
        value: true
      - &is-find-mode
        type: variable_if
        name: FINDER_FIND_MODE
        value: true
      - &not-find-mode
        type: variable_unless
        name: FINDER_FIND_MODE
        value: true
      - &alfred-active
        type: variable_if
        name: FINDER_ALFRED_ACTIVE
        value: true
      - &alfred-inactive
        type: variable_unless
        name: FINDER_ALFRED_ACTIVE
        value: true
      - &move-active
        type: variable_if
        name: FINDER_MOVE_ACTIVE
        value: true
      - &move-inactive
        type: variable_unless
        name: FINDER_MOVE_ACTIVE
        value: true
      - &context-menu-open
        type: variable_if
        name: FINDER_CONTEXT_MENU_ACTIVE
        value: true
      - &no-context-menu
        type: variable_unless
        name: FINDER_CONTEXT_MENU_ACTIVE
        value: true
      - &quicklook-open
        type: variable_if
        name: FINDER_QUICKLOOK_ACTIVE
        value: true
      - &no-quicklook
        type: variable_unless
        name: FINDER_QUICKLOOK_ACTIVE
        value: true
  #─────────────────────────────────────────────────────────────────────────────
  - to:
      - &enter-insert-mode
        set_variable: # Insert Mode
          name: FINDER_INSERT_MODE
          value: true
      - &leave-insert-mode
        set_variable:
          name: FINDER_INSERT_MODE
          value: false
      - &insert-notice
        set_notification_message:
          id: insert-notice
          text: "✏️  INSERT"
      - &vim-mode-paused-notice
        set_notification_message:
          id: insert-notice
          text: "⏸️ Finder-Vim-Mode paused. \n(↵ , ⇪, or ⎋ to re-activate.)"
      - &remove-insert-notice
        set_notification_message:
          id: insert-notice
          text: ""
      - &enter-find-mode
        set_variable: # Find Mode
          name: FINDER_FIND_MODE
          value: true
      - &leave-find-mode
        set_variable:
          name: FINDER_FIND_MODE
          value: false
      - &find-notice
        set_notification_message:
          id: find-notice
          text: "\U0001F50D FIND"
      - &remove-find-notice
        set_notification_message:
          id: find-notice
          text: ""
      - &remove-move-notice
        set_notification_message: # Move Active
          id: move-notice
          text: ""
      - &move-notice
        set_notification_message:
          id: move-notice
          text: "✂️  Move active"
      - &start-alfred
        set_variable:
          name: FINDER_ALFRED_ACTIVE
          value: true
      - &end-alfred
        set_variable:
          name: FINDER_ALFRED_ACTIVE
          value: false
      - &start-move
        set_variable:
          name: FINDER_MOVE_ACTIVE
          value: true
      - &end-move
        set_variable:
          name: FINDER_MOVE_ACTIVE
          value: false
      - &start-context-menu
        set_variable:
          name: FINDER_CONTEXT_MENU_ACTIVE
          value: true
      - &end-context-menu
        set_variable:
          name: FINDER_CONTEXT_MENU_ACTIVE
          value: false
      - &start-quicklook
        set_variable:
          name: FINDER_QUICKLOOK_ACTIVE
          value: true
      - &end-quicklook
        set_variable:
          name: FINDER_QUICKLOOK_ACTIVE
          value: false
#───────────────────────────────────────────────────────────────────────────────
#───────────────────────────────────────────────────────────────────────────────
#───────────────────────────────────────────────────────────────────────────────
rules:
  - description: "Finder Vim Controls"
    manipulators:
      # hjkl, LH
      - type: basic
        from: {key_code: j}
        to: # no to_if_alone since it blocks repeat
          - key_code: down_arrow
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *no-quicklook]
      - type: basic
        from: {key_code: k}
        to: # no to_if_alone since it blocks repeat
          - key_code: up_arrow
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *no-quicklook]
      - type: basic
        from: {key_code: h}
        to_if_alone:
          - key_code: up_arrow
            modifiers: [command]
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *no-context-menu]
      - type: basic
        from: {key_code: l}
        to_if_alone:
          - key_code: down_arrow
            modifiers: [command]
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *no-context-menu]
      # L = open file & close window
      - type: basic
        from: {key_code: l, modifiers: {mandatory: [shift]}}
        to:
          - {key_code: o, modifiers: [command, option]}
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      # H = Go to last recent folder
      - type: basic
        from: {key_code: h, modifiers: {mandatory: [shift]}}
        to:
          - shell_command: |
              osascript -e 'tell application "System Events" to tell process "Finder"
                click first menu item of menu of menu item "Recent Folders" of menu "Go" of menu bar 1
              end tell'
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      # gg, G, J, K
      - type: basic
        from: {key_code: g}
        to:
          - key_code: up_arrow
            modifiers: [option]
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      - type: basic
        from: {key_code: g, modifiers: {mandatory: [shift]}}
        to_if_alone:
          - key_code: down_arrow
            modifiers: [option]
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      - type: basic
        from: {key_code: j, modifiers: {mandatory: [shift]}}
        to:
          - key_code: down_arrow
          - key_code: down_arrow
          - key_code: down_arrow
          - key_code: down_arrow
          - key_code: down_arrow
          - key_code: down_arrow
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      - type: basic
        from: {key_code: k, modifiers: {mandatory: [shift]}}
        to:
          - key_code: up_arrow
          - key_code: up_arrow
          - key_code: up_arrow
          - key_code: up_arrow
          - key_code: up_arrow
          - key_code: up_arrow
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      #─────────────────────────────────────────────────────────────────────────
      # :help
      - type: basic
        from:
          key_code: hyphen # "?" on German keyboard
          modifiers: {mandatory: [shift]}
        to:
          - shell_command: qlmanage -p "$HOME/.config/karabiner/assets/finder-vim-mode-cheatsheet.png"
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *is-German-keyboard]
      - type: basic
        from:
          key_code: slash # "?" on American keyboard
          modifiers: {mandatory: [shift]}
        to:
          - shell_command: qlmanage -p "$HOME/.config/karabiner/assets/finder-vim-mode-cheatsheet.png"
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *not-German-keyboard]
      #─────────────────────────────────────────────────────────────────────────
      # INSERT MODE
      # ENTER
      # Rename
      - type: basic
        from: {key_code: return_or_enter}
        to:
          - key_code: return_or_enter
          - *insert-notice
          - *enter-insert-mode
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *no-context-menu]
      # Batch Rename
      - type: basic
        from: {key_code: return_or_enter, modifiers: {mandatory: [shift]}}
        to_if_alone:
          - shell_command: |
              osascript -e '
                tell application "System Events" to tell process "Finder"
                  click menu item "Rename…" of menu "File" of menu bar 1
                end tell'
          - *insert-notice
          - *enter-insert-mode
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *no-context-menu]
        # Switch Directory
      - type: basic
        from: {key_code: g, modifiers: {mandatory: [command, shift]}}
        to:
          - {key_code: g, modifiers: [command, shift]}
          - *insert-notice
          - *enter-insert-mode
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *no-context-menu]
        # Search
      - type: basic
        from: {key_code: slash}
        to:
          - {key_code: f, modifiers: [command]}
          - *insert-notice
          - *enter-insert-mode
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *no-context-menu]
      - type: basic
        from: {key_code: f, modifiers: {mandatory: [command]}}
        to:
          - {key_code: f, modifiers: [command]}
          - *insert-notice
          - *enter-insert-mode
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *no-context-menu]
      # Alfred: so you can insert text in Alfred/Spotlight while Finder is frontmost
      - type: basic
        from: {key_code: spacebar, modifiers: {mandatory: [command]}}
        to:
          - {key_code: spacebar, modifiers: [command]}
          - *enter-insert-mode
          - *start-alfred
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      # LEAVE INSERT MODE
      # Confirm Insert Mode
      - type: basic
        from: {key_code: return_or_enter}
        to:
          - key_code: return_or_enter
          - *remove-insert-notice
          - *leave-insert-mode
          - *end-alfred
        conditions: [*finder-or-alfred-app, *is-insert-mode]
      # Confirm Alfred Mode with various modifiers
      - type: basic
        from: {key_code: return_or_enter, modifiers: {mandatory: [control]}}
        to: [{key_code: return_or_enter, modifiers: [control]}, *remove-insert-notice, *leave-insert-mode, *end-alfred]
        conditions: [*finder-or-alfred-app, *is-insert-mode, *alfred-active]
      - type: basic
        from: {key_code: return_or_enter, modifiers: {mandatory: [command]}}
        to: [{key_code: return_or_enter, modifiers: [command]}, *remove-insert-notice, *leave-insert-mode, *end-alfred]
        conditions: [*finder-or-alfred-app, *is-insert-mode, *alfred-active]
      - type: basic
        from: {key_code: return_or_enter, modifiers: {mandatory: [shift]}}
        to: [{key_code: return_or_enter, modifiers: [shift]}, *remove-insert-notice, *leave-insert-mode, *end-alfred]
        conditions: [*finder-or-alfred-app, *is-insert-mode, *alfred-active]
      - type: basic
        from: {key_code: return_or_enter, modifiers: {mandatory: [option]}}
        to: [{key_code: return_or_enter, modifiers: [option]}, *remove-insert-notice, *leave-insert-mode, *end-alfred]
        conditions: [*finder-or-alfred-app, *is-insert-mode, *alfred-active]
      - type: basic
        from: {key_code: return_or_enter, modifiers: {mandatory: [fn]}}
        to: [{key_code: return_or_enter, modifiers: [fn]}, *remove-insert-notice, *leave-insert-mode, *end-alfred]
        conditions: [*finder-or-alfred-app, *is-insert-mode, *alfred-active]
      - type: basic # Hyper+return
        from: {key_code: return_or_enter, modifiers: {mandatory: [command, control, option, shift]}}
        to: [{key_code: return_or_enter, modifiers: [command, control, option, shift]}, *remove-insert-notice, *leave-insert-mode, *end-alfred]
        conditions: [*finder-or-alfred-app, *is-insert-mode, *alfred-active]
      - type: basic # Meh+return
        from: {key_code: return_or_enter, modifiers: {mandatory: [shift, control, option]}}
        to: [{key_code: return_or_enter, modifiers: [shift, control, option]}, *remove-insert-notice, *leave-insert-mode, *end-alfred]
        conditions: [*finder-or-alfred-app, *is-insert-mode, *alfred-active]
      - type: basic
        from: {key_code: "2", modifiers: {mandatory: [command]}}
        to: [{key_code: "2", modifiers: [command]}, *remove-insert-notice, *leave-insert-mode, *end-alfred]
        conditions: [*finder-or-alfred-app, *is-insert-mode, *alfred-active]
      - type: basic
        from: {key_code: "3", modifiers: {mandatory: [command]}}
        to: [{key_code: "3", modifiers: [command]}, *remove-insert-notice, *leave-insert-mode, *end-alfred]
        conditions: [*finder-or-alfred-app, *is-insert-mode, *alfred-active]
      - type: basic
        from: {key_code: "4", modifiers: {mandatory: [command]}}
        to: [{key_code: "4", modifiers: [command]}, *remove-insert-notice, *leave-insert-mode, *end-alfred]
        conditions: [*finder-or-alfred-app, *is-insert-mode, *alfred-active]
      - type: basic
        from: {key_code: "5", modifiers: {mandatory: [command]}}
        to: [{key_code: "5", modifiers: [command]}, *remove-insert-notice, *leave-insert-mode, *end-alfred]
        conditions: [*finder-or-alfred-app, *is-insert-mode, *alfred-active]
      - type: basic
        from: {key_code: "6", modifiers: {mandatory: [command]}}
        to: [{key_code: "6", modifiers: [command]}, *remove-insert-notice, *leave-insert-mode, *end-alfred]
        conditions: [*finder-or-alfred-app, *is-insert-mode, *alfred-active]
      - type: basic
        from: {key_code: "7", modifiers: {mandatory: [command]}}
        to: [{key_code: "7", modifiers: [command]}, *remove-insert-notice, *leave-insert-mode, *end-alfred]
        conditions: [*finder-or-alfred-app, *is-insert-mode, *alfred-active]
      - type: basic
        from: {key_code: "8", modifiers: {mandatory: [command]}}
        to: [{key_code: "8", modifiers: [command]}, *remove-insert-notice, *leave-insert-mode, *end-alfred]
        conditions: [*finder-or-alfred-app, *is-insert-mode, *alfred-active]
      - type: basic
        from: {key_code: "9", modifiers: {mandatory: [command]}}
        to: [{key_code: "9", modifiers: [command]}, *remove-insert-notice, *leave-insert-mode, *end-alfred]
        conditions: [*finder-or-alfred-app, *is-insert-mode, *alfred-active]
      - type: basic
        from: {key_code: c, modifiers: {mandatory: [command]}}
        to: [{key_code: c, modifiers: [command]}, *remove-insert-notice, *leave-insert-mode, *end-alfred]
        conditions: [*finder-or-alfred-app, *is-insert-mode, *alfred-active]
      - type: basic
        from: {key_code: l, modifiers: {mandatory: [command]}}
        to: [{key_code: l, modifiers: [command]}, *remove-insert-notice, *leave-insert-mode, *end-alfred]
        conditions: [*finder-or-alfred-app, *is-insert-mode, *alfred-active]
      # Abort
      - type: basic
        from: {key_code: caps_lock}
        to_if_alone:
          - key_code: escape
          - *remove-insert-notice
          - *leave-insert-mode
          - *end-alfred
          - *end-quicklook
          - *end-context-menu
          - *end-move
          - *remove-move-notice
        to:
          - key_code: right_shift
            modifiers: [command, control, option] # keep hyper binding
        conditions: [*finder-or-alfred-app]
      - type: basic
        from: {key_code: escape}
        to:
          - key_code: escape
          - *remove-insert-notice
          - *leave-insert-mode
          - *end-alfred
          - *end-quicklook
          - *end-context-menu
          - *end-move
          - *remove-move-notice
        conditions: [*finder-or-alfred-app]
        # Closing window or quitting Finder should also disable Insert mode
      - type: basic
        from: {key_code: w, modifiers: {mandatory: [command]}}
        to:
          - {key_code: w, modifiers: [command]}
          - *remove-insert-notice
          - *leave-insert-mode
          - *end-quicklook
          - *end-context-menu
        conditions: [*finder-app, *alfred-inactive]
      - type: basic
        from: {key_code: q, modifiers: {mandatory: [command]}}
        to:
          - {key_code: q, modifiers: [command]}
          - *remove-insert-notice
          - *leave-insert-mode
          - *end-quicklook
          - *end-context-menu
        conditions: [*finder-app, *alfred-inactive]
      #─────────────────────────────────────────────────────────────────────────
      # Window & Tabs
      # w = close window/tab (:[tab]close)
      - type: basic
        from: {key_code: w}
        to:
          - {key_code: w, modifiers: [command]}
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *no-context-menu]
      # w = close other windows (:only)
      - type: basic
        from: {key_code: w, modifiers: {mandatory: [shift]}}
        to:
          - shell_command: |
              osascript -e '
                tell application "Finder"
                  repeat while window 2 exists
                    close window 2
                  end repeat
                end tell'
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *no-context-menu]
      # <BS> = cycle windows (:bnext)
      - type: basic
        from: {key_code: delete_or_backspace}
        to_if_alone:
          - {key_code: grave_accent_and_tilde, modifiers: [command]}
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *no-context-menu]
      # t = cycle tabs (:tabnext)
      - type: basic
        from: {key_code: t}
        to_if_alone:
          - {key_code: tab, modifiers: [control]}
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *no-context-menu]
      #─────────────────────────────────────────────────────────────────────────
      # Selections
      # a = select all
      - type: basic
        from: {key_code: a}
        to_if_alone:
          - {key_code: a, modifiers: [command]}
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      # A = DEselect all
      - type: basic
        from: {key_code: a, modifiers: {mandatory: [shift]}}
        to_if_alone:
          - {key_code: a, modifiers: [command, option]}
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      # <S-Space> = add down to selection
      - type: basic
        from: {key_code: spacebar, modifiers: {mandatory: [shift]}}
        to:
          - {key_code: down_arrow, modifiers: [shift]}
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      #─────────────────────────────────────────────────────────────────────────
      # q = right-click / Context Menu
      - type: basic
        from: {key_code: q}
        to:
          # yes, Finder needs to activate even though it is already frontmost,
          # since running a shellcommand seems to temporarily take focus, so
          # that there is no AXfocusedUIElement during execution
          - shell_command: |
              osascript -e '
                tell application "Finder"
                  if the selection is {} then return
                  activate
                end tell
                delay 0.1
                tell application "System Events" to tell process "Finder"
                  tell value of attribute "AXFocusedUIElement" to perform action "AXShowMenu"
                end tell'
          - *start-context-menu
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *no-context-menu, *no-quicklook]
      # close context menu with another q
      - type: basic
        from: {key_code: q}
        to_if_alone:
          - key_code: escape
          - *end-context-menu
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *context-menu-open]
      # changed navigation in context menu
      - type: basic
        from: {key_code: l}
        to_if_alone:
          - key_code: right_arrow
            modifiers: [command]
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *context-menu-open]
      - type: basic
        from: {key_code: h}
        to_if_alone:
          - key_code: left_arrow
            modifiers: [command]
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *context-menu-open]
      # Confirm Context Menu Selection
      - type: basic
        from: {key_code: return_or_enter}
        to:
          - key_code: return_or_enter
          - *end-context-menu
        conditions: [*finder-app, *context-menu-open]
      # INFO: context menu cancellation configured with the insert mode cancellations
      #─────────────────────────────────────────────────────────────────────────
      # Quicklook Mode
      # start quicklook 
      - type: basic
        from: {key_code: spacebar}
        to_if_alone:
          - key_code: spacebar
          - *start-quicklook
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *no-context-menu, *no-quicklook]
      # changed navigation in quicklook
      - type: basic
        from: {key_code: j}
        to:
          - key_code: page_down
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *quicklook-open]
      - type: basic
        from: {key_code: k}
        to:
          - key_code: page_up
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *quicklook-open]
      # end quicklook
      - type: basic
        from: {key_code: spacebar}
        to:
          - key_code: spacebar
          - *end-quicklook
        conditions: [*finder-app, *quicklook-open]
      # INFO: other quicklook cancellation keys configured with the insert mode cancellations
      #─────────────────────────────────────────────────────────────────────────
      # Basic File Operations
      # d = delete
      - type: basic
        from: {key_code: d}
        to_if_alone:
          - key_code: delete_or_backspace
            modifiers: [command]
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      # y = yank
      - type: basic
        from: {key_code: z} # y = z in German Keyboard
        to_if_alone:
          - key_code: c
            modifiers: [command]
          - shell_command: osascript -e 'display notification "File(s)" with title "✅ Copied"'
        conditions: [*finder-app, *not-insert-mode, *move-inactive, *not-find-mode, *is-German-keyboard]
      - type: basic
        from: {key_code: "y"}
        to:
          - key_code: c
            modifiers: [command]
          - shell_command: osascript -e 'display notification "File(s)" with title "✅ Copied"'
        conditions: [*finder-app, *not-insert-mode, *move-inactive, *not-find-mode, *not-German-keyboard]
      # r = replicate (duplicate)
      - type: basic
        from: {key_code: r}
        to_if_alone:
          - key_code: d
            modifiers: [command]
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      # p = paste
      - type: basic
        from: {key_code: p}
        to_if_alone:
          - key_code: v
            modifiers: [command]
        conditions: [*finder-app, *not-insert-mode, *move-inactive, *not-find-mode]
      # x = cross-move items to other Finder window (if exactly 2 Finder windows)
      - type: basic
        from: {key_code: x}
        to_if_alone:
          - shell_command: |
              osascript -e'
                tell application "Finder"
                  if (number of windows is not 2) then
                    display notification "" with title "Failure" subtitle "⚠️ Not exactly two windows"
                    beep
                  else if (the selection is {}) then
                    display notification "" with title "Failure" subtitle "⚠️ No selection"
                    beep
                  else
                    set otherWin to (target of window 2 as alias)
                    repeat with f in (selection as list)
                      move f to otherWin
                    end repeat
                  end if
                end tell'
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      # i = info window
      - type: basic
        from: {key_code: i}
        to:
          - key_code: i
            modifiers: [command]
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      # v = view window
      - type: basic
        from: {key_code: v}
        to_if_alone:
          - key_code: j
            modifiers: [command]
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      # u = undo
      - type: basic
        from: {key_code: u}
        to_if_alone:
          - key_code: z
            modifiers: [command]
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *not-German-keyboard]
      - type: basic
        from: {key_code: u}
        to:
          - key_code: "y" # y = z in German keyboard
            modifiers: [command]
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *is-German-keyboard]
      # U = redo
      - type: basic
        from:
          key_code: u
          modifiers: {mandatory: [shift]}
        to:
          - key_code: z
            modifiers: [command, shift]
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *not-German-keyboard]
      - type: basic
        from:
          key_code: u
          modifiers: {mandatory: [shift]}
        to:
          - key_code: "y" # y = z in German keyboard
            modifiers: [command, shift]
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *is-German-keyboard]
      # e = eject (if volume)
      - type: basic
        from: {key_code: e}
        to_if_alone:
          - key_code: e
            modifiers: [command]
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      # N = New Folder
      - type: basic
        from:
          key_code: n
          modifiers: {mandatory: [shift]}
        to:
          - key_code: n
            modifiers: [command, shift]
          - *enter-insert-mode # enters insert mode since folder renaming is also triggered
          - *insert-notice
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      # M = Move selection to new folder
      - type: basic
        from:
          key_code: m
          modifiers: {mandatory: [shift]}
        to:
          - key_code: n
            modifiers: [command, control]
          - *enter-insert-mode # enters insert mode since folder renaming is also triggered
          - *insert-notice
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      # n = New File
      - type: basic
        from: {key_code: n}
        to_if_alone:
          - shell_command: |
              folder=$(osascript -e 'tell application "Finder" to return POSIX path of (insertion location as alias)')
              newFile="$folder/new-file"
              while [[ -e "$newFile" ]] ; do
                newFile="$newFile-1"
              done
              touch "$newFile"
              open -R "$newFile"
              osascript -e 'tell application "Finder" to tell front window to update every item'
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      # b = Toggle `.bkp` (Backup)
      - type: basic
        from: {key_code: b}
        to:
          - shell_command: |
              selection=$(osascript -e 'tell application "Finder" to return POSIX path of (selection as alias)')
              lastFourChars=$(echo "$selection" | rev | cut -c-4 | rev) # bash expansion does not work in karabiner
              if [[ "$lastFourChars" == "-bkp" ]]; then
                newName=$(echo "$selection" | rev | cut -c5- | rev)
                mv "$selection" "$newName"
              else
                mv "$selection" "$selection-bkp"
              fi
              osascript -e 'tell application "Finder" to tell front window to update every item'
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      # s = follow symlink
      - type: basic
        from: {key_code: s}
        to:
          - shell_command: |
              selection=$(osascript -e 'tell application "Finder" to return POSIX path of (selection as alias)')
              open -R "$(readlink -f "$selection")"
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      # S = Create Symlink
      - type: basic
        from: {key_code: s, modifiers: {mandatory: [shift]}}
        to: 
          - shell_command: osascript -e 'display notification "..." with title "beep"'
          - shell_command: |
              sel=$(osascript -e 'tell application "Finder" to return POSIX path of (selection as alias)')
              if [[ -f "$sel" ]] ; then
                  ln -sf "$sel" "${sel}-symlink"
                  open -R "${sel}-symlink"
              elif [[ -d "$sel" ]] ; then
                  # cannot use bash expansion here, therefore rev & cut
                  sel="$(echo "$sel" | rev | cut -c2- | rev)"
                  ln -sf "$sel" "${sel}-symlink"
                  open -R "${sel}-symlink"
              fi
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      # z = zip files
      - type: basic
        from: {key_code: "y"} # y and z switched on German keyboard
        to_if_alone:
          - shell_command: |
              osascript -e '
                tell application "System Events" to tell process "Finder"
                  click menu item "Compress" of menu "File" of menu bar 1
                end tell'
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *is-German-keyboard]
      - type: basic
        from: {key_code: z}
        to:
          - shell_command: |
              osascript -e '
                tell application "System Events" to tell process "Finder"
                  click menu item "Compress" of menu "File" of menu bar 1
                end tell'
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *not-German-keyboard]
      # toggle hidden files visibility
      - type: basic
        from: {key_code: period}
        to:
          - {key_code: period, modifiers: [command, shift]}
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      #─────────────────────────────────────────────────────────────────────────
      # Navigation
      # o = open fold
      - type: basic
        from: {key_code: o}
        to_if_alone:
          - key_code: right_arrow
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      # c = close fold
      - type: basic
        from: {key_code: c}
        to_if_alone:
          - key_code: left_arrow
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      # <C-h> = History Back
      - type: basic
        from:
          key_code: h
          modifiers: {mandatory: [control]}
        to_if_alone:
          - shell_command: |
              osascript -e '
                tell application "System Events" to tell process "Finder"
                  click menu item "Back" of menu "Go" of menu bar 1
                end tell'
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      # <C-l> = History Forward
      - type: basic
        from:
          key_code: l
          modifiers: {mandatory: [control]}
        to:
          - shell_command: |
              osascript -e '
                tell application "System Events" to tell process "Finder"
                  click menu item "Forward" of menu "Go" of menu bar 1
                end tell'
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      #─────────────────────────────────────────────────────────────────────────
      # FIND MODE
      # Enter/Exit
      - type: basic
        from: {key_code: f}
        to_if_alone:
          - *enter-find-mode
          - *find-notice
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      - type: basic
        from: {key_code: caps_lock}
        to_if_alone:
          - *leave-find-mode
          - *remove-find-notice
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: escape}
        to:
          - *leave-find-mode
          - *remove-find-notice
        conditions: [*finder-app, *is-find-mode]
      # One-Char-Searches
      - type: basic
        from: {key_code: a, modifiers: {optional: [shift]}}
        to: [{key_code: a}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: b, modifiers: {optional: [shift]}}
        to: [{key_code: b}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: c, modifiers: {optional: [shift]}}
        to: [{key_code: c}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: d, modifiers: {optional: [shift]}}
        to: [{key_code: d}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: e, modifiers: {optional: [shift]}}
        to: [{key_code: e}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: f, modifiers: {optional: [shift]}}
        to: [{key_code: f}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: g, modifiers: {optional: [shift]}}
        to: [{key_code: g}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: h, modifiers: {optional: [shift]}}
        to: [{key_code: h}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: i, modifiers: {optional: [shift]}}
        to: [{key_code: i}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: j, modifiers: {optional: [shift]}}
        to: [{key_code: j}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: k, modifiers: {optional: [shift]}}
        to: [{key_code: k}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: l, modifiers: {optional: [shift]}}
        to: [{key_code: l}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: m, modifiers: {optional: [shift]}}
        to: [{key_code: m}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: n, modifiers: {optional: [shift]}}
        to: [{key_code: n}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: o, modifiers: {optional: [shift]}}
        to: [{key_code: o}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: p, modifiers: {optional: [shift]}}
        to: [{key_code: p}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: q, modifiers: {optional: [shift]}}
        to: [{key_code: q}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: r, modifiers: {optional: [shift]}}
        to: [{key_code: r}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: s, modifiers: {optional: [shift]}}
        to: [{key_code: s}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: t, modifiers: {optional: [shift]}}
        to: [{key_code: t}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: u, modifiers: {optional: [shift]}}
        to: [{key_code: u}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: v, modifiers: {optional: [shift]}}
        to: [{key_code: v}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: w, modifiers: {optional: [shift]}}
        to: [{key_code: w}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: x, modifiers: {optional: [shift]}}
        to: [{key_code: x}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: y, modifiers: {optional: [shift]}}
        to: [{key_code: y}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: z, modifiers: {optional: [shift]}}
        to: [{key_code: z}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: period}
        to: [{key_code: period}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: "0"}
        to: [{key_code: "0"}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: "1"}
        to: [{key_code: "1"}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: "2"}
        to: [{key_code: "2"}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: "3"}
        to: [{key_code: "3"}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: "4"}
        to: [{key_code: "4"}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: "5"}
        to: [{key_code: "5"}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: "6"}
        to: [{key_code: "6"}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: "7"}
        to: [{key_code: "7"}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: "8"}
        to: [{key_code: "8"}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      - type: basic
        from: {key_code: "9"}
        to: [{key_code: "9"}, *leave-find-mode, *remove-find-notice]
        conditions: [*finder-app, *is-find-mode]
      #─────────────────────────────────────────────────────────────────────────
      # MOVE
      # m = move
      - type: basic
        from: {key_code: m}
        to:
          - key_code: c
            modifiers: [command]
          - *start-move
          - *move-notice
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      # p / cmd+v = paste content marked for move thing
      - type: basic
        from: {key_code: p}
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *move-active]
        to:
          - key_code: v
            modifiers: [command, option]
          - *end-move
          - *remove-move-notice
      - type: basic
        from:
          key_code: v
          modifiers: {mandatory: [command]}
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *move-active]
        to:
          - key_code: v
            modifiers: [command, option]
          - *end-move
          - *remove-move-notice
      # y / cmd+c = yank, which also aborts move
      - type: basic
        from: {key_code: "y"}
        to:
          - key_code: c
            modifiers: [command]
          - *end-move
          - *remove-move-notice
          - shell_command: osascript -e 'display notification "File(s)" with title "✅ Copied"'
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *move-active, *not-German-keyboard]
      - type: basic
        from: {key_code: z} # y and z switched on German keyboard
        to:
          - key_code: c
            modifiers: [command]
          - *end-move
          - *remove-move-notice
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *move-active, *is-German-keyboard]
      - type: basic
        from:
          key_code: c
          modifiers: {mandatory: [command]}
        to:
          - key_code: c
            modifiers: [command]
          - *end-move
          - *remove-move-notice
        conditions: [*finder-app, *not-insert-mode, *not-find-mode, *move-active]
      #─────────────────────────────────────────────────────────────────────────
      #─────────────────────────────────────────────────────────────────────────
      # SORT
      - type: basic # by name
        from: {key_code: "3"}
        to:
          - {key_code: "1", modifiers: [control, option, command]}
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      - type: basic # by modification date
        from: {key_code: "4"}
        to:
          - {key_code: "5", modifiers: [control, option, command]}
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      - type: basic # by size
        from: {key_code: "5"}
        to:
          - {key_code: "6", modifiers: [control, option, command]}
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      - type: basic # by kind
        from: {key_code: "6"}
        to:
          - {key_code: "2", modifiers: [control, option, command]}
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      #─────────────────────────────────────────────────────────────────────────
      # Sidebar/Preview/Pathbar Toggle
      - type: basic
        from:
          key_code: "1"
          modifiers: {optional: [command]}
        to:
          - {key_code: "s", modifiers: [option, command]}
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      - type: basic
        from:
          key_code: "0"
          modifiers: {optional: [command]}
        to:
          - {key_code: "p", modifiers: [shift, command]}
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      - type: basic
        from:
          key_code: "9"
          modifiers: {optional: [command]}
        to:
          - {key_code: "p", modifiers: [option, command]}
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      #─────────────────────────────────────────────────────────────────────────
      # ctrl-p: copy path
      - type: basic
        from: {key_code: p, modifiers: {mandatory: [control]}}
        to:
          - {key_code: "c", modifiers: [option, command]}
          - shell_command: osascript -e 'display notification "File path" with title "✅ Copied"'
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      # ctrl-n: copy name
      - type: basic
        from: {key_code: n, modifiers: {mandatory: [control]}}
        to:
          - key_code: return_or_enter
          - {key_code: "a", modifiers: [command]}
          - {key_code: "c", modifiers: [command]}
          - key_code: return_or_enter
          - shell_command: osascript -e 'display notification "File name" with title "✅ Copied"'
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
      # ctrl-g: open at github
      - type: basic
        from: {key_code: g, modifiers: {mandatory: [control]}}
        to:
          - shell_command: |
              GIT_OPTIONAL_LOCKS=0
              SEL=$(osascript -e 'tell application "Finder"
                set sel to (item 1 of (selection as list) as alias)
                return POSIX path of sel
              end tell')
              [[ -f "$SEL" ]] || exit 1
              cd "$(dirname "$SEL")"

              BRANCH=$(git branch --show-current)
              ROOT_PATH=$(git rev-parse --show-toplevel)
              ROOT_LEN=${#ROOT_PATH}
              REMOTE_URL="$(git remote -v | head -n1 | cut -f2 | cut -d' ' -f1 | sed -e's/:/\//' -e 's/git@/https:\/\//' -e 's/\.git//')"
              PATH_IN_REPO=${SEL:$ROOT_LEN}
              PATH_IN_REPO=$(osascript -l JavaScript -e "encodeURIComponent('$PATH_IN_REPO')")

              URL="$REMOTE_URL/blob/$BRANCH/$PATH_IN_REPO"
              echo "$URL" | pbcopy
              open "$URL"
        conditions: [*finder-app, *not-insert-mode, *not-find-mode]
