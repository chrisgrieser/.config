# yaml-language-server: $schema=./schema/karabiner-mod-schema.json
title: Special Characters
rules:
  #─────────────────────────────────────────────────────────────────────────────
  # DEAD KEYS
  - description: "Avoid dead keys (prevent expecting another key): ^~`"
    manipulators:
      # caret ^
      - type: basic
        from: { key_code: grave_accent_and_tilde }
        to:
          - select_input_source: { input_source_id: com.apple.keylayout.US }
          - { key_code: vk_none, hold_down_milliseconds: 40 }
          - { key_code: "6", modifiers: [shift] }
        to_after_key_up:
          - select_input_source: { input_source_id: com.apple.keylayout.German }
      # backtick `
      - type: basic
        from: { key_code: equal_sign, modifiers: { mandatory: [shift] } }
        to:
          - select_input_source: { input_source_id: com.apple.keylayout.US }
          - { key_code: vk_none, hold_down_milliseconds: 40 }
          - key_code: non_us_backslash
        to_after_key_up:
          - select_input_source: { input_source_id: com.apple.keylayout.German }
      # tilde ~
      - type: basic
        from: { key_code: "n", modifiers: { mandatory: [option] } }
        to:
          - select_input_source: { input_source_id: com.apple.keylayout.US }
          - { key_code: vk_none, hold_down_milliseconds: 40 }
          - { key_code: non_us_backslash, modifiers: [shift] }
        to_after_key_up:
          - select_input_source: { input_source_id: com.apple.keylayout.German }
        conditions:
          # `~` is the only dead key wezterm can manage on its own.
          - { type: frontmost_application_unless, file_paths: [wezterm-gui$] }
  #─────────────────────────────────────────────────────────────────────────────
  # REMAPPING
  - description: "Remap to make them available without alt+shift: \\[]"
    manipulators:
      # § -> |
      - type: basic
        from: { key_code: "3", modifiers: { mandatory: [shift] } }
        conditions:
          - { type: input_source_if, input_sources: [{ language: ^de$ }] }
        to:
          - { key_code: "7", modifiers: [option] }
      # ° → \
      - type: basic
        from: { key_code: grave_accent_and_tilde, modifiers: { mandatory: [shift] } }
        conditions:
          - type: input_source_if
            input_sources: [{ language: ^de$ }]
        to:
          - { key_code: "7", modifiers: [option, shift] }
      # ß to [
      - type: basic
        from: { key_code: hyphen }
        conditions:
          - { type: input_source_if, input_sources: [language: ^de$] }
          - type: frontmost_application_unless
            bundle_identifiers:
              - ^com\.tinyspeck\.slackmacgap$
              - ^com\.microsoft\.Word$
              - ^net\.highlightsapp\.universal$
              - ^com\.mimestream\.Mimestream$
        to:
          - { key_code: "5", modifiers: [option] }
      # replacement: ⌥ß → ß
      - type: basic
        from: { key_code: hyphen, modifiers: { mandatory: [option] } }
        conditions:
          - { type: input_source_if, input_sources: [language: ^de$] }
        to:
          - key_code: hyphen
      # forward tick to ]
      - type: basic
        from: { key_code: equal_sign }
        conditions:
          - { type: input_source_if, input_sources: [language: ^de$] }
        to:
          - { key_code: "6", modifiers: [option] }
#───────────────────────────────────────────────────────────────────────────────
