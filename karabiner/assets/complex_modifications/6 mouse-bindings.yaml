# yaml-language-server: $schema=./schema/karabiner-mod-schema.json
title: "Mouse Bindings"
anchors:
  - conditions:
      - &not-game 
        type: frontmost_application_unless
        file_paths:
          - "/Users/.*/Library/Application Support/Steam/steamapps/common/"
          - "/Applications/StarCraft II/"
#───────────────────────────────────────────────────────────────────────────────
rules:
  # Emulates the "Right-Click Open Link in new Background tab" Chrome extension
  - description: "(Mouse) 2 (briefly): Open link in new background tab"
    manipulators:
      - type: basic
        from: { pointing_button: button2 }
        to_if_alone:
          - { pointing_button: button1, modifiers: [command] }
        to_if_held_down:
          - pointing_button: button2
        conditions:
          - type: frontmost_application_if
            bundle_identifiers: [com.brave.Browser, com.apple.Safari]
  #─────────────────────────────────────────────────────────────────────────────
  - description: "(Mouse) 3: Quit app"
    manipulators:
      - type: basic
        from: { pointing_button: button3 }
        to:
          - { key_code: q, modifiers: [command] }
        conditions: [*not-game]
  #─────────────────────────────────────────────────────────────────────────────
  - description: "(Mouse) 4 (bottom)"
    manipulators:
      # Mimestream: Delete
      - type: basic
        from: { pointing_button: button4 }
        to:
          - key_code: non_us_pound # the "#" key
        conditions:
          - { type: frontmost_application_if, bundle_identifiers: [com.mimestream.Mimestream] }
      # Highlights: Free Comment
      - type: basic
        from: { pointing_button: button4 }
        to:
          - { key_code: n, modifiers: [command, control] }
          - { key_code: "3", modifiers: [command, control] }
          - shell_command: |
              "$HOME/.config/karabiner/assets/notificators/highlights-notificator" \
                  --title "Highlights" --message "Comment ✏️"
        conditions:
          - type: frontmost_application_if
            bundle_identifiers: [net.highlightsapp.universal]
      # Finder: back
      - type: basic
        from: { pointing_button: button4 }
        to:
          - shell_command: |
              osascript -e '
                tell application "System Events" to tell process "Finder"
                  click menu item "Back" of menu "Go" of menu bar 1
                end tell'
        conditions:
          - { type: frontmost_application_if, bundle_identifiers: [com.apple.finder] }
      # Obsidian: back
      - type: basic
        from: { pointing_button: button4 }
        to:
          - { key_code: left_arrow, modifiers: [command, option] }
        conditions:
          - { type: frontmost_application_if, bundle_identifiers: [md.obsidian] }
      # Calendar: back to month view
      - type: basic
        from: { pointing_button: button4 }
        to:
          - { key_code: "3", modifiers: [command] }
        conditions:
          - { type: frontmost_application_if, bundle_identifiers: [com.apple.iCal] }
  #─────────────────────────────────────────────────────────────────────────────
  - description: "(Mouse) 5 (top)"
    manipulators:
      # Highlights: Yellow Highlight (held down: red underline)
      - type: basic
        from: { pointing_button: button5 }
        to_if_alone:
          - { key_code: h, modifiers: [command, control] }
          - { key_code: "3", modifiers: [command, control] }
          - shell_command: |
              "$HOME/.config/karabiner/assets/notificators/highlights-notificator" \
                  --title "Highlights" --message "Highlight 🟨"
        to_if_held_down:
          - { key_code: "u", modifiers: [control, command] }
          - { key_code: "1", modifiers: [control, command] }
          - shell_command: |
              "$HOME/.config/karabiner/assets/notificators/highlights-notificator" \
                  --title "Highlights" --message "Underline 🖍️"
        conditions:
          - { type: frontmost_application_if, bundle_identifiers: [net.highlightsapp.universal] }
      # Mimestream: Archive
      - type: basic
        from: { pointing_button: button5 }
        to_if_alone:
          - key_code: e
        conditions:
          - { type: frontmost_application_if, bundle_identifiers: [com.mimestream.Mimestream] }
      # Fallback behavior: Close window
      - type: basic
        from: { pointing_button: button5 }
        to_if_alone:
          - { key_code: w, modifiers: [command] }
        conditions: [*not-game]
  #─────────────────────────────────────────────────────────────────────────────
  # some MX Master Models have this builtin, others do not
  - description: "(Mouse) 6: Cmd+Tab"
    manipulators:
      - type: basic
        from: { pointing_button: button6 }
        to:
          - { key_code: tab, modifiers: [command] }
  #─────────────────────────────────────────────────────────────────────────────
  - description: "(Mouse) 1+2 (simultaneously): Open selection"
    manipulators:
      - type: basic
        from:
          simultaneous: [{ pointing_button: button1 }, { pointing_button: button2 }]
        # conflicts for some reason with space+dragging in the Canvas plugin
        conditions:
          - *not-game
          - { type: frontmost_application_unless, bundle_identifiers: [md.obsidian] }
        to:
          - shell_command: |
              # INFO IF SELECTION IS…
              # file path: reveal it in Finder.app
              # directory path: open it in Finder.app
              # url(s): open all urls in Browser
              # email: send to that address
              # some other text: google it
              # empty: do nothing
              #───────────────────────────────────────────────────────────────────────────────
              # search_engine="https://www.google.com/search?q="
              search_engine="https://duckduckgo.com/?q="
              prev_clipboard=$(pbpaste)
              osascript -e 'tell application "System Events" to keystroke "c" using {command down}'
              sleep 0.1
              sel=$(pbpaste)

              [[ -n "$prev_clipboard" ]] && echo "$prev_clipboard" | pbcopy
              [[ -z "$sel" ]] && return 1 # = no selection

              # clean up
              sel=$(echo -n "$sel" | xargs) # trims whitespace
              sel="${sel/#./$HOME}"        # resolve ~

              # openers
              if [[ -f "$sel" ]]; then # file
                open -R "$sel"
              elif [[ -d "$sel" ]]; then # directory
                open "$sel"
              elif echo "$sel" | grep -Eq "https?://"; then # url(s) in selection
                echo "$sel" | grep -Eo "https?://[^ ]*" | xargs open
              elif [[ "$sel" =~ "@" ]]; then # mail
                open "mailto:$sel"
              elif [[ -n "$sel" ]]; then
                sel=${sel/./..}
                url_encoded_sel=$(osascript -l JavaScript -e "encodeURIComponent('$sel')")
                url="$search_engine$url_encoded_sel"
                open "$url"
              fi
  #─────────────────────────────────────────────────────────────────────────────
