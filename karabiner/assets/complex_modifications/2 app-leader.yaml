title: "ðŸ”º App Leader"
anchors:
  - conditions:
      - &leader-active
        type: variable_if
        name: LEADER_ACTIVE
        value: true
      - &leader-inactive
        type: variable_unless
        name: LEADER_ACTIVE
        value: true
  - to:
      - &deactivate-leader
        set_variable:
          name: LEADER_ACTIVE
          value: false
      - &activate-leader
        set_variable:
          name: LEADER_ACTIVE
          value: true
      - &remove-notice
        set_notification_message:
          id: leader-notice
          text: ""
      - &set-notice
        set_notification_message:
          id: leader-notice
          text: ðŸ”º Leader
#â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
rules:
  - manipulators:
      - type: basic
        from: { key_code: right_command }
        to:
          - key_code: right_command
        conditions:
          - *leader-inactive
        to_if_alone:
          - *activate-leader
          - *set-notice
        parameters: { basic.to_if_alone_timeout_milliseconds: 200 }
      - type: basic
        from: { key_code: left_control }
        to:
          - key_code: left_control
        conditions:
          - *leader-inactive
        to_if_alone:
          - *activate-leader
          - *set-notice
        parameters: { basic.to_if_alone_timeout_milliseconds: 200 }
      # Cancel (Hyper/Esc)
      - type: basic
        description: "Hyper (Esc): Leader Cancel"
        from: { key_code: caps_lock }
        conditions: [*leader-active]
        to_if_alone:
          - *deactivate-leader
          - *remove-notice
  #â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  - description: "App Switcher Actions"
    manipulators:
      # [c]alendar: BusyCal
      - type: basic
        from: { key_code: c }
        conditions: [*leader-active]
        to:
          - shell_command: open -a 'BusyCal'
          - *deactivate-leader
          - *remove-notice
      # [Ã¶] (looks like tweetbot): twitter
      - type: basic
        from: { key_code: semicolon } # Ã¶ on German keyboard
        conditions:
          - type: variable_if
            name: LEADER_ACTIVE
            value: true
          - type: input_source_if
            input_sources: [{ language: ^de$ }]
        to:
          - shell_command: open -a 'Twitter'
          - *deactivate-leader
          - *remove-notice
      # [,]: System Preferences
      - type: basic
        from: { key_code: comma }
        conditions: [*leader-active]
        to:
          - shell_command: open -a 'System Preferences'
          - *deactivate-leader
          - *remove-notice
      # [O]bsidian
      - type: basic
        from: { key_code: o }
        conditions: [*leader-active]
        to:
          - shell_command: open -a 'Obsidian'
          - *deactivate-leader
          - *remove-notice
      # [D]iscord
      - type: basic
        from: { key_code: d }
        conditions: [*leader-active]
        to:
          - shell_command: open -a 'Discord'
          - *deactivate-leader
          - *remove-notice
      # [Z]oom
      - type: basic
        # switched y and z due to German Keyboard
        from: { key_code: "y" }
        conditions: [*leader-active]
        to:
          - shell_command: open -a 'zoom.us'
          - *deactivate-leader
          - *remove-notice
      # [n]eovide
      - type: basic
        from: { key_code: "n" }
        conditions: [*leader-active]
        to:
          - shell_command: osascript -e 'tell application "Neovide" to activate'
          - *deactivate-leader
          - *remove-notice
      # [t]erminal
      - type: basic
        from: { key_code: t }
        conditions: [*leader-active]
        to:
          - shell_command: osascript -e 'tell application id "com.runningwithcrayons.Alfred" to run trigger "terminal" in workflow "de.chris-grieser.terminal-dotfiles"'
          - *deactivate-leader
          - *remove-notice
      # [S]lack
      - type: basic
        from: { key_code: s }
        conditions: [*leader-active]
        to:
          - shell_command: open -a 'Slack'
          - *deactivate-leader
          - *remove-notice
      # [q]: Script Editor
      - type: basic
        from: { key_code: q }
        conditions: [*leader-active]
        to:
          - shell_command: open -a 'Script Editor'
          - *deactivate-leader
          - *remove-notice
      # [m]imestream
      - type: basic
        from: { key_code: m }
        conditions: [*leader-active]
        to:
          - shell_command: open -a 'Mimestream'
          - *deactivate-leader
          - *remove-notice
      # [b]rowser
      - type: basic
        from: { key_code: b }
        conditions: [*leader-active]
        to:
          - shell_command: open -a 'Vivaldi'
          - *deactivate-leader
          - *remove-notice
      # [B]rowser & re-open last tab (shift)
      - type: basic
        from: { key_code: b, modifiers: { mandatory: [shift] } }
        conditions: [*leader-active]
        to:
          - shell_command: osascript -e 'tell application id "com.runningwithcrayons.Alfred" to run trigger "re-open-last-tab" in workflow "com.apple.alfred.workflow.chromium-hist"'
          - *deactivate-leader
          - *remove-notice
      # [f]: Finder: Open $WD / $DOTFILE_FOLDER
      - type: basic
        from: { key_code: f }
        conditions: [*leader-active]
        to:
          - *deactivate-leader
          - *remove-notice
          - shell_command: |
              osascript -e '
                set home to POSIX path of (path to home folder as string)
                set wd to (home & "Library/Mobile Documents/com~apple~CloudDocs/File Hub/")
                set dotfile_folder to (home & ".config/")
                tell application "Finder"
                  launch
                  set toOpen to (wd as POSIX file)
                  if (front window exists) then
                    if frontmost then
                      set current_path to POSIX path of (target of front window as alias)
                      if (current_path is wd) then set toOpen to (dotfile_folder as POSIX file)
                    else
                      activate
                    end if
                    set target of front Finder window to toOpen
                  else
                    activate
                    open toOpen
                  end if
                end tell'
      # âŒ« = Open Trash
      - type: basic
        from: { key_code: delete_or_backspace }
        conditions: [*leader-active]
        to:
          - *deactivate-leader
          - *remove-notice
          - shell_command: | # opens the unified trash (iCloud trash + user trash)
              osascript -e'
                tell application "Finder"
                  activate
                  open the trash
                end tell
                tell application "System Events" to tell process "Finder"
                  set frontmost to true
                  click menu item "as List" of menu "View" of menu bar 1
                end tell
                '
      # [h]ammerspoon console
      - type: basic
        from: { key_code: h }
        conditions: [*leader-active]
        to:
          - shell_command: open -a 'Hammerspoon'
          - *deactivate-leader
          - *remove-notice
      # [k]arabiner-EventViewer
      - type: basic
        from: { key_code: k }
        conditions: [*leader-active]
        to:
          - shell_command: open -a 'Karabiner-EventViewer'
          - *deactivate-leader
          - *remove-notice
      # [K]arabiner-Elements (shift)
      - type: basic
        from: { key_code: k, modifiers: { mandatory: [shift] } }
        conditions: [*leader-active]
        to:
          - shell_command: open -a 'Karabiner-Elements'
          - *deactivate-leader
          - *remove-notice
      # [y]ouTube
      - type: basic
        from: { key_code: z } # switched y and z due to German Keyboard
        conditions: [*leader-active]
        to:
          - shell_command: open -a 'YouTube' || open 'https://www.youtube.com/'
          - *deactivate-leader
          - *remove-notice
      # [a]lfred Preferences
      - type: basic
        from: { key_code: a }
        conditions: [*leader-active]
        to:
          - shell_command: open -a 'Alfred Preferences'
          - *deactivate-leader
          - *remove-notice
      # [i]noreader
      - type: basic
        from: { key_code: "i" }
        conditions: [*leader-active]
        to:
          - shell_command: open -a 'Inoreader' || open 'https://www.inoreader.com/'
          - *deactivate-leader
          - *remove-notice
      # [p]df Reader: Highlights
      - type: basic
        from: { key_code: p }
        conditions: [*leader-active]
        to:
          - shell_command: open -a 'Highlights'
          - *deactivate-leader
          - *remove-notice
      # [g]oogle Docs
      - type: basic
        from: { key_code: g }
        conditions: [*leader-active]
        to:
          - shell_command: open -a 'Docs' || open 'https://docs.google.com/'
          - *deactivate-leader
          - *remove-notice
      # [v]ideo: IINA
      - type: basic
        from: { key_code: v }
        conditions: [*leader-active]
        to:
          - shell_command: open -a 'IINA'
          - *deactivate-leader
          - *remove-notice
      # [Esc] Activity Monitor
      - type: basic
        from: { key_code: escape }
        conditions: [*leader-active]
        to:
          - shell_command: open -a 'Activity Monitor'
          - *deactivate-leader
          - *remove-notice
      # [W]hatsApp (shift)
      - type: basic
        from: { key_code: w, modifiers: { mandatory: [shift] } }
        conditions: [*leader-active]
        to:
          - shell_command: open 'https://web.whatsapp.com/'
          - *deactivate-leader
          - *remove-notice
      # [I]nstagram (shift)
      - type: basic
        from: { key_code: i, modifiers: { mandatory: [shift] } }
        conditions: [*leader-active]
        to:
          - shell_command: open 'https://www.instagram.com/direct/t/340282366841710301281160592483616662553'
          - *deactivate-leader
          - *remove-notice
      # [T]elegram (shift)
      - type: basic
        from: { key_code: t, modifiers: { mandatory: [shift] } }
        conditions: [*leader-active]
        to:
          - shell_command: open 'https://web.telegram.org/z/'
          - *deactivate-leader
          - *remove-notice
      # [F]acebook (shift)
      - type: basic
        from: { key_code: f, modifiers: { mandatory: [shift] } }
        conditions: [*leader-active]
        to:
          - shell_command: open 'https://www.messenger.com/'
          - *deactivate-leader
          - *remove-notice
      # [R]eddit
      - type: basic
        from: { key_code: r }
        conditions: [*leader-active]
        to:
          - shell_command: open 'https://www.reddit.com/r/neovim/'
          - *deactivate-leader
          - *remove-notice
      # [space]: Emoji Picker
      - type: basic
        from: { key_code: spacebar }
        conditions: [*leader-active]
        to:
          - { key_code: spacebar, modifiers: [control, command] }
          - *deactivate-leader
          - *remove-notice
