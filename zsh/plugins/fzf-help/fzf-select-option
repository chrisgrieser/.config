#!/usr/bin/env bash

usage="Usage: $(basename "$0") [-h | --help] <cmd>

Displays the cli options for <cmd> using fzf, allowing the user to select one
of them. In the preview window, the selected option is highlighted and the help
message for the option is displayed.

The <cmd> can also be provided via stdin.

where:
    options:
    -h --help   shows this help messages

    positional:
    <cmd>   an existing command"

_get_command() {
    sed "s/\( -\).*$//"
}

_remove_line_number() {
    sed "s/^.*://g"
}

options=$(getopt -o h --long help -- "$@")
[ $? -eq 0 ] || { echo "Incorrect options provided"; exit 1; }

eval set -- "$options"
while true; do
    case "$1" in
    -h | --help)
        echo "$usage"
        exit
        ;;
    --)
        shift
        break
        ;;
    esac
    shift
done

if [[ -p /dev/stdin ]]; then
    buffer="$(cat -)"
else
    buffer="${@}"
fi

[ $# -eq 0 ] && [ -z "$buffer" ] && { echo "$usage"; exit ;}

if [[ -z $FZF_HELP_OPTS ]]; then
    FZF_HELP_OPTS="--preview-window=right,75%,nowrap --height 80% "
    FZF_HELP_OPTS+="--bind ctrl-a:change-preview-window(down,75%,nowrap|right,75%,nowrap)"
fi

cmd=$(echo $buffer | _get_command)
[ -z $cmd ] && exit 1

this_dir=$(dirname $(realpath ${BASH_SOURCE:-$0}))
opts="$($this_dir/cli-options $cmd)"

echo "$opts" | _remove_line_number |
fzf --prompt="$buffer" \
    --preview "echo \"$opts\" | $this_dir/bat-cli-option \"$cmd\" {}; [ {q} ];" \
    $FZF_HELP_OPTS
