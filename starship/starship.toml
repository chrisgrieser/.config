# - DOCS https://starship.rs/config/
# - Ansi color codes: https://i.stack.imgur.com/KTSQa.png
# - INFO some nerd font requires a space after them to be properly sized
#───────────────────────────────────────────────────────────────────────────────

add_newline = false
continuation_prompt = "↪️ "
format = """[\
${custom.location_indicator}\
$directory\
${custom.folder_number}\
${custom.main_branch}\
$git_branch\
$git_status\
$git_metrics\
$git_commit\
$git_state\
$sudo\
](bg:black)\
$cmd_duration\
$status\
$character\
"""

right_format = """\
${custom.alfred}\
$python\
$jobs\
$memory_usage\
"""

[character]
success_symbol = "[󰀘 ](bold green)" # 󰀘 
error_symbol = " [󰇷 ](bold red)"
vimcmd_symbol = " [ ](bold 206)"   # 206: magenta

[sudo]
style = 'fg:green bg:black'
symbol = "  "
format = "[$symbol]($style)"
disabled = false

[cmd_duration]
min_time = 2000
format = " [󰔟 $duration](bold cyan) "

[custom.location_indicator]
description = "Indicate if in my local repo folder"
command = '[[ "$PWD" =~ "$HOME/Repos" ]] && echo "󰔽"'
# conditional, so no output does not leave the extra space from `format`. And the
# space from format is needed, as the output from `command` is trimmed.
when = '[[ "$PWD" =~ "$HOME/Repos" ]]'
format = '[ $output  ]($style)'        # extra space for proper nerdfont sizing
style = "fg:bright-blue bg:black bold"

[directory]
truncation_length = 2
truncation_symbol = "/"
truncate_to_repo = true
read_only = "󰌾  "
read_only_style = "red bg:black"
style = "fg:bright-blue bg:black bold"
format = "[$path]($style) [$read_only]($read_only_style)"

[directory.substitutions]
".config" = " "
"main-vault" = "󰇈 "
"~/Library/Mobile Documents/com~apple~CloudDocs/File Hub" = "/󰀶 "
"~/Library/Mobile Documents/com~apple~CloudDocs" = "/ "
"/Alfred.alfredpreferences" = "/󰮤 "

[custom.folder_number]
description = "Number of files (and folders) in the current working directory"
command = "find . -mindepth 1 -maxdepth 1 -not -name '.git' -not -name '.DS_Store' -not -name 'Icon?' | wc -l"
when = "true"                                                                                                  # always show
symbol = " "
format = '[$symbol$output]($style) '
style = "fg:yellow bg:black bold"

[status]
format = " [$symbol$status]($style)"
disabled = false
symbol = ""

#───────────────────────────────────────────────────────────────────────────────
# GIT

# conflicts or rebasing
[git_state]
style = 'fg:yellow bg:black'

# checkout
[git_commit]
style = "fg:purple bg:black"
only_detached = true
format = "[󰘬 $hash]($style) "

# branch
[git_branch]
only_attached = true
symbol = "󰘬 "                        # 
style = "fg:purple bg:black bold"
format = "[$symbol$branch]($style) "
ignore_branches = ["main"]

# since "ignore_branches" fully hides the git_branch component, still showing the symbol
[custom.main_branch]
when = "[[ $(git branch --show-current) == 'main' ]]"
format = '[󰘬 ](fg:purple bg:black bold) '

# files
[git_status]
stashed = '[󰜦  $count ](fg:cyan bg:black)'
untracked = '[+$count ](fg:green bg:black)'
deleted = '[-$count ](fg:red bg:black)' # SIC unstaged as well as stage deletion
modified = '[~$count ](fg:208 bg:black)'
renamed = '[󰑕  $count ](fg:blue bg:black)'
staged = '[  $count ](fg:green bg:black)'
conflicted = '[ $count ](fg:red bg:black)'
diverged = '[󰃻 $count ](fg:red bg:black)'
ahead = '[󰶣 $count ](fg:cyan bg:black)'
behind = '[󰶡 $count ](fg:yellow bg:black)'
style = 'fg:purple bg:black bold'
format = '[$ahead_behind$conflicted$stashed$staged$untracked$renamed$modified$deleted]($style)'

# lines
[git_metrics]
disabled = false
added_style = "fg:green bg:black"
deleted_style = "fg:red bg:black"
format = '(\([+$added]($added_style)/[-$deleted]($deleted_style)\) )'

#───────────────────────────────────────────────────────────────────────────────
# right side
#───────────────────────────────────────────────────────────────────────────────

[jobs]
symbol = "󰰆 "
format = "[ +$number $symbol ]($style)"
style = "fg:white"
symbol_threshold = 1
number_threshold = 2

[memory_usage]
disabled = false
symbol = "󰍛  "
threshold = 80
format = " [$symbol$ram_pct]($style)"

[custom.alfred]
description = "Version number of Alfred Workflow"
when = "[[ -f info.plist ]] || [[ -f ../info.plist ]]"
command = "if [[ -f ../info.plist ]] ; then ; plist=$(plutil -extract version xml1 -o - ../info.plist) ; else ; plist=$(plutil -extract version xml1 -o - info.plist) ; fi ; echo \"$plist\" | sed -n 4p | cut -d'>' -f2 | cut -d'<' -f1"
os = "macos"
format = '[󰮤  $output]($style)'
style = "bold purple"

[python]
style = "bold cyan"
format = '[${symbol}${pyenv_prefix}(${version})(  󱥒  $virtualenv)]($style)'
version_format = "$major.$minor"
python_binary = ["python3"]
symbol = "  "
