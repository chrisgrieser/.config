<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.vitorgalvao.alfred.trialsounds</string>
	<key>connections</key>
	<dict>
		<key>08C4CA92-5807-4FFD-B30B-3AD6873DE04A</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>F03BE148-4AD9-486C-BCF9-377DE6AE5E2A</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<true/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>4526E754-2C97-4D98-8A54-36BF886B5383</string>
				<key>modifiers</key>
				<integer>1048576</integer>
				<key>modifiersubtext</key>
				<string>Remove from list and cycle sounds above to bottom</string>
				<key>vitoclose</key>
				<true/>
			</dict>
		</array>
		<key>2E4C1174-CB55-4886-97D4-F163204005B7</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>B3496CAD-BB20-48E0-B2D5-6A54C47F6F18</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>4526E754-2C97-4D98-8A54-36BF886B5383</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>634090ED-F790-4708-8BE3-9E5ED6A5E42E</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>579951F3-F76B-45D8-94C5-EB99D0E6F1BB</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>08C4CA92-5807-4FFD-B30B-3AD6873DE04A</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>B3496CAD-BB20-48E0-B2D5-6A54C47F6F18</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>579951F3-F76B-45D8-94C5-EB99D0E6F1BB</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>BFC060BD-4F64-43F7-840D-7AEC78677115</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>B3496CAD-BB20-48E0-B2D5-6A54C47F6F18</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<true/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>3378DF6B-BE8E-44F3-832E-F686B608414B</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Listen to /System/Library/Sounds</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>TrialSounds</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<true/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Getting sounds list…</string>
				<key>script</key>
				<string>require 'json'

sounds = ENV['sound_paths'].split("\n")

script_filter_items = []

sounds.each do |sound|
  script_filter_items.push(
    title: File.basename(sound, File.extname(sound)),
    subtitle: '↵ Play / ⌘↵ Ignore',
    arg: sound
  )
end

puts({items: script_filter_items}.to_json)</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string></string>
				<key>type</key>
				<integer>2</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>08C4CA92-5807-4FFD-B30B-3AD6873DE04A</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>triggerid</key>
				<string>sounds</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.external</string>
			<key>uid</key>
			<string>2E4C1174-CB55-4886-97D4-F163204005B7</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<true/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>/usr/bin/afplay "${1}"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>F03BE148-4AD9-486C-BCF9-377DE6AE5E2A</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>sounds = ARGV[0]

print (
  sounds.nil? ?
  Dir.glob('/System/Library/Sounds/*').join("\n") :
  sounds
)</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>2</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>B3496CAD-BB20-48E0-B2D5-6A54C47F6F18</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>sound_to_remove = ARGV[0]
sounds = ENV['sound_paths'].split("\n")

listened = []

sounds.each do |sound|
  sound == sound_to_remove ?
  break :
  listened.push(sound)
end

to_listen = sounds - listened - [sound_to_remove]

print (to_listen + listened).join("\n")</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>2</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>4526E754-2C97-4D98-8A54-36BF886B5383</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>sounds</string>
				<key>subtext</key>
				<string>Listen to /System/Library/Sounds</string>
				<key>text</key>
				<string>Trial Sounds</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>BFC060BD-4F64-43F7-840D-7AEC78677115</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>externaltriggerid</key>
				<string>sounds</string>
				<key>passinputasargument</key>
				<true/>
				<key>passvariables</key>
				<false/>
				<key>workflowbundleid</key>
				<string>self</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.callexternaltrigger</string>
			<key>uid</key>
			<string>634090ED-F790-4708-8BE3-9E5ED6A5E42E</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>sound_paths</key>
					<string>{query}</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>579951F3-F76B-45D8-94C5-EB99D0E6F1BB</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/source/info.plist"
readonly workflow_url="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/${alfred_workflow_name}.alfredworkflow"
readonly download_type='direct'
readonly frequency_check='4'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local -r notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/Resources/Scripts/notificator" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  local -r terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  download_url="$([[ "${download_type}" == 'github_release' ]] &amp;&amp; curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest" | grep 'browser_download_url' | head -1 | sed -E 's/.*browser_download_url": "(.*)"/\1/' || echo "${workflow_url}")"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${download_url}"
    open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>3378DF6B-BE8E-44F3-832E-F686B608414B</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Run `sounds` to list the audio in /System/Library/Sounds.

![](https://i.imgur.com/tANtSNF.png)

↵ plays the sound. ⌘↵ Removes it from the list and refreshes, sending the sounds above to the bottom so you continue where you left off.</string>
	<key>uidata</key>
	<dict>
		<key>08C4CA92-5807-4FFD-B30B-3AD6873DE04A</key>
		<dict>
			<key>xpos</key>
			<integer>480</integer>
			<key>ypos</key>
			<integer>20</integer>
		</dict>
		<key>2E4C1174-CB55-4886-97D4-F163204005B7</key>
		<dict>
			<key>xpos</key>
			<integer>30</integer>
			<key>ypos</key>
			<integer>20</integer>
		</dict>
		<key>3378DF6B-BE8E-44F3-832E-F686B608414B</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>230</integer>
			<key>ypos</key>
			<integer>300</integer>
		</dict>
		<key>4526E754-2C97-4D98-8A54-36BF886B5383</key>
		<dict>
			<key>xpos</key>
			<integer>670</integer>
			<key>ypos</key>
			<integer>160</integer>
		</dict>
		<key>579951F3-F76B-45D8-94C5-EB99D0E6F1BB</key>
		<dict>
			<key>xpos</key>
			<integer>380</integer>
			<key>ypos</key>
			<integer>190</integer>
		</dict>
		<key>634090ED-F790-4708-8BE3-9E5ED6A5E42E</key>
		<dict>
			<key>xpos</key>
			<integer>860</integer>
			<key>ypos</key>
			<integer>160</integer>
		</dict>
		<key>B3496CAD-BB20-48E0-B2D5-6A54C47F6F18</key>
		<dict>
			<key>xpos</key>
			<integer>230</integer>
			<key>ypos</key>
			<integer>160</integer>
		</dict>
		<key>BFC060BD-4F64-43F7-840D-7AEC78677115</key>
		<dict>
			<key>xpos</key>
			<integer>30</integer>
			<key>ypos</key>
			<integer>160</integer>
		</dict>
		<key>F03BE148-4AD9-486C-BCF9-377DE6AE5E2A</key>
		<dict>
			<key>xpos</key>
			<integer>670</integer>
			<key>ypos</key>
			<integer>20</integer>
		</dict>
	</dict>
	<key>version</key>
	<string>20.1</string>
	<key>webaddress</key>
	<string>https://vitorgalvao.com/</string>
</dict>
</plist>
