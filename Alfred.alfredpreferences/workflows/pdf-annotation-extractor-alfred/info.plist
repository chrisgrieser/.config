<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>de.chris-grieser.pdf-annotation-extraction</string>
	<key>category</key>
	<string>⭐️</string>
	<key>connections</key>
	<dict>
		<key>0C315F47-D751-4D59-8DFA-2CFC7BF581A2</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>0F49DAE6-6AB0-41CD-A791-496FD227B380</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>65783839-9CCB-48D0-A740-1F7BF96926D1</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>0C315F47-D751-4D59-8DFA-2CFC7BF581A2</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>77F6FCC3-FA68-477B-BBB0-40F8C4911955</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>65783839-9CCB-48D0-A740-1F7BF96926D1</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>AADD9ECB-F4AB-488C-8C2C-B7736DD7B815</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>65783839-9CCB-48D0-A740-1F7BF96926D1</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>CD293D43-2356-49DB-AD4F-DBA5FDE026C5</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>3069BB02-5E48-40CF-9DD8-337C5FA9F054</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>D512D46E-8C0B-49AB-808B-051BDA488A65</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>65783839-9CCB-48D0-A740-1F7BF96926D1</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Chris Grieser</string>
	<key>description</key>
	<string>Extract Annotations as Markdown, insert Pandoc Citations with correct page numbers and more</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>PDF Annotation Extractor</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>0</integer>
				<key>focusedappvariable</key>
				<false/>
				<key>focusedappvariablename</key>
				<string></string>
				<key>hotkey</key>
				<integer>0</integer>
				<key>hotmod</key>
				<integer>524288</integer>
				<key>hotstring</key>
				<string>A</string>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
				<key>relatedApps</key>
				<array>
					<string>net.highlightsapp.universal</string>
					<string>com.readdle.PDFExpert-Mac</string>
					<string>com.apple.Preview</string>
					<string>com.apple.finder</string>
				</array>
				<key>relatedAppsMode</key>
				<integer>1</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>77F6FCC3-FA68-477B-BBB0-40F8C4911955</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string></string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string>./scripts/run-extraction.sh</string>
				<key>type</key>
				<integer>8</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>65783839-9CCB-48D0-A740-1F7BF96926D1</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist='https://raw.githubusercontent.com/chrisgrieser/pdf-annotation-extractor-alfred/main/info.plist'
readonly workflow_url='chrisgrieser/pdf-annotation-extractor-alfred'
readonly download_type='github_release'
readonly frequency_check='1'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local -r notificator="$(find . -type f -name 'notificator')"

  if [[ -f "${notificator}" &amp;&amp; "$(/usr/bin/file --brief --mime-type "${notificator}")" == 'text/x-shellscript' ]]; then
    "${notificator}" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  # Remote sanity check
  if ! url_exists "${remote_info_plist}"; then
    abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."
  fi

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"
  rm "${tmp_file}"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  readonly download_url="$(
    if [[ "${download_type}" == 'github_release' ]]; then
      osascript -l JavaScript -e 'function run(argv) { return JSON.parse(argv[0])["assets"].find(asset =&gt; asset["browser_download_url"].endsWith(".alfredworkflow"))["browser_download_url"] }' "$(curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest")"
    else
      echo "${workflow_url}"
    fi
  )"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    readonly download_name="$(basename "${download_url}")"
    curl --silent --location --output "${HOME}/Downloads/${download_name}" "${download_url}"
    open "${HOME}/Downloads/${download_name}"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>0F49DAE6-6AB0-41CD-A791-496FD227B380</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<true/>
				<key>removeextension</key>
				<false/>
				<key>text</key>
				<string></string>
				<key>title</key>
				<string>{query}</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>0C315F47-D751-4D59-8DFA-2CFC7BF581A2</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>anchorfields</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>daterange</key>
				<integer>0</integer>
				<key>fields</key>
				<array>
					<dict>
						<key>field</key>
						<string>kMDItemDisplayName</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
					<dict>
						<key>field</key>
						<string>kMDItemAlternateNames</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
					<dict>
						<key>field</key>
						<string>kMDItemFinderComment</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
				</array>
				<key>includesystem</key>
				<false/>
				<key>keyword</key>
				<string>anno</string>
				<key>limit</key>
				<integer>0</integer>
				<key>runningsubtext</key>
				<string></string>
				<key>scopes</key>
				<array/>
				<key>sortmode</key>
				<integer>2</integer>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Extract Annotations from PDF</string>
				<key>types</key>
				<array>
					<string>com.adobe.pdf</string>
				</array>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.filefilter</string>
			<key>uid</key>
			<string>AADD9ECB-F4AB-488C-8C2C-B7736DD7B815</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>acceptsmulti</key>
				<integer>0</integer>
				<key>filetypes</key>
				<array>
					<string>com.adobe.pdf</string>
				</array>
				<key>name</key>
				<string>Extract PDF Annotations</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.action</string>
			<key>uid</key>
			<string>D512D46E-8C0B-49AB-808B-051BDA488A65</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string># using a webloc file that points to the readme reduces maintainance work of keeping
# the cheatsheet and the README both up to date.
qlmanage -p "./cheatsheet.webloc"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>5</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>3069BB02-5E48-40CF-9DD8-337C5FA9F054</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>acodes</string>
				<key>subtext</key>
				<string>for the PDF Annotation Extractor</string>
				<key>text</key>
				<string>Cheatsheet</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>CD293D43-2356-49DB-AD4F-DBA5FDE026C5</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string># PDF Annotation Extractor
Extract Annotations as Markdown, insert Pandoc Citations with correct page numbers, and more.

## Setup
- Install [Homebrew](https://brew.sh/).
- Install `pdfannots2json` by pasting the following into your terminal: `brew install mgmeyers/pdfannots2json/pdfannots2json`
- Set the hotkey by double-clicking the sky-blue field at the top left.

## Usage
- [Documentation](https://github.com/chrisgrieser/pdf-annotation-extractor-alfred/#usage)


---

## Cite this software project

If you want to mention this software project in an academic publication, please cite it as:

`Grieser, C. (2023). PDF Annotation Extractor [Computer software]. https://github.com/chrisgrieser/pdf-annotation-extractor-alfred`
  
For other citation styles, use the following metadata:
- [Citation File Format](https://github.com/chrisgrieser/pdf-annotation-extractor-alfred/blob/main/CITATION.cff)
- [BibTeX](https://github.com/chrisgrieser/pdf-annotation-extractor-alfred/blob/main/CITATION.bib)


## Created by
[Chris Grieser](https://chris-grieser.de/)</string>
	<key>uidata</key>
	<dict>
		<key>0C315F47-D751-4D59-8DFA-2CFC7BF581A2</key>
		<dict>
			<key>colorindex</key>
			<integer>9</integer>
			<key>xpos</key>
			<real>350</real>
			<key>ypos</key>
			<real>75</real>
		</dict>
		<key>0F49DAE6-6AB0-41CD-A791-496FD227B380</key>
		<dict>
			<key>colorindex</key>
			<integer>11</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<real>830</real>
			<key>ypos</key>
			<real>75</real>
		</dict>
		<key>3069BB02-5E48-40CF-9DD8-337C5FA9F054</key>
		<dict>
			<key>colorindex</key>
			<integer>3</integer>
			<key>xpos</key>
			<real>195</real>
			<key>ypos</key>
			<real>480</real>
		</dict>
		<key>65783839-9CCB-48D0-A740-1F7BF96926D1</key>
		<dict>
			<key>colorindex</key>
			<integer>9</integer>
			<key>note</key>
			<string>run extraction</string>
			<key>xpos</key>
			<real>205</real>
			<key>ypos</key>
			<real>75</real>
		</dict>
		<key>77F6FCC3-FA68-477B-BBB0-40F8C4911955</key>
		<dict>
			<key>colorindex</key>
			<integer>7</integer>
			<key>note</key>
			<string>DOUBLE CLICK THIS

to set the hotkey for the annotation extraction</string>
			<key>xpos</key>
			<real>30</real>
			<key>ypos</key>
			<real>20</real>
		</dict>
		<key>AADD9ECB-F4AB-488C-8C2C-B7736DD7B815</key>
		<dict>
			<key>colorindex</key>
			<integer>9</integer>
			<key>note</key>
			<string>select PDF for extraction</string>
			<key>xpos</key>
			<real>30</real>
			<key>ypos</key>
			<real>215</real>
		</dict>
		<key>CD293D43-2356-49DB-AD4F-DBA5FDE026C5</key>
		<dict>
			<key>colorindex</key>
			<integer>3</integer>
			<key>note</key>
			<string>cheatsheet</string>
			<key>xpos</key>
			<real>30</real>
			<key>ypos</key>
			<real>480</real>
		</dict>
		<key>D512D46E-8C0B-49AB-808B-051BDA488A65</key>
		<dict>
			<key>colorindex</key>
			<integer>9</integer>
			<key>xpos</key>
			<real>30</real>
			<key>ypos</key>
			<real>350</real>
		</dict>
	</dict>
	<key>userconfigurationconfig</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>filtermode</key>
				<integer>2</integer>
				<key>placeholder</key>
				<string></string>
				<key>required</key>
				<true/>
			</dict>
			<key>description</key>
			<string>The .bib file containing your library. A library file is required for automatic page number identification and for prepending a YAML header with bibliographic information.</string>
			<key>label</key>
			<string>BibTeX Library Path</string>
			<key>type</key>
			<string>filepicker</string>
			<key>variable</key>
			<string>bibtex_library_path</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>~/Documents</string>
				<key>filtermode</key>
				<integer>1</integer>
				<key>placeholder</key>
				<string>~/Documents</string>
				<key>required</key>
				<false/>
			</dict>
			<key>description</key>
			<string>If a citekey can be found in the library, this is the location where the extracted annotations are saved. If left empty or if extracting without citekey, the annotations are saved in the same folder as the PDF file. If the output folder is inside an Obsidian vault, will also open the file in Obsidian after extraction.</string>
			<key>label</key>
			<string>Output Path</string>
			<key>type</key>
			<string>filepicker</string>
			<key>variable</key>
			<string>output_path</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>pdfannots2json</string>
				<key>pairs</key>
				<array>
					<array>
						<string>pdfannots2json</string>
						<string>pdfannots2json</string>
					</array>
					<array>
						<string>pdfannots</string>
						<string>pdfannots</string>
					</array>
				</array>
			</dict>
			<key>description</key>
			<string>Advanced users only. Normally, this should stay "pdfannots2json". (`pdfannots` requries the respective pip package.)</string>
			<key>label</key>
			<string>Extraction Engine</string>
			<key>type</key>
			<string>popupbutton</string>
			<key>variable</key>
			<string>extraction_engine</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>filtermode</key>
				<integer>1</integer>
				<key>placeholder</key>
				<string>~/PDFs</string>
				<key>required</key>
				<false/>
			</dict>
			<key>description</key>
			<string>Only for Highlights.app users: The folder containing all PDFs. Required to be able to trigger extraction with Highlights being the frontmost app.</string>
			<key>label</key>
			<string>Highlights.app PDF Folder</string>
			<key>type</key>
			<string>filepicker</string>
			<key>variable</key>
			<string>pdf_folder</string>
		</dict>
	</array>
	<key>version</key>
	<string>9.2.0</string>
	<key>webaddress</key>
	<string>https://github.com/chrisgrieser/pdf-annotation-extractor-alfred</string>
</dict>
</plist>
