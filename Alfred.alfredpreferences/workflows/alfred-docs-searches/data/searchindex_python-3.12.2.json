{
  "indexentries": {
    "pyobject_del (c function)": [
      [
        3,
        "c.PyObject_Del"
      ]
    ],
    "pyobject_init (c function)": [
      [
        3,
        "c.PyObject_Init"
      ]
    ],
    "pyobject_initvar (c function)": [
      [
        3,
        "c.PyObject_InitVar"
      ]
    ],
    "pyobject_new (c macro)": [
      [
        3,
        "c.PyObject_New"
      ]
    ],
    "pyobject_newvar (c macro)": [
      [
        3,
        "c.PyObject_NewVar"
      ]
    ],
    "_pyobject_new (c function)": [
      [
        3,
        "c._PyObject_New"
      ]
    ],
    "_pyobject_newvar (c function)": [
      [
        3,
        "c._PyObject_NewVar"
      ]
    ],
    "_py_nonestruct (c var)": [
      [
        3,
        "c._Py_NoneStruct"
      ]
    ],
    "py_major_version (c macro)": [
      [
        4,
        "c.PY_MAJOR_VERSION"
      ]
    ],
    "py_micro_version (c macro)": [
      [
        4,
        "c.PY_MICRO_VERSION"
      ]
    ],
    "py_minor_version (c macro)": [
      [
        4,
        "c.PY_MINOR_VERSION"
      ]
    ],
    "py_release_level (c macro)": [
      [
        4,
        "c.PY_RELEASE_LEVEL"
      ]
    ],
    "py_release_serial (c macro)": [
      [
        4,
        "c.PY_RELEASE_SERIAL"
      ]
    ],
    "py_version_hex (c macro)": [
      [
        4,
        "c.PY_VERSION_HEX"
      ]
    ],
    "py_version (c var)": [
      [
        4,
        "c.Py_Version"
      ]
    ],
    "pyarg_parse (c function)": [
      [
        5,
        "c.PyArg_Parse"
      ]
    ],
    "pyarg_parsetuple (c function)": [
      [
        5,
        "c.PyArg_ParseTuple"
      ],
      [
        73,
        "index-2"
      ]
    ],
    "pyarg_parsetupleandkeywords (c function)": [
      [
        5,
        "c.PyArg_ParseTupleAndKeywords"
      ],
      [
        73,
        "index-3"
      ]
    ],
    "pyarg_unpacktuple (c function)": [
      [
        5,
        "c.PyArg_UnpackTuple"
      ]
    ],
    "pyarg_vaparse (c function)": [
      [
        5,
        "c.PyArg_VaParse"
      ]
    ],
    "pyarg_vaparsetupleandkeywords (c function)": [
      [
        5,
        "c.PyArg_VaParseTupleAndKeywords"
      ]
    ],
    "pyarg_validatekeywordarguments (c function)": [
      [
        5,
        "c.PyArg_ValidateKeywordArguments"
      ]
    ],
    "py_buildvalue (c function)": [
      [
        5,
        "c.Py_BuildValue"
      ]
    ],
    "py_vabuildvalue (c function)": [
      [
        5,
        "c.Py_VaBuildValue"
      ]
    ],
    "pybool_check (c function)": [
      [
        6,
        "c.PyBool_Check"
      ]
    ],
    "pybool_fromlong (c function)": [
      [
        6,
        "c.PyBool_FromLong"
      ]
    ],
    "pybool_type (c var)": [
      [
        6,
        "c.PyBool_Type"
      ]
    ],
    "py_false (c var)": [
      [
        6,
        "c.Py_False"
      ]
    ],
    "py_return_false (c macro)": [
      [
        6,
        "c.Py_RETURN_FALSE"
      ]
    ],
    "py_return_true (c macro)": [
      [
        6,
        "c.Py_RETURN_TRUE"
      ]
    ],
    "py_true (c var)": [
      [
        6,
        "c.Py_True"
      ]
    ],
    "(see buffer protocol)": [
      [
        7,
        "index-0"
      ]
    ],
    "c-contiguous": [
      [
        7,
        "index-2"
      ],
      [
        87,
        "index-10"
      ]
    ],
    "fortran contiguous": [
      [
        7,
        "index-2"
      ],
      [
        87,
        "index-10"
      ]
    ],
    "pybuf_any_contiguous (c macro)": [
      [
        7,
        "c.PyBUF_ANY_CONTIGUOUS"
      ]
    ],
    "pybuf_contig (c macro)": [
      [
        7,
        "c.PyBUF_CONTIG"
      ]
    ],
    "pybuf_contig_ro (c macro)": [
      [
        7,
        "c.PyBUF_CONTIG_RO"
      ]
    ],
    "pybuf_c_contiguous (c macro)": [
      [
        7,
        "c.PyBUF_C_CONTIGUOUS"
      ]
    ],
    "pybuf_format (c macro)": [
      [
        7,
        "c.PyBUF_FORMAT"
      ]
    ],
    "pybuf_full (c macro)": [
      [
        7,
        "c.PyBUF_FULL"
      ]
    ],
    "pybuf_full_ro (c macro)": [
      [
        7,
        "c.PyBUF_FULL_RO"
      ]
    ],
    "pybuf_f_contiguous (c macro)": [
      [
        7,
        "c.PyBUF_F_CONTIGUOUS"
      ]
    ],
    "pybuf_indirect (c macro)": [
      [
        7,
        "c.PyBUF_INDIRECT"
      ]
    ],
    "pybuf_max_ndim (c macro)": [
      [
        7,
        "c.PyBUF_MAX_NDIM"
      ]
    ],
    "pybuf_nd (c macro)": [
      [
        7,
        "c.PyBUF_ND"
      ]
    ],
    "pybuf_records (c macro)": [
      [
        7,
        "c.PyBUF_RECORDS"
      ]
    ],
    "pybuf_records_ro (c macro)": [
      [
        7,
        "c.PyBUF_RECORDS_RO"
      ]
    ],
    "pybuf_simple (c macro)": [
      [
        7,
        "c.PyBUF_SIMPLE"
      ]
    ],
    "pybuf_strided (c macro)": [
      [
        7,
        "c.PyBUF_STRIDED"
      ]
    ],
    "pybuf_strided_ro (c macro)": [
      [
        7,
        "c.PyBUF_STRIDED_RO"
      ]
    ],
    "pybuf_strides (c macro)": [
      [
        7,
        "c.PyBUF_STRIDES"
      ]
    ],
    "pybuf_writable (c macro)": [
      [
        7,
        "c.PyBUF_WRITABLE"
      ]
    ],
    "pybufferprocs (c type)": [
      [
        7,
        "index-1"
      ],
      [
        63,
        "c.PyBufferProcs"
      ]
    ],
    "pybuffer_fillcontiguousstrides (c function)": [
      [
        7,
        "c.PyBuffer_FillContiguousStrides"
      ]
    ],
    "pybuffer_fillinfo (c function)": [
      [
        7,
        "c.PyBuffer_FillInfo"
      ]
    ],
    "pybuffer_fromcontiguous (c function)": [
      [
        7,
        "c.PyBuffer_FromContiguous"
      ]
    ],
    "pybuffer_getpointer (c function)": [
      [
        7,
        "c.PyBuffer_GetPointer"
      ]
    ],
    "pybuffer_iscontiguous (c function)": [
      [
        7,
        "c.PyBuffer_IsContiguous"
      ]
    ],
    "pybuffer_release (c function)": [
      [
        7,
        "c.PyBuffer_Release"
      ]
    ],
    "pybuffer_sizefromformat (c function)": [
      [
        7,
        "c.PyBuffer_SizeFromFormat"
      ]
    ],
    "pybuffer_tocontiguous (c function)": [
      [
        7,
        "c.PyBuffer_ToContiguous"
      ]
    ],
    "pyobject_checkbuffer (c function)": [
      [
        7,
        "c.PyObject_CheckBuffer"
      ]
    ],
    "pyobject_copydata (c function)": [
      [
        7,
        "c.PyObject_CopyData"
      ]
    ],
    "pyobject_getbuffer (c function)": [
      [
        7,
        "c.PyObject_GetBuffer"
      ]
    ],
    "py_buffer (c type)": [
      [
        7,
        "c.Py_buffer"
      ]
    ],
    "py_buffer.buf (c member)": [
      [
        7,
        "c.Py_buffer.buf"
      ]
    ],
    "py_buffer.format (c member)": [
      [
        7,
        "c.Py_buffer.format"
      ]
    ],
    "py_buffer.internal (c member)": [
      [
        7,
        "c.Py_buffer.internal"
      ]
    ],
    "py_buffer.itemsize (c member)": [
      [
        7,
        "c.Py_buffer.itemsize"
      ]
    ],
    "py_buffer.len (c member)": [
      [
        7,
        "c.Py_buffer.len"
      ]
    ],
    "py_buffer.ndim (c member)": [
      [
        7,
        "c.Py_buffer.ndim"
      ]
    ],
    "py_buffer.obj (c member)": [
      [
        7,
        "c.Py_buffer.obj"
      ]
    ],
    "py_buffer.readonly (c member)": [
      [
        7,
        "c.Py_buffer.readonly"
      ]
    ],
    "py_buffer.shape (c member)": [
      [
        7,
        "c.Py_buffer.shape"
      ]
    ],
    "py_buffer.strides (c member)": [
      [
        7,
        "c.Py_buffer.strides"
      ]
    ],
    "py_buffer.suboffsets (c member)": [
      [
        7,
        "c.Py_buffer.suboffsets"
      ]
    ],
    "buffer interface": [
      [
        7,
        "index-0"
      ]
    ],
    "buffer object": [
      [
        7,
        "index-0"
      ]
    ],
    "buffer protocol": [
      [
        7,
        "index-0"
      ],
      [
        343,
        "index-31"
      ],
      [
        343,
        "index-39"
      ]
    ],
    "contiguous": [
      [
        7,
        "index-2"
      ],
      [
        87,
        "term-contiguous"
      ]
    ],
    "pybytearrayobject (c type)": [
      [
        8,
        "c.PyByteArrayObject"
      ]
    ],
    "pybytearray_as_string (c function)": [
      [
        8,
        "c.PyByteArray_AS_STRING"
      ]
    ],
    "pybytearray_asstring (c function)": [
      [
        8,
        "c.PyByteArray_AsString"
      ]
    ],
    "pybytearray_check (c function)": [
      [
        8,
        "c.PyByteArray_Check"
      ]
    ],
    "pybytearray_checkexact (c function)": [
      [
        8,
        "c.PyByteArray_CheckExact"
      ]
    ],
    "pybytearray_concat (c function)": [
      [
        8,
        "c.PyByteArray_Concat"
      ]
    ],
    "pybytearray_fromobject (c function)": [
      [
        8,
        "c.PyByteArray_FromObject"
      ]
    ],
    "pybytearray_fromstringandsize (c function)": [
      [
        8,
        "c.PyByteArray_FromStringAndSize"
      ]
    ],
    "pybytearray_get_size (c function)": [
      [
        8,
        "c.PyByteArray_GET_SIZE"
      ]
    ],
    "pybytearray_resize (c function)": [
      [
        8,
        "c.PyByteArray_Resize"
      ]
    ],
    "pybytearray_size (c function)": [
      [
        8,
        "c.PyByteArray_Size"
      ]
    ],
    "pybytearray_type (c var)": [
      [
        8,
        "c.PyByteArray_Type"
      ]
    ],
    "bytearray": [
      [
        8,
        "index-0"
      ],
      [
        343,
        "index-23"
      ],
      [
        343,
        "index-40"
      ],
      [
        343,
        "index-42"
      ],
      [
        343,
        "index-43"
      ],
      [
        343,
        "index-45"
      ],
      [
        427,
        "index-26"
      ]
    ],
    "object": [
      [
        8,
        "index-0"
      ],
      [
        9,
        "index-0"
      ],
      [
        11,
        "index-0"
      ],
      [
        13,
        "index-0"
      ],
      [
        15,
        "index-0"
      ],
      [
        16,
        "index-0"
      ],
      [
        16,
        "index-1"
      ],
      [
        16,
        "index-2"
      ],
      [
        22,
        "index-0"
      ],
      [
        24,
        "index-0"
      ],
      [
        25,
        "index-0"
      ],
      [
        27,
        "index-0"
      ],
      [
        35,
        "index-3"
      ],
      [
        38,
        "index-0"
      ],
      [
        39,
        "index-0"
      ],
      [
        43,
        "index-0"
      ],
      [
        44,
        "index-0"
      ],
      [
        44,
        "index-1"
      ],
      [
        45,
        "index-0"
      ],
      [
        46,
        "index-0"
      ],
      [
        55,
        "index-0"
      ],
      [
        60,
        "index-0"
      ],
      [
        61,
        "index-0"
      ],
      [
        75,
        "index-0"
      ],
      [
        87,
        "term-object"
      ],
      [
        224,
        "index-12"
      ],
      [
        273,
        "index-1"
      ],
      [
        336,
        "index-0"
      ],
      [
        343,
        "index-11"
      ],
      [
        343,
        "index-19"
      ],
      [
        343,
        "index-22"
      ],
      [
        343,
        "index-23"
      ],
      [
        343,
        "index-25"
      ],
      [
        343,
        "index-26"
      ],
      [
        343,
        "index-27"
      ],
      [
        343,
        "index-28"
      ],
      [
        343,
        "index-29"
      ],
      [
        343,
        "index-40"
      ],
      [
        343,
        "index-41"
      ],
      [
        343,
        "index-42"
      ],
      [
        343,
        "index-51"
      ],
      [
        343,
        "index-52"
      ],
      [
        343,
        "index-56"
      ],
      [
        343,
        "index-59"
      ],
      [
        343,
        "index-61"
      ],
      [
        343,
        "index-62"
      ],
      [
        343,
        "index-8"
      ],
      [
        351,
        "index-8"
      ],
      [
        380,
        "index-0"
      ],
      [
        426,
        "index-11"
      ],
      [
        426,
        "index-28"
      ],
      [
        426,
        "index-42"
      ],
      [
        426,
        "index-6"
      ],
      [
        427,
        "index-0"
      ],
      [
        427,
        "index-10"
      ],
      [
        427,
        "index-12"
      ],
      [
        427,
        "index-13"
      ],
      [
        427,
        "index-14"
      ],
      [
        427,
        "index-15"
      ],
      [
        427,
        "index-17"
      ],
      [
        427,
        "index-20"
      ],
      [
        427,
        "index-22"
      ],
      [
        427,
        "index-25"
      ],
      [
        427,
        "index-27"
      ],
      [
        427,
        "index-28"
      ],
      [
        427,
        "index-29"
      ],
      [
        427,
        "index-30"
      ],
      [
        427,
        "index-31"
      ],
      [
        427,
        "index-33"
      ],
      [
        427,
        "index-34"
      ],
      [
        427,
        "index-37"
      ],
      [
        427,
        "index-42"
      ],
      [
        427,
        "index-43"
      ],
      [
        427,
        "index-44"
      ],
      [
        427,
        "index-47"
      ],
      [
        427,
        "index-51"
      ],
      [
        427,
        "index-53"
      ],
      [
        427,
        "index-57"
      ],
      [
        427,
        "index-59"
      ],
      [
        427,
        "index-6"
      ],
      [
        427,
        "index-63"
      ],
      [
        427,
        "index-66"
      ],
      [
        427,
        "index-7"
      ],
      [
        427,
        "index-8"
      ],
      [
        427,
        "index-80"
      ],
      [
        427,
        "index-9"
      ],
      [
        427,
        "index-99"
      ],
      [
        429,
        "index-15"
      ],
      [
        429,
        "index-16"
      ],
      [
        429,
        "index-17"
      ],
      [
        429,
        "index-20"
      ],
      [
        429,
        "index-22"
      ],
      [
        429,
        "index-31"
      ],
      [
        429,
        "index-35"
      ],
      [
        429,
        "index-40"
      ],
      [
        429,
        "index-42"
      ],
      [
        429,
        "index-45"
      ],
      [
        429,
        "index-47"
      ],
      [
        429,
        "index-52"
      ],
      [
        429,
        "index-53"
      ],
      [
        429,
        "index-54"
      ],
      [
        429,
        "index-55"
      ],
      [
        429,
        "index-7"
      ],
      [
        429,
        "index-80"
      ],
      [
        429,
        "index-92"
      ],
      [
        435,
        "index-10"
      ],
      [
        435,
        "index-11"
      ],
      [
        435,
        "index-28"
      ],
      [
        435,
        "index-3"
      ],
      [
        435,
        "index-4"
      ],
      [
        435,
        "index-9"
      ],
      [
        439,
        "index-0"
      ],
      [
        445,
        "index-0"
      ]
    ],
    "pybytesobject (c type)": [
      [
        9,
        "c.PyBytesObject"
      ]
    ],
    "pybytes_as_string (c function)": [
      [
        9,
        "c.PyBytes_AS_STRING"
      ]
    ],
    "pybytes_asstring (c function)": [
      [
        9,
        "c.PyBytes_AsString"
      ]
    ],
    "pybytes_asstringandsize (c function)": [
      [
        9,
        "c.PyBytes_AsStringAndSize"
      ]
    ],
    "pybytes_check (c function)": [
      [
        9,
        "c.PyBytes_Check"
      ]
    ],
    "pybytes_checkexact (c function)": [
      [
        9,
        "c.PyBytes_CheckExact"
      ]
    ],
    "pybytes_concat (c function)": [
      [
        9,
        "c.PyBytes_Concat"
      ]
    ],
    "pybytes_concatanddel (c function)": [
      [
        9,
        "c.PyBytes_ConcatAndDel"
      ]
    ],
    "pybytes_fromformat (c function)": [
      [
        9,
        "c.PyBytes_FromFormat"
      ]
    ],
    "pybytes_fromformatv (c function)": [
      [
        9,
        "c.PyBytes_FromFormatV"
      ]
    ],
    "pybytes_fromobject (c function)": [
      [
        9,
        "c.PyBytes_FromObject"
      ]
    ],
    "pybytes_fromstring (c function)": [
      [
        9,
        "c.PyBytes_FromString"
      ]
    ],
    "pybytes_fromstringandsize (c function)": [
      [
        9,
        "c.PyBytes_FromStringAndSize"
      ]
    ],
    "pybytes_get_size (c function)": [
      [
        9,
        "c.PyBytes_GET_SIZE"
      ]
    ],
    "pybytes_size (c function)": [
      [
        9,
        "c.PyBytes_Size"
      ]
    ],
    "pybytes_type (c var)": [
      [
        9,
        "c.PyBytes_Type"
      ]
    ],
    "_pybytes_resize (c function)": [
      [
        9,
        "c._PyBytes_Resize"
      ]
    ],
    "bytes": [
      [
        9,
        "index-0"
      ],
      [
        49,
        "index-3"
      ],
      [
        343,
        "index-31"
      ],
      [
        343,
        "index-40"
      ],
      [
        343,
        "index-41"
      ],
      [
        343,
        "index-43"
      ],
      [
        343,
        "index-45"
      ],
      [
        427,
        "index-21"
      ],
      [
        427,
        "index-77"
      ]
    ],
    "pep 590": [
      [
        10,
        "index-0"
      ],
      [
        471,
        "index-34"
      ],
      [
        472,
        "index-37"
      ],
      [
        480,
        "index-7"
      ],
      [
        481,
        "index-18"
      ],
      [
        481,
        "index-8"
      ],
      [
        482,
        "index-103"
      ],
      [
        482,
        "index-104"
      ],
      [
        482,
        "index-137"
      ],
      [
        482,
        "index-138"
      ],
      [
        482,
        "index-164"
      ],
      [
        482,
        "index-171"
      ],
      [
        482,
        "index-180"
      ],
      [
        482,
        "index-181"
      ],
      [
        482,
        "index-183"
      ],
      [
        482,
        "index-210"
      ],
      [
        482,
        "index-36"
      ],
      [
        482,
        "index-67"
      ],
      [
        482,
        "index-77"
      ],
      [
        482,
        "index-83"
      ],
      [
        482,
        "index-88"
      ]
    ],
    "py_vectorcall_arguments_offset (c macro)": [
      [
        10,
        "c.PY_VECTORCALL_ARGUMENTS_OFFSET"
      ]
    ],
    "pycallable_check (c function)": [
      [
        10,
        "c.PyCallable_Check"
      ]
    ],
    "pyobject_call (c function)": [
      [
        10,
        "c.PyObject_Call"
      ]
    ],
    "pyobject_callfunction (c function)": [
      [
        10,
        "c.PyObject_CallFunction"
      ]
    ],
    "pyobject_callfunctionobjargs (c function)": [
      [
        10,
        "c.PyObject_CallFunctionObjArgs"
      ]
    ],
    "pyobject_callmethod (c function)": [
      [
        10,
        "c.PyObject_CallMethod"
      ]
    ],
    "pyobject_callmethodnoargs (c function)": [
      [
        10,
        "c.PyObject_CallMethodNoArgs"
      ]
    ],
    "pyobject_callmethodobjargs (c function)": [
      [
        10,
        "c.PyObject_CallMethodObjArgs"
      ]
    ],
    "pyobject_callmethodonearg (c function)": [
      [
        10,
        "c.PyObject_CallMethodOneArg"
      ]
    ],
    "pyobject_callnoargs (c function)": [
      [
        10,
        "c.PyObject_CallNoArgs"
      ]
    ],
    "pyobject_callobject (c function)": [
      [
        10,
        "c.PyObject_CallObject"
      ],
      [
        73,
        "index-1"
      ]
    ],
    "pyobject_callonearg (c function)": [
      [
        10,
        "c.PyObject_CallOneArg"
      ]
    ],
    "pyobject_vectorcall (c function)": [
      [
        10,
        "c.PyObject_Vectorcall"
      ]
    ],
    "pyobject_vectorcalldict (c function)": [
      [
        10,
        "c.PyObject_VectorcallDict"
      ]
    ],
    "pyobject_vectorcallmethod (c function)": [
      [
        10,
        "c.PyObject_VectorcallMethod"
      ]
    ],
    "pyvectorcall_call (c function)": [
      [
        10,
        "c.PyVectorcall_Call"
      ]
    ],
    "pyvectorcall_function (c function)": [
      [
        10,
        "c.PyVectorcall_Function"
      ]
    ],
    "pyvectorcall_nargs (c function)": [
      [
        10,
        "c.PyVectorcall_NARGS"
      ]
    ],
    "python enhancement proposals": [
      [
        10,
        "index-0"
      ],
      [
        23,
        "index-5"
      ],
      [
        26,
        "index-0"
      ],
      [
        30,
        "index-0"
      ],
      [
        31,
        "index-3"
      ],
      [
        33,
        "index-10"
      ],
      [
        33,
        "index-39"
      ],
      [
        33,
        "index-40"
      ],
      [
        33,
        "index-41"
      ],
      [
        33,
        "index-47"
      ],
      [
        33,
        "index-48"
      ],
      [
        33,
        "index-8"
      ],
      [
        34,
        "index-0"
      ],
      [
        34,
        "index-17"
      ],
      [
        34,
        "index-33"
      ],
      [
        34,
        "index-34"
      ],
      [
        34,
        "index-37"
      ],
      [
        34,
        "index-38"
      ],
      [
        34,
        "index-7"
      ],
      [
        35,
        "index-0"
      ],
      [
        35,
        "index-1"
      ],
      [
        35,
        "index-10"
      ],
      [
        35,
        "index-2"
      ],
      [
        45,
        "index-6"
      ],
      [
        45,
        "index-7"
      ],
      [
        45,
        "index-8"
      ],
      [
        49,
        "index-4"
      ],
      [
        49,
        "index-5"
      ],
      [
        57,
        "index-0"
      ],
      [
        59,
        "index-1"
      ],
      [
        63,
        "index-3"
      ],
      [
        63,
        "index-4"
      ],
      [
        63,
        "index-5"
      ],
      [
        64,
        "index-0"
      ],
      [
        64,
        "index-1"
      ],
      [
        64,
        "index-2"
      ],
      [
        64,
        "index-3"
      ],
      [
        64,
        "index-4"
      ],
      [
        64,
        "index-5"
      ],
      [
        66,
        "index-3"
      ],
      [
        68,
        "index-23"
      ],
      [
        71,
        "index-1"
      ],
      [
        73,
        "index-0"
      ],
      [
        75,
        "index-2"
      ],
      [
        78,
        "index-0"
      ],
      [
        80,
        "index-0"
      ],
      [
        80,
        "index-1"
      ],
      [
        80,
        "index-2"
      ],
      [
        85,
        "index-0"
      ],
      [
        85,
        "index-2"
      ],
      [
        85,
        "index-3"
      ],
      [
        86,
        "index-0"
      ],
      [
        87,
        "index-0"
      ],
      [
        87,
        "index-1"
      ],
      [
        87,
        "index-11"
      ],
      [
        87,
        "index-12"
      ],
      [
        87,
        "index-13"
      ],
      [
        87,
        "index-14"
      ],
      [
        87,
        "index-15"
      ],
      [
        87,
        "index-16"
      ],
      [
        87,
        "index-17"
      ],
      [
        87,
        "index-18"
      ],
      [
        87,
        "index-2"
      ],
      [
        87,
        "index-21"
      ],
      [
        87,
        "index-22"
      ],
      [
        87,
        "index-23"
      ],
      [
        87,
        "index-24"
      ],
      [
        87,
        "index-25"
      ],
      [
        87,
        "index-27"
      ],
      [
        87,
        "index-28"
      ],
      [
        87,
        "index-29"
      ],
      [
        87,
        "index-3"
      ],
      [
        87,
        "index-30"
      ],
      [
        87,
        "index-31"
      ],
      [
        87,
        "index-32"
      ],
      [
        87,
        "index-33"
      ],
      [
        87,
        "index-35"
      ],
      [
        87,
        "index-36"
      ],
      [
        87,
        "index-37"
      ],
      [
        87,
        "index-38"
      ],
      [
        87,
        "index-39"
      ],
      [
        87,
        "index-4"
      ],
      [
        87,
        "index-40"
      ],
      [
        87,
        "index-5"
      ],
      [
        87,
        "index-6"
      ],
      [
        87,
        "index-7"
      ],
      [
        87,
        "index-8"
      ],
      [
        87,
        "index-9"
      ],
      [
        88,
        "index-0"
      ],
      [
        95,
        "index-0"
      ],
      [
        95,
        "index-1"
      ],
      [
        95,
        "index-2"
      ],
      [
        104,
        "index-0"
      ],
      [
        107,
        "index-0"
      ],
      [
        108,
        "index-0"
      ],
      [
        111,
        "index-0"
      ],
      [
        111,
        "index-1"
      ],
      [
        112,
        "index-0"
      ],
      [
        112,
        "index-1"
      ],
      [
        112,
        "index-10"
      ],
      [
        112,
        "index-11"
      ],
      [
        112,
        "index-2"
      ],
      [
        112,
        "index-3"
      ],
      [
        112,
        "index-4"
      ],
      [
        112,
        "index-5"
      ],
      [
        112,
        "index-6"
      ],
      [
        112,
        "index-7"
      ],
      [
        112,
        "index-8"
      ],
      [
        112,
        "index-9"
      ],
      [
        115,
        "index-0"
      ],
      [
        115,
        "index-1"
      ],
      [
        116,
        "index-1"
      ],
      [
        121,
        "index-2"
      ],
      [
        121,
        "index-3"
      ],
      [
        121,
        "index-4"
      ],
      [
        121,
        "index-5"
      ],
      [
        121,
        "index-6"
      ],
      [
        121,
        "index-7"
      ],
      [
        125,
        "index-0"
      ],
      [
        125,
        "index-1"
      ],
      [
        125,
        "index-2"
      ],
      [
        128,
        "index-0"
      ],
      [
        140,
        "index-0"
      ],
      [
        141,
        "index-1"
      ],
      [
        150,
        "index-1"
      ],
      [
        151,
        "index-1"
      ],
      [
        152,
        "index-1"
      ],
      [
        153,
        "index-0"
      ],
      [
        157,
        "index-2"
      ],
      [
        157,
        "index-5"
      ],
      [
        159,
        "index-0"
      ],
      [
        159,
        "index-1"
      ],
      [
        159,
        "index-2"
      ],
      [
        159,
        "index-3"
      ],
      [
        160,
        "index-0"
      ],
      [
        160,
        "index-1"
      ],
      [
        160,
        "index-2"
      ],
      [
        160,
        "index-3"
      ],
      [
        160,
        "index-4"
      ],
      [
        160,
        "index-5"
      ],
      [
        162,
        "index-0"
      ],
      [
        162,
        "index-2"
      ],
      [
        162,
        "index-3"
      ],
      [
        165,
        "index-0"
      ],
      [
        168,
        "index-0"
      ],
      [
        169,
        "index-0"
      ],
      [
        172,
        "index-1"
      ],
      [
        174,
        "index-2"
      ],
      [
        180,
        "index-0"
      ],
      [
        180,
        "index-1"
      ],
      [
        180,
        "index-2"
      ],
      [
        190,
        "index-0"
      ],
      [
        209,
        "index-0"
      ],
      [
        212,
        "index-10"
      ],
      [
        212,
        "index-11"
      ],
      [
        212,
        "index-12"
      ],
      [
        212,
        "index-3"
      ],
      [
        212,
        "index-6"
      ],
      [
        212,
        "index-7"
      ],
      [
        212,
        "index-8"
      ],
      [
        212,
        "index-9"
      ],
      [
        220,
        "index-0"
      ],
      [
        224,
        "index-10"
      ],
      [
        224,
        "index-14"
      ],
      [
        224,
        "index-15"
      ],
      [
        224,
        "index-9"
      ],
      [
        225,
        "index-0"
      ],
      [
        226,
        "index-0"
      ],
      [
        246,
        "index-7"
      ],
      [
        248,
        "index-0"
      ],
      [
        249,
        "index-0"
      ],
      [
        249,
        "index-1"
      ],
      [
        249,
        "index-10"
      ],
      [
        249,
        "index-11"
      ],
      [
        249,
        "index-12"
      ],
      [
        249,
        "index-13"
      ],
      [
        249,
        "index-14"
      ],
      [
        249,
        "index-16"
      ],
      [
        249,
        "index-17"
      ],
      [
        249,
        "index-18"
      ],
      [
        249,
        "index-19"
      ],
      [
        249,
        "index-2"
      ],
      [
        249,
        "index-20"
      ],
      [
        249,
        "index-21"
      ],
      [
        249,
        "index-22"
      ],
      [
        249,
        "index-23"
      ],
      [
        249,
        "index-24"
      ],
      [
        249,
        "index-25"
      ],
      [
        249,
        "index-26"
      ],
      [
        249,
        "index-3"
      ],
      [
        249,
        "index-4"
      ],
      [
        249,
        "index-5"
      ],
      [
        249,
        "index-6"
      ],
      [
        249,
        "index-7"
      ],
      [
        249,
        "index-8"
      ],
      [
        249,
        "index-9"
      ],
      [
        250,
        "index-0"
      ],
      [
        254,
        "index-0"
      ],
      [
        254,
        "index-1"
      ],
      [
        254,
        "index-2"
      ],
      [
        254,
        "index-3"
      ],
      [
        257,
        "index-1"
      ],
      [
        257,
        "index-2"
      ],
      [
        264,
        "index-1"
      ],
      [
        265,
        "index-6"
      ],
      [
        265,
        "index-7"
      ],
      [
        266,
        "index-1"
      ],
      [
        271,
        "index-0"
      ],
      [
        274,
        "index-0"
      ],
      [
        280,
        "index-1"
      ],
      [
        286,
        "index-0"
      ],
      [
        287,
        "index-1"
      ],
      [
        288,
        "index-0"
      ],
      [
        292,
        "index-0"
      ],
      [
        292,
        "index-22"
      ],
      [
        292,
        "index-24"
      ],
      [
        292,
        "index-25"
      ],
      [
        292,
        "index-27"
      ],
      [
        292,
        "index-44"
      ],
      [
        292,
        "index-5"
      ],
      [
        292,
        "index-53"
      ],
      [
        292,
        "index-6"
      ],
      [
        292,
        "index-7"
      ],
      [
        294,
        "index-0"
      ],
      [
        295,
        "index-1"
      ],
      [
        298,
        "index-2"
      ],
      [
        298,
        "index-3"
      ],
      [
        298,
        "index-4"
      ],
      [
        298,
        "index-8"
      ],
      [
        300,
        "index-0"
      ],
      [
        301,
        "index-0"
      ],
      [
        301,
        "index-1"
      ],
      [
        301,
        "index-2"
      ],
      [
        301,
        "index-3"
      ],
      [
        301,
        "index-4"
      ],
      [
        301,
        "index-5"
      ],
      [
        301,
        "index-6"
      ],
      [
        301,
        "index-7"
      ],
      [
        310,
        "index-1"
      ],
      [
        310,
        "index-2"
      ],
      [
        310,
        "index-4"
      ],
      [
        310,
        "index-5"
      ],
      [
        321,
        "index-0"
      ],
      [
        323,
        "index-1"
      ],
      [
        323,
        "index-2"
      ],
      [
        323,
        "index-3"
      ],
      [
        323,
        "index-5"
      ],
      [
        323,
        "index-6"
      ],
      [
        323,
        "index-7"
      ],
      [
        323,
        "index-8"
      ],
      [
        325,
        "index-0"
      ],
      [
        327,
        "index-0"
      ],
      [
        327,
        "index-3"
      ],
      [
        327,
        "index-4"
      ],
      [
        327,
        "index-5"
      ],
      [
        327,
        "index-6"
      ],
      [
        327,
        "index-7"
      ],
      [
        328,
        "index-0"
      ],
      [
        331,
        "index-2"
      ],
      [
        332,
        "index-0"
      ],
      [
        332,
        "index-1"
      ],
      [
        333,
        "index-9"
      ],
      [
        335,
        "index-1"
      ],
      [
        336,
        "index-1"
      ],
      [
        336,
        "index-10"
      ],
      [
        336,
        "index-11"
      ],
      [
        336,
        "index-12"
      ],
      [
        336,
        "index-13"
      ],
      [
        336,
        "index-2"
      ],
      [
        336,
        "index-4"
      ],
      [
        336,
        "index-5"
      ],
      [
        336,
        "index-7"
      ],
      [
        336,
        "index-8"
      ],
      [
        336,
        "index-9"
      ],
      [
        338,
        "index-0"
      ],
      [
        339,
        "index-0"
      ],
      [
        339,
        "index-1"
      ],
      [
        339,
        "index-10"
      ],
      [
        339,
        "index-11"
      ],
      [
        339,
        "index-12"
      ],
      [
        339,
        "index-2"
      ],
      [
        339,
        "index-3"
      ],
      [
        339,
        "index-4"
      ],
      [
        339,
        "index-5"
      ],
      [
        339,
        "index-8"
      ],
      [
        339,
        "index-9"
      ],
      [
        340,
        "index-2"
      ],
      [
        343,
        "index-38"
      ],
      [
        343,
        "index-48"
      ],
      [
        343,
        "index-49"
      ],
      [
        343,
        "index-50"
      ],
      [
        343,
        "index-57"
      ],
      [
        343,
        "index-58"
      ],
      [
        343,
        "index-60"
      ],
      [
        344,
        "index-0"
      ],
      [
        344,
        "index-1"
      ],
      [
        344,
        "index-11"
      ],
      [
        344,
        "index-12"
      ],
      [
        344,
        "index-6"
      ],
      [
        344,
        "index-9"
      ],
      [
        347,
        "index-0"
      ],
      [
        348,
        "index-0"
      ],
      [
        351,
        "index-0"
      ],
      [
        351,
        "index-1"
      ],
      [
        351,
        "index-12"
      ],
      [
        351,
        "index-13"
      ],
      [
        351,
        "index-14"
      ],
      [
        351,
        "index-15"
      ],
      [
        351,
        "index-16"
      ],
      [
        351,
        "index-19"
      ],
      [
        351,
        "index-20"
      ],
      [
        351,
        "index-25"
      ],
      [
        351,
        "index-26"
      ],
      [
        351,
        "index-30"
      ],
      [
        351,
        "index-31"
      ],
      [
        351,
        "index-32"
      ],
      [
        351,
        "index-34"
      ],
      [
        351,
        "index-9"
      ],
      [
        352,
        "index-0"
      ],
      [
        357,
        "index-0"
      ],
      [
        358,
        "index-1"
      ],
      [
        361,
        "index-3"
      ],
      [
        361,
        "index-4"
      ],
      [
        365,
        "index-8"
      ],
      [
        377,
        "index-0"
      ],
      [
        377,
        "index-1"
      ],
      [
        384,
        "index-0"
      ],
      [
        384,
        "index-1"
      ],
      [
        384,
        "index-2"
      ],
      [
        384,
        "index-3"
      ],
      [
        384,
        "index-5"
      ],
      [
        384,
        "index-6"
      ],
      [
        385,
        "index-0"
      ],
      [
        385,
        "index-1"
      ],
      [
        385,
        "index-10"
      ],
      [
        385,
        "index-100"
      ],
      [
        385,
        "index-11"
      ],
      [
        385,
        "index-12"
      ],
      [
        385,
        "index-13"
      ],
      [
        385,
        "index-14"
      ],
      [
        385,
        "index-15"
      ],
      [
        385,
        "index-16"
      ],
      [
        385,
        "index-17"
      ],
      [
        385,
        "index-18"
      ],
      [
        385,
        "index-19"
      ],
      [
        385,
        "index-2"
      ],
      [
        385,
        "index-20"
      ],
      [
        385,
        "index-21"
      ],
      [
        385,
        "index-22"
      ],
      [
        385,
        "index-23"
      ],
      [
        385,
        "index-24"
      ],
      [
        385,
        "index-25"
      ],
      [
        385,
        "index-26"
      ],
      [
        385,
        "index-27"
      ],
      [
        385,
        "index-28"
      ],
      [
        385,
        "index-29"
      ],
      [
        385,
        "index-3"
      ],
      [
        385,
        "index-30"
      ],
      [
        385,
        "index-31"
      ],
      [
        385,
        "index-32"
      ],
      [
        385,
        "index-33"
      ],
      [
        385,
        "index-34"
      ],
      [
        385,
        "index-35"
      ],
      [
        385,
        "index-36"
      ],
      [
        385,
        "index-37"
      ],
      [
        385,
        "index-38"
      ],
      [
        385,
        "index-39"
      ],
      [
        385,
        "index-4"
      ],
      [
        385,
        "index-40"
      ],
      [
        385,
        "index-41"
      ],
      [
        385,
        "index-42"
      ],
      [
        385,
        "index-43"
      ],
      [
        385,
        "index-44"
      ],
      [
        385,
        "index-45"
      ],
      [
        385,
        "index-46"
      ],
      [
        385,
        "index-47"
      ],
      [
        385,
        "index-48"
      ],
      [
        385,
        "index-49"
      ],
      [
        385,
        "index-5"
      ],
      [
        385,
        "index-50"
      ],
      [
        385,
        "index-51"
      ],
      [
        385,
        "index-52"
      ],
      [
        385,
        "index-53"
      ],
      [
        385,
        "index-54"
      ],
      [
        385,
        "index-55"
      ],
      [
        385,
        "index-56"
      ],
      [
        385,
        "index-57"
      ],
      [
        385,
        "index-58"
      ],
      [
        385,
        "index-59"
      ],
      [
        385,
        "index-6"
      ],
      [
        385,
        "index-60"
      ],
      [
        385,
        "index-61"
      ],
      [
        385,
        "index-62"
      ],
      [
        385,
        "index-63"
      ],
      [
        385,
        "index-64"
      ],
      [
        385,
        "index-65"
      ],
      [
        385,
        "index-66"
      ],
      [
        385,
        "index-67"
      ],
      [
        385,
        "index-68"
      ],
      [
        385,
        "index-69"
      ],
      [
        385,
        "index-7"
      ],
      [
        385,
        "index-70"
      ],
      [
        385,
        "index-71"
      ],
      [
        385,
        "index-72"
      ],
      [
        385,
        "index-73"
      ],
      [
        385,
        "index-74"
      ],
      [
        385,
        "index-75"
      ],
      [
        385,
        "index-76"
      ],
      [
        385,
        "index-77"
      ],
      [
        385,
        "index-78"
      ],
      [
        385,
        "index-79"
      ],
      [
        385,
        "index-8"
      ],
      [
        385,
        "index-80"
      ],
      [
        385,
        "index-81"
      ],
      [
        385,
        "index-82"
      ],
      [
        385,
        "index-83"
      ],
      [
        385,
        "index-84"
      ],
      [
        385,
        "index-85"
      ],
      [
        385,
        "index-86"
      ],
      [
        385,
        "index-87"
      ],
      [
        385,
        "index-88"
      ],
      [
        385,
        "index-89"
      ],
      [
        385,
        "index-9"
      ],
      [
        385,
        "index-90"
      ],
      [
        385,
        "index-91"
      ],
      [
        385,
        "index-92"
      ],
      [
        385,
        "index-93"
      ],
      [
        385,
        "index-94"
      ],
      [
        385,
        "index-95"
      ],
      [
        385,
        "index-96"
      ],
      [
        385,
        "index-97"
      ],
      [
        385,
        "index-98"
      ],
      [
        385,
        "index-99"
      ],
      [
        396,
        "index-0"
      ],
      [
        398,
        "index-1"
      ],
      [
        401,
        "index-0"
      ],
      [
        401,
        "index-1"
      ],
      [
        401,
        "index-2"
      ],
      [
        406,
        "index-0"
      ],
      [
        406,
        "index-1"
      ],
      [
        406,
        "index-11"
      ],
      [
        406,
        "index-12"
      ],
      [
        406,
        "index-13"
      ],
      [
        406,
        "index-14"
      ],
      [
        406,
        "index-15"
      ],
      [
        406,
        "index-16"
      ],
      [
        406,
        "index-17"
      ],
      [
        406,
        "index-18"
      ],
      [
        406,
        "index-2"
      ],
      [
        406,
        "index-3"
      ],
      [
        406,
        "index-4"
      ],
      [
        406,
        "index-6"
      ],
      [
        406,
        "index-7"
      ],
      [
        406,
        "index-8"
      ],
      [
        406,
        "index-9"
      ],
      [
        407,
        "index-1"
      ],
      [
        422,
        "index-0"
      ],
      [
        422,
        "index-1"
      ],
      [
        422,
        "index-2"
      ],
      [
        424,
        "index-0"
      ],
      [
        424,
        "index-1"
      ],
      [
        426,
        "index-17"
      ],
      [
        426,
        "index-19"
      ],
      [
        426,
        "index-20"
      ],
      [
        426,
        "index-24"
      ],
      [
        426,
        "index-25"
      ],
      [
        426,
        "index-26"
      ],
      [
        426,
        "index-30"
      ],
      [
        426,
        "index-33"
      ],
      [
        426,
        "index-36"
      ],
      [
        426,
        "index-37"
      ],
      [
        426,
        "index-38"
      ],
      [
        426,
        "index-39"
      ],
      [
        426,
        "index-40"
      ],
      [
        426,
        "index-41"
      ],
      [
        426,
        "index-44"
      ],
      [
        426,
        "index-45"
      ],
      [
        426,
        "index-46"
      ],
      [
        426,
        "index-47"
      ],
      [
        426,
        "index-52"
      ],
      [
        427,
        "index-107"
      ],
      [
        427,
        "index-108"
      ],
      [
        427,
        "index-109"
      ],
      [
        427,
        "index-111"
      ],
      [
        427,
        "index-62"
      ],
      [
        427,
        "index-84"
      ],
      [
        427,
        "index-85"
      ],
      [
        427,
        "index-87"
      ],
      [
        427,
        "index-90"
      ],
      [
        427,
        "index-93"
      ],
      [
        427,
        "index-94"
      ],
      [
        427,
        "index-95"
      ],
      [
        427,
        "index-96"
      ],
      [
        428,
        "index-11"
      ],
      [
        428,
        "index-12"
      ],
      [
        429,
        "index-14"
      ],
      [
        429,
        "index-19"
      ],
      [
        429,
        "index-21"
      ],
      [
        429,
        "index-26"
      ],
      [
        429,
        "index-27"
      ],
      [
        429,
        "index-28"
      ],
      [
        429,
        "index-29"
      ],
      [
        429,
        "index-30"
      ],
      [
        429,
        "index-51"
      ],
      [
        429,
        "index-79"
      ],
      [
        429,
        "index-87"
      ],
      [
        429,
        "index-89"
      ],
      [
        429,
        "index-94"
      ],
      [
        430,
        "index-0"
      ],
      [
        431,
        "index-1"
      ],
      [
        431,
        "index-11"
      ],
      [
        431,
        "index-12"
      ],
      [
        431,
        "index-13"
      ],
      [
        431,
        "index-14"
      ],
      [
        431,
        "index-15"
      ],
      [
        431,
        "index-19"
      ],
      [
        431,
        "index-2"
      ],
      [
        431,
        "index-20"
      ],
      [
        431,
        "index-21"
      ],
      [
        431,
        "index-22"
      ],
      [
        431,
        "index-23"
      ],
      [
        431,
        "index-24"
      ],
      [
        431,
        "index-25"
      ],
      [
        431,
        "index-26"
      ],
      [
        431,
        "index-27"
      ],
      [
        431,
        "index-6"
      ],
      [
        434,
        "index-1"
      ],
      [
        434,
        "index-11"
      ],
      [
        434,
        "index-12"
      ],
      [
        434,
        "index-21"
      ],
      [
        434,
        "index-26"
      ],
      [
        435,
        "index-13"
      ],
      [
        435,
        "index-16"
      ],
      [
        435,
        "index-17"
      ],
      [
        435,
        "index-41"
      ],
      [
        435,
        "index-42"
      ],
      [
        435,
        "index-46"
      ],
      [
        435,
        "index-48"
      ],
      [
        440,
        "index-1"
      ],
      [
        440,
        "index-10"
      ],
      [
        440,
        "index-7"
      ],
      [
        440,
        "index-8"
      ],
      [
        449,
        "index-3"
      ],
      [
        454,
        "index-0"
      ],
      [
        454,
        "index-10"
      ],
      [
        454,
        "index-11"
      ],
      [
        454,
        "index-15"
      ],
      [
        454,
        "index-37"
      ],
      [
        454,
        "index-38"
      ],
      [
        454,
        "index-40"
      ],
      [
        454,
        "index-43"
      ],
      [
        454,
        "index-7"
      ],
      [
        454,
        "index-9"
      ],
      [
        455,
        "index-0"
      ],
      [
        455,
        "index-1"
      ],
      [
        455,
        "index-3"
      ],
      [
        456,
        "index-0"
      ],
      [
        460,
        "index-0"
      ],
      [
        460,
        "index-16"
      ],
      [
        460,
        "index-17"
      ],
      [
        460,
        "index-19"
      ],
      [
        460,
        "index-21"
      ],
      [
        460,
        "index-38"
      ],
      [
        461,
        "index-0"
      ],
      [
        461,
        "index-1"
      ],
      [
        461,
        "index-2"
      ],
      [
        461,
        "index-3"
      ],
      [
        462,
        "index-0"
      ],
      [
        462,
        "index-1"
      ],
      [
        462,
        "index-10"
      ],
      [
        462,
        "index-12"
      ],
      [
        462,
        "index-13"
      ],
      [
        462,
        "index-14"
      ],
      [
        462,
        "index-15"
      ],
      [
        462,
        "index-16"
      ],
      [
        462,
        "index-17"
      ],
      [
        462,
        "index-2"
      ],
      [
        462,
        "index-3"
      ],
      [
        462,
        "index-4"
      ],
      [
        462,
        "index-5"
      ],
      [
        462,
        "index-6"
      ],
      [
        462,
        "index-7"
      ],
      [
        462,
        "index-8"
      ],
      [
        462,
        "index-9"
      ],
      [
        463,
        "index-0"
      ],
      [
        463,
        "index-1"
      ],
      [
        463,
        "index-10"
      ],
      [
        463,
        "index-11"
      ],
      [
        463,
        "index-12"
      ],
      [
        463,
        "index-13"
      ],
      [
        463,
        "index-14"
      ],
      [
        463,
        "index-15"
      ],
      [
        463,
        "index-16"
      ],
      [
        463,
        "index-2"
      ],
      [
        463,
        "index-22"
      ],
      [
        463,
        "index-3"
      ],
      [
        463,
        "index-4"
      ],
      [
        463,
        "index-5"
      ],
      [
        463,
        "index-6"
      ],
      [
        463,
        "index-7"
      ],
      [
        463,
        "index-8"
      ],
      [
        463,
        "index-9"
      ],
      [
        464,
        "index-0"
      ],
      [
        464,
        "index-1"
      ],
      [
        464,
        "index-10"
      ],
      [
        464,
        "index-11"
      ],
      [
        464,
        "index-12"
      ],
      [
        464,
        "index-13"
      ],
      [
        464,
        "index-14"
      ],
      [
        464,
        "index-15"
      ],
      [
        464,
        "index-16"
      ],
      [
        464,
        "index-17"
      ],
      [
        464,
        "index-18"
      ],
      [
        464,
        "index-19"
      ],
      [
        464,
        "index-2"
      ],
      [
        464,
        "index-20"
      ],
      [
        464,
        "index-21"
      ],
      [
        464,
        "index-22"
      ],
      [
        464,
        "index-23"
      ],
      [
        464,
        "index-3"
      ],
      [
        464,
        "index-4"
      ],
      [
        464,
        "index-5"
      ],
      [
        464,
        "index-6"
      ],
      [
        464,
        "index-7"
      ],
      [
        464,
        "index-9"
      ],
      [
        465,
        "index-0"
      ],
      [
        465,
        "index-1"
      ],
      [
        465,
        "index-10"
      ],
      [
        465,
        "index-11"
      ],
      [
        465,
        "index-12"
      ],
      [
        465,
        "index-13"
      ],
      [
        465,
        "index-14"
      ],
      [
        465,
        "index-15"
      ],
      [
        465,
        "index-16"
      ],
      [
        465,
        "index-17"
      ],
      [
        465,
        "index-2"
      ],
      [
        465,
        "index-3"
      ],
      [
        465,
        "index-4"
      ],
      [
        465,
        "index-5"
      ],
      [
        465,
        "index-6"
      ],
      [
        465,
        "index-8"
      ],
      [
        465,
        "index-9"
      ],
      [
        466,
        "index-0"
      ],
      [
        466,
        "index-1"
      ],
      [
        466,
        "index-10"
      ],
      [
        466,
        "index-11"
      ],
      [
        466,
        "index-12"
      ],
      [
        466,
        "index-13"
      ],
      [
        466,
        "index-14"
      ],
      [
        466,
        "index-15"
      ],
      [
        466,
        "index-16"
      ],
      [
        466,
        "index-17"
      ],
      [
        466,
        "index-18"
      ],
      [
        466,
        "index-19"
      ],
      [
        466,
        "index-2"
      ],
      [
        466,
        "index-21"
      ],
      [
        466,
        "index-24"
      ],
      [
        466,
        "index-25"
      ],
      [
        466,
        "index-26"
      ],
      [
        466,
        "index-27"
      ],
      [
        466,
        "index-28"
      ],
      [
        466,
        "index-29"
      ],
      [
        466,
        "index-3"
      ],
      [
        466,
        "index-30"
      ],
      [
        466,
        "index-31"
      ],
      [
        466,
        "index-4"
      ],
      [
        466,
        "index-5"
      ],
      [
        466,
        "index-6"
      ],
      [
        466,
        "index-7"
      ],
      [
        466,
        "index-8"
      ],
      [
        466,
        "index-9"
      ],
      [
        467,
        "index-0"
      ],
      [
        467,
        "index-1"
      ],
      [
        467,
        "index-10"
      ],
      [
        467,
        "index-11"
      ],
      [
        467,
        "index-12"
      ],
      [
        467,
        "index-14"
      ],
      [
        467,
        "index-15"
      ],
      [
        467,
        "index-16"
      ],
      [
        467,
        "index-17"
      ],
      [
        467,
        "index-18"
      ],
      [
        467,
        "index-19"
      ],
      [
        467,
        "index-2"
      ],
      [
        467,
        "index-25"
      ],
      [
        467,
        "index-3"
      ],
      [
        467,
        "index-7"
      ],
      [
        467,
        "index-8"
      ],
      [
        467,
        "index-9"
      ],
      [
        468,
        "index-0"
      ],
      [
        468,
        "index-13"
      ],
      [
        468,
        "index-14"
      ],
      [
        468,
        "index-15"
      ],
      [
        468,
        "index-16"
      ],
      [
        468,
        "index-17"
      ],
      [
        468,
        "index-18"
      ],
      [
        468,
        "index-19"
      ],
      [
        468,
        "index-2"
      ],
      [
        468,
        "index-20"
      ],
      [
        468,
        "index-21"
      ],
      [
        468,
        "index-22"
      ],
      [
        468,
        "index-23"
      ],
      [
        468,
        "index-3"
      ],
      [
        468,
        "index-4"
      ],
      [
        468,
        "index-5"
      ],
      [
        468,
        "index-6"
      ],
      [
        468,
        "index-7"
      ],
      [
        469,
        "index-0"
      ],
      [
        469,
        "index-1"
      ],
      [
        469,
        "index-10"
      ],
      [
        469,
        "index-11"
      ],
      [
        469,
        "index-12"
      ],
      [
        469,
        "index-13"
      ],
      [
        469,
        "index-14"
      ],
      [
        469,
        "index-15"
      ],
      [
        469,
        "index-16"
      ],
      [
        469,
        "index-17"
      ],
      [
        469,
        "index-18"
      ],
      [
        469,
        "index-19"
      ],
      [
        469,
        "index-2"
      ],
      [
        469,
        "index-20"
      ],
      [
        469,
        "index-21"
      ],
      [
        469,
        "index-22"
      ],
      [
        469,
        "index-23"
      ],
      [
        469,
        "index-24"
      ],
      [
        469,
        "index-25"
      ],
      [
        469,
        "index-26"
      ],
      [
        469,
        "index-27"
      ],
      [
        469,
        "index-28"
      ],
      [
        469,
        "index-29"
      ],
      [
        469,
        "index-3"
      ],
      [
        469,
        "index-30"
      ],
      [
        469,
        "index-31"
      ],
      [
        469,
        "index-32"
      ],
      [
        469,
        "index-33"
      ],
      [
        469,
        "index-34"
      ],
      [
        469,
        "index-35"
      ],
      [
        469,
        "index-4"
      ],
      [
        469,
        "index-5"
      ],
      [
        469,
        "index-6"
      ],
      [
        469,
        "index-7"
      ],
      [
        469,
        "index-8"
      ],
      [
        469,
        "index-9"
      ],
      [
        470,
        "index-0"
      ],
      [
        470,
        "index-1"
      ],
      [
        470,
        "index-2"
      ],
      [
        470,
        "index-3"
      ],
      [
        471,
        "index-0"
      ],
      [
        471,
        "index-1"
      ],
      [
        471,
        "index-10"
      ],
      [
        471,
        "index-11"
      ],
      [
        471,
        "index-12"
      ],
      [
        471,
        "index-13"
      ],
      [
        471,
        "index-14"
      ],
      [
        471,
        "index-15"
      ],
      [
        471,
        "index-16"
      ],
      [
        471,
        "index-17"
      ],
      [
        471,
        "index-19"
      ],
      [
        471,
        "index-2"
      ],
      [
        471,
        "index-20"
      ],
      [
        471,
        "index-21"
      ],
      [
        471,
        "index-22"
      ],
      [
        471,
        "index-23"
      ],
      [
        471,
        "index-24"
      ],
      [
        471,
        "index-25"
      ],
      [
        471,
        "index-26"
      ],
      [
        471,
        "index-27"
      ],
      [
        471,
        "index-28"
      ],
      [
        471,
        "index-29"
      ],
      [
        471,
        "index-3"
      ],
      [
        471,
        "index-30"
      ],
      [
        471,
        "index-31"
      ],
      [
        471,
        "index-33"
      ],
      [
        471,
        "index-34"
      ],
      [
        471,
        "index-35"
      ],
      [
        471,
        "index-36"
      ],
      [
        471,
        "index-37"
      ],
      [
        471,
        "index-38"
      ],
      [
        471,
        "index-39"
      ],
      [
        471,
        "index-4"
      ],
      [
        471,
        "index-40"
      ],
      [
        471,
        "index-5"
      ],
      [
        471,
        "index-6"
      ],
      [
        471,
        "index-7"
      ],
      [
        471,
        "index-8"
      ],
      [
        471,
        "index-9"
      ],
      [
        472,
        "index-0"
      ],
      [
        472,
        "index-10"
      ],
      [
        472,
        "index-11"
      ],
      [
        472,
        "index-12"
      ],
      [
        472,
        "index-13"
      ],
      [
        472,
        "index-14"
      ],
      [
        472,
        "index-15"
      ],
      [
        472,
        "index-16"
      ],
      [
        472,
        "index-17"
      ],
      [
        472,
        "index-18"
      ],
      [
        472,
        "index-19"
      ],
      [
        472,
        "index-2"
      ],
      [
        472,
        "index-20"
      ],
      [
        472,
        "index-22"
      ],
      [
        472,
        "index-23"
      ],
      [
        472,
        "index-24"
      ],
      [
        472,
        "index-25"
      ],
      [
        472,
        "index-26"
      ],
      [
        472,
        "index-27"
      ],
      [
        472,
        "index-28"
      ],
      [
        472,
        "index-29"
      ],
      [
        472,
        "index-3"
      ],
      [
        472,
        "index-30"
      ],
      [
        472,
        "index-31"
      ],
      [
        472,
        "index-32"
      ],
      [
        472,
        "index-33"
      ],
      [
        472,
        "index-34"
      ],
      [
        472,
        "index-35"
      ],
      [
        472,
        "index-36"
      ],
      [
        472,
        "index-37"
      ],
      [
        472,
        "index-38"
      ],
      [
        472,
        "index-39"
      ],
      [
        472,
        "index-4"
      ],
      [
        472,
        "index-40"
      ],
      [
        472,
        "index-41"
      ],
      [
        472,
        "index-5"
      ],
      [
        472,
        "index-7"
      ],
      [
        472,
        "index-8"
      ],
      [
        472,
        "index-9"
      ],
      [
        473,
        "index-0"
      ],
      [
        473,
        "index-1"
      ],
      [
        473,
        "index-10"
      ],
      [
        473,
        "index-11"
      ],
      [
        473,
        "index-12"
      ],
      [
        473,
        "index-13"
      ],
      [
        473,
        "index-14"
      ],
      [
        473,
        "index-15"
      ],
      [
        473,
        "index-16"
      ],
      [
        473,
        "index-17"
      ],
      [
        473,
        "index-18"
      ],
      [
        473,
        "index-19"
      ],
      [
        473,
        "index-2"
      ],
      [
        473,
        "index-20"
      ],
      [
        473,
        "index-21"
      ],
      [
        473,
        "index-22"
      ],
      [
        473,
        "index-24"
      ],
      [
        473,
        "index-25"
      ],
      [
        473,
        "index-26"
      ],
      [
        473,
        "index-27"
      ],
      [
        473,
        "index-28"
      ],
      [
        473,
        "index-29"
      ],
      [
        473,
        "index-3"
      ],
      [
        473,
        "index-30"
      ],
      [
        473,
        "index-31"
      ],
      [
        473,
        "index-32"
      ],
      [
        473,
        "index-33"
      ],
      [
        473,
        "index-34"
      ],
      [
        473,
        "index-35"
      ],
      [
        473,
        "index-36"
      ],
      [
        473,
        "index-37"
      ],
      [
        473,
        "index-38"
      ],
      [
        473,
        "index-39"
      ],
      [
        473,
        "index-4"
      ],
      [
        473,
        "index-40"
      ],
      [
        473,
        "index-41"
      ],
      [
        473,
        "index-42"
      ],
      [
        473,
        "index-43"
      ],
      [
        473,
        "index-44"
      ],
      [
        473,
        "index-45"
      ],
      [
        473,
        "index-46"
      ],
      [
        473,
        "index-48"
      ],
      [
        473,
        "index-5"
      ],
      [
        473,
        "index-6"
      ],
      [
        473,
        "index-7"
      ],
      [
        473,
        "index-8"
      ],
      [
        473,
        "index-9"
      ],
      [
        474,
        "index-0"
      ],
      [
        474,
        "index-1"
      ],
      [
        474,
        "index-14"
      ],
      [
        474,
        "index-2"
      ],
      [
        474,
        "index-3"
      ],
      [
        474,
        "index-4"
      ],
      [
        474,
        "index-5"
      ],
      [
        474,
        "index-6"
      ],
      [
        474,
        "index-9"
      ],
      [
        475,
        "index-0"
      ],
      [
        475,
        "index-1"
      ],
      [
        475,
        "index-10"
      ],
      [
        475,
        "index-12"
      ],
      [
        475,
        "index-13"
      ],
      [
        475,
        "index-14"
      ],
      [
        475,
        "index-15"
      ],
      [
        475,
        "index-16"
      ],
      [
        475,
        "index-17"
      ],
      [
        475,
        "index-18"
      ],
      [
        475,
        "index-19"
      ],
      [
        475,
        "index-2"
      ],
      [
        475,
        "index-20"
      ],
      [
        475,
        "index-21"
      ],
      [
        475,
        "index-22"
      ],
      [
        475,
        "index-25"
      ],
      [
        475,
        "index-28"
      ],
      [
        475,
        "index-29"
      ],
      [
        475,
        "index-3"
      ],
      [
        475,
        "index-30"
      ],
      [
        475,
        "index-31"
      ],
      [
        475,
        "index-32"
      ],
      [
        475,
        "index-33"
      ],
      [
        475,
        "index-34"
      ],
      [
        475,
        "index-36"
      ],
      [
        475,
        "index-37"
      ],
      [
        475,
        "index-38"
      ],
      [
        475,
        "index-4"
      ],
      [
        475,
        "index-5"
      ],
      [
        475,
        "index-6"
      ],
      [
        475,
        "index-7"
      ],
      [
        475,
        "index-8"
      ],
      [
        475,
        "index-9"
      ],
      [
        476,
        "index-0"
      ],
      [
        476,
        "index-1"
      ],
      [
        476,
        "index-10"
      ],
      [
        476,
        "index-11"
      ],
      [
        476,
        "index-12"
      ],
      [
        476,
        "index-13"
      ],
      [
        476,
        "index-14"
      ],
      [
        476,
        "index-15"
      ],
      [
        476,
        "index-16"
      ],
      [
        476,
        "index-17"
      ],
      [
        476,
        "index-18"
      ],
      [
        476,
        "index-19"
      ],
      [
        476,
        "index-2"
      ],
      [
        476,
        "index-20"
      ],
      [
        476,
        "index-21"
      ],
      [
        476,
        "index-22"
      ],
      [
        476,
        "index-23"
      ],
      [
        476,
        "index-24"
      ],
      [
        476,
        "index-25"
      ],
      [
        476,
        "index-26"
      ],
      [
        476,
        "index-27"
      ],
      [
        476,
        "index-28"
      ],
      [
        476,
        "index-29"
      ],
      [
        476,
        "index-3"
      ],
      [
        476,
        "index-30"
      ],
      [
        476,
        "index-31"
      ],
      [
        476,
        "index-32"
      ],
      [
        476,
        "index-33"
      ],
      [
        476,
        "index-34"
      ],
      [
        476,
        "index-35"
      ],
      [
        476,
        "index-36"
      ],
      [
        476,
        "index-37"
      ],
      [
        476,
        "index-38"
      ],
      [
        476,
        "index-39"
      ],
      [
        476,
        "index-4"
      ],
      [
        476,
        "index-42"
      ],
      [
        476,
        "index-43"
      ],
      [
        476,
        "index-44"
      ],
      [
        476,
        "index-45"
      ],
      [
        476,
        "index-46"
      ],
      [
        476,
        "index-47"
      ],
      [
        476,
        "index-48"
      ],
      [
        476,
        "index-49"
      ],
      [
        476,
        "index-5"
      ],
      [
        476,
        "index-51"
      ],
      [
        476,
        "index-52"
      ],
      [
        476,
        "index-6"
      ],
      [
        476,
        "index-7"
      ],
      [
        476,
        "index-8"
      ],
      [
        476,
        "index-9"
      ],
      [
        477,
        "index-0"
      ],
      [
        477,
        "index-1"
      ],
      [
        477,
        "index-10"
      ],
      [
        477,
        "index-11"
      ],
      [
        477,
        "index-12"
      ],
      [
        477,
        "index-13"
      ],
      [
        477,
        "index-14"
      ],
      [
        477,
        "index-15"
      ],
      [
        477,
        "index-16"
      ],
      [
        477,
        "index-17"
      ],
      [
        477,
        "index-18"
      ],
      [
        477,
        "index-19"
      ],
      [
        477,
        "index-2"
      ],
      [
        477,
        "index-20"
      ],
      [
        477,
        "index-21"
      ],
      [
        477,
        "index-22"
      ],
      [
        477,
        "index-23"
      ],
      [
        477,
        "index-24"
      ],
      [
        477,
        "index-25"
      ],
      [
        477,
        "index-26"
      ],
      [
        477,
        "index-27"
      ],
      [
        477,
        "index-28"
      ],
      [
        477,
        "index-29"
      ],
      [
        477,
        "index-3"
      ],
      [
        477,
        "index-30"
      ],
      [
        477,
        "index-4"
      ],
      [
        477,
        "index-45"
      ],
      [
        477,
        "index-46"
      ],
      [
        477,
        "index-47"
      ],
      [
        477,
        "index-48"
      ],
      [
        477,
        "index-49"
      ],
      [
        477,
        "index-5"
      ],
      [
        477,
        "index-50"
      ],
      [
        477,
        "index-52"
      ],
      [
        477,
        "index-6"
      ],
      [
        477,
        "index-7"
      ],
      [
        477,
        "index-8"
      ],
      [
        477,
        "index-9"
      ],
      [
        478,
        "index-0"
      ],
      [
        478,
        "index-1"
      ],
      [
        478,
        "index-10"
      ],
      [
        478,
        "index-11"
      ],
      [
        478,
        "index-12"
      ],
      [
        478,
        "index-13"
      ],
      [
        478,
        "index-14"
      ],
      [
        478,
        "index-15"
      ],
      [
        478,
        "index-16"
      ],
      [
        478,
        "index-17"
      ],
      [
        478,
        "index-18"
      ],
      [
        478,
        "index-20"
      ],
      [
        478,
        "index-22"
      ],
      [
        478,
        "index-23"
      ],
      [
        478,
        "index-24"
      ],
      [
        478,
        "index-25"
      ],
      [
        478,
        "index-26"
      ],
      [
        478,
        "index-28"
      ],
      [
        478,
        "index-29"
      ],
      [
        478,
        "index-3"
      ],
      [
        478,
        "index-30"
      ],
      [
        478,
        "index-31"
      ],
      [
        478,
        "index-32"
      ],
      [
        478,
        "index-33"
      ],
      [
        478,
        "index-34"
      ],
      [
        478,
        "index-35"
      ],
      [
        478,
        "index-36"
      ],
      [
        478,
        "index-37"
      ],
      [
        478,
        "index-4"
      ],
      [
        478,
        "index-5"
      ],
      [
        478,
        "index-6"
      ],
      [
        478,
        "index-7"
      ],
      [
        478,
        "index-8"
      ],
      [
        478,
        "index-9"
      ],
      [
        479,
        "index-0"
      ],
      [
        479,
        "index-1"
      ],
      [
        479,
        "index-10"
      ],
      [
        479,
        "index-11"
      ],
      [
        479,
        "index-13"
      ],
      [
        479,
        "index-14"
      ],
      [
        479,
        "index-15"
      ],
      [
        479,
        "index-16"
      ],
      [
        479,
        "index-17"
      ],
      [
        479,
        "index-18"
      ],
      [
        479,
        "index-19"
      ],
      [
        479,
        "index-2"
      ],
      [
        479,
        "index-20"
      ],
      [
        479,
        "index-21"
      ],
      [
        479,
        "index-22"
      ],
      [
        479,
        "index-23"
      ],
      [
        479,
        "index-24"
      ],
      [
        479,
        "index-25"
      ],
      [
        479,
        "index-28"
      ],
      [
        479,
        "index-29"
      ],
      [
        479,
        "index-3"
      ],
      [
        479,
        "index-30"
      ],
      [
        479,
        "index-32"
      ],
      [
        479,
        "index-33"
      ],
      [
        479,
        "index-37"
      ],
      [
        479,
        "index-38"
      ],
      [
        479,
        "index-5"
      ],
      [
        479,
        "index-6"
      ],
      [
        479,
        "index-7"
      ],
      [
        479,
        "index-9"
      ],
      [
        480,
        "index-0"
      ],
      [
        480,
        "index-1"
      ],
      [
        480,
        "index-10"
      ],
      [
        480,
        "index-11"
      ],
      [
        480,
        "index-12"
      ],
      [
        480,
        "index-15"
      ],
      [
        480,
        "index-16"
      ],
      [
        480,
        "index-17"
      ],
      [
        480,
        "index-18"
      ],
      [
        480,
        "index-19"
      ],
      [
        480,
        "index-23"
      ],
      [
        480,
        "index-24"
      ],
      [
        480,
        "index-26"
      ],
      [
        480,
        "index-4"
      ],
      [
        480,
        "index-5"
      ],
      [
        480,
        "index-6"
      ],
      [
        480,
        "index-7"
      ],
      [
        480,
        "index-8"
      ],
      [
        480,
        "index-9"
      ],
      [
        481,
        "index-0"
      ],
      [
        481,
        "index-1"
      ],
      [
        481,
        "index-10"
      ],
      [
        481,
        "index-11"
      ],
      [
        481,
        "index-12"
      ],
      [
        481,
        "index-13"
      ],
      [
        481,
        "index-14"
      ],
      [
        481,
        "index-15"
      ],
      [
        481,
        "index-16"
      ],
      [
        481,
        "index-17"
      ],
      [
        481,
        "index-18"
      ],
      [
        481,
        "index-19"
      ],
      [
        481,
        "index-2"
      ],
      [
        481,
        "index-20"
      ],
      [
        481,
        "index-23"
      ],
      [
        481,
        "index-24"
      ],
      [
        481,
        "index-25"
      ],
      [
        481,
        "index-26"
      ],
      [
        481,
        "index-27"
      ],
      [
        481,
        "index-29"
      ],
      [
        481,
        "index-3"
      ],
      [
        481,
        "index-4"
      ],
      [
        481,
        "index-5"
      ],
      [
        481,
        "index-6"
      ],
      [
        481,
        "index-7"
      ],
      [
        481,
        "index-8"
      ],
      [
        481,
        "index-9"
      ],
      [
        482,
        "index-1"
      ],
      [
        482,
        "index-10"
      ],
      [
        482,
        "index-100"
      ],
      [
        482,
        "index-101"
      ],
      [
        482,
        "index-102"
      ],
      [
        482,
        "index-103"
      ],
      [
        482,
        "index-104"
      ],
      [
        482,
        "index-105"
      ],
      [
        482,
        "index-107"
      ],
      [
        482,
        "index-108"
      ],
      [
        482,
        "index-109"
      ],
      [
        482,
        "index-11"
      ],
      [
        482,
        "index-110"
      ],
      [
        482,
        "index-111"
      ],
      [
        482,
        "index-112"
      ],
      [
        482,
        "index-113"
      ],
      [
        482,
        "index-114"
      ],
      [
        482,
        "index-115"
      ],
      [
        482,
        "index-116"
      ],
      [
        482,
        "index-117"
      ],
      [
        482,
        "index-118"
      ],
      [
        482,
        "index-119"
      ],
      [
        482,
        "index-12"
      ],
      [
        482,
        "index-120"
      ],
      [
        482,
        "index-121"
      ],
      [
        482,
        "index-122"
      ],
      [
        482,
        "index-123"
      ],
      [
        482,
        "index-124"
      ],
      [
        482,
        "index-125"
      ],
      [
        482,
        "index-126"
      ],
      [
        482,
        "index-127"
      ],
      [
        482,
        "index-128"
      ],
      [
        482,
        "index-129"
      ],
      [
        482,
        "index-13"
      ],
      [
        482,
        "index-130"
      ],
      [
        482,
        "index-131"
      ],
      [
        482,
        "index-132"
      ],
      [
        482,
        "index-133"
      ],
      [
        482,
        "index-134"
      ],
      [
        482,
        "index-135"
      ],
      [
        482,
        "index-137"
      ],
      [
        482,
        "index-138"
      ],
      [
        482,
        "index-139"
      ],
      [
        482,
        "index-14"
      ],
      [
        482,
        "index-140"
      ],
      [
        482,
        "index-141"
      ],
      [
        482,
        "index-142"
      ],
      [
        482,
        "index-143"
      ],
      [
        482,
        "index-144"
      ],
      [
        482,
        "index-145"
      ],
      [
        482,
        "index-146"
      ],
      [
        482,
        "index-147"
      ],
      [
        482,
        "index-148"
      ],
      [
        482,
        "index-149"
      ],
      [
        482,
        "index-15"
      ],
      [
        482,
        "index-150"
      ],
      [
        482,
        "index-151"
      ],
      [
        482,
        "index-153"
      ],
      [
        482,
        "index-154"
      ],
      [
        482,
        "index-155"
      ],
      [
        482,
        "index-156"
      ],
      [
        482,
        "index-157"
      ],
      [
        482,
        "index-158"
      ],
      [
        482,
        "index-159"
      ],
      [
        482,
        "index-16"
      ],
      [
        482,
        "index-160"
      ],
      [
        482,
        "index-161"
      ],
      [
        482,
        "index-162"
      ],
      [
        482,
        "index-163"
      ],
      [
        482,
        "index-164"
      ],
      [
        482,
        "index-165"
      ],
      [
        482,
        "index-166"
      ],
      [
        482,
        "index-167"
      ],
      [
        482,
        "index-168"
      ],
      [
        482,
        "index-169"
      ],
      [
        482,
        "index-17"
      ],
      [
        482,
        "index-170"
      ],
      [
        482,
        "index-171"
      ],
      [
        482,
        "index-172"
      ],
      [
        482,
        "index-173"
      ],
      [
        482,
        "index-174"
      ],
      [
        482,
        "index-175"
      ],
      [
        482,
        "index-177"
      ],
      [
        482,
        "index-178"
      ],
      [
        482,
        "index-179"
      ],
      [
        482,
        "index-18"
      ],
      [
        482,
        "index-180"
      ],
      [
        482,
        "index-181"
      ],
      [
        482,
        "index-182"
      ],
      [
        482,
        "index-183"
      ],
      [
        482,
        "index-184"
      ],
      [
        482,
        "index-185"
      ],
      [
        482,
        "index-186"
      ],
      [
        482,
        "index-187"
      ],
      [
        482,
        "index-188"
      ],
      [
        482,
        "index-189"
      ],
      [
        482,
        "index-19"
      ],
      [
        482,
        "index-190"
      ],
      [
        482,
        "index-192"
      ],
      [
        482,
        "index-193"
      ],
      [
        482,
        "index-194"
      ],
      [
        482,
        "index-195"
      ],
      [
        482,
        "index-196"
      ],
      [
        482,
        "index-197"
      ],
      [
        482,
        "index-198"
      ],
      [
        482,
        "index-2"
      ],
      [
        482,
        "index-20"
      ],
      [
        482,
        "index-202"
      ],
      [
        482,
        "index-204"
      ],
      [
        482,
        "index-205"
      ],
      [
        482,
        "index-206"
      ],
      [
        482,
        "index-208"
      ],
      [
        482,
        "index-209"
      ],
      [
        482,
        "index-21"
      ],
      [
        482,
        "index-210"
      ],
      [
        482,
        "index-213"
      ],
      [
        482,
        "index-215"
      ],
      [
        482,
        "index-219"
      ],
      [
        482,
        "index-22"
      ],
      [
        482,
        "index-220"
      ],
      [
        482,
        "index-221"
      ],
      [
        482,
        "index-222"
      ],
      [
        482,
        "index-223"
      ],
      [
        482,
        "index-224"
      ],
      [
        482,
        "index-227"
      ],
      [
        482,
        "index-228"
      ],
      [
        482,
        "index-229"
      ],
      [
        482,
        "index-23"
      ],
      [
        482,
        "index-232"
      ],
      [
        482,
        "index-233"
      ],
      [
        482,
        "index-234"
      ],
      [
        482,
        "index-237"
      ],
      [
        482,
        "index-238"
      ],
      [
        482,
        "index-239"
      ],
      [
        482,
        "index-24"
      ],
      [
        482,
        "index-240"
      ],
      [
        482,
        "index-241"
      ],
      [
        482,
        "index-242"
      ],
      [
        482,
        "index-243"
      ],
      [
        482,
        "index-245"
      ],
      [
        482,
        "index-246"
      ],
      [
        482,
        "index-247"
      ],
      [
        482,
        "index-248"
      ],
      [
        482,
        "index-249"
      ],
      [
        482,
        "index-25"
      ],
      [
        482,
        "index-250"
      ],
      [
        482,
        "index-251"
      ],
      [
        482,
        "index-252"
      ],
      [
        482,
        "index-253"
      ],
      [
        482,
        "index-254"
      ],
      [
        482,
        "index-257"
      ],
      [
        482,
        "index-258"
      ],
      [
        482,
        "index-259"
      ],
      [
        482,
        "index-26"
      ],
      [
        482,
        "index-260"
      ],
      [
        482,
        "index-261"
      ],
      [
        482,
        "index-262"
      ],
      [
        482,
        "index-263"
      ],
      [
        482,
        "index-264"
      ],
      [
        482,
        "index-265"
      ],
      [
        482,
        "index-266"
      ],
      [
        482,
        "index-267"
      ],
      [
        482,
        "index-268"
      ],
      [
        482,
        "index-269"
      ],
      [
        482,
        "index-27"
      ],
      [
        482,
        "index-270"
      ],
      [
        482,
        "index-271"
      ],
      [
        482,
        "index-272"
      ],
      [
        482,
        "index-273"
      ],
      [
        482,
        "index-274"
      ],
      [
        482,
        "index-275"
      ],
      [
        482,
        "index-276"
      ],
      [
        482,
        "index-277"
      ],
      [
        482,
        "index-278"
      ],
      [
        482,
        "index-279"
      ],
      [
        482,
        "index-28"
      ],
      [
        482,
        "index-280"
      ],
      [
        482,
        "index-281"
      ],
      [
        482,
        "index-282"
      ],
      [
        482,
        "index-283"
      ],
      [
        482,
        "index-284"
      ],
      [
        482,
        "index-287"
      ],
      [
        482,
        "index-288"
      ],
      [
        482,
        "index-289"
      ],
      [
        482,
        "index-29"
      ],
      [
        482,
        "index-290"
      ],
      [
        482,
        "index-291"
      ],
      [
        482,
        "index-292"
      ],
      [
        482,
        "index-293"
      ],
      [
        482,
        "index-294"
      ],
      [
        482,
        "index-295"
      ],
      [
        482,
        "index-296"
      ],
      [
        482,
        "index-297"
      ],
      [
        482,
        "index-298"
      ],
      [
        482,
        "index-299"
      ],
      [
        482,
        "index-3"
      ],
      [
        482,
        "index-30"
      ],
      [
        482,
        "index-300"
      ],
      [
        482,
        "index-301"
      ],
      [
        482,
        "index-302"
      ],
      [
        482,
        "index-303"
      ],
      [
        482,
        "index-304"
      ],
      [
        482,
        "index-31"
      ],
      [
        482,
        "index-32"
      ],
      [
        482,
        "index-36"
      ],
      [
        482,
        "index-37"
      ],
      [
        482,
        "index-38"
      ],
      [
        482,
        "index-39"
      ],
      [
        482,
        "index-4"
      ],
      [
        482,
        "index-41"
      ],
      [
        482,
        "index-42"
      ],
      [
        482,
        "index-44"
      ],
      [
        482,
        "index-45"
      ],
      [
        482,
        "index-46"
      ],
      [
        482,
        "index-47"
      ],
      [
        482,
        "index-48"
      ],
      [
        482,
        "index-5"
      ],
      [
        482,
        "index-51"
      ],
      [
        482,
        "index-52"
      ],
      [
        482,
        "index-55"
      ],
      [
        482,
        "index-56"
      ],
      [
        482,
        "index-57"
      ],
      [
        482,
        "index-58"
      ],
      [
        482,
        "index-59"
      ],
      [
        482,
        "index-6"
      ],
      [
        482,
        "index-60"
      ],
      [
        482,
        "index-61"
      ],
      [
        482,
        "index-62"
      ],
      [
        482,
        "index-64"
      ],
      [
        482,
        "index-65"
      ],
      [
        482,
        "index-66"
      ],
      [
        482,
        "index-67"
      ],
      [
        482,
        "index-68"
      ],
      [
        482,
        "index-69"
      ],
      [
        482,
        "index-7"
      ],
      [
        482,
        "index-70"
      ],
      [
        482,
        "index-71"
      ],
      [
        482,
        "index-72"
      ],
      [
        482,
        "index-73"
      ],
      [
        482,
        "index-74"
      ],
      [
        482,
        "index-76"
      ],
      [
        482,
        "index-77"
      ],
      [
        482,
        "index-79"
      ],
      [
        482,
        "index-8"
      ],
      [
        482,
        "index-80"
      ],
      [
        482,
        "index-81"
      ],
      [
        482,
        "index-82"
      ],
      [
        482,
        "index-83"
      ],
      [
        482,
        "index-85"
      ],
      [
        482,
        "index-87"
      ],
      [
        482,
        "index-88"
      ],
      [
        482,
        "index-89"
      ],
      [
        482,
        "index-9"
      ],
      [
        482,
        "index-91"
      ],
      [
        482,
        "index-94"
      ],
      [
        482,
        "index-95"
      ],
      [
        482,
        "index-96"
      ],
      [
        482,
        "index-97"
      ],
      [
        482,
        "index-98"
      ],
      [
        482,
        "index-99"
      ],
      [
        483,
        "index-23"
      ]
    ],
    "vectorcallfunc (c type)": [
      [
        10,
        "c.vectorcallfunc"
      ]
    ],
    "capsule": [
      [
        11,
        "index-0"
      ]
    ],
    "pycapsule (c type)": [
      [
        11,
        "c.PyCapsule"
      ]
    ],
    "pycapsule_checkexact (c function)": [
      [
        11,
        "c.PyCapsule_CheckExact"
      ]
    ],
    "pycapsule_destructor (c type)": [
      [
        11,
        "c.PyCapsule_Destructor"
      ]
    ],
    "pycapsule_getcontext (c function)": [
      [
        11,
        "c.PyCapsule_GetContext"
      ]
    ],
    "pycapsule_getdestructor (c function)": [
      [
        11,
        "c.PyCapsule_GetDestructor"
      ]
    ],
    "pycapsule_getname (c function)": [
      [
        11,
        "c.PyCapsule_GetName"
      ]
    ],
    "pycapsule_getpointer (c function)": [
      [
        11,
        "c.PyCapsule_GetPointer"
      ]
    ],
    "pycapsule_import (c function)": [
      [
        11,
        "c.PyCapsule_Import"
      ]
    ],
    "pycapsule_isvalid (c function)": [
      [
        11,
        "c.PyCapsule_IsValid"
      ]
    ],
    "pycapsule_new (c function)": [
      [
        11,
        "c.PyCapsule_New"
      ]
    ],
    "pycapsule_setcontext (c function)": [
      [
        11,
        "c.PyCapsule_SetContext"
      ]
    ],
    "pycapsule_setdestructor (c function)": [
      [
        11,
        "c.PyCapsule_SetDestructor"
      ]
    ],
    "pycapsule_setname (c function)": [
      [
        11,
        "c.PyCapsule_SetName"
      ]
    ],
    "pycapsule_setpointer (c function)": [
      [
        11,
        "c.PyCapsule_SetPointer"
      ]
    ],
    "pycellobject (c type)": [
      [
        12,
        "c.PyCellObject"
      ]
    ],
    "pycell_check (c function)": [
      [
        12,
        "c.PyCell_Check"
      ]
    ],
    "pycell_get (c function)": [
      [
        12,
        "c.PyCell_GET"
      ],
      [
        12,
        "c.PyCell_Get"
      ]
    ],
    "pycell_new (c function)": [
      [
        12,
        "c.PyCell_New"
      ]
    ],
    "pycell_set (c function)": [
      [
        12,
        "c.PyCell_SET"
      ],
      [
        12,
        "c.PyCell_Set"
      ]
    ],
    "pycell_type (c var)": [
      [
        12,
        "c.PyCell_Type"
      ]
    ],
    "pycodeevent (c type)": [
      [
        13,
        "c.PyCodeEvent"
      ]
    ],
    "pycodeobject (c type)": [
      [
        13,
        "c.PyCodeObject"
      ]
    ],
    "pycode_addwatcher (c function)": [
      [
        13,
        "c.PyCode_AddWatcher"
      ]
    ],
    "pycode_addr2line (c function)": [
      [
        13,
        "c.PyCode_Addr2Line"
      ]
    ],
    "pycode_addr2location (c function)": [
      [
        13,
        "c.PyCode_Addr2Location"
      ]
    ],
    "pycode_check (c function)": [
      [
        13,
        "c.PyCode_Check"
      ]
    ],
    "pycode_clearwatcher (c function)": [
      [
        13,
        "c.PyCode_ClearWatcher"
      ]
    ],
    "pycode_getcellvars (c function)": [
      [
        13,
        "c.PyCode_GetCellvars"
      ]
    ],
    "pycode_getcode (c function)": [
      [
        13,
        "c.PyCode_GetCode"
      ]
    ],
    "pycode_getfirstfree (c function)": [
      [
        13,
        "c.PyCode_GetFirstFree"
      ]
    ],
    "pycode_getfreevars (c function)": [
      [
        13,
        "c.PyCode_GetFreevars"
      ]
    ],
    "pycode_getnumfree (c function)": [
      [
        13,
        "c.PyCode_GetNumFree"
      ]
    ],
    "pycode_getvarnames (c function)": [
      [
        13,
        "c.PyCode_GetVarnames"
      ]
    ],
    "pycode_new (c function)": [
      [
        13,
        "index-1"
      ]
    ],
    "pycode_newempty (c function)": [
      [
        13,
        "c.PyCode_NewEmpty"
      ]
    ],
    "pycode_newwithposonlyargs (c function)": [
      [
        13,
        "index-2"
      ]
    ],
    "pycode_type (c var)": [
      [
        13,
        "c.PyCode_Type"
      ]
    ],
    "pycode_watchcallback (c type)": [
      [
        13,
        "c.PyCode_WatchCallback"
      ]
    ],
    "pyunstable_code_getextra (c function)": [
      [
        13,
        "c.PyUnstable_Code_GetExtra"
      ]
    ],
    "pyunstable_code_new (c function)": [
      [
        13,
        "c.PyUnstable_Code_New"
      ]
    ],
    "pyunstable_code_newwithposonlyargs (c function)": [
      [
        13,
        "c.PyUnstable_Code_NewWithPosOnlyArgs"
      ]
    ],
    "pyunstable_code_setextra (c function)": [
      [
        13,
        "c.PyUnstable_Code_SetExtra"
      ]
    ],
    "pyunstable_eval_requestcodeextraindex (c function)": [
      [
        13,
        "c.PyUnstable_Eval_RequestCodeExtraIndex"
      ]
    ],
    "_pycode_getextra (c function)": [
      [
        13,
        "index-4"
      ]
    ],
    "_pycode_setextra (c function)": [
      [
        13,
        "index-5"
      ]
    ],
    "_pyeval_requestcodeextraindex (c function)": [
      [
        13,
        "index-3"
      ]
    ],
    "code": [
      [
        13,
        "index-0"
      ],
      [
        156,
        "module-code"
      ],
      [
        273,
        "index-1"
      ],
      [
        343,
        "index-62"
      ],
      [
        427,
        "index-57"
      ],
      [
        428,
        "index-0"
      ]
    ],
    "code object": [
      [
        13,
        "index-0"
      ],
      [
        273,
        "index-1"
      ],
      [
        343,
        "index-62"
      ],
      [
        427,
        "index-57"
      ]
    ],
    "pycodec_backslashreplaceerrors (c function)": [
      [
        14,
        "c.PyCodec_BackslashReplaceErrors"
      ]
    ],
    "pycodec_decode (c function)": [
      [
        14,
        "c.PyCodec_Decode"
      ]
    ],
    "pycodec_decoder (c function)": [
      [
        14,
        "c.PyCodec_Decoder"
      ]
    ],
    "pycodec_encode (c function)": [
      [
        14,
        "c.PyCodec_Encode"
      ]
    ],
    "pycodec_encoder (c function)": [
      [
        14,
        "c.PyCodec_Encoder"
      ]
    ],
    "pycodec_ignoreerrors (c function)": [
      [
        14,
        "c.PyCodec_IgnoreErrors"
      ]
    ],
    "pycodec_incrementaldecoder (c function)": [
      [
        14,
        "c.PyCodec_IncrementalDecoder"
      ]
    ],
    "pycodec_incrementalencoder (c function)": [
      [
        14,
        "c.PyCodec_IncrementalEncoder"
      ]
    ],
    "pycodec_knownencoding (c function)": [
      [
        14,
        "c.PyCodec_KnownEncoding"
      ]
    ],
    "pycodec_lookuperror (c function)": [
      [
        14,
        "c.PyCodec_LookupError"
      ]
    ],
    "pycodec_namereplaceerrors (c function)": [
      [
        14,
        "c.PyCodec_NameReplaceErrors"
      ]
    ],
    "pycodec_register (c function)": [
      [
        14,
        "c.PyCodec_Register"
      ]
    ],
    "pycodec_registererror (c function)": [
      [
        14,
        "c.PyCodec_RegisterError"
      ]
    ],
    "pycodec_replaceerrors (c function)": [
      [
        14,
        "c.PyCodec_ReplaceErrors"
      ]
    ],
    "pycodec_streamreader (c function)": [
      [
        14,
        "c.PyCodec_StreamReader"
      ]
    ],
    "pycodec_streamwriter (c function)": [
      [
        14,
        "c.PyCodec_StreamWriter"
      ]
    ],
    "pycodec_stricterrors (c function)": [
      [
        14,
        "c.PyCodec_StrictErrors"
      ]
    ],
    "pycodec_unregister (c function)": [
      [
        14,
        "c.PyCodec_Unregister"
      ]
    ],
    "pycodec_xmlcharrefreplaceerrors (c function)": [
      [
        14,
        "c.PyCodec_XMLCharRefReplaceErrors"
      ]
    ],
    "pycomplexobject (c type)": [
      [
        15,
        "c.PyComplexObject"
      ]
    ],
    "pycomplex_asccomplex (c function)": [
      [
        15,
        "c.PyComplex_AsCComplex"
      ]
    ],
    "pycomplex_check (c function)": [
      [
        15,
        "c.PyComplex_Check"
      ]
    ],
    "pycomplex_checkexact (c function)": [
      [
        15,
        "c.PyComplex_CheckExact"
      ]
    ],
    "pycomplex_fromccomplex (c function)": [
      [
        15,
        "c.PyComplex_FromCComplex"
      ]
    ],
    "pycomplex_fromdoubles (c function)": [
      [
        15,
        "c.PyComplex_FromDoubles"
      ]
    ],
    "pycomplex_imagasdouble (c function)": [
      [
        15,
        "c.PyComplex_ImagAsDouble"
      ]
    ],
    "pycomplex_realasdouble (c function)": [
      [
        15,
        "c.PyComplex_RealAsDouble"
      ]
    ],
    "pycomplex_type (c var)": [
      [
        15,
        "c.PyComplex_Type"
      ]
    ],
    "py_complex (c type)": [
      [
        15,
        "c.Py_complex"
      ]
    ],
    "_py_c_diff (c function)": [
      [
        15,
        "c._Py_c_diff"
      ]
    ],
    "_py_c_neg (c function)": [
      [
        15,
        "c._Py_c_neg"
      ]
    ],
    "_py_c_pow (c function)": [
      [
        15,
        "c._Py_c_pow"
      ]
    ],
    "_py_c_prod (c function)": [
      [
        15,
        "c._Py_c_prod"
      ]
    ],
    "_py_c_quot (c function)": [
      [
        15,
        "c._Py_c_quot"
      ]
    ],
    "_py_c_sum (c function)": [
      [
        15,
        "c._Py_c_sum"
      ]
    ],
    "complex number": [
      [
        15,
        "index-0"
      ],
      [
        87,
        "term-complex-number"
      ],
      [
        343,
        "index-11"
      ],
      [
        343,
        "index-12"
      ]
    ],
    "mapping": [
      [
        16,
        "index-2"
      ],
      [
        87,
        "term-mapping"
      ],
      [
        343,
        "index-52"
      ],
      [
        427,
        "index-30"
      ],
      [
        427,
        "index-53"
      ],
      [
        429,
        "index-42"
      ],
      [
        435,
        "index-11"
      ]
    ],
    "numeric": [
      [
        16,
        "index-0"
      ],
      [
        343,
        "index-11"
      ],
      [
        343,
        "index-12"
      ],
      [
        343,
        "index-14"
      ],
      [
        343,
        "index-15"
      ],
      [
        343,
        "index-8"
      ],
      [
        427,
        "index-53"
      ],
      [
        427,
        "index-9"
      ]
    ],
    "sequence": [
      [
        16,
        "index-1"
      ],
      [
        87,
        "term-sequence"
      ],
      [
        343,
        "index-18"
      ],
      [
        343,
        "index-19"
      ],
      [
        343,
        "index-20"
      ],
      [
        343,
        "index-22"
      ],
      [
        343,
        "index-23"
      ],
      [
        343,
        "index-24"
      ],
      [
        426,
        "index-6"
      ],
      [
        427,
        "index-15"
      ],
      [
        427,
        "index-53"
      ],
      [
        429,
        "index-42"
      ],
      [
        429,
        "index-45"
      ],
      [
        429,
        "index-80"
      ],
      [
        435,
        "index-10"
      ]
    ],
    "pycontext (c type)": [
      [
        17,
        "c.PyContext"
      ]
    ],
    "pycontexttoken (c type)": [
      [
        17,
        "c.PyContextToken"
      ]
    ],
    "pycontexttoken_checkexact (c function)": [
      [
        17,
        "c.PyContextToken_CheckExact"
      ]
    ],
    "pycontexttoken_type (c var)": [
      [
        17,
        "c.PyContextToken_Type"
      ]
    ],
    "pycontextvar (c type)": [
      [
        17,
        "c.PyContextVar"
      ]
    ],
    "pycontextvar_checkexact (c function)": [
      [
        17,
        "c.PyContextVar_CheckExact"
      ]
    ],
    "pycontextvar_get (c function)": [
      [
        17,
        "c.PyContextVar_Get"
      ]
    ],
    "pycontextvar_new (c function)": [
      [
        17,
        "c.PyContextVar_New"
      ]
    ],
    "pycontextvar_reset (c function)": [
      [
        17,
        "c.PyContextVar_Reset"
      ]
    ],
    "pycontextvar_set (c function)": [
      [
        17,
        "c.PyContextVar_Set"
      ]
    ],
    "pycontextvar_type (c var)": [
      [
        17,
        "c.PyContextVar_Type"
      ]
    ],
    "pycontext_checkexact (c function)": [
      [
        17,
        "c.PyContext_CheckExact"
      ]
    ],
    "pycontext_copy (c function)": [
      [
        17,
        "c.PyContext_Copy"
      ]
    ],
    "pycontext_copycurrent (c function)": [
      [
        17,
        "c.PyContext_CopyCurrent"
      ]
    ],
    "pycontext_enter (c function)": [
      [
        17,
        "c.PyContext_Enter"
      ]
    ],
    "pycontext_exit (c function)": [
      [
        17,
        "c.PyContext_Exit"
      ]
    ],
    "pycontext_new (c function)": [
      [
        17,
        "c.PyContext_New"
      ]
    ],
    "pycontext_type (c var)": [
      [
        17,
        "c.PyContext_Type"
      ]
    ],
    "pyos_double_to_string (c function)": [
      [
        18,
        "c.PyOS_double_to_string"
      ]
    ],
    "pyos_snprintf (c function)": [
      [
        18,
        "c.PyOS_snprintf"
      ]
    ],
    "pyos_stricmp (c function)": [
      [
        18,
        "c.PyOS_stricmp"
      ]
    ],
    "pyos_string_to_double (c function)": [
      [
        18,
        "c.PyOS_string_to_double"
      ]
    ],
    "pyos_strnicmp (c function)": [
      [
        18,
        "c.PyOS_strnicmp"
      ]
    ],
    "pyos_strtol (c function)": [
      [
        18,
        "c.PyOS_strtol"
      ]
    ],
    "pyos_strtoul (c function)": [
      [
        18,
        "c.PyOS_strtoul"
      ]
    ],
    "pyos_vsnprintf (c function)": [
      [
        18,
        "c.PyOS_vsnprintf"
      ]
    ],
    "pycoroobject (c type)": [
      [
        19,
        "c.PyCoroObject"
      ]
    ],
    "pycoro_checkexact (c function)": [
      [
        19,
        "c.PyCoro_CheckExact"
      ]
    ],
    "pycoro_new (c function)": [
      [
        19,
        "c.PyCoro_New"
      ]
    ],
    "pycoro_type (c var)": [
      [
        19,
        "c.PyCoro_Type"
      ]
    ],
    "pydatetime_check (c function)": [
      [
        20,
        "c.PyDateTime_Check"
      ]
    ],
    "pydatetime_checkexact (c function)": [
      [
        20,
        "c.PyDateTime_CheckExact"
      ]
    ],
    "pydatetime_date_get_fold (c function)": [
      [
        20,
        "c.PyDateTime_DATE_GET_FOLD"
      ]
    ],
    "pydatetime_date_get_hour (c function)": [
      [
        20,
        "c.PyDateTime_DATE_GET_HOUR"
      ]
    ],
    "pydatetime_date_get_microsecond (c function)": [
      [
        20,
        "c.PyDateTime_DATE_GET_MICROSECOND"
      ]
    ],
    "pydatetime_date_get_minute (c function)": [
      [
        20,
        "c.PyDateTime_DATE_GET_MINUTE"
      ]
    ],
    "pydatetime_date_get_second (c function)": [
      [
        20,
        "c.PyDateTime_DATE_GET_SECOND"
      ]
    ],
    "pydatetime_date_get_tzinfo (c function)": [
      [
        20,
        "c.PyDateTime_DATE_GET_TZINFO"
      ]
    ],
    "pydatetime_delta_get_days (c function)": [
      [
        20,
        "c.PyDateTime_DELTA_GET_DAYS"
      ]
    ],
    "pydatetime_delta_get_microseconds (c function)": [
      [
        20,
        "c.PyDateTime_DELTA_GET_MICROSECONDS"
      ]
    ],
    "pydatetime_delta_get_seconds (c function)": [
      [
        20,
        "c.PyDateTime_DELTA_GET_SECONDS"
      ]
    ],
    "pydatetime_date (c type)": [
      [
        20,
        "c.PyDateTime_Date"
      ]
    ],
    "pydatetime_datetime (c type)": [
      [
        20,
        "c.PyDateTime_DateTime"
      ]
    ],
    "pydatetime_datetimetype (c var)": [
      [
        20,
        "c.PyDateTime_DateTimeType"
      ]
    ],
    "pydatetime_datetype (c var)": [
      [
        20,
        "c.PyDateTime_DateType"
      ]
    ],
    "pydatetime_delta (c type)": [
      [
        20,
        "c.PyDateTime_Delta"
      ]
    ],
    "pydatetime_deltatype (c var)": [
      [
        20,
        "c.PyDateTime_DeltaType"
      ]
    ],
    "pydatetime_fromdateandtime (c function)": [
      [
        20,
        "c.PyDateTime_FromDateAndTime"
      ]
    ],
    "pydatetime_fromdateandtimeandfold (c function)": [
      [
        20,
        "c.PyDateTime_FromDateAndTimeAndFold"
      ]
    ],
    "pydatetime_fromtimestamp (c function)": [
      [
        20,
        "c.PyDateTime_FromTimestamp"
      ]
    ],
    "pydatetime_get_day (c function)": [
      [
        20,
        "c.PyDateTime_GET_DAY"
      ]
    ],
    "pydatetime_get_month (c function)": [
      [
        20,
        "c.PyDateTime_GET_MONTH"
      ]
    ],
    "pydatetime_get_year (c function)": [
      [
        20,
        "c.PyDateTime_GET_YEAR"
      ]
    ],
    "pydatetime_time_get_fold (c function)": [
      [
        20,
        "c.PyDateTime_TIME_GET_FOLD"
      ]
    ],
    "pydatetime_time_get_hour (c function)": [
      [
        20,
        "c.PyDateTime_TIME_GET_HOUR"
      ]
    ],
    "pydatetime_time_get_microsecond (c function)": [
      [
        20,
        "c.PyDateTime_TIME_GET_MICROSECOND"
      ]
    ],
    "pydatetime_time_get_minute (c function)": [
      [
        20,
        "c.PyDateTime_TIME_GET_MINUTE"
      ]
    ],
    "pydatetime_time_get_second (c function)": [
      [
        20,
        "c.PyDateTime_TIME_GET_SECOND"
      ]
    ],
    "pydatetime_time_get_tzinfo (c function)": [
      [
        20,
        "c.PyDateTime_TIME_GET_TZINFO"
      ]
    ],
    "pydatetime_tzinfotype (c var)": [
      [
        20,
        "c.PyDateTime_TZInfoType"
      ]
    ],
    "pydatetime_time (c type)": [
      [
        20,
        "c.PyDateTime_Time"
      ]
    ],
    "pydatetime_timetype (c var)": [
      [
        20,
        "c.PyDateTime_TimeType"
      ]
    ],
    "pydatetime_timezone_utc (c var)": [
      [
        20,
        "c.PyDateTime_TimeZone_UTC"
      ]
    ],
    "pydate_check (c function)": [
      [
        20,
        "c.PyDate_Check"
      ]
    ],
    "pydate_checkexact (c function)": [
      [
        20,
        "c.PyDate_CheckExact"
      ]
    ],
    "pydate_fromdate (c function)": [
      [
        20,
        "c.PyDate_FromDate"
      ]
    ],
    "pydate_fromtimestamp (c function)": [
      [
        20,
        "c.PyDate_FromTimestamp"
      ]
    ],
    "pydelta_check (c function)": [
      [
        20,
        "c.PyDelta_Check"
      ]
    ],
    "pydelta_checkexact (c function)": [
      [
        20,
        "c.PyDelta_CheckExact"
      ]
    ],
    "pydelta_fromdsu (c function)": [
      [
        20,
        "c.PyDelta_FromDSU"
      ]
    ],
    "pytzinfo_check (c function)": [
      [
        20,
        "c.PyTZInfo_Check"
      ]
    ],
    "pytzinfo_checkexact (c function)": [
      [
        20,
        "c.PyTZInfo_CheckExact"
      ]
    ],
    "pytimezone_fromoffset (c function)": [
      [
        20,
        "c.PyTimeZone_FromOffset"
      ]
    ],
    "pytimezone_fromoffsetandname (c function)": [
      [
        20,
        "c.PyTimeZone_FromOffsetAndName"
      ]
    ],
    "pytime_check (c function)": [
      [
        20,
        "c.PyTime_Check"
      ]
    ],
    "pytime_checkexact (c function)": [
      [
        20,
        "c.PyTime_CheckExact"
      ]
    ],
    "pytime_fromtime (c function)": [
      [
        20,
        "c.PyTime_FromTime"
      ]
    ],
    "pytime_fromtimeandfold (c function)": [
      [
        20,
        "c.PyTime_FromTimeAndFold"
      ]
    ],
    "pydescr_isdata (c function)": [
      [
        21,
        "c.PyDescr_IsData"
      ]
    ],
    "pydescr_newclassmethod (c function)": [
      [
        21,
        "c.PyDescr_NewClassMethod"
      ]
    ],
    "pydescr_newgetset (c function)": [
      [
        21,
        "c.PyDescr_NewGetSet"
      ]
    ],
    "pydescr_newmember (c function)": [
      [
        21,
        "c.PyDescr_NewMember"
      ]
    ],
    "pydescr_newmethod (c function)": [
      [
        21,
        "c.PyDescr_NewMethod"
      ]
    ],
    "pydescr_newwrapper (c function)": [
      [
        21,
        "c.PyDescr_NewWrapper"
      ]
    ],
    "pyproperty_type (c var)": [
      [
        21,
        "c.PyProperty_Type"
      ]
    ],
    "pywrapper_new (c function)": [
      [
        21,
        "c.PyWrapper_New"
      ]
    ],
    "pydictobject (c type)": [
      [
        22,
        "c.PyDictObject"
      ]
    ],
    "pydictproxy_new (c function)": [
      [
        22,
        "c.PyDictProxy_New"
      ]
    ],
    "pydict_addwatcher (c function)": [
      [
        22,
        "c.PyDict_AddWatcher"
      ]
    ],
    "pydict_check (c function)": [
      [
        22,
        "c.PyDict_Check"
      ]
    ],
    "pydict_checkexact (c function)": [
      [
        22,
        "c.PyDict_CheckExact"
      ]
    ],
    "pydict_clear (c function)": [
      [
        22,
        "c.PyDict_Clear"
      ]
    ],
    "pydict_clearwatcher (c function)": [
      [
        22,
        "c.PyDict_ClearWatcher"
      ]
    ],
    "pydict_contains (c function)": [
      [
        22,
        "c.PyDict_Contains"
      ]
    ],
    "pydict_copy (c function)": [
      [
        22,
        "c.PyDict_Copy"
      ]
    ],
    "pydict_delitem (c function)": [
      [
        22,
        "c.PyDict_DelItem"
      ]
    ],
    "pydict_delitemstring (c function)": [
      [
        22,
        "c.PyDict_DelItemString"
      ]
    ],
    "pydict_getitem (c function)": [
      [
        22,
        "c.PyDict_GetItem"
      ]
    ],
    "pydict_getitemstring (c function)": [
      [
        22,
        "c.PyDict_GetItemString"
      ]
    ],
    "pydict_getitemwitherror (c function)": [
      [
        22,
        "c.PyDict_GetItemWithError"
      ]
    ],
    "pydict_items (c function)": [
      [
        22,
        "c.PyDict_Items"
      ]
    ],
    "pydict_keys (c function)": [
      [
        22,
        "c.PyDict_Keys"
      ]
    ],
    "pydict_merge (c function)": [
      [
        22,
        "c.PyDict_Merge"
      ]
    ],
    "pydict_mergefromseq2 (c function)": [
      [
        22,
        "c.PyDict_MergeFromSeq2"
      ]
    ],
    "pydict_new (c function)": [
      [
        22,
        "c.PyDict_New"
      ]
    ],
    "pydict_next (c function)": [
      [
        22,
        "c.PyDict_Next"
      ]
    ],
    "pydict_setdefault (c function)": [
      [
        22,
        "c.PyDict_SetDefault"
      ]
    ],
    "pydict_setitem (c function)": [
      [
        22,
        "c.PyDict_SetItem"
      ]
    ],
    "pydict_setitemstring (c function)": [
      [
        22,
        "c.PyDict_SetItemString"
      ]
    ],
    "pydict_size (c function)": [
      [
        22,
        "c.PyDict_Size"
      ]
    ],
    "pydict_type (c var)": [
      [
        22,
        "c.PyDict_Type"
      ]
    ],
    "pydict_unwatch (c function)": [
      [
        22,
        "c.PyDict_Unwatch"
      ]
    ],
    "pydict_update (c function)": [
      [
        22,
        "c.PyDict_Update"
      ]
    ],
    "pydict_values (c function)": [
      [
        22,
        "c.PyDict_Values"
      ]
    ],
    "pydict_watch (c function)": [
      [
        22,
        "c.PyDict_Watch"
      ]
    ],
    "pydict_watchcallback (c type)": [
      [
        22,
        "c.PyDict_WatchCallback"
      ]
    ],
    "pydict_watchevent (c type)": [
      [
        22,
        "c.PyDict_WatchEvent"
      ]
    ],
    "built-in function": [
      [
        22,
        "index-1"
      ],
      [
        31,
        "index-1"
      ],
      [
        31,
        "index-2"
      ],
      [
        38,
        "index-1"
      ],
      [
        38,
        "index-2"
      ],
      [
        40,
        "index-0"
      ],
      [
        47,
        "index-0"
      ],
      [
        47,
        "index-1"
      ],
      [
        47,
        "index-2"
      ],
      [
        47,
        "index-3"
      ],
      [
        47,
        "index-4"
      ],
      [
        47,
        "index-5"
      ],
      [
        49,
        "index-0"
      ],
      [
        49,
        "index-1"
      ],
      [
        49,
        "index-3"
      ],
      [
        49,
        "index-6"
      ],
      [
        49,
        "index-7"
      ],
      [
        49,
        "index-8"
      ],
      [
        54,
        "index-0"
      ],
      [
        54,
        "index-1"
      ],
      [
        55,
        "index-1"
      ],
      [
        58,
        "index-0"
      ],
      [
        58,
        "index-1"
      ],
      [
        63,
        "index-1"
      ],
      [
        63,
        "index-2"
      ],
      [
        75,
        "index-3"
      ],
      [
        190,
        "index-1"
      ],
      [
        224,
        "abs"
      ],
      [
        224,
        "aiter"
      ],
      [
        224,
        "all"
      ],
      [
        224,
        "anext"
      ],
      [
        224,
        "any"
      ],
      [
        224,
        "ascii"
      ],
      [
        224,
        "bin"
      ],
      [
        224,
        "breakpoint"
      ],
      [
        224,
        "callable"
      ],
      [
        224,
        "chr"
      ],
      [
        224,
        "classmethod"
      ],
      [
        224,
        "compile"
      ],
      [
        224,
        "delattr"
      ],
      [
        224,
        "dir"
      ],
      [
        224,
        "divmod"
      ],
      [
        224,
        "enumerate"
      ],
      [
        224,
        "eval"
      ],
      [
        224,
        "exec"
      ],
      [
        224,
        "filter"
      ],
      [
        224,
        "format"
      ],
      [
        224,
        "getattr"
      ],
      [
        224,
        "globals"
      ],
      [
        224,
        "hasattr"
      ],
      [
        224,
        "hash"
      ],
      [
        224,
        "help"
      ],
      [
        224,
        "hex"
      ],
      [
        224,
        "id"
      ],
      [
        224,
        "import__"
      ],
      [
        224,
        "index-2"
      ],
      [
        224,
        "input"
      ],
      [
        224,
        "isinstance"
      ],
      [
        224,
        "issubclass"
      ],
      [
        224,
        "iter"
      ],
      [
        224,
        "len"
      ],
      [
        224,
        "locals"
      ],
      [
        224,
        "map"
      ],
      [
        224,
        "max"
      ],
      [
        224,
        "min"
      ],
      [
        224,
        "next"
      ],
      [
        224,
        "oct"
      ],
      [
        224,
        "open"
      ],
      [
        224,
        "ord"
      ],
      [
        224,
        "pow"
      ],
      [
        224,
        "print"
      ],
      [
        224,
        "property.deleter"
      ],
      [
        224,
        "property.getter"
      ],
      [
        224,
        "property.setter"
      ],
      [
        224,
        "repr"
      ],
      [
        224,
        "reversed"
      ],
      [
        224,
        "round"
      ],
      [
        224,
        "setattr"
      ],
      [
        224,
        "sorted"
      ],
      [
        224,
        "staticmethod"
      ],
      [
        224,
        "sum"
      ],
      [
        224,
        "vars"
      ],
      [
        224,
        "zip"
      ],
      [
        282,
        "multiprocessing.Manager"
      ],
      [
        306,
        "index-0"
      ],
      [
        306,
        "index-2"
      ],
      [
        343,
        "index-13"
      ],
      [
        343,
        "index-20"
      ],
      [
        343,
        "index-22"
      ],
      [
        343,
        "index-52"
      ],
      [
        343,
        "index-63"
      ],
      [
        343,
        "index-64"
      ],
      [
        343,
        "index-65"
      ],
      [
        384,
        "index-4"
      ],
      [
        412,
        "xml.etree.ElementInclude.default_loader"
      ],
      [
        412,
        "xml.etree.ElementInclude.include"
      ],
      [
        426,
        "index-8"
      ],
      [
        427,
        "index-1"
      ],
      [
        427,
        "index-100"
      ],
      [
        427,
        "index-101"
      ],
      [
        427,
        "index-102"
      ],
      [
        427,
        "index-103"
      ],
      [
        427,
        "index-104"
      ],
      [
        427,
        "index-105"
      ],
      [
        427,
        "index-15"
      ],
      [
        427,
        "index-19"
      ],
      [
        427,
        "index-27"
      ],
      [
        427,
        "index-30"
      ],
      [
        427,
        "index-42"
      ],
      [
        427,
        "index-55"
      ],
      [
        427,
        "index-69"
      ],
      [
        427,
        "index-77"
      ],
      [
        427,
        "index-78"
      ],
      [
        427,
        "index-80"
      ],
      [
        427,
        "index-86"
      ],
      [
        427,
        "index-98"
      ],
      [
        429,
        "index-53"
      ],
      [
        435,
        "index-3"
      ],
      [
        435,
        "index-44"
      ],
      [
        436,
        "index-6"
      ],
      [
        445,
        "index-0"
      ],
      [
        450,
        "index-0"
      ]
    ],
    "dictionary": [
      [
        22,
        "index-0"
      ],
      [
        87,
        "term-dictionary"
      ],
      [
        343,
        "index-52"
      ],
      [
        427,
        "index-31"
      ],
      [
        427,
        "index-47"
      ],
      [
        427,
        "index-80"
      ],
      [
        429,
        "index-17"
      ],
      [
        429,
        "index-18"
      ],
      [
        429,
        "index-42"
      ],
      [
        435,
        "index-11"
      ]
    ],
    "len": [
      [
        22,
        "index-1"
      ],
      [
        38,
        "index-1"
      ],
      [
        40,
        "index-0"
      ],
      [
        49,
        "index-8"
      ],
      [
        54,
        "index-0"
      ],
      [
        55,
        "index-1"
      ],
      [
        343,
        "index-20"
      ],
      [
        343,
        "index-52"
      ],
      [
        427,
        "index-15"
      ],
      [
        427,
        "index-27"
      ],
      [
        427,
        "index-30"
      ],
      [
        427,
        "index-98"
      ]
    ],
    "keyboardinterrupt (built-in exception)": [
      [
        23,
        "index-1"
      ],
      [
        23,
        "index-2"
      ],
      [
        23,
        "index-3"
      ]
    ],
    "pep 3151": [
      [
        23,
        "index-5"
      ],
      [
        212,
        "index-9"
      ],
      [
        321,
        "index-0"
      ],
      [
        327,
        "index-0"
      ],
      [
        336,
        "index-2"
      ],
      [
        475,
        "index-10"
      ]
    ],
    "pyerr_badargument (c function)": [
      [
        23,
        "c.PyErr_BadArgument"
      ]
    ],
    "pyerr_badinternalcall (c function)": [
      [
        23,
        "c.PyErr_BadInternalCall"
      ]
    ],
    "pyerr_checksignals (c function)": [
      [
        23,
        "c.PyErr_CheckSignals"
      ]
    ],
    "pyerr_clear (c function)": [
      [
        23,
        "c.PyErr_Clear"
      ],
      [
        35,
        "index-12"
      ],
      [
        35,
        "index-17"
      ]
    ],
    "pyerr_displayexception (c function)": [
      [
        23,
        "c.PyErr_DisplayException"
      ]
    ],
    "pyerr_exceptionmatches (c function)": [
      [
        23,
        "c.PyErr_ExceptionMatches"
      ],
      [
        35,
        "index-17"
      ]
    ],
    "pyerr_fetch (c function)": [
      [
        23,
        "c.PyErr_Fetch"
      ],
      [
        75,
        "index-1"
      ]
    ],
    "pyerr_format (c function)": [
      [
        23,
        "c.PyErr_Format"
      ]
    ],
    "pyerr_formatv (c function)": [
      [
        23,
        "c.PyErr_FormatV"
      ]
    ],
    "pyerr_getexcinfo (c function)": [
      [
        23,
        "c.PyErr_GetExcInfo"
      ]
    ],
    "pyerr_gethandledexception (c function)": [
      [
        23,
        "c.PyErr_GetHandledException"
      ]
    ],
    "pyerr_getraisedexception (c function)": [
      [
        23,
        "c.PyErr_GetRaisedException"
      ]
    ],
    "pyerr_givenexceptionmatches (c function)": [
      [
        23,
        "c.PyErr_GivenExceptionMatches"
      ]
    ],
    "pyerr_newexception (c function)": [
      [
        23,
        "c.PyErr_NewException"
      ]
    ],
    "pyerr_newexceptionwithdoc (c function)": [
      [
        23,
        "c.PyErr_NewExceptionWithDoc"
      ]
    ],
    "pyerr_nomemory (c function)": [
      [
        23,
        "c.PyErr_NoMemory"
      ]
    ],
    "pyerr_normalizeexception (c function)": [
      [
        23,
        "c.PyErr_NormalizeException"
      ]
    ],
    "pyerr_occurred (c function)": [
      [
        23,
        "c.PyErr_Occurred"
      ],
      [
        35,
        "index-11"
      ]
    ],
    "pyerr_print (c function)": [
      [
        23,
        "c.PyErr_Print"
      ]
    ],
    "pyerr_printex (c function)": [
      [
        23,
        "c.PyErr_PrintEx"
      ]
    ],
    "pyerr_resourcewarning (c function)": [
      [
        23,
        "c.PyErr_ResourceWarning"
      ]
    ],
    "pyerr_restore (c function)": [
      [
        23,
        "c.PyErr_Restore"
      ],
      [
        75,
        "index-1"
      ]
    ],
    "pyerr_setexcfromwindowserr (c function)": [
      [
        23,
        "c.PyErr_SetExcFromWindowsErr"
      ]
    ],
    "pyerr_setexcfromwindowserrwithfilename (c function)": [
      [
        23,
        "c.PyErr_SetExcFromWindowsErrWithFilename"
      ]
    ],
    "pyerr_setexcfromwindowserrwithfilenameobject (c function)": [
      [
        23,
        "c.PyErr_SetExcFromWindowsErrWithFilenameObject"
      ]
    ],
    "pyerr_setexcfromwindowserrwithfilenameobjects (c function)": [
      [
        23,
        "c.PyErr_SetExcFromWindowsErrWithFilenameObjects"
      ]
    ],
    "pyerr_setexcinfo (c function)": [
      [
        23,
        "c.PyErr_SetExcInfo"
      ]
    ],
    "pyerr_setfromerrno (c function)": [
      [
        23,
        "c.PyErr_SetFromErrno"
      ]
    ],
    "pyerr_setfromerrnowithfilename (c function)": [
      [
        23,
        "c.PyErr_SetFromErrnoWithFilename"
      ]
    ],
    "pyerr_setfromerrnowithfilenameobject (c function)": [
      [
        23,
        "c.PyErr_SetFromErrnoWithFilenameObject"
      ]
    ],
    "pyerr_setfromerrnowithfilenameobjects (c function)": [
      [
        23,
        "c.PyErr_SetFromErrnoWithFilenameObjects"
      ]
    ],
    "pyerr_setfromwindowserr (c function)": [
      [
        23,
        "c.PyErr_SetFromWindowsErr"
      ]
    ],
    "pyerr_setfromwindowserrwithfilename (c function)": [
      [
        23,
        "c.PyErr_SetFromWindowsErrWithFilename"
      ]
    ],
    "pyerr_sethandledexception (c function)": [
      [
        23,
        "c.PyErr_SetHandledException"
      ]
    ],
    "pyerr_setimporterror (c function)": [
      [
        23,
        "c.PyErr_SetImportError"
      ]
    ],
    "pyerr_setimporterrorsubclass (c function)": [
      [
        23,
        "c.PyErr_SetImportErrorSubclass"
      ]
    ],
    "pyerr_setinterrupt (c function)": [
      [
        23,
        "c.PyErr_SetInterrupt"
      ]
    ],
    "pyerr_setinterruptex (c function)": [
      [
        23,
        "c.PyErr_SetInterruptEx"
      ]
    ],
    "pyerr_setnone (c function)": [
      [
        23,
        "c.PyErr_SetNone"
      ]
    ],
    "pyerr_setobject (c function)": [
      [
        23,
        "c.PyErr_SetObject"
      ]
    ],
    "pyerr_setraisedexception (c function)": [
      [
        23,
        "c.PyErr_SetRaisedException"
      ]
    ],
    "pyerr_setstring (c function)": [
      [
        23,
        "c.PyErr_SetString"
      ],
      [
        35,
        "index-12"
      ]
    ],
    "pyerr_syntaxlocation (c function)": [
      [
        23,
        "c.PyErr_SyntaxLocation"
      ]
    ],
    "pyerr_syntaxlocationex (c function)": [
      [
        23,
        "c.PyErr_SyntaxLocationEx"
      ]
    ],
    "pyerr_syntaxlocationobject (c function)": [
      [
        23,
        "c.PyErr_SyntaxLocationObject"
      ]
    ],
    "pyerr_warnex (c function)": [
      [
        23,
        "c.PyErr_WarnEx"
      ]
    ],
    "pyerr_warnexplicit (c function)": [
      [
        23,
        "c.PyErr_WarnExplicit"
      ]
    ],
    "pyerr_warnexplicitobject (c function)": [
      [
        23,
        "c.PyErr_WarnExplicitObject"
      ]
    ],
    "pyerr_warnformat (c function)": [
      [
        23,
        "c.PyErr_WarnFormat"
      ]
    ],
    "pyerr_writeunraisable (c function)": [
      [
        23,
        "c.PyErr_WriteUnraisable"
      ]
    ],
    "pyexc_arithmeticerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_assertionerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_attributeerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_baseexception (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_blockingioerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_brokenpipeerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_buffererror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_byteswarning (c var)": [
      [
        23,
        "index-7"
      ]
    ],
    "pyexc_childprocesserror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_connectionabortederror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_connectionerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_connectionrefusederror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_connectionreseterror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_deprecationwarning (c var)": [
      [
        23,
        "index-7"
      ]
    ],
    "pyexc_eoferror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_environmenterror (c var)": [
      [
        23,
        "index-6"
      ]
    ],
    "pyexc_exception (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_fileexistserror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_filenotfounderror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_floatingpointerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_futurewarning (c var)": [
      [
        23,
        "index-7"
      ]
    ],
    "pyexc_generatorexit (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_ioerror (c var)": [
      [
        23,
        "index-6"
      ]
    ],
    "pyexc_importerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_importwarning (c var)": [
      [
        23,
        "index-7"
      ]
    ],
    "pyexc_indentationerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_indexerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_interruptederror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_isadirectoryerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_keyerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_keyboardinterrupt (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_lookuperror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_memoryerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_modulenotfounderror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_nameerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_notadirectoryerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_notimplementederror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_oserror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_overflowerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_pendingdeprecationwarning (c var)": [
      [
        23,
        "index-7"
      ]
    ],
    "pyexc_permissionerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_processlookuperror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_recursionerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_referenceerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_resourcewarning (c var)": [
      [
        23,
        "index-7"
      ]
    ],
    "pyexc_runtimeerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_runtimewarning (c var)": [
      [
        23,
        "index-7"
      ]
    ],
    "pyexc_stopasynciteration (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_stopiteration (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_syntaxerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_syntaxwarning (c var)": [
      [
        23,
        "index-7"
      ]
    ],
    "pyexc_systemerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_systemexit (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_taberror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_timeouterror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_typeerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_unboundlocalerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_unicodedecodeerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_unicodeencodeerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_unicodeerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_unicodetranslateerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_unicodewarning (c var)": [
      [
        23,
        "index-7"
      ]
    ],
    "pyexc_userwarning (c var)": [
      [
        23,
        "index-7"
      ]
    ],
    "pyexc_valueerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexc_warning (c var)": [
      [
        23,
        "index-7"
      ]
    ],
    "pyexc_windowserror (c var)": [
      [
        23,
        "index-6"
      ]
    ],
    "pyexc_zerodivisionerror (c var)": [
      [
        23,
        "index-4"
      ]
    ],
    "pyexception_getargs (c function)": [
      [
        23,
        "c.PyException_GetArgs"
      ]
    ],
    "pyexception_getcause (c function)": [
      [
        23,
        "c.PyException_GetCause"
      ]
    ],
    "pyexception_getcontext (c function)": [
      [
        23,
        "c.PyException_GetContext"
      ]
    ],
    "pyexception_gettraceback (c function)": [
      [
        23,
        "c.PyException_GetTraceback"
      ]
    ],
    "pyexception_setargs (c function)": [
      [
        23,
        "c.PyException_SetArgs"
      ]
    ],
    "pyexception_setcause (c function)": [
      [
        23,
        "c.PyException_SetCause"
      ]
    ],
    "pyexception_setcontext (c function)": [
      [
        23,
        "c.PyException_SetContext"
      ]
    ],
    "pyexception_settraceback (c function)": [
      [
        23,
        "c.PyException_SetTraceback"
      ]
    ],
    "pysignal_setwakeupfd (c function)": [
      [
        23,
        "c.PySignal_SetWakeupFd"
      ]
    ],
    "pyunicodedecodeerror_create (c function)": [
      [
        23,
        "c.PyUnicodeDecodeError_Create"
      ]
    ],
    "pyunicodedecodeerror_getencoding (c function)": [
      [
        23,
        "c.PyUnicodeDecodeError_GetEncoding"
      ]
    ],
    "pyunicodedecodeerror_getend (c function)": [
      [
        23,
        "c.PyUnicodeDecodeError_GetEnd"
      ]
    ],
    "pyunicodedecodeerror_getobject (c function)": [
      [
        23,
        "c.PyUnicodeDecodeError_GetObject"
      ]
    ],
    "pyunicodedecodeerror_getreason (c function)": [
      [
        23,
        "c.PyUnicodeDecodeError_GetReason"
      ]
    ],
    "pyunicodedecodeerror_getstart (c function)": [
      [
        23,
        "c.PyUnicodeDecodeError_GetStart"
      ]
    ],
    "pyunicodedecodeerror_setend (c function)": [
      [
        23,
        "c.PyUnicodeDecodeError_SetEnd"
      ]
    ],
    "pyunicodedecodeerror_setreason (c function)": [
      [
        23,
        "c.PyUnicodeDecodeError_SetReason"
      ]
    ],
    "pyunicodedecodeerror_setstart (c function)": [
      [
        23,
        "c.PyUnicodeDecodeError_SetStart"
      ]
    ],
    "pyunicodeencodeerror_getencoding (c function)": [
      [
        23,
        "c.PyUnicodeEncodeError_GetEncoding"
      ]
    ],
    "pyunicodeencodeerror_getend (c function)": [
      [
        23,
        "c.PyUnicodeEncodeError_GetEnd"
      ]
    ],
    "pyunicodeencodeerror_getobject (c function)": [
      [
        23,
        "c.PyUnicodeEncodeError_GetObject"
      ]
    ],
    "pyunicodeencodeerror_getreason (c function)": [
      [
        23,
        "c.PyUnicodeEncodeError_GetReason"
      ]
    ],
    "pyunicodeencodeerror_getstart (c function)": [
      [
        23,
        "c.PyUnicodeEncodeError_GetStart"
      ]
    ],
    "pyunicodeencodeerror_setend (c function)": [
      [
        23,
        "c.PyUnicodeEncodeError_SetEnd"
      ]
    ],
    "pyunicodeencodeerror_setreason (c function)": [
      [
        23,
        "c.PyUnicodeEncodeError_SetReason"
      ]
    ],
    "pyunicodeencodeerror_setstart (c function)": [
      [
        23,
        "c.PyUnicodeEncodeError_SetStart"
      ]
    ],
    "pyunicodetranslateerror_getend (c function)": [
      [
        23,
        "c.PyUnicodeTranslateError_GetEnd"
      ]
    ],
    "pyunicodetranslateerror_getobject (c function)": [
      [
        23,
        "c.PyUnicodeTranslateError_GetObject"
      ]
    ],
    "pyunicodetranslateerror_getreason (c function)": [
      [
        23,
        "c.PyUnicodeTranslateError_GetReason"
      ]
    ],
    "pyunicodetranslateerror_getstart (c function)": [
      [
        23,
        "c.PyUnicodeTranslateError_GetStart"
      ]
    ],
    "pyunicodetranslateerror_setend (c function)": [
      [
        23,
        "c.PyUnicodeTranslateError_SetEnd"
      ]
    ],
    "pyunicodetranslateerror_setreason (c function)": [
      [
        23,
        "c.PyUnicodeTranslateError_SetReason"
      ]
    ],
    "pyunicodetranslateerror_setstart (c function)": [
      [
        23,
        "c.PyUnicodeTranslateError_SetStart"
      ]
    ],
    "pyunstable_exc_prepreraisestar (c function)": [
      [
        23,
        "c.PyUnstable_Exc_PrepReraiseStar"
      ]
    ],
    "py_enterrecursivecall (c function)": [
      [
        23,
        "c.Py_EnterRecursiveCall"
      ]
    ],
    "py_leaverecursivecall (c function)": [
      [
        23,
        "c.Py_LeaveRecursiveCall"
      ]
    ],
    "py_reprenter (c function)": [
      [
        23,
        "c.Py_ReprEnter"
      ]
    ],
    "py_reprleave (c function)": [
      [
        23,
        "c.Py_ReprLeave"
      ]
    ],
    "sigint (c macro)": [
      [
        23,
        "index-1"
      ],
      [
        23,
        "index-2"
      ]
    ],
    "module": [
      [
        23,
        "index-1"
      ],
      [
        23,
        "index-2"
      ],
      [
        23,
        "index-3"
      ],
      [
        33,
        "index-15"
      ],
      [
        33,
        "index-22"
      ],
      [
        33,
        "index-23"
      ],
      [
        33,
        "index-38"
      ],
      [
        33,
        "index-42"
      ],
      [
        33,
        "index-45"
      ],
      [
        35,
        "index-18"
      ],
      [
        45,
        "index-0"
      ],
      [
        87,
        "term-module"
      ],
      [
        111,
        "module-lib2to3"
      ],
      [
        112,
        "module-__future__"
      ],
      [
        113,
        "module-__main__"
      ],
      [
        114,
        "index-2"
      ],
      [
        114,
        "module-_thread"
      ],
      [
        115,
        "module-abc"
      ],
      [
        116,
        "module-aifc"
      ],
      [
        119,
        "module-argparse"
      ],
      [
        120,
        "module-array"
      ],
      [
        121,
        "module-ast"
      ],
      [
        122,
        "module-asyncio"
      ],
      [
        139,
        "module-atexit"
      ],
      [
        140,
        "module-audioop"
      ],
      [
        142,
        "module-base64"
      ],
      [
        143,
        "module-bdb"
      ],
      [
        145,
        "index-0"
      ],
      [
        145,
        "module-binascii"
      ],
      [
        146,
        "module-bisect"
      ],
      [
        147,
        "module-builtins"
      ],
      [
        148,
        "module-bz2"
      ],
      [
        149,
        "module-calendar"
      ],
      [
        150,
        "module-cgi"
      ],
      [
        151,
        "module-cgitb"
      ],
      [
        152,
        "module-chunk"
      ],
      [
        153,
        "index-1"
      ],
      [
        153,
        "module-cmath"
      ],
      [
        154,
        "module-cmd"
      ],
      [
        156,
        "module-code"
      ],
      [
        157,
        "module-codecs"
      ],
      [
        157,
        "module-encodings.idna"
      ],
      [
        157,
        "module-encodings.mbcs"
      ],
      [
        157,
        "module-encodings.utf_8_sig"
      ],
      [
        158,
        "module-codeop"
      ],
      [
        159,
        "module-collections"
      ],
      [
        160,
        "module-collections.abc"
      ],
      [
        161,
        "module-colorsys"
      ],
      [
        162,
        "module-compileall"
      ],
      [
        165,
        "module-concurrent.futures"
      ],
      [
        166,
        "module-configparser"
      ],
      [
        168,
        "module-contextlib"
      ],
      [
        169,
        "module-contextvars"
      ],
      [
        170,
        "index-0"
      ],
      [
        170,
        "module-copy"
      ],
      [
        171,
        "index-0"
      ],
      [
        171,
        "module-copyreg"
      ],
      [
        172,
        "module-crypt"
      ],
      [
        174,
        "module-csv"
      ],
      [
        175,
        "module-ctypes"
      ],
      [
        176,
        "module-curses"
      ],
      [
        176,
        "module-curses.textpad"
      ],
      [
        177,
        "module-curses.ascii"
      ],
      [
        178,
        "module-curses.panel"
      ],
      [
        180,
        "module-dataclasses"
      ],
      [
        182,
        "module-datetime"
      ],
      [
        183,
        "module-dbm"
      ],
      [
        183,
        "module-dbm.dumb"
      ],
      [
        183,
        "module-dbm.gnu"
      ],
      [
        183,
        "module-dbm.ndbm"
      ],
      [
        185,
        "module-decimal"
      ],
      [
        188,
        "module-tkinter.commondialog"
      ],
      [
        188,
        "module-tkinter.filedialog"
      ],
      [
        188,
        "module-tkinter.simpledialog"
      ],
      [
        189,
        "module-difflib"
      ],
      [
        190,
        "module-dis"
      ],
      [
        192,
        "module-doctest"
      ],
      [
        193,
        "module-email"
      ],
      [
        194,
        "module-email.charset"
      ],
      [
        196,
        "module-email.contentmanager"
      ],
      [
        197,
        "module-email.encoders"
      ],
      [
        198,
        "module-email.errors"
      ],
      [
        200,
        "module-email.generator"
      ],
      [
        201,
        "module-email.header"
      ],
      [
        202,
        "module-email.headerregistry"
      ],
      [
        203,
        "module-email.iterators"
      ],
      [
        204,
        "module-email.message"
      ],
      [
        205,
        "module-email.mime"
      ],
      [
        205,
        "module-email.mime.application"
      ],
      [
        205,
        "module-email.mime.audio"
      ],
      [
        205,
        "module-email.mime.base"
      ],
      [
        205,
        "module-email.mime.image"
      ],
      [
        205,
        "module-email.mime.message"
      ],
      [
        205,
        "module-email.mime.multipart"
      ],
      [
        205,
        "module-email.mime.nonmultipart"
      ],
      [
        205,
        "module-email.mime.text"
      ],
      [
        206,
        "module-email.parser"
      ],
      [
        207,
        "module-email.policy"
      ],
      [
        208,
        "module-email.utils"
      ],
      [
        209,
        "module-ensurepip"
      ],
      [
        210,
        "module-enum"
      ],
      [
        211,
        "module-errno"
      ],
      [
        212,
        "index-5"
      ],
      [
        213,
        "module-faulthandler"
      ],
      [
        214,
        "module-fcntl"
      ],
      [
        215,
        "module-filecmp"
      ],
      [
        217,
        "module-fileinput"
      ],
      [
        219,
        "index-1"
      ],
      [
        219,
        "index-3"
      ],
      [
        219,
        "module-fnmatch"
      ],
      [
        220,
        "module-fractions"
      ],
      [
        222,
        "module-ftplib"
      ],
      [
        224,
        "index-13"
      ],
      [
        224,
        "index-8"
      ],
      [
        225,
        "module-functools"
      ],
      [
        226,
        "module-gc"
      ],
      [
        227,
        "module-getopt"
      ],
      [
        228,
        "module-getpass"
      ],
      [
        229,
        "module-gettext"
      ],
      [
        230,
        "module-glob"
      ],
      [
        231,
        "module-graphlib"
      ],
      [
        232,
        "module-grp"
      ],
      [
        233,
        "module-gzip"
      ],
      [
        234,
        "module-hashlib"
      ],
      [
        235,
        "module-heapq"
      ],
      [
        236,
        "module-hmac"
      ],
      [
        237,
        "module-html"
      ],
      [
        238,
        "module-html.entities"
      ],
      [
        239,
        "module-html.parser"
      ],
      [
        240,
        "module-http"
      ],
      [
        241,
        "index-1"
      ],
      [
        241,
        "module-http.client"
      ],
      [
        242,
        "module-http.cookiejar"
      ],
      [
        243,
        "module-http.cookies"
      ],
      [
        244,
        "module-http.server"
      ],
      [
        246,
        "module-idlelib"
      ],
      [
        247,
        "module-imaplib"
      ],
      [
        248,
        "module-imghdr"
      ],
      [
        249,
        "module-importlib"
      ],
      [
        249,
        "module-importlib.abc"
      ],
      [
        249,
        "module-importlib.machinery"
      ],
      [
        249,
        "module-importlib.util"
      ],
      [
        250,
        "module-importlib.metadata"
      ],
      [
        251,
        "module-importlib.resources"
      ],
      [
        252,
        "module-importlib.resources.abc"
      ],
      [
        254,
        "module-inspect"
      ],
      [
        255,
        "index-1"
      ],
      [
        257,
        "module-io"
      ],
      [
        258,
        "module-ipaddress"
      ],
      [
        260,
        "module-itertools"
      ],
      [
        261,
        "module-json"
      ],
      [
        261,
        "module-json.tool"
      ],
      [
        262,
        "module-keyword"
      ],
      [
        264,
        "index-0"
      ],
      [
        264,
        "module-linecache"
      ],
      [
        265,
        "index-0"
      ],
      [
        265,
        "module-locale"
      ],
      [
        266,
        "module-logging"
      ],
      [
        267,
        "module-logging.config"
      ],
      [
        268,
        "module-logging.handlers"
      ],
      [
        269,
        "module-lzma"
      ],
      [
        270,
        "module-mailbox"
      ],
      [
        271,
        "module-mailcap"
      ],
      [
        273,
        "index-0"
      ],
      [
        273,
        "module-marshal"
      ],
      [
        274,
        "module-math"
      ],
      [
        275,
        "module-mimetypes"
      ],
      [
        277,
        "module-mmap"
      ],
      [
        278,
        "module-modulefinder"
      ],
      [
        280,
        "module-msilib"
      ],
      [
        281,
        "module-msvcrt"
      ],
      [
        282,
        "module-multiprocessing"
      ],
      [
        282,
        "module-multiprocessing.connection"
      ],
      [
        282,
        "module-multiprocessing.dummy"
      ],
      [
        282,
        "module-multiprocessing.managers"
      ],
      [
        282,
        "module-multiprocessing.pool"
      ],
      [
        282,
        "module-multiprocessing.sharedctypes"
      ],
      [
        283,
        "module-multiprocessing.shared_memory"
      ],
      [
        285,
        "module-netrc"
      ],
      [
        286,
        "module-nis"
      ],
      [
        287,
        "module-nntplib"
      ],
      [
        288,
        "module-numbers"
      ],
      [
        290,
        "module-operator"
      ],
      [
        291,
        "module-optparse"
      ],
      [
        292,
        "index-23"
      ],
      [
        292,
        "index-30"
      ],
      [
        292,
        "module-os"
      ],
      [
        293,
        "index-2"
      ],
      [
        293,
        "module-os.path"
      ],
      [
        294,
        "module-ossaudiodev"
      ],
      [
        295,
        "module-pathlib"
      ],
      [
        296,
        "index-1"
      ],
      [
        296,
        "module-pdb"
      ],
      [
        298,
        "module-pickle"
      ],
      [
        299,
        "module-pickletools"
      ],
      [
        300,
        "module-pipes"
      ],
      [
        301,
        "module-pkgutil"
      ],
      [
        302,
        "module-platform"
      ],
      [
        303,
        "module-plistlib"
      ],
      [
        304,
        "module-poplib"
      ],
      [
        305,
        "index-0"
      ],
      [
        305,
        "module-posix"
      ],
      [
        306,
        "module-pprint"
      ],
      [
        307,
        "module-cProfile"
      ],
      [
        307,
        "module-profile"
      ],
      [
        307,
        "module-pstats"
      ],
      [
        308,
        "module-pty"
      ],
      [
        309,
        "index-0"
      ],
      [
        309,
        "module-pwd"
      ],
      [
        310,
        "module-py_compile"
      ],
      [
        311,
        "module-pyclbr"
      ],
      [
        312,
        "module-pydoc"
      ],
      [
        313,
        "index-1"
      ],
      [
        313,
        "module-xml.parsers.expat"
      ],
      [
        313,
        "module-xml.parsers.expat.errors"
      ],
      [
        313,
        "module-xml.parsers.expat.model"
      ],
      [
        315,
        "module-queue"
      ],
      [
        316,
        "module-quopri"
      ],
      [
        317,
        "module-random"
      ],
      [
        318,
        "module-re"
      ],
      [
        319,
        "module-readline"
      ],
      [
        320,
        "module-reprlib"
      ],
      [
        321,
        "module-resource"
      ],
      [
        322,
        "module-rlcompleter"
      ],
      [
        323,
        "index-0"
      ],
      [
        323,
        "index-4"
      ],
      [
        323,
        "module-runpy"
      ],
      [
        324,
        "module-sched"
      ],
      [
        325,
        "module-secrets"
      ],
      [
        327,
        "module-select"
      ],
      [
        328,
        "module-selectors"
      ],
      [
        329,
        "index-0"
      ],
      [
        329,
        "index-1"
      ],
      [
        329,
        "module-shelve"
      ],
      [
        330,
        "module-shlex"
      ],
      [
        331,
        "module-shutil"
      ],
      [
        332,
        "module-signal"
      ],
      [
        333,
        "index-0"
      ],
      [
        333,
        "module-site"
      ],
      [
        333,
        "module-sitecustomize"
      ],
      [
        333,
        "module-usercustomize"
      ],
      [
        334,
        "module-smtplib"
      ],
      [
        335,
        "module-sndhdr"
      ],
      [
        336,
        "index-14"
      ],
      [
        336,
        "module-socket"
      ],
      [
        337,
        "module-socketserver"
      ],
      [
        338,
        "module-spwd"
      ],
      [
        339,
        "module-sqlite3"
      ],
      [
        340,
        "module-ssl"
      ],
      [
        341,
        "module-stat"
      ],
      [
        342,
        "module-statistics"
      ],
      [
        343,
        "index-15"
      ],
      [
        343,
        "index-33"
      ],
      [
        343,
        "index-40"
      ],
      [
        343,
        "index-65"
      ],
      [
        344,
        "module-string"
      ],
      [
        345,
        "module-stringprep"
      ],
      [
        346,
        "module-struct"
      ],
      [
        347,
        "module-subprocess"
      ],
      [
        348,
        "module-sunau"
      ],
      [
        350,
        "module-symtable"
      ],
      [
        351,
        "index-21"
      ],
      [
        351,
        "module-sys"
      ],
      [
        352,
        "module-sys.monitoring"
      ],
      [
        354,
        "module-sysconfig"
      ],
      [
        355,
        "module-syslog"
      ],
      [
        356,
        "module-tabnanny"
      ],
      [
        357,
        "module-tarfile"
      ],
      [
        358,
        "module-telnetlib"
      ],
      [
        359,
        "module-tempfile"
      ],
      [
        360,
        "module-termios"
      ],
      [
        361,
        "module-test"
      ],
      [
        361,
        "module-test.regrtest"
      ],
      [
        361,
        "module-test.support"
      ],
      [
        361,
        "module-test.support.bytecode_helper"
      ],
      [
        361,
        "module-test.support.import_helper"
      ],
      [
        361,
        "module-test.support.os_helper"
      ],
      [
        361,
        "module-test.support.script_helper"
      ],
      [
        361,
        "module-test.support.socket_helper"
      ],
      [
        361,
        "module-test.support.threading_helper"
      ],
      [
        361,
        "module-test.support.warnings_helper"
      ],
      [
        363,
        "module-textwrap"
      ],
      [
        364,
        "module-threading"
      ],
      [
        365,
        "module-time"
      ],
      [
        366,
        "module-timeit"
      ],
      [
        368,
        "module-_tkinter"
      ],
      [
        368,
        "module-tkinter"
      ],
      [
        369,
        "module-tkinter.colorchooser"
      ],
      [
        370,
        "module-tkinter.dnd"
      ],
      [
        371,
        "module-tkinter.font"
      ],
      [
        372,
        "module-tkinter.messagebox"
      ],
      [
        373,
        "module-tkinter.scrolledtext"
      ],
      [
        374,
        "module-tkinter.tix"
      ],
      [
        375,
        "module-tkinter.ttk"
      ],
      [
        376,
        "module-token"
      ],
      [
        377,
        "module-tokenize"
      ],
      [
        378,
        "module-tomllib"
      ],
      [
        379,
        "module-trace"
      ],
      [
        380,
        "module-traceback"
      ],
      [
        381,
        "module-tracemalloc"
      ],
      [
        382,
        "module-tty"
      ],
      [
        383,
        "module-turtle"
      ],
      [
        383,
        "module-turtledemo"
      ],
      [
        384,
        "module-types"
      ],
      [
        385,
        "module-typing"
      ],
      [
        386,
        "module-unicodedata"
      ],
      [
        387,
        "module-unittest"
      ],
      [
        388,
        "module-unittest.mock"
      ],
      [
        391,
        "module-urllib"
      ],
      [
        392,
        "module-urllib.error"
      ],
      [
        393,
        "module-urllib.parse"
      ],
      [
        394,
        "module-urllib.request"
      ],
      [
        394,
        "module-urllib.response"
      ],
      [
        395,
        "module-urllib.robotparser"
      ],
      [
        396,
        "module-uu"
      ],
      [
        397,
        "module-uuid"
      ],
      [
        398,
        "module-venv"
      ],
      [
        399,
        "module-warnings"
      ],
      [
        400,
        "module-wave"
      ],
      [
        401,
        "module-weakref"
      ],
      [
        402,
        "module-webbrowser"
      ],
      [
        404,
        "module-winreg"
      ],
      [
        405,
        "module-winsound"
      ],
      [
        406,
        "module-wsgiref"
      ],
      [
        406,
        "module-wsgiref.handlers"
      ],
      [
        406,
        "module-wsgiref.headers"
      ],
      [
        406,
        "module-wsgiref.simple_server"
      ],
      [
        406,
        "module-wsgiref.types"
      ],
      [
        406,
        "module-wsgiref.util"
      ],
      [
        406,
        "module-wsgiref.validate"
      ],
      [
        407,
        "module-xdrlib"
      ],
      [
        408,
        "module-xml"
      ],
      [
        409,
        "module-xml.dom"
      ],
      [
        410,
        "module-xml.dom.minidom"
      ],
      [
        411,
        "module-xml.dom.pulldom"
      ],
      [
        412,
        "module-xml.etree.ElementInclude"
      ],
      [
        412,
        "module-xml.etree.ElementTree"
      ],
      [
        413,
        "module-xml.sax"
      ],
      [
        414,
        "module-xml.sax.handler"
      ],
      [
        415,
        "module-xml.sax.xmlreader"
      ],
      [
        416,
        "module-xml.sax.saxutils"
      ],
      [
        418,
        "module-xmlrpc.client"
      ],
      [
        419,
        "module-xmlrpc.server"
      ],
      [
        420,
        "module-zipapp"
      ],
      [
        421,
        "module-zipfile"
      ],
      [
        422,
        "module-zipimport"
      ],
      [
        423,
        "module-zlib"
      ],
      [
        424,
        "module-zoneinfo"
      ],
      [
        426,
        "index-11"
      ],
      [
        427,
        "index-23"
      ],
      [
        427,
        "index-24"
      ],
      [
        427,
        "index-32"
      ],
      [
        427,
        "index-4"
      ],
      [
        427,
        "index-44"
      ],
      [
        427,
        "index-45"
      ],
      [
        427,
        "index-55"
      ],
      [
        428,
        "index-10"
      ],
      [
        429,
        "index-40"
      ],
      [
        435,
        "index-34"
      ],
      [
        436,
        "index-2"
      ],
      [
        436,
        "index-3"
      ],
      [
        445,
        "index-1"
      ],
      [
        449,
        "index-0"
      ],
      [
        449,
        "index-4"
      ],
      [
        449,
        "index-7"
      ]
    ],
    "signal": [
      [
        23,
        "index-1"
      ],
      [
        23,
        "index-2"
      ],
      [
        23,
        "index-3"
      ],
      [
        114,
        "index-2"
      ],
      [
        332,
        "module-signal"
      ]
    ],
    "strerror (c function)": [
      [
        23,
        "index-0"
      ]
    ],
    "eoferror (built-in exception)": [
      [
        24,
        "index-1"
      ]
    ],
    "pyfile_fromfd (c function)": [
      [
        24,
        "c.PyFile_FromFd"
      ]
    ],
    "pyfile_getline (c function)": [
      [
        24,
        "c.PyFile_GetLine"
      ]
    ],
    "pyfile_setopencodehook (c function)": [
      [
        24,
        "c.PyFile_SetOpenCodeHook"
      ]
    ],
    "pyfile_setopencodehook.py_opencodehookfunction (c type)": [
      [
        24,
        "c.PyFile_SetOpenCodeHook.Py_OpenCodeHookFunction"
      ]
    ],
    "pyfile_writeobject (c function)": [
      [
        24,
        "c.PyFile_WriteObject"
      ]
    ],
    "pyfile_writestring (c function)": [
      [
        24,
        "c.PyFile_WriteString"
      ]
    ],
    "pyobject_asfiledescriptor (c function)": [
      [
        24,
        "c.PyObject_AsFileDescriptor"
      ]
    ],
    "py_print_raw (c macro)": [
      [
        24,
        "index-2"
      ],
      [
        49,
        "c.Py_PRINT_RAW"
      ]
    ],
    "file": [
      [
        24,
        "index-0"
      ],
      [
        162,
        "cmdoption-compileall-arg-file"
      ],
      [
        166,
        "index-0"
      ],
      [
        224,
        "index-6"
      ],
      [
        233,
        "cmdoption-gzip-arg-file"
      ],
      [
        275,
        "index-2"
      ],
      [
        296,
        "index-2"
      ],
      [
        303,
        "index-0"
      ],
      [
        305,
        "index-1"
      ],
      [
        310,
        "index-0"
      ],
      [
        331,
        "index-0"
      ],
      [
        333,
        "index-4"
      ],
      [
        359,
        "index-0"
      ],
      [
        445,
        "index-0"
      ]
    ],
    "pyfloatobject (c type)": [
      [
        25,
        "c.PyFloatObject"
      ]
    ],
    "pyfloat_as_double (c function)": [
      [
        25,
        "c.PyFloat_AS_DOUBLE"
      ]
    ],
    "pyfloat_asdouble (c function)": [
      [
        25,
        "c.PyFloat_AsDouble"
      ]
    ],
    "pyfloat_check (c function)": [
      [
        25,
        "c.PyFloat_Check"
      ]
    ],
    "pyfloat_checkexact (c function)": [
      [
        25,
        "c.PyFloat_CheckExact"
      ]
    ],
    "pyfloat_fromdouble (c function)": [
      [
        25,
        "c.PyFloat_FromDouble"
      ]
    ],
    "pyfloat_fromstring (c function)": [
      [
        25,
        "c.PyFloat_FromString"
      ]
    ],
    "pyfloat_getinfo (c function)": [
      [
        25,
        "c.PyFloat_GetInfo"
      ]
    ],
    "pyfloat_getmax (c function)": [
      [
        25,
        "c.PyFloat_GetMax"
      ]
    ],
    "pyfloat_getmin (c function)": [
      [
        25,
        "c.PyFloat_GetMin"
      ]
    ],
    "pyfloat_pack2 (c function)": [
      [
        25,
        "c.PyFloat_Pack2"
      ]
    ],
    "pyfloat_pack4 (c function)": [
      [
        25,
        "c.PyFloat_Pack4"
      ]
    ],
    "pyfloat_pack8 (c function)": [
      [
        25,
        "c.PyFloat_Pack8"
      ]
    ],
    "pyfloat_type (c var)": [
      [
        25,
        "c.PyFloat_Type"
      ]
    ],
    "pyfloat_unpack2 (c function)": [
      [
        25,
        "c.PyFloat_Unpack2"
      ]
    ],
    "pyfloat_unpack4 (c function)": [
      [
        25,
        "c.PyFloat_Unpack4"
      ]
    ],
    "pyfloat_unpack8 (c function)": [
      [
        25,
        "c.PyFloat_Unpack8"
      ]
    ],
    "floating point": [
      [
        25,
        "index-0"
      ],
      [
        343,
        "index-11"
      ],
      [
        343,
        "index-12"
      ],
      [
        427,
        "index-13"
      ]
    ],
    "pep 523": [
      [
        26,
        "index-0"
      ],
      [
        33,
        "index-39"
      ],
      [
        33,
        "index-40"
      ],
      [
        472,
        "index-36"
      ],
      [
        473,
        "index-41"
      ],
      [
        478,
        "index-25"
      ],
      [
        478,
        "index-26"
      ],
      [
        481,
        "index-24"
      ],
      [
        482,
        "index-253"
      ],
      [
        482,
        "index-258"
      ],
      [
        482,
        "index-266"
      ],
      [
        482,
        "index-6"
      ]
    ],
    "pyframeobject (c type)": [
      [
        26,
        "c.PyFrameObject"
      ]
    ],
    "pyframe_check (c function)": [
      [
        26,
        "c.PyFrame_Check"
      ]
    ],
    "pyframe_getback (c function)": [
      [
        26,
        "c.PyFrame_GetBack"
      ]
    ],
    "pyframe_getbuiltins (c function)": [
      [
        26,
        "c.PyFrame_GetBuiltins"
      ]
    ],
    "pyframe_getcode (c function)": [
      [
        26,
        "c.PyFrame_GetCode"
      ]
    ],
    "pyframe_getgenerator (c function)": [
      [
        26,
        "c.PyFrame_GetGenerator"
      ]
    ],
    "pyframe_getglobals (c function)": [
      [
        26,
        "c.PyFrame_GetGlobals"
      ]
    ],
    "pyframe_getlasti (c function)": [
      [
        26,
        "c.PyFrame_GetLasti"
      ]
    ],
    "pyframe_getlinenumber (c function)": [
      [
        26,
        "c.PyFrame_GetLineNumber"
      ]
    ],
    "pyframe_getlocals (c function)": [
      [
        26,
        "c.PyFrame_GetLocals"
      ]
    ],
    "pyframe_getvar (c function)": [
      [
        26,
        "c.PyFrame_GetVar"
      ]
    ],
    "pyframe_getvarstring (c function)": [
      [
        26,
        "c.PyFrame_GetVarString"
      ]
    ],
    "pyframe_type (c var)": [
      [
        26,
        "c.PyFrame_Type"
      ]
    ],
    "pyunstable_interpreterframe_getcode (c function)": [
      [
        26,
        "c.PyUnstable_InterpreterFrame_GetCode"
      ]
    ],
    "pyunstable_interpreterframe_getlasti (c function)": [
      [
        26,
        "c.PyUnstable_InterpreterFrame_GetLasti"
      ]
    ],
    "pyunstable_interpreterframe_getline (c function)": [
      [
        26,
        "c.PyUnstable_InterpreterFrame_GetLine"
      ]
    ],
    "_pyinterpreterframe (c struct)": [
      [
        26,
        "c._PyInterpreterFrame"
      ]
    ],
    "methodtype (in module types)": [
      [
        27,
        "index-1"
      ],
      [
        44,
        "index-2"
      ],
      [
        384,
        "types.MethodType"
      ]
    ],
    "pyfunctionobject (c type)": [
      [
        27,
        "c.PyFunctionObject"
      ]
    ],
    "pyfunction_addwatcher (c function)": [
      [
        27,
        "c.PyFunction_AddWatcher"
      ]
    ],
    "pyfunction_check (c function)": [
      [
        27,
        "c.PyFunction_Check"
      ]
    ],
    "pyfunction_clearwatcher (c function)": [
      [
        27,
        "c.PyFunction_ClearWatcher"
      ]
    ],
    "pyfunction_getannotations (c function)": [
      [
        27,
        "c.PyFunction_GetAnnotations"
      ]
    ],
    "pyfunction_getclosure (c function)": [
      [
        27,
        "c.PyFunction_GetClosure"
      ]
    ],
    "pyfunction_getcode (c function)": [
      [
        27,
        "c.PyFunction_GetCode"
      ]
    ],
    "pyfunction_getdefaults (c function)": [
      [
        27,
        "c.PyFunction_GetDefaults"
      ]
    ],
    "pyfunction_getglobals (c function)": [
      [
        27,
        "c.PyFunction_GetGlobals"
      ]
    ],
    "pyfunction_getmodule (c function)": [
      [
        27,
        "c.PyFunction_GetModule"
      ]
    ],
    "pyfunction_new (c function)": [
      [
        27,
        "c.PyFunction_New"
      ]
    ],
    "pyfunction_newwithqualname (c function)": [
      [
        27,
        "c.PyFunction_NewWithQualName"
      ]
    ],
    "pyfunction_setannotations (c function)": [
      [
        27,
        "c.PyFunction_SetAnnotations"
      ]
    ],
    "pyfunction_setclosure (c function)": [
      [
        27,
        "c.PyFunction_SetClosure"
      ]
    ],
    "pyfunction_setdefaults (c function)": [
      [
        27,
        "c.PyFunction_SetDefaults"
      ]
    ],
    "pyfunction_setvectorcall (c function)": [
      [
        27,
        "c.PyFunction_SetVectorcall"
      ]
    ],
    "pyfunction_type (c var)": [
      [
        27,
        "c.PyFunction_Type"
      ]
    ],
    "pyfunction_watchcallback (c type)": [
      [
        27,
        "c.PyFunction_WatchCallback"
      ]
    ],
    "pyfunction_watchevent (c type)": [
      [
        27,
        "c.PyFunction_WatchEvent"
      ]
    ],
    "function": [
      [
        27,
        "index-0"
      ],
      [
        87,
        "term-function"
      ],
      [
        426,
        "index-28"
      ],
      [
        426,
        "index-34"
      ],
      [
        427,
        "index-33"
      ],
      [
        427,
        "index-34"
      ],
      [
        427,
        "index-39"
      ],
      [
        427,
        "index-40"
      ],
      [
        427,
        "index-41"
      ],
      [
        427,
        "index-42"
      ],
      [
        429,
        "index-23"
      ],
      [
        429,
        "index-52"
      ],
      [
        429,
        "index-53"
      ],
      [
        429,
        "index-90"
      ],
      [
        435,
        "index-24"
      ],
      [
        435,
        "index-26"
      ],
      [
        440,
        "index-6"
      ]
    ],
    "pygc_collect (c function)": [
      [
        28,
        "c.PyGC_Collect"
      ]
    ],
    "pygc_disable (c function)": [
      [
        28,
        "c.PyGC_Disable"
      ]
    ],
    "pygc_enable (c function)": [
      [
        28,
        "c.PyGC_Enable"
      ]
    ],
    "pygc_isenabled (c function)": [
      [
        28,
        "c.PyGC_IsEnabled"
      ]
    ],
    "pyobject_gc_del (c function)": [
      [
        28,
        "c.PyObject_GC_Del"
      ]
    ],
    "pyobject_gc_isfinalized (c function)": [
      [
        28,
        "c.PyObject_GC_IsFinalized"
      ]
    ],
    "pyobject_gc_istracked (c function)": [
      [
        28,
        "c.PyObject_GC_IsTracked"
      ]
    ],
    "pyobject_gc_new (c macro)": [
      [
        28,
        "c.PyObject_GC_New"
      ]
    ],
    "pyobject_gc_newvar (c macro)": [
      [
        28,
        "c.PyObject_GC_NewVar"
      ]
    ],
    "pyobject_gc_resize (c macro)": [
      [
        28,
        "c.PyObject_GC_Resize"
      ]
    ],
    "pyobject_gc_track (c function)": [
      [
        28,
        "c.PyObject_GC_Track"
      ]
    ],
    "pyobject_gc_untrack (c function)": [
      [
        28,
        "c.PyObject_GC_UnTrack"
      ]
    ],
    "pyobject_is_gc (c function)": [
      [
        28,
        "c.PyObject_IS_GC"
      ]
    ],
    "pyunstable_gc_visitobjects (c function)": [
      [
        28,
        "c.PyUnstable_GC_VisitObjects"
      ]
    ],
    "pyunstable_object_gc_newwithextradata (c function)": [
      [
        28,
        "c.PyUnstable_Object_GC_NewWithExtraData"
      ]
    ],
    "py_visit (c function)": [
      [
        28,
        "c.Py_VISIT"
      ]
    ],
    "gcvisitobjects_t (c type)": [
      [
        28,
        "c.gcvisitobjects_t"
      ]
    ],
    "inquiry (c type)": [
      [
        28,
        "c.inquiry"
      ]
    ],
    "traverseproc (c type)": [
      [
        28,
        "c.traverseproc"
      ]
    ],
    "visitproc (c type)": [
      [
        28,
        "c.visitproc"
      ]
    ],
    "pygenobject (c type)": [
      [
        29,
        "c.PyGenObject"
      ]
    ],
    "pygen_check (c function)": [
      [
        29,
        "c.PyGen_Check"
      ]
    ],
    "pygen_checkexact (c function)": [
      [
        29,
        "c.PyGen_CheckExact"
      ]
    ],
    "pygen_new (c function)": [
      [
        29,
        "c.PyGen_New"
      ]
    ],
    "pygen_newwithqualname (c function)": [
      [
        29,
        "c.PyGen_NewWithQualName"
      ]
    ],
    "pygen_type (c var)": [
      [
        29,
        "c.PyGen_Type"
      ]
    ],
    "pep 456": [
      [
        30,
        "index-0"
      ],
      [
        476,
        "index-13"
      ],
      [
        476,
        "index-47"
      ]
    ],
    "pyhash_funcdef (c type)": [
      [
        30,
        "c.PyHash_FuncDef"
      ]
    ],
    "pyhash_funcdef.hash_bits (c member)": [
      [
        30,
        "c.PyHash_FuncDef.hash_bits"
      ]
    ],
    "pyhash_funcdef.name (c member)": [
      [
        30,
        "c.PyHash_FuncDef.name"
      ]
    ],
    "pyhash_funcdef.seed_bits (c member)": [
      [
        30,
        "c.PyHash_FuncDef.seed_bits"
      ]
    ],
    "pyhash_getfuncdef (c function)": [
      [
        30,
        "c.PyHash_GetFuncDef"
      ]
    ],
    "py_hash_t (c type)": [
      [
        30,
        "c.Py_hash_t"
      ]
    ],
    "py_uhash_t (c type)": [
      [
        30,
        "c.Py_uhash_t"
      ]
    ],
    "pep 3147": [
      [
        31,
        "index-3"
      ],
      [
        85,
        "index-3"
      ],
      [
        162,
        "index-0"
      ],
      [
        162,
        "index-2"
      ],
      [
        162,
        "index-3"
      ],
      [
        249,
        "index-11"
      ],
      [
        249,
        "index-21"
      ],
      [
        249,
        "index-23"
      ],
      [
        249,
        "index-24"
      ],
      [
        310,
        "index-1"
      ],
      [
        310,
        "index-4"
      ],
      [
        323,
        "index-2"
      ],
      [
        361,
        "index-3"
      ],
      [
        431,
        "index-13"
      ],
      [
        449,
        "index-3"
      ],
      [
        474,
        "index-5"
      ],
      [
        475,
        "index-18"
      ]
    ],
    "pyimport_addmodule (c function)": [
      [
        31,
        "c.PyImport_AddModule"
      ]
    ],
    "pyimport_addmoduleobject (c function)": [
      [
        31,
        "c.PyImport_AddModuleObject"
      ]
    ],
    "pyimport_appendinittab (c function)": [
      [
        31,
        "c.PyImport_AppendInittab"
      ]
    ],
    "pyimport_execcodemodule (c function)": [
      [
        31,
        "c.PyImport_ExecCodeModule"
      ]
    ],
    "pyimport_execcodemoduleex (c function)": [
      [
        31,
        "c.PyImport_ExecCodeModuleEx"
      ]
    ],
    "pyimport_execcodemoduleobject (c function)": [
      [
        31,
        "c.PyImport_ExecCodeModuleObject"
      ]
    ],
    "pyimport_execcodemodulewithpathnames (c function)": [
      [
        31,
        "c.PyImport_ExecCodeModuleWithPathnames"
      ]
    ],
    "pyimport_extendinittab (c function)": [
      [
        31,
        "c.PyImport_ExtendInittab"
      ]
    ],
    "pyimport_frozenmodules (c var)": [
      [
        31,
        "c.PyImport_FrozenModules"
      ]
    ],
    "pyimport_getimporter (c function)": [
      [
        31,
        "c.PyImport_GetImporter"
      ]
    ],
    "pyimport_getmagicnumber (c function)": [
      [
        31,
        "c.PyImport_GetMagicNumber"
      ]
    ],
    "pyimport_getmagictag (c function)": [
      [
        31,
        "c.PyImport_GetMagicTag"
      ]
    ],
    "pyimport_getmodule (c function)": [
      [
        31,
        "c.PyImport_GetModule"
      ]
    ],
    "pyimport_getmoduledict (c function)": [
      [
        31,
        "c.PyImport_GetModuleDict"
      ]
    ],
    "pyimport_import (c function)": [
      [
        31,
        "c.PyImport_Import"
      ]
    ],
    "pyimport_importfrozenmodule (c function)": [
      [
        31,
        "c.PyImport_ImportFrozenModule"
      ]
    ],
    "pyimport_importfrozenmoduleobject (c function)": [
      [
        31,
        "c.PyImport_ImportFrozenModuleObject"
      ]
    ],
    "pyimport_importmodule (c function)": [
      [
        31,
        "c.PyImport_ImportModule"
      ]
    ],
    "pyimport_importmoduleex (c function)": [
      [
        31,
        "c.PyImport_ImportModuleEx"
      ]
    ],
    "pyimport_importmodulelevel (c function)": [
      [
        31,
        "c.PyImport_ImportModuleLevel"
      ]
    ],
    "pyimport_importmodulelevelobject (c function)": [
      [
        31,
        "c.PyImport_ImportModuleLevelObject"
      ]
    ],
    "pyimport_importmodulenoblock (c function)": [
      [
        31,
        "c.PyImport_ImportModuleNoBlock"
      ]
    ],
    "pyimport_reloadmodule (c function)": [
      [
        31,
        "c.PyImport_ReloadModule"
      ]
    ],
    "__all__": [
      [
        31,
        "index-0"
      ],
      [
        449,
        "index-8"
      ]
    ],
    "__all__ (package variable)": [
      [
        31,
        "index-0"
      ]
    ],
    "__import__": [
      [
        31,
        "index-1"
      ]
    ],
    "_frozen (c struct)": [
      [
        31,
        "c._frozen"
      ]
    ],
    "_inittab (c struct)": [
      [
        31,
        "c._inittab"
      ]
    ],
    "_inittab.name (c member)": [
      [
        31,
        "c._inittab.name"
      ]
    ],
    "compile": [
      [
        31,
        "index-2"
      ],
      [
        343,
        "index-63"
      ],
      [
        384,
        "index-4"
      ],
      [
        435,
        "index-44"
      ]
    ],
    "freeze utility": [
      [
        31,
        "index-4"
      ]
    ],
    "modules (in module sys)": [
      [
        31,
        "index-0"
      ],
      [
        33,
        "index-15"
      ],
      [
        351,
        "sys.modules"
      ]
    ],
    "package variable": [
      [
        31,
        "index-0"
      ]
    ],
    "pep 489": [
      [
        33,
        "index-41"
      ],
      [
        45,
        "index-8"
      ],
      [
        71,
        "index-1"
      ],
      [
        73,
        "index-0"
      ],
      [
        249,
        "index-17"
      ],
      [
        249,
        "index-18"
      ],
      [
        249,
        "index-19"
      ],
      [
        249,
        "index-20"
      ],
      [
        249,
        "index-26"
      ],
      [
        249,
        "index-8"
      ],
      [
        477,
        "index-26"
      ],
      [
        477,
        "index-28"
      ],
      [
        477,
        "index-45"
      ],
      [
        482,
        "index-111"
      ],
      [
        482,
        "index-112"
      ],
      [
        482,
        "index-114"
      ],
      [
        482,
        "index-117"
      ],
      [
        482,
        "index-119"
      ],
      [
        482,
        "index-120"
      ],
      [
        482,
        "index-121"
      ],
      [
        482,
        "index-122"
      ],
      [
        482,
        "index-123"
      ],
      [
        482,
        "index-124"
      ],
      [
        482,
        "index-125"
      ],
      [
        482,
        "index-126"
      ],
      [
        482,
        "index-127"
      ],
      [
        482,
        "index-128"
      ],
      [
        482,
        "index-129"
      ],
      [
        482,
        "index-130"
      ],
      [
        482,
        "index-131"
      ],
      [
        482,
        "index-132"
      ],
      [
        482,
        "index-134"
      ],
      [
        482,
        "index-139"
      ],
      [
        482,
        "index-140"
      ],
      [
        482,
        "index-141"
      ],
      [
        482,
        "index-142"
      ],
      [
        482,
        "index-143"
      ],
      [
        482,
        "index-144"
      ],
      [
        482,
        "index-145"
      ],
      [
        482,
        "index-146"
      ],
      [
        482,
        "index-147"
      ],
      [
        482,
        "index-148"
      ],
      [
        482,
        "index-149"
      ],
      [
        482,
        "index-153"
      ],
      [
        482,
        "index-154"
      ],
      [
        482,
        "index-155"
      ],
      [
        482,
        "index-159"
      ],
      [
        482,
        "index-160"
      ],
      [
        482,
        "index-161"
      ],
      [
        482,
        "index-165"
      ],
      [
        482,
        "index-166"
      ],
      [
        482,
        "index-167"
      ],
      [
        482,
        "index-168"
      ],
      [
        482,
        "index-169"
      ],
      [
        482,
        "index-177"
      ],
      [
        482,
        "index-178"
      ],
      [
        482,
        "index-179"
      ],
      [
        482,
        "index-182"
      ],
      [
        482,
        "index-184"
      ],
      [
        482,
        "index-186"
      ],
      [
        482,
        "index-193"
      ],
      [
        482,
        "index-194"
      ],
      [
        482,
        "index-195"
      ],
      [
        482,
        "index-196"
      ],
      [
        482,
        "index-197"
      ],
      [
        482,
        "index-202"
      ],
      [
        482,
        "index-29"
      ]
    ],
    "pep 528": [
      [
        33,
        "index-10"
      ],
      [
        34,
        "index-17"
      ],
      [
        460,
        "index-16"
      ],
      [
        478,
        "index-22"
      ]
    ],
    "pep 529": [
      [
        33,
        "index-8"
      ],
      [
        64,
        "index-5"
      ],
      [
        292,
        "index-27"
      ],
      [
        351,
        "index-34"
      ],
      [
        351,
        "index-9"
      ],
      [
        454,
        "index-40"
      ],
      [
        460,
        "index-17"
      ],
      [
        478,
        "index-20"
      ],
      [
        480,
        "index-19"
      ],
      [
        482,
        "index-206"
      ],
      [
        482,
        "index-260"
      ],
      [
        482,
        "index-62"
      ]
    ],
    "pep 539": [
      [
        33,
        "index-48"
      ],
      [
        479,
        "index-14"
      ],
      [
        479,
        "index-15"
      ],
      [
        482,
        "index-247"
      ]
    ],
    "pep 554": [
      [
        33,
        "index-47"
      ],
      [
        473,
        "index-10"
      ]
    ],
    "pythondebug": [
      [
        33,
        "index-0"
      ],
      [
        34,
        "index-22"
      ],
      [
        454,
        "envvar-PYTHONDEBUG"
      ],
      [
        454,
        "index-2"
      ],
      [
        455,
        "index-6"
      ]
    ],
    "pythondontwritebytecode": [
      [
        33,
        "index-1"
      ],
      [
        34,
        "index-32"
      ],
      [
        85,
        "index-4"
      ],
      [
        351,
        "index-6"
      ],
      [
        454,
        "envvar-PYTHONDONTWRITEBYTECODE"
      ],
      [
        454,
        "index-1"
      ],
      [
        467,
        "index-20"
      ],
      [
        467,
        "index-24"
      ]
    ],
    "pythonhashseed": [
      [
        33,
        "index-2"
      ],
      [
        33,
        "index-3"
      ],
      [
        34,
        "index-11"
      ],
      [
        427,
        "index-81"
      ],
      [
        454,
        "envvar-PYTHONHASHSEED"
      ],
      [
        454,
        "index-13"
      ],
      [
        454,
        "index-14"
      ],
      [
        454,
        "index-35"
      ],
      [
        475,
        "index-23"
      ],
      [
        475,
        "index-35"
      ],
      [
        482,
        "index-236"
      ]
    ],
    "pythonhome": [
      [
        33,
        "index-30"
      ],
      [
        33,
        "index-31"
      ],
      [
        33,
        "index-5"
      ],
      [
        34,
        "index-12"
      ],
      [
        35,
        "index-21"
      ],
      [
        35,
        "index-24"
      ],
      [
        353,
        "index-2"
      ],
      [
        353,
        "index-4"
      ],
      [
        361,
        "index-0"
      ],
      [
        454,
        "envvar-PYTHONHOME"
      ],
      [
        454,
        "index-28"
      ],
      [
        454,
        "index-29"
      ],
      [
        454,
        "index-32"
      ],
      [
        454,
        "index-4"
      ],
      [
        460,
        "index-33"
      ],
      [
        460,
        "index-35"
      ],
      [
        460,
        "index-37"
      ],
      [
        473,
        "index-47"
      ],
      [
        478,
        "index-2"
      ]
    ],
    "pythoninspect": [
      [
        33,
        "index-6"
      ],
      [
        34,
        "index-14"
      ],
      [
        454,
        "envvar-PYTHONINSPECT"
      ],
      [
        454,
        "index-6"
      ],
      [
        464,
        "index-28"
      ]
    ],
    "pythonioencoding": [
      [
        33,
        "index-17"
      ],
      [
        33,
        "index-18"
      ],
      [
        34,
        "index-26"
      ],
      [
        292,
        "index-1"
      ],
      [
        351,
        "index-35"
      ],
      [
        454,
        "envvar-PYTHONIOENCODING"
      ],
      [
        454,
        "index-41"
      ],
      [
        467,
        "index-21"
      ],
      [
        476,
        "index-53"
      ]
    ],
    "pythonlegacywindowsfsencoding": [
      [
        33,
        "index-7"
      ],
      [
        34,
        "index-1"
      ],
      [
        351,
        "index-33"
      ],
      [
        454,
        "envvar-PYTHONLEGACYWINDOWSFSENCODING"
      ],
      [
        478,
        "index-19"
      ]
    ],
    "pythonlegacywindowsstdio": [
      [
        33,
        "index-9"
      ],
      [
        34,
        "index-16"
      ],
      [
        351,
        "index-37"
      ],
      [
        454,
        "envvar-PYTHONLEGACYWINDOWSSTDIO"
      ],
      [
        454,
        "index-36"
      ],
      [
        478,
        "index-21"
      ]
    ],
    "pythonnousersite": [
      [
        33,
        "index-11"
      ],
      [
        34,
        "index-29"
      ],
      [
        333,
        "index-6"
      ],
      [
        454,
        "envvar-PYTHONNOUSERSITE"
      ],
      [
        467,
        "index-6"
      ]
    ],
    "pythonoptimize": [
      [
        33,
        "index-12"
      ],
      [
        34,
        "index-21"
      ],
      [
        454,
        "envvar-PYTHONOPTIMIZE"
      ],
      [
        454,
        "index-8"
      ]
    ],
    "pythonpath": [
      [
        33,
        "index-4"
      ],
      [
        34,
        "index-20"
      ],
      [
        35,
        "index-22"
      ],
      [
        35,
        "index-25"
      ],
      [
        71,
        "index-0"
      ],
      [
        150,
        "index-4"
      ],
      [
        351,
        "index-22"
      ],
      [
        351,
        "index-23"
      ],
      [
        353,
        "index-0"
      ],
      [
        353,
        "index-1"
      ],
      [
        361,
        "index-1"
      ],
      [
        431,
        "index-17"
      ],
      [
        431,
        "index-18"
      ],
      [
        449,
        "index-1"
      ],
      [
        449,
        "index-5"
      ],
      [
        449,
        "index-6"
      ],
      [
        454,
        "envvar-PYTHONPATH"
      ],
      [
        454,
        "index-3"
      ],
      [
        454,
        "index-31"
      ],
      [
        454,
        "index-33"
      ],
      [
        454,
        "index-34"
      ],
      [
        458,
        "index-0"
      ],
      [
        460,
        "index-11"
      ],
      [
        460,
        "index-32"
      ],
      [
        460,
        "index-34"
      ],
      [
        460,
        "index-36"
      ],
      [
        476,
        "index-55"
      ],
      [
        476,
        "index-56"
      ]
    ],
    "pythonunbuffered": [
      [
        33,
        "index-13"
      ],
      [
        34,
        "index-5"
      ],
      [
        351,
        "index-38"
      ],
      [
        454,
        "envvar-PYTHONUNBUFFERED"
      ],
      [
        454,
        "index-16"
      ],
      [
        482,
        "index-203"
      ]
    ],
    "pythonverbose": [
      [
        33,
        "index-14"
      ],
      [
        34,
        "index-30"
      ],
      [
        454,
        "envvar-PYTHONVERBOSE"
      ],
      [
        454,
        "index-17"
      ]
    ],
    "pyeval_acquirelock (c function)": [
      [
        33,
        "c.PyEval_AcquireLock"
      ]
    ],
    "pyeval_acquirethread (c function)": [
      [
        33,
        "c.PyEval_AcquireThread"
      ]
    ],
    "pyeval_acquirethread()": [
      [
        33,
        "index-37"
      ]
    ],
    "pyeval_initthreads (c function)": [
      [
        33,
        "c.PyEval_InitThreads"
      ]
    ],
    "pyeval_initthreads()": [
      [
        33,
        "index-15"
      ]
    ],
    "pyeval_releaselock (c function)": [
      [
        33,
        "c.PyEval_ReleaseLock"
      ]
    ],
    "pyeval_releasethread (c function)": [
      [
        33,
        "c.PyEval_ReleaseThread"
      ]
    ],
    "pyeval_releasethread()": [
      [
        33,
        "index-37"
      ]
    ],
    "pyeval_restorethread (c function)": [
      [
        33,
        "c.PyEval_RestoreThread"
      ],
      [
        33,
        "index-36"
      ]
    ],
    "pyeval_restorethread()": [
      [
        33,
        "index-37"
      ]
    ],
    "pyeval_savethread (c function)": [
      [
        33,
        "c.PyEval_SaveThread"
      ],
      [
        33,
        "index-36"
      ]
    ],
    "pyeval_savethread()": [
      [
        33,
        "index-37"
      ]
    ],
    "pyeval_setprofile (c function)": [
      [
        33,
        "c.PyEval_SetProfile"
      ]
    ],
    "pyeval_setprofileallthreads (c function)": [
      [
        33,
        "c.PyEval_SetProfileAllThreads"
      ]
    ],
    "pyeval_settrace (c function)": [
      [
        33,
        "c.PyEval_SetTrace"
      ]
    ],
    "pyeval_settraceallthreads (c function)": [
      [
        33,
        "c.PyEval_SetTraceAllThreads"
      ]
    ],
    "pyeval_threadsinitialized (c function)": [
      [
        33,
        "c.PyEval_ThreadsInitialized"
      ]
    ],
    "pygilstate_check (c function)": [
      [
        33,
        "c.PyGILState_Check"
      ]
    ],
    "pygilstate_ensure (c function)": [
      [
        33,
        "c.PyGILState_Ensure"
      ]
    ],
    "pygilstate_getthisthreadstate (c function)": [
      [
        33,
        "c.PyGILState_GetThisThreadState"
      ]
    ],
    "pygilstate_release (c function)": [
      [
        33,
        "c.PyGILState_Release"
      ]
    ],
    "pyinterpreterconfig (c type)": [
      [
        33,
        "c.PyInterpreterConfig"
      ]
    ],
    "pyinterpreterconfig.allow_daemon_threads (c member)": [
      [
        33,
        "c.PyInterpreterConfig.allow_daemon_threads"
      ]
    ],
    "pyinterpreterconfig.allow_exec (c member)": [
      [
        33,
        "c.PyInterpreterConfig.allow_exec"
      ]
    ],
    "pyinterpreterconfig.allow_fork (c member)": [
      [
        33,
        "c.PyInterpreterConfig.allow_fork"
      ]
    ],
    "pyinterpreterconfig.allow_threads (c member)": [
      [
        33,
        "c.PyInterpreterConfig.allow_threads"
      ]
    ],
    "pyinterpreterconfig.check_multi_interp_extensions (c member)": [
      [
        33,
        "c.PyInterpreterConfig.check_multi_interp_extensions"
      ]
    ],
    "pyinterpreterconfig.gil (c member)": [
      [
        33,
        "c.PyInterpreterConfig.gil"
      ]
    ],
    "pyinterpreterconfig.use_main_obmalloc (c member)": [
      [
        33,
        "c.PyInterpreterConfig.use_main_obmalloc"
      ]
    ],
    "pyinterpreterconfig_default_gil (c macro)": [
      [
        33,
        "c.PyInterpreterConfig_DEFAULT_GIL"
      ]
    ],
    "pyinterpreterconfig_own_gil (c macro)": [
      [
        33,
        "c.PyInterpreterConfig_OWN_GIL"
      ]
    ],
    "pyinterpreterconfig_shared_gil (c macro)": [
      [
        33,
        "c.PyInterpreterConfig_SHARED_GIL"
      ]
    ],
    "pyinterpreterstate (c type)": [
      [
        33,
        "c.PyInterpreterState"
      ]
    ],
    "pyinterpreterstate_clear (c function)": [
      [
        33,
        "c.PyInterpreterState_Clear"
      ]
    ],
    "pyinterpreterstate_delete (c function)": [
      [
        33,
        "c.PyInterpreterState_Delete"
      ]
    ],
    "pyinterpreterstate_get (c function)": [
      [
        33,
        "c.PyInterpreterState_Get"
      ]
    ],
    "pyinterpreterstate_getdict (c function)": [
      [
        33,
        "c.PyInterpreterState_GetDict"
      ]
    ],
    "pyinterpreterstate_getid (c function)": [
      [
        33,
        "c.PyInterpreterState_GetID"
      ]
    ],
    "pyinterpreterstate_head (c function)": [
      [
        33,
        "c.PyInterpreterState_Head"
      ]
    ],
    "pyinterpreterstate_main (c function)": [
      [
        33,
        "c.PyInterpreterState_Main"
      ]
    ],
    "pyinterpreterstate_new (c function)": [
      [
        33,
        "c.PyInterpreterState_New"
      ]
    ],
    "pyinterpreterstate_next (c function)": [
      [
        33,
        "c.PyInterpreterState_Next"
      ]
    ],
    "pyinterpreterstate_threadhead (c function)": [
      [
        33,
        "c.PyInterpreterState_ThreadHead"
      ]
    ],
    "pysys_setargv (c function)": [
      [
        33,
        "c.PySys_SetArgv"
      ],
      [
        33,
        "index-15"
      ]
    ],
    "pysys_setargvex (c function)": [
      [
        33,
        "c.PySys_SetArgvEx"
      ],
      [
        33,
        "index-15"
      ]
    ],
    "pythreadstate (c type)": [
      [
        33,
        "c.PyThreadState"
      ],
      [
        33,
        "index-34"
      ]
    ],
    "pythreadstate.interp (c member)": [
      [
        33,
        "c.PyThreadState.interp"
      ]
    ],
    "pythreadstate_clear (c function)": [
      [
        33,
        "c.PyThreadState_Clear"
      ]
    ],
    "pythreadstate_delete (c function)": [
      [
        33,
        "c.PyThreadState_Delete"
      ]
    ],
    "pythreadstate_deletecurrent (c function)": [
      [
        33,
        "c.PyThreadState_DeleteCurrent"
      ]
    ],
    "pythreadstate_entertracing (c function)": [
      [
        33,
        "c.PyThreadState_EnterTracing"
      ]
    ],
    "pythreadstate_get (c function)": [
      [
        33,
        "c.PyThreadState_Get"
      ]
    ],
    "pythreadstate_getdict (c function)": [
      [
        33,
        "c.PyThreadState_GetDict"
      ]
    ],
    "pythreadstate_getframe (c function)": [
      [
        33,
        "c.PyThreadState_GetFrame"
      ]
    ],
    "pythreadstate_getid (c function)": [
      [
        33,
        "c.PyThreadState_GetID"
      ]
    ],
    "pythreadstate_getinterpreter (c function)": [
      [
        33,
        "c.PyThreadState_GetInterpreter"
      ]
    ],
    "pythreadstate_leavetracing (c function)": [
      [
        33,
        "c.PyThreadState_LeaveTracing"
      ]
    ],
    "pythreadstate_new (c function)": [
      [
        33,
        "c.PyThreadState_New"
      ]
    ],
    "pythreadstate_next (c function)": [
      [
        33,
        "c.PyThreadState_Next"
      ]
    ],
    "pythreadstate_setasyncexc (c function)": [
      [
        33,
        "c.PyThreadState_SetAsyncExc"
      ]
    ],
    "pythreadstate_swap (c function)": [
      [
        33,
        "c.PyThreadState_Swap"
      ]
    ],
    "pythread_reinittls (c function)": [
      [
        33,
        "c.PyThread_ReInitTLS"
      ]
    ],
    "pythread_create_key (c function)": [
      [
        33,
        "c.PyThread_create_key"
      ]
    ],
    "pythread_delete_key (c function)": [
      [
        33,
        "c.PyThread_delete_key"
      ]
    ],
    "pythread_delete_key_value (c function)": [
      [
        33,
        "c.PyThread_delete_key_value"
      ]
    ],
    "pythread_get_key_value (c function)": [
      [
        33,
        "c.PyThread_get_key_value"
      ]
    ],
    "pythread_set_key_value (c function)": [
      [
        33,
        "c.PyThread_set_key_value"
      ]
    ],
    "pythread_tss_alloc (c function)": [
      [
        33,
        "c.PyThread_tss_alloc"
      ]
    ],
    "pythread_tss_create (c function)": [
      [
        33,
        "c.PyThread_tss_create"
      ]
    ],
    "pythread_tss_delete (c function)": [
      [
        33,
        "c.PyThread_tss_delete"
      ]
    ],
    "pythread_tss_free (c function)": [
      [
        33,
        "c.PyThread_tss_free"
      ]
    ],
    "pythread_tss_get (c function)": [
      [
        33,
        "c.PyThread_tss_get"
      ]
    ],
    "pythread_tss_is_created (c function)": [
      [
        33,
        "c.PyThread_tss_is_created"
      ]
    ],
    "pythread_tss_set (c function)": [
      [
        33,
        "c.PyThread_tss_set"
      ]
    ],
    "pytrace_call (c var)": [
      [
        33,
        "c.PyTrace_CALL"
      ]
    ],
    "pytrace_c_call (c var)": [
      [
        33,
        "c.PyTrace_C_CALL"
      ]
    ],
    "pytrace_c_exception (c var)": [
      [
        33,
        "c.PyTrace_C_EXCEPTION"
      ]
    ],
    "pytrace_c_return (c var)": [
      [
        33,
        "c.PyTrace_C_RETURN"
      ]
    ],
    "pytrace_exception (c var)": [
      [
        33,
        "c.PyTrace_EXCEPTION"
      ]
    ],
    "pytrace_line (c var)": [
      [
        33,
        "c.PyTrace_LINE"
      ]
    ],
    "pytrace_opcode (c var)": [
      [
        33,
        "c.PyTrace_OPCODE"
      ]
    ],
    "pytrace_return (c var)": [
      [
        33,
        "c.PyTrace_RETURN"
      ]
    ],
    "py_addpendingcall (c function)": [
      [
        33,
        "c.Py_AddPendingCall"
      ]
    ],
    "py_begin_allow_threads (c macro)": [
      [
        33,
        "c.Py_BEGIN_ALLOW_THREADS"
      ],
      [
        33,
        "index-35"
      ]
    ],
    "py_block_threads (c macro)": [
      [
        33,
        "c.Py_BLOCK_THREADS"
      ]
    ],
    "py_byteswarningflag (c var)": [
      [
        33,
        "c.Py_BytesWarningFlag"
      ]
    ],
    "py_debugflag (c var)": [
      [
        33,
        "c.Py_DebugFlag"
      ]
    ],
    "py_dontwritebytecodeflag (c var)": [
      [
        33,
        "c.Py_DontWriteBytecodeFlag"
      ]
    ],
    "py_end_allow_threads (c macro)": [
      [
        33,
        "c.Py_END_ALLOW_THREADS"
      ],
      [
        33,
        "index-35"
      ]
    ],
    "py_endinterpreter (c function)": [
      [
        33,
        "c.Py_EndInterpreter"
      ]
    ],
    "py_fatalerror()": [
      [
        33,
        "index-29"
      ]
    ],
    "py_finalize (c function)": [
      [
        33,
        "c.Py_Finalize"
      ]
    ],
    "py_finalizeex (c function)": [
      [
        33,
        "c.Py_FinalizeEx"
      ],
      [
        33,
        "index-15"
      ],
      [
        33,
        "index-43"
      ],
      [
        33,
        "index-46"
      ],
      [
        59,
        "index-3"
      ],
      [
        59,
        "index-4"
      ]
    ],
    "py_frozenflag (c var)": [
      [
        33,
        "c.Py_FrozenFlag"
      ]
    ],
    "py_getbuildinfo (c function)": [
      [
        33,
        "c.Py_GetBuildInfo"
      ]
    ],
    "py_getcompiler (c function)": [
      [
        33,
        "c.Py_GetCompiler"
      ]
    ],
    "py_getcopyright (c function)": [
      [
        33,
        "c.Py_GetCopyright"
      ]
    ],
    "py_getexecprefix (c function)": [
      [
        33,
        "c.Py_GetExecPrefix"
      ],
      [
        35,
        "index-23"
      ]
    ],
    "py_getpath (c function)": [
      [
        33,
        "c.Py_GetPath"
      ],
      [
        35,
        "index-23"
      ]
    ],
    "py_getpath()": [
      [
        33,
        "index-19"
      ],
      [
        33,
        "index-23"
      ]
    ],
    "py_getplatform (c function)": [
      [
        33,
        "c.Py_GetPlatform"
      ]
    ],
    "py_getprefix (c function)": [
      [
        33,
        "c.Py_GetPrefix"
      ],
      [
        35,
        "index-23"
      ]
    ],
    "py_getprogramfullpath (c function)": [
      [
        33,
        "c.Py_GetProgramFullPath"
      ],
      [
        35,
        "index-23"
      ]
    ],
    "py_getprogramname (c function)": [
      [
        33,
        "c.Py_GetProgramName"
      ]
    ],
    "py_getpythonhome (c function)": [
      [
        33,
        "c.Py_GetPythonHome"
      ]
    ],
    "py_getversion (c function)": [
      [
        33,
        "c.Py_GetVersion"
      ]
    ],
    "py_hashrandomizationflag (c var)": [
      [
        33,
        "c.Py_HashRandomizationFlag"
      ]
    ],
    "py_ignoreenvironmentflag (c var)": [
      [
        33,
        "c.Py_IgnoreEnvironmentFlag"
      ]
    ],
    "py_initialize (c function)": [
      [
        33,
        "c.Py_Initialize"
      ],
      [
        33,
        "index-43"
      ],
      [
        35,
        "index-18"
      ]
    ],
    "py_initialize()": [
      [
        33,
        "index-16"
      ],
      [
        33,
        "index-19"
      ]
    ],
    "py_initializeex (c function)": [
      [
        33,
        "c.Py_InitializeEx"
      ]
    ],
    "py_inspectflag (c var)": [
      [
        33,
        "c.Py_InspectFlag"
      ]
    ],
    "py_interactiveflag (c var)": [
      [
        33,
        "c.Py_InteractiveFlag"
      ]
    ],
    "py_isinitialized (c function)": [
      [
        33,
        "c.Py_IsInitialized"
      ],
      [
        35,
        "index-26"
      ]
    ],
    "py_isolatedflag (c var)": [
      [
        33,
        "c.Py_IsolatedFlag"
      ]
    ],
    "py_legacywindowsfsencodingflag (c var)": [
      [
        33,
        "c.Py_LegacyWindowsFSEncodingFlag"
      ]
    ],
    "py_legacywindowsstdioflag (c var)": [
      [
        33,
        "c.Py_LegacyWindowsStdioFlag"
      ]
    ],
    "py_newinterpreter (c function)": [
      [
        33,
        "c.Py_NewInterpreter"
      ]
    ],
    "py_newinterpreterfromconfig (c function)": [
      [
        33,
        "c.Py_NewInterpreterFromConfig"
      ]
    ],
    "py_nositeflag (c var)": [
      [
        33,
        "c.Py_NoSiteFlag"
      ]
    ],
    "py_nousersitedirectory (c var)": [
      [
        33,
        "c.Py_NoUserSiteDirectory"
      ]
    ],
    "py_optimizeflag (c var)": [
      [
        33,
        "c.Py_OptimizeFlag"
      ]
    ],
    "py_quietflag (c var)": [
      [
        33,
        "c.Py_QuietFlag"
      ]
    ],
    "py_setpath (c function)": [
      [
        33,
        "c.Py_SetPath"
      ]
    ],
    "py_setpath()": [
      [
        33,
        "index-22"
      ]
    ],
    "py_setprogramname (c function)": [
      [
        33,
        "c.Py_SetProgramName"
      ],
      [
        35,
        "index-23"
      ]
    ],
    "py_setprogramname()": [
      [
        33,
        "index-15"
      ],
      [
        33,
        "index-20"
      ],
      [
        33,
        "index-21"
      ]
    ],
    "py_setpythonhome (c function)": [
      [
        33,
        "c.Py_SetPythonHome"
      ]
    ],
    "py_setstandardstreamencoding (c function)": [
      [
        33,
        "c.Py_SetStandardStreamEncoding"
      ]
    ],
    "py_unblock_threads (c macro)": [
      [
        33,
        "c.Py_UNBLOCK_THREADS"
      ]
    ],
    "py_unbufferedstdioflag (c var)": [
      [
        33,
        "c.Py_UnbufferedStdioFlag"
      ]
    ],
    "py_verboseflag (c var)": [
      [
        33,
        "c.Py_VerboseFlag"
      ]
    ],
    "py_tracefunc (c type)": [
      [
        33,
        "c.Py_tracefunc"
      ]
    ],
    "py_tss_needs_init (c macro)": [
      [
        33,
        "c.Py_tss_NEEDS_INIT"
      ]
    ],
    "py_tss_t (c type)": [
      [
        33,
        "c.Py_tss_t"
      ]
    ],
    "_pyframeevalfunction (c type)": [
      [
        33,
        "c._PyFrameEvalFunction"
      ]
    ],
    "_pyinterpreterstate_getevalframefunc (c function)": [
      [
        33,
        "c._PyInterpreterState_GetEvalFrameFunc"
      ]
    ],
    "_pyinterpreterstate_setevalframefunc (c function)": [
      [
        33,
        "c._PyInterpreterState_SetEvalFrameFunc"
      ]
    ],
    "__main__": [
      [
        33,
        "index-15"
      ],
      [
        33,
        "index-42"
      ],
      [
        33,
        "index-45"
      ],
      [
        35,
        "index-18"
      ],
      [
        113,
        "module-__main__"
      ],
      [
        323,
        "index-0"
      ],
      [
        323,
        "index-4"
      ],
      [
        428,
        "index-10"
      ],
      [
        436,
        "index-2"
      ],
      [
        436,
        "index-3"
      ]
    ],
    "_thread": [
      [
        33,
        "index-38"
      ],
      [
        114,
        "module-_thread"
      ]
    ],
    "argv (in module sys)": [
      [
        33,
        "index-29"
      ],
      [
        351,
        "sys.argv"
      ]
    ],
    "builtins": [
      [
        33,
        "index-15"
      ],
      [
        33,
        "index-42"
      ],
      [
        33,
        "index-45"
      ],
      [
        35,
        "index-18"
      ],
      [
        147,
        "module-builtins"
      ],
      [
        224,
        "index-13"
      ],
      [
        436,
        "index-2"
      ],
      [
        449,
        "index-7"
      ]
    ],
    "close (in module os)": [
      [
        33,
        "index-44"
      ]
    ],
    "copyright (in module sys)": [
      [
        33,
        "index-26"
      ],
      [
        351,
        "sys.copyright"
      ]
    ],
    "environment variable": [
      [
        33,
        "index-0"
      ],
      [
        33,
        "index-1"
      ],
      [
        33,
        "index-11"
      ],
      [
        33,
        "index-12"
      ],
      [
        33,
        "index-13"
      ],
      [
        33,
        "index-14"
      ],
      [
        33,
        "index-17"
      ],
      [
        33,
        "index-18"
      ],
      [
        33,
        "index-2"
      ],
      [
        33,
        "index-3"
      ],
      [
        33,
        "index-30"
      ],
      [
        33,
        "index-31"
      ],
      [
        33,
        "index-4"
      ],
      [
        33,
        "index-5"
      ],
      [
        33,
        "index-6"
      ],
      [
        33,
        "index-7"
      ],
      [
        33,
        "index-9"
      ],
      [
        34,
        "index-1"
      ],
      [
        34,
        "index-10"
      ],
      [
        34,
        "index-11"
      ],
      [
        34,
        "index-12"
      ],
      [
        34,
        "index-13"
      ],
      [
        34,
        "index-14"
      ],
      [
        34,
        "index-15"
      ],
      [
        34,
        "index-16"
      ],
      [
        34,
        "index-18"
      ],
      [
        34,
        "index-19"
      ],
      [
        34,
        "index-2"
      ],
      [
        34,
        "index-20"
      ],
      [
        34,
        "index-21"
      ],
      [
        34,
        "index-22"
      ],
      [
        34,
        "index-23"
      ],
      [
        34,
        "index-24"
      ],
      [
        34,
        "index-25"
      ],
      [
        34,
        "index-26"
      ],
      [
        34,
        "index-27"
      ],
      [
        34,
        "index-28"
      ],
      [
        34,
        "index-29"
      ],
      [
        34,
        "index-3"
      ],
      [
        34,
        "index-30"
      ],
      [
        34,
        "index-31"
      ],
      [
        34,
        "index-32"
      ],
      [
        34,
        "index-35"
      ],
      [
        34,
        "index-36"
      ],
      [
        34,
        "index-4"
      ],
      [
        34,
        "index-5"
      ],
      [
        34,
        "index-6"
      ],
      [
        34,
        "index-8"
      ],
      [
        34,
        "index-9"
      ],
      [
        35,
        "index-19"
      ],
      [
        35,
        "index-20"
      ],
      [
        35,
        "index-21"
      ],
      [
        35,
        "index-22"
      ],
      [
        35,
        "index-24"
      ],
      [
        35,
        "index-25"
      ],
      [
        42,
        "index-1"
      ],
      [
        42,
        "index-2"
      ],
      [
        42,
        "index-3"
      ],
      [
        42,
        "index-4"
      ],
      [
        42,
        "index-5"
      ],
      [
        63,
        "index-0"
      ],
      [
        71,
        "index-0"
      ],
      [
        84,
        "index-0"
      ],
      [
        84,
        "index-1"
      ],
      [
        85,
        "index-4"
      ],
      [
        103,
        "index-0"
      ],
      [
        124,
        "index-0"
      ],
      [
        125,
        "index-5"
      ],
      [
        150,
        "index-3"
      ],
      [
        150,
        "index-4"
      ],
      [
        150,
        "index-6"
      ],
      [
        162,
        "index-1"
      ],
      [
        176,
        "index-0"
      ],
      [
        176,
        "index-1"
      ],
      [
        176,
        "index-2"
      ],
      [
        176,
        "index-3"
      ],
      [
        176,
        "index-4"
      ],
      [
        176,
        "index-5"
      ],
      [
        176,
        "index-6"
      ],
      [
        187,
        "index-0"
      ],
      [
        187,
        "index-1"
      ],
      [
        187,
        "index-2"
      ],
      [
        187,
        "index-3"
      ],
      [
        187,
        "index-4"
      ],
      [
        187,
        "index-5"
      ],
      [
        213,
        "index-0"
      ],
      [
        224,
        "index-1"
      ],
      [
        224,
        "index-16"
      ],
      [
        227,
        "index-0"
      ],
      [
        228,
        "index-0"
      ],
      [
        228,
        "index-1"
      ],
      [
        228,
        "index-2"
      ],
      [
        229,
        "index-0"
      ],
      [
        229,
        "index-1"
      ],
      [
        229,
        "index-2"
      ],
      [
        229,
        "index-3"
      ],
      [
        229,
        "index-5"
      ],
      [
        229,
        "index-6"
      ],
      [
        229,
        "index-7"
      ],
      [
        229,
        "index-8"
      ],
      [
        246,
        "index-5"
      ],
      [
        246,
        "index-6"
      ],
      [
        257,
        "index-3"
      ],
      [
        265,
        "index-1"
      ],
      [
        265,
        "index-2"
      ],
      [
        265,
        "index-3"
      ],
      [
        292,
        "index-1"
      ],
      [
        292,
        "index-10"
      ],
      [
        292,
        "index-11"
      ],
      [
        292,
        "index-2"
      ],
      [
        292,
        "index-3"
      ],
      [
        292,
        "index-33"
      ],
      [
        292,
        "index-34"
      ],
      [
        292,
        "index-35"
      ],
      [
        292,
        "index-36"
      ],
      [
        292,
        "index-39"
      ],
      [
        292,
        "index-4"
      ],
      [
        292,
        "index-40"
      ],
      [
        292,
        "index-41"
      ],
      [
        292,
        "index-42"
      ],
      [
        292,
        "index-43"
      ],
      [
        292,
        "index-52"
      ],
      [
        293,
        "index-3"
      ],
      [
        293,
        "index-4"
      ],
      [
        293,
        "index-5"
      ],
      [
        293,
        "index-6"
      ],
      [
        293,
        "index-7"
      ],
      [
        293,
        "index-8"
      ],
      [
        294,
        "index-1"
      ],
      [
        294,
        "index-2"
      ],
      [
        310,
        "index-3"
      ],
      [
        310,
        "index-6"
      ],
      [
        310,
        "index-7"
      ],
      [
        312,
        "index-1"
      ],
      [
        312,
        "index-2"
      ],
      [
        319,
        "index-0"
      ],
      [
        326,
        "index-2"
      ],
      [
        333,
        "index-3"
      ],
      [
        333,
        "index-5"
      ],
      [
        333,
        "index-6"
      ],
      [
        333,
        "index-7"
      ],
      [
        333,
        "index-8"
      ],
      [
        340,
        "index-3"
      ],
      [
        340,
        "index-4"
      ],
      [
        343,
        "index-67"
      ],
      [
        343,
        "index-68"
      ],
      [
        347,
        "index-2"
      ],
      [
        347,
        "index-3"
      ],
      [
        347,
        "index-4"
      ],
      [
        351,
        "index-17"
      ],
      [
        351,
        "index-18"
      ],
      [
        351,
        "index-22"
      ],
      [
        351,
        "index-23"
      ],
      [
        351,
        "index-24"
      ],
      [
        351,
        "index-3"
      ],
      [
        351,
        "index-33"
      ],
      [
        351,
        "index-35"
      ],
      [
        351,
        "index-36"
      ],
      [
        351,
        "index-37"
      ],
      [
        351,
        "index-38"
      ],
      [
        351,
        "index-4"
      ],
      [
        351,
        "index-5"
      ],
      [
        351,
        "index-6"
      ],
      [
        351,
        "index-7"
      ],
      [
        353,
        "index-0"
      ],
      [
        353,
        "index-1"
      ],
      [
        353,
        "index-2"
      ],
      [
        353,
        "index-3"
      ],
      [
        353,
        "index-4"
      ],
      [
        359,
        "index-1"
      ],
      [
        359,
        "index-2"
      ],
      [
        359,
        "index-3"
      ],
      [
        361,
        "index-0"
      ],
      [
        361,
        "index-1"
      ],
      [
        361,
        "index-2"
      ],
      [
        365,
        "index-13"
      ],
      [
        365,
        "index-14"
      ],
      [
        365,
        "index-15"
      ],
      [
        365,
        "index-16"
      ],
      [
        365,
        "index-17"
      ],
      [
        365,
        "index-18"
      ],
      [
        368,
        "index-0"
      ],
      [
        368,
        "index-1"
      ],
      [
        381,
        "index-0"
      ],
      [
        381,
        "index-1"
      ],
      [
        381,
        "index-2"
      ],
      [
        394,
        "index-3"
      ],
      [
        398,
        "index-2"
      ],
      [
        398,
        "index-3"
      ],
      [
        398,
        "index-4"
      ],
      [
        399,
        "index-1"
      ],
      [
        399,
        "index-2"
      ],
      [
        399,
        "index-3"
      ],
      [
        399,
        "index-4"
      ],
      [
        399,
        "index-5"
      ],
      [
        402,
        "index-0"
      ],
      [
        402,
        "index-1"
      ],
      [
        402,
        "index-2"
      ],
      [
        402,
        "index-3"
      ],
      [
        409,
        "index-0"
      ],
      [
        424,
        "envvar-PYTHONTZPATH"
      ],
      [
        424,
        "index-2"
      ],
      [
        427,
        "index-61"
      ],
      [
        427,
        "index-81"
      ],
      [
        431,
        "index-18"
      ],
      [
        437,
        "index-0"
      ],
      [
        437,
        "index-1"
      ],
      [
        449,
        "index-1"
      ],
      [
        449,
        "index-2"
      ],
      [
        449,
        "index-5"
      ],
      [
        449,
        "index-6"
      ],
      [
        454,
        "envvar-PYTHONASYNCIODEBUG"
      ],
      [
        454,
        "envvar-PYTHONBREAKPOINT"
      ],
      [
        454,
        "envvar-PYTHONCASEOK"
      ],
      [
        454,
        "envvar-PYTHONCOERCECLOCALE"
      ],
      [
        454,
        "envvar-PYTHONDEBUG"
      ],
      [
        454,
        "envvar-PYTHONDEVMODE"
      ],
      [
        454,
        "envvar-PYTHONDONTWRITEBYTECODE"
      ],
      [
        454,
        "envvar-PYTHONDUMPREFS"
      ],
      [
        454,
        "envvar-PYTHONDUMPREFSFILE-FILENAME"
      ],
      [
        454,
        "envvar-PYTHONEXECUTABLE"
      ],
      [
        454,
        "envvar-PYTHONFAULTHANDLER"
      ],
      [
        454,
        "envvar-PYTHONHASHSEED"
      ],
      [
        454,
        "envvar-PYTHONHOME"
      ],
      [
        454,
        "envvar-PYTHONINSPECT"
      ],
      [
        454,
        "envvar-PYTHONINTMAXSTRDIGITS"
      ],
      [
        454,
        "envvar-PYTHONIOENCODING"
      ],
      [
        454,
        "envvar-PYTHONLEGACYWINDOWSFSENCODING"
      ],
      [
        454,
        "envvar-PYTHONLEGACYWINDOWSSTDIO"
      ],
      [
        454,
        "envvar-PYTHONMALLOC"
      ],
      [
        454,
        "envvar-PYTHONMALLOCSTATS"
      ],
      [
        454,
        "envvar-PYTHONNODEBUGRANGES"
      ],
      [
        454,
        "envvar-PYTHONNOUSERSITE"
      ],
      [
        454,
        "envvar-PYTHONOPTIMIZE"
      ],
      [
        454,
        "envvar-PYTHONPATH"
      ],
      [
        454,
        "envvar-PYTHONPERFSUPPORT"
      ],
      [
        454,
        "envvar-PYTHONPLATLIBDIR"
      ],
      [
        454,
        "envvar-PYTHONPROFILEIMPORTTIME"
      ],
      [
        454,
        "envvar-PYTHONPYCACHEPREFIX"
      ],
      [
        454,
        "envvar-PYTHONSAFEPATH"
      ],
      [
        454,
        "envvar-PYTHONSTARTUP"
      ],
      [
        454,
        "envvar-PYTHONTRACEMALLOC"
      ],
      [
        454,
        "envvar-PYTHONUNBUFFERED"
      ],
      [
        454,
        "envvar-PYTHONUSERBASE"
      ],
      [
        454,
        "envvar-PYTHONUTF8"
      ],
      [
        454,
        "envvar-PYTHONVERBOSE"
      ],
      [
        454,
        "envvar-PYTHONWARNDEFAULTENCODING"
      ],
      [
        454,
        "envvar-PYTHONWARNINGS"
      ],
      [
        454,
        "index-1"
      ],
      [
        454,
        "index-12"
      ],
      [
        454,
        "index-13"
      ],
      [
        454,
        "index-14"
      ],
      [
        454,
        "index-16"
      ],
      [
        454,
        "index-17"
      ],
      [
        454,
        "index-18"
      ],
      [
        454,
        "index-19"
      ],
      [
        454,
        "index-2"
      ],
      [
        454,
        "index-20"
      ],
      [
        454,
        "index-21"
      ],
      [
        454,
        "index-22"
      ],
      [
        454,
        "index-23"
      ],
      [
        454,
        "index-24"
      ],
      [
        454,
        "index-25"
      ],
      [
        454,
        "index-26"
      ],
      [
        454,
        "index-27"
      ],
      [
        454,
        "index-28"
      ],
      [
        454,
        "index-29"
      ],
      [
        454,
        "index-3"
      ],
      [
        454,
        "index-30"
      ],
      [
        454,
        "index-31"
      ],
      [
        454,
        "index-32"
      ],
      [
        454,
        "index-33"
      ],
      [
        454,
        "index-34"
      ],
      [
        454,
        "index-35"
      ],
      [
        454,
        "index-36"
      ],
      [
        454,
        "index-39"
      ],
      [
        454,
        "index-4"
      ],
      [
        454,
        "index-41"
      ],
      [
        454,
        "index-42"
      ],
      [
        454,
        "index-5"
      ],
      [
        454,
        "index-6"
      ],
      [
        454,
        "index-8"
      ],
      [
        455,
        "envvar-BASECFLAGS"
      ],
      [
        455,
        "envvar-BASECPPFLAGS"
      ],
      [
        455,
        "envvar-BLDSHARED"
      ],
      [
        455,
        "envvar-CC"
      ],
      [
        455,
        "envvar-CCSHARED"
      ],
      [
        455,
        "envvar-CFLAGS"
      ],
      [
        455,
        "envvar-CFLAGSFORSHARED"
      ],
      [
        455,
        "envvar-CFLAGS_ALIASING"
      ],
      [
        455,
        "envvar-CFLAGS_NODIST"
      ],
      [
        455,
        "envvar-COMPILEALL_OPTS"
      ],
      [
        455,
        "envvar-CONFIGURE_CFLAGS"
      ],
      [
        455,
        "envvar-CONFIGURE_CFLAGS_NODIST"
      ],
      [
        455,
        "envvar-CONFIGURE_CPPFLAGS"
      ],
      [
        455,
        "envvar-CONFIGURE_LDFLAGS"
      ],
      [
        455,
        "envvar-CONFIGURE_LDFLAGS_NODIST"
      ],
      [
        455,
        "envvar-CPPFLAGS"
      ],
      [
        455,
        "envvar-CXX"
      ],
      [
        455,
        "envvar-EXTRA_CFLAGS"
      ],
      [
        455,
        "envvar-LDFLAGS"
      ],
      [
        455,
        "envvar-LDFLAGS_NODIST"
      ],
      [
        455,
        "envvar-LDSHARED"
      ],
      [
        455,
        "envvar-LIBS"
      ],
      [
        455,
        "envvar-LINKCC"
      ],
      [
        455,
        "envvar-OPT"
      ],
      [
        455,
        "envvar-PROFILE_TASK"
      ],
      [
        455,
        "envvar-PURIFY"
      ],
      [
        455,
        "envvar-PY_BUILTIN_MODULE_CFLAGS"
      ],
      [
        455,
        "envvar-PY_CFLAGS"
      ],
      [
        455,
        "envvar-PY_CFLAGS_NODIST"
      ],
      [
        455,
        "envvar-PY_CORE_CFLAGS"
      ],
      [
        455,
        "envvar-PY_CORE_LDFLAGS"
      ],
      [
        455,
        "envvar-PY_CPPFLAGS"
      ],
      [
        455,
        "envvar-PY_LDFLAGS"
      ],
      [
        455,
        "envvar-PY_LDFLAGS_NODIST"
      ],
      [
        455,
        "envvar-PY_STDMODULE_CFLAGS"
      ],
      [
        455,
        "index-10"
      ],
      [
        455,
        "index-11"
      ],
      [
        455,
        "index-12"
      ],
      [
        455,
        "index-13"
      ],
      [
        455,
        "index-14"
      ],
      [
        455,
        "index-15"
      ],
      [
        455,
        "index-16"
      ],
      [
        455,
        "index-17"
      ],
      [
        455,
        "index-18"
      ],
      [
        455,
        "index-19"
      ],
      [
        455,
        "index-2"
      ],
      [
        455,
        "index-20"
      ],
      [
        455,
        "index-21"
      ],
      [
        455,
        "index-22"
      ],
      [
        455,
        "index-23"
      ],
      [
        455,
        "index-24"
      ],
      [
        455,
        "index-25"
      ],
      [
        455,
        "index-26"
      ],
      [
        455,
        "index-27"
      ],
      [
        455,
        "index-28"
      ],
      [
        455,
        "index-4"
      ],
      [
        455,
        "index-5"
      ],
      [
        455,
        "index-6"
      ],
      [
        455,
        "index-7"
      ],
      [
        455,
        "index-8"
      ],
      [
        455,
        "index-9"
      ],
      [
        458,
        "index-0"
      ],
      [
        459,
        "index-0"
      ],
      [
        460,
        "index-1"
      ],
      [
        460,
        "index-10"
      ],
      [
        460,
        "index-11"
      ],
      [
        460,
        "index-12"
      ],
      [
        460,
        "index-13"
      ],
      [
        460,
        "index-14"
      ],
      [
        460,
        "index-15"
      ],
      [
        460,
        "index-18"
      ],
      [
        460,
        "index-2"
      ],
      [
        460,
        "index-20"
      ],
      [
        460,
        "index-22"
      ],
      [
        460,
        "index-23"
      ],
      [
        460,
        "index-24"
      ],
      [
        460,
        "index-25"
      ],
      [
        460,
        "index-26"
      ],
      [
        460,
        "index-27"
      ],
      [
        460,
        "index-28"
      ],
      [
        460,
        "index-29"
      ],
      [
        460,
        "index-3"
      ],
      [
        460,
        "index-30"
      ],
      [
        460,
        "index-31"
      ],
      [
        460,
        "index-32"
      ],
      [
        460,
        "index-33"
      ],
      [
        460,
        "index-34"
      ],
      [
        460,
        "index-35"
      ],
      [
        460,
        "index-36"
      ],
      [
        460,
        "index-37"
      ],
      [
        460,
        "index-4"
      ],
      [
        460,
        "index-5"
      ],
      [
        460,
        "index-6"
      ],
      [
        460,
        "index-7"
      ],
      [
        460,
        "index-8"
      ],
      [
        460,
        "index-9"
      ],
      [
        462,
        "index-11"
      ],
      [
        464,
        "index-24"
      ],
      [
        464,
        "index-25"
      ],
      [
        464,
        "index-26"
      ],
      [
        464,
        "index-27"
      ],
      [
        464,
        "index-28"
      ],
      [
        467,
        "index-20"
      ],
      [
        467,
        "index-21"
      ],
      [
        467,
        "index-24"
      ],
      [
        467,
        "index-4"
      ],
      [
        467,
        "index-5"
      ],
      [
        467,
        "index-6"
      ],
      [
        468,
        "index-1"
      ],
      [
        468,
        "index-11"
      ],
      [
        468,
        "index-8"
      ],
      [
        471,
        "index-18"
      ],
      [
        472,
        "index-1"
      ],
      [
        472,
        "index-21"
      ],
      [
        472,
        "index-6"
      ],
      [
        473,
        "index-23"
      ],
      [
        473,
        "index-47"
      ],
      [
        474,
        "index-10"
      ],
      [
        475,
        "index-23"
      ],
      [
        475,
        "index-24"
      ],
      [
        475,
        "index-35"
      ],
      [
        476,
        "index-40"
      ],
      [
        476,
        "index-41"
      ],
      [
        476,
        "index-50"
      ],
      [
        476,
        "index-53"
      ],
      [
        476,
        "index-54"
      ],
      [
        476,
        "index-55"
      ],
      [
        476,
        "index-56"
      ],
      [
        476,
        "index-57"
      ],
      [
        476,
        "index-58"
      ],
      [
        478,
        "index-19"
      ],
      [
        478,
        "index-2"
      ],
      [
        478,
        "index-21"
      ],
      [
        478,
        "index-27"
      ],
      [
        478,
        "index-38"
      ],
      [
        479,
        "index-12"
      ],
      [
        479,
        "index-26"
      ],
      [
        479,
        "index-27"
      ],
      [
        479,
        "index-31"
      ],
      [
        479,
        "index-36"
      ],
      [
        479,
        "index-4"
      ],
      [
        479,
        "index-8"
      ],
      [
        480,
        "index-13"
      ],
      [
        480,
        "index-14"
      ],
      [
        480,
        "index-2"
      ],
      [
        480,
        "index-20"
      ],
      [
        480,
        "index-21"
      ],
      [
        480,
        "index-22"
      ],
      [
        480,
        "index-3"
      ],
      [
        481,
        "index-21"
      ],
      [
        482,
        "index-0"
      ],
      [
        482,
        "index-106"
      ],
      [
        482,
        "index-136"
      ],
      [
        482,
        "index-152"
      ],
      [
        482,
        "index-191"
      ],
      [
        482,
        "index-199"
      ],
      [
        482,
        "index-200"
      ],
      [
        482,
        "index-201"
      ],
      [
        482,
        "index-203"
      ],
      [
        482,
        "index-207"
      ],
      [
        482,
        "index-211"
      ],
      [
        482,
        "index-212"
      ],
      [
        482,
        "index-214"
      ],
      [
        482,
        "index-216"
      ],
      [
        482,
        "index-218"
      ],
      [
        482,
        "index-225"
      ],
      [
        482,
        "index-226"
      ],
      [
        482,
        "index-230"
      ],
      [
        482,
        "index-231"
      ],
      [
        482,
        "index-235"
      ],
      [
        482,
        "index-236"
      ],
      [
        482,
        "index-244"
      ],
      [
        482,
        "index-255"
      ],
      [
        482,
        "index-256"
      ],
      [
        482,
        "index-285"
      ],
      [
        482,
        "index-286"
      ],
      [
        482,
        "index-40"
      ],
      [
        482,
        "index-49"
      ],
      [
        482,
        "index-50"
      ],
      [
        482,
        "index-53"
      ],
      [
        482,
        "index-54"
      ],
      [
        482,
        "index-63"
      ],
      [
        482,
        "index-75"
      ],
      [
        482,
        "index-78"
      ],
      [
        482,
        "index-86"
      ],
      [
        482,
        "index-93"
      ]
    ],
    "executable (in module sys)": [
      [
        33,
        "index-21"
      ],
      [
        351,
        "sys.executable"
      ]
    ],
    "global interpreter lock": [
      [
        33,
        "index-32"
      ],
      [
        87,
        "term-global-interpreter-lock"
      ]
    ],
    "interpreter lock": [
      [
        33,
        "index-32"
      ]
    ],
    "lock, interpreter": [
      [
        33,
        "index-32"
      ]
    ],
    "main()": [
      [
        33,
        "index-16"
      ],
      [
        33,
        "index-19"
      ],
      [
        33,
        "index-29"
      ]
    ],
    "path": [
      [
        33,
        "index-15"
      ],
      [
        33,
        "index-22"
      ],
      [
        33,
        "index-23"
      ],
      [
        35,
        "index-19"
      ],
      [
        35,
        "index-20"
      ],
      [
        35,
        "index-18"
      ],
      [
        84,
        "index-0"
      ],
      [
        84,
        "index-1"
      ],
      [
        150,
        "index-3"
      ],
      [
        150,
        "index-6"
      ],
      [
        264,
        "index-0"
      ],
      [
        292,
        "index-33"
      ],
      [
        292,
        "index-34"
      ],
      [
        292,
        "index-35"
      ],
      [
        292,
        "index-36"
      ],
      [
        292,
        "index-39"
      ],
      [
        292,
        "index-40"
      ],
      [
        292,
        "index-41"
      ],
      [
        292,
        "index-42"
      ],
      [
        292,
        "index-52"
      ],
      [
        293,
        "index-0"
      ],
      [
        295,
        "index-0"
      ],
      [
        333,
        "index-3"
      ],
      [
        333,
        "index-0"
      ],
      [
        333,
        "index-4"
      ],
      [
        347,
        "index-2"
      ],
      [
        351,
        "index-21"
      ],
      [
        398,
        "index-2"
      ],
      [
        398,
        "index-3"
      ],
      [
        398,
        "index-4"
      ],
      [
        402,
        "index-3"
      ],
      [
        431,
        "index-9"
      ],
      [
        437,
        "index-0"
      ],
      [
        449,
        "index-2"
      ],
      [
        449,
        "index-0"
      ],
      [
        454,
        "index-30"
      ],
      [
        459,
        "index-0"
      ],
      [
        460,
        "index-1"
      ],
      [
        460,
        "index-10"
      ],
      [
        460,
        "index-12"
      ],
      [
        460,
        "index-13"
      ],
      [
        460,
        "index-14"
      ],
      [
        460,
        "index-18"
      ],
      [
        460,
        "index-2"
      ],
      [
        460,
        "index-20"
      ],
      [
        460,
        "index-22"
      ],
      [
        460,
        "index-23"
      ],
      [
        460,
        "index-25"
      ],
      [
        460,
        "index-3"
      ],
      [
        460,
        "index-5"
      ],
      [
        460,
        "index-9"
      ],
      [
        476,
        "index-54"
      ],
      [
        476,
        "index-57"
      ],
      [
        476,
        "index-58"
      ],
      [
        480,
        "index-22"
      ],
      [
        482,
        "index-211"
      ],
      [
        482,
        "index-212"
      ],
      [
        482,
        "index-53"
      ],
      [
        482,
        "index-78"
      ]
    ],
    "path (in module sys)": [
      [
        33,
        "index-15"
      ],
      [
        33,
        "index-22"
      ],
      [
        33,
        "index-23"
      ],
      [
        35,
        "index-18"
      ],
      [
        351,
        "sys.path"
      ]
    ],
    "platform (in module sys)": [
      [
        33,
        "index-25"
      ],
      [
        351,
        "sys.platform"
      ]
    ],
    "sdterr": [
      [
        33,
        "index-16"
      ]
    ],
    "search": [
      [
        33,
        "index-15"
      ],
      [
        33,
        "index-22"
      ],
      [
        33,
        "index-23"
      ],
      [
        35,
        "index-18"
      ],
      [
        264,
        "index-0"
      ],
      [
        333,
        "index-0"
      ],
      [
        351,
        "index-21"
      ],
      [
        449,
        "index-0"
      ]
    ],
    "setswitchinterval (in module sys)": [
      [
        33,
        "index-33"
      ]
    ],
    "stderr (in module sys)": [
      [
        33,
        "index-42"
      ],
      [
        33,
        "index-45"
      ],
      [
        351,
        "sys.stderr"
      ],
      [
        427,
        "index-55"
      ]
    ],
    "stdin": [
      [
        33,
        "index-16"
      ]
    ],
    "stdin (in module sys)": [
      [
        33,
        "index-42"
      ],
      [
        33,
        "index-45"
      ],
      [
        351,
        "sys.stdin"
      ],
      [
        427,
        "index-55"
      ]
    ],
    "stdout": [
      [
        33,
        "index-16"
      ]
    ],
    "stdout (in module sys)": [
      [
        33,
        "index-42"
      ],
      [
        33,
        "index-45"
      ],
      [
        351,
        "sys.stdout"
      ],
      [
        427,
        "index-55"
      ]
    ],
    "sys": [
      [
        33,
        "index-15"
      ],
      [
        33,
        "index-42"
      ],
      [
        33,
        "index-45"
      ],
      [
        35,
        "index-18"
      ],
      [
        224,
        "index-8"
      ],
      [
        351,
        "module-sys"
      ],
      [
        426,
        "index-11"
      ],
      [
        436,
        "index-2"
      ],
      [
        449,
        "index-4"
      ]
    ],
    "version (in module sys)": [
      [
        33,
        "index-24"
      ],
      [
        33,
        "index-27"
      ],
      [
        33,
        "index-28"
      ],
      [
        351,
        "sys.version"
      ]
    ],
    "pep 432": [
      [
        34,
        "index-37"
      ],
      [
        34,
        "index-38"
      ],
      [
        479,
        "index-38"
      ],
      [
        482,
        "index-249"
      ]
    ],
    "pep 538": [
      [
        34,
        "index-33"
      ],
      [
        265,
        "index-6"
      ],
      [
        454,
        "index-43"
      ],
      [
        455,
        "index-3"
      ],
      [
        479,
        "index-10"
      ],
      [
        479,
        "index-3"
      ],
      [
        479,
        "index-6"
      ],
      [
        479,
        "index-7"
      ],
      [
        482,
        "index-223"
      ],
      [
        482,
        "index-227"
      ],
      [
        482,
        "index-248"
      ]
    ],
    "pep 540": [
      [
        34,
        "index-34"
      ],
      [
        265,
        "index-7"
      ],
      [
        292,
        "index-0"
      ],
      [
        479,
        "index-11"
      ],
      [
        479,
        "index-9"
      ],
      [
        482,
        "index-237"
      ]
    ],
    "pep 552": [
      [
        34,
        "index-7"
      ],
      [
        249,
        "index-9"
      ],
      [
        310,
        "index-5"
      ],
      [
        472,
        "index-23"
      ],
      [
        479,
        "index-22"
      ],
      [
        479,
        "index-23"
      ],
      [
        482,
        "index-220"
      ],
      [
        482,
        "index-240"
      ]
    ],
    "pep 587": [
      [
        34,
        "index-0"
      ],
      [
        472,
        "index-38"
      ],
      [
        480,
        "index-5"
      ],
      [
        480,
        "index-6"
      ],
      [
        482,
        "index-204"
      ],
      [
        482,
        "index-209"
      ],
      [
        482,
        "index-94"
      ]
    ],
    "pythoncoerceclocale": [
      [
        34,
        "index-36"
      ],
      [
        292,
        "index-4"
      ],
      [
        454,
        "envvar-PYTHONCOERCECLOCALE"
      ],
      [
        455,
        "index-2"
      ],
      [
        479,
        "index-4"
      ]
    ],
    "pythondevmode": [
      [
        34,
        "index-8"
      ],
      [
        187,
        "index-0"
      ],
      [
        454,
        "envvar-PYTHONDEVMODE"
      ],
      [
        479,
        "index-26"
      ]
    ],
    "pythondumprefs": [
      [
        34,
        "index-9"
      ],
      [
        63,
        "index-0"
      ],
      [
        454,
        "envvar-PYTHONDUMPREFS"
      ],
      [
        455,
        "index-7"
      ],
      [
        480,
        "index-3"
      ],
      [
        482,
        "index-214"
      ]
    ],
    "pythonexecutable": [
      [
        34,
        "index-23"
      ],
      [
        454,
        "envvar-PYTHONEXECUTABLE"
      ]
    ],
    "pythonfaulthandler": [
      [
        34,
        "index-10"
      ],
      [
        187,
        "index-4"
      ],
      [
        213,
        "index-0"
      ],
      [
        454,
        "envvar-PYTHONFAULTHANDLER"
      ],
      [
        454,
        "index-19"
      ],
      [
        475,
        "index-24"
      ]
    ],
    "pythonintmaxstrdigits": [
      [
        34,
        "index-15"
      ],
      [
        343,
        "index-67"
      ],
      [
        343,
        "index-68"
      ],
      [
        351,
        "index-17"
      ],
      [
        454,
        "envvar-PYTHONINTMAXSTRDIGITS"
      ],
      [
        454,
        "index-21"
      ],
      [
        482,
        "index-40"
      ]
    ],
    "pythonmallocstats": [
      [
        34,
        "index-18"
      ],
      [
        42,
        "index-2"
      ],
      [
        454,
        "envvar-PYTHONMALLOCSTATS"
      ],
      [
        482,
        "index-286"
      ]
    ],
    "pythonnodebugranges": [
      [
        34,
        "index-6"
      ],
      [
        427,
        "index-61"
      ],
      [
        454,
        "envvar-PYTHONNODEBUGRANGES"
      ],
      [
        454,
        "index-26"
      ],
      [
        472,
        "index-6"
      ]
    ],
    "pythonperfsupport": [
      [
        34,
        "index-28"
      ],
      [
        103,
        "index-0"
      ],
      [
        454,
        "envvar-PYTHONPERFSUPPORT"
      ],
      [
        454,
        "index-27"
      ],
      [
        473,
        "index-23"
      ]
    ],
    "pythonplatlibdir": [
      [
        34,
        "index-19"
      ],
      [
        353,
        "index-3"
      ],
      [
        454,
        "envvar-PYTHONPLATLIBDIR"
      ],
      [
        482,
        "index-152"
      ]
    ],
    "pythonprofileimporttime": [
      [
        34,
        "index-13"
      ],
      [
        454,
        "envvar-PYTHONPROFILEIMPORTTIME"
      ],
      [
        454,
        "index-22"
      ],
      [
        479,
        "index-27"
      ],
      [
        482,
        "index-244"
      ]
    ],
    "pythonpycacheprefix": [
      [
        34,
        "index-25"
      ],
      [
        351,
        "index-7"
      ],
      [
        454,
        "envvar-PYTHONPYCACHEPREFIX"
      ],
      [
        454,
        "index-24"
      ],
      [
        480,
        "index-2"
      ],
      [
        482,
        "index-216"
      ]
    ],
    "pythonsafepath": [
      [
        34,
        "index-3"
      ],
      [
        326,
        "index-2"
      ],
      [
        351,
        "index-24"
      ],
      [
        454,
        "envvar-PYTHONSAFEPATH"
      ],
      [
        454,
        "index-12"
      ],
      [
        472,
        "index-1"
      ],
      [
        472,
        "index-21"
      ],
      [
        482,
        "index-54"
      ]
    ],
    "pythontracemalloc": [
      [
        34,
        "index-27"
      ],
      [
        381,
        "index-0"
      ],
      [
        381,
        "index-1"
      ],
      [
        381,
        "index-2"
      ],
      [
        454,
        "envvar-PYTHONTRACEMALLOC"
      ],
      [
        454,
        "index-20"
      ]
    ],
    "pythonutf8": [
      [
        34,
        "index-2"
      ],
      [
        34,
        "index-35"
      ],
      [
        292,
        "index-2"
      ],
      [
        292,
        "index-3"
      ],
      [
        351,
        "index-36"
      ],
      [
        454,
        "envvar-PYTHONUTF8"
      ],
      [
        454,
        "index-23"
      ],
      [
        454,
        "index-42"
      ],
      [
        460,
        "index-15"
      ],
      [
        479,
        "index-8"
      ]
    ],
    "pythonwarnings": [
      [
        34,
        "index-31"
      ],
      [
        187,
        "index-1"
      ],
      [
        399,
        "index-1"
      ],
      [
        399,
        "index-2"
      ],
      [
        399,
        "index-3"
      ],
      [
        399,
        "index-4"
      ],
      [
        399,
        "index-5"
      ],
      [
        454,
        "envvar-PYTHONWARNINGS"
      ],
      [
        454,
        "index-18"
      ],
      [
        468,
        "index-1"
      ],
      [
        468,
        "index-8"
      ],
      [
        474,
        "index-10"
      ],
      [
        479,
        "index-36"
      ],
      [
        482,
        "index-49"
      ]
    ],
    "pyconfig (c type)": [
      [
        34,
        "c.PyConfig"
      ]
    ],
    "pyconfig.argv (c member)": [
      [
        34,
        "c.PyConfig.argv"
      ]
    ],
    "pyconfig.base_exec_prefix (c member)": [
      [
        34,
        "c.PyConfig.base_exec_prefix"
      ]
    ],
    "pyconfig.base_executable (c member)": [
      [
        34,
        "c.PyConfig.base_executable"
      ]
    ],
    "pyconfig.base_prefix (c member)": [
      [
        34,
        "c.PyConfig.base_prefix"
      ]
    ],
    "pyconfig.buffered_stdio (c member)": [
      [
        34,
        "c.PyConfig.buffered_stdio"
      ]
    ],
    "pyconfig.bytes_warning (c member)": [
      [
        34,
        "c.PyConfig.bytes_warning"
      ]
    ],
    "pyconfig.check_hash_pycs_mode (c member)": [
      [
        34,
        "c.PyConfig.check_hash_pycs_mode"
      ]
    ],
    "pyconfig.code_debug_ranges (c member)": [
      [
        34,
        "c.PyConfig.code_debug_ranges"
      ]
    ],
    "pyconfig.configure_c_stdio (c member)": [
      [
        34,
        "c.PyConfig.configure_c_stdio"
      ]
    ],
    "pyconfig.dev_mode (c member)": [
      [
        34,
        "c.PyConfig.dev_mode"
      ]
    ],
    "pyconfig.dump_refs (c member)": [
      [
        34,
        "c.PyConfig.dump_refs"
      ]
    ],
    "pyconfig.exec_prefix (c member)": [
      [
        34,
        "c.PyConfig.exec_prefix"
      ]
    ],
    "pyconfig.executable (c member)": [
      [
        34,
        "c.PyConfig.executable"
      ]
    ],
    "pyconfig.faulthandler (c member)": [
      [
        34,
        "c.PyConfig.faulthandler"
      ]
    ],
    "pyconfig.filesystem_encoding (c member)": [
      [
        34,
        "c.PyConfig.filesystem_encoding"
      ]
    ],
    "pyconfig.filesystem_errors (c member)": [
      [
        34,
        "c.PyConfig.filesystem_errors"
      ]
    ],
    "pyconfig.hash_seed (c member)": [
      [
        34,
        "c.PyConfig.hash_seed"
      ]
    ],
    "pyconfig.home (c member)": [
      [
        34,
        "c.PyConfig.home"
      ]
    ],
    "pyconfig.import_time (c member)": [
      [
        34,
        "c.PyConfig.import_time"
      ]
    ],
    "pyconfig.inspect (c member)": [
      [
        34,
        "c.PyConfig.inspect"
      ]
    ],
    "pyconfig.install_signal_handlers (c member)": [
      [
        34,
        "c.PyConfig.install_signal_handlers"
      ]
    ],
    "pyconfig.int_max_str_digits (c member)": [
      [
        34,
        "c.PyConfig.int_max_str_digits"
      ]
    ],
    "pyconfig.interactive (c member)": [
      [
        34,
        "c.PyConfig.interactive"
      ]
    ],
    "pyconfig.isolated (c member)": [
      [
        34,
        "c.PyConfig.isolated"
      ]
    ],
    "pyconfig.legacy_windows_stdio (c member)": [
      [
        34,
        "c.PyConfig.legacy_windows_stdio"
      ]
    ],
    "pyconfig.malloc_stats (c member)": [
      [
        34,
        "c.PyConfig.malloc_stats"
      ]
    ],
    "pyconfig.module_search_paths (c member)": [
      [
        34,
        "c.PyConfig.module_search_paths"
      ]
    ],
    "pyconfig.module_search_paths_set (c member)": [
      [
        34,
        "c.PyConfig.module_search_paths_set"
      ]
    ],
    "pyconfig.optimization_level (c member)": [
      [
        34,
        "c.PyConfig.optimization_level"
      ]
    ],
    "pyconfig.orig_argv (c member)": [
      [
        34,
        "c.PyConfig.orig_argv"
      ]
    ],
    "pyconfig.parse_argv (c member)": [
      [
        34,
        "c.PyConfig.parse_argv"
      ]
    ],
    "pyconfig.parser_debug (c member)": [
      [
        34,
        "c.PyConfig.parser_debug"
      ]
    ],
    "pyconfig.pathconfig_warnings (c member)": [
      [
        34,
        "c.PyConfig.pathconfig_warnings"
      ]
    ],
    "pyconfig.perf_profiling (c member)": [
      [
        34,
        "c.PyConfig.perf_profiling"
      ]
    ],
    "pyconfig.platlibdir (c member)": [
      [
        34,
        "c.PyConfig.platlibdir"
      ]
    ],
    "pyconfig.prefix (c member)": [
      [
        34,
        "c.PyConfig.prefix"
      ]
    ],
    "pyconfig.program_name (c member)": [
      [
        34,
        "c.PyConfig.program_name"
      ]
    ],
    "pyconfig.pycache_prefix (c member)": [
      [
        34,
        "c.PyConfig.pycache_prefix"
      ]
    ],
    "pyconfig.pythonpath_env (c member)": [
      [
        34,
        "c.PyConfig.pythonpath_env"
      ]
    ],
    "pyconfig.quiet (c member)": [
      [
        34,
        "c.PyConfig.quiet"
      ]
    ],
    "pyconfig.run_command (c member)": [
      [
        34,
        "c.PyConfig.run_command"
      ]
    ],
    "pyconfig.run_filename (c member)": [
      [
        34,
        "c.PyConfig.run_filename"
      ]
    ],
    "pyconfig.run_module (c member)": [
      [
        34,
        "c.PyConfig.run_module"
      ]
    ],
    "pyconfig.safe_path (c member)": [
      [
        34,
        "c.PyConfig.safe_path"
      ]
    ],
    "pyconfig.show_ref_count (c member)": [
      [
        34,
        "c.PyConfig.show_ref_count"
      ]
    ],
    "pyconfig.site_import (c member)": [
      [
        34,
        "c.PyConfig.site_import"
      ]
    ],
    "pyconfig.skip_source_first_line (c member)": [
      [
        34,
        "c.PyConfig.skip_source_first_line"
      ]
    ],
    "pyconfig.stdio_encoding (c member)": [
      [
        34,
        "c.PyConfig.stdio_encoding"
      ]
    ],
    "pyconfig.stdio_errors (c member)": [
      [
        34,
        "c.PyConfig.stdio_errors"
      ]
    ],
    "pyconfig.tracemalloc (c member)": [
      [
        34,
        "c.PyConfig.tracemalloc"
      ]
    ],
    "pyconfig.use_environment (c member)": [
      [
        34,
        "c.PyConfig.use_environment"
      ]
    ],
    "pyconfig.use_hash_seed (c member)": [
      [
        34,
        "c.PyConfig.use_hash_seed"
      ]
    ],
    "pyconfig.user_site_directory (c member)": [
      [
        34,
        "c.PyConfig.user_site_directory"
      ]
    ],
    "pyconfig.verbose (c member)": [
      [
        34,
        "c.PyConfig.verbose"
      ]
    ],
    "pyconfig.warn_default_encoding (c member)": [
      [
        34,
        "c.PyConfig.warn_default_encoding"
      ]
    ],
    "pyconfig.warnoptions (c member)": [
      [
        34,
        "c.PyConfig.warnoptions"
      ]
    ],
    "pyconfig.write_bytecode (c member)": [
      [
        34,
        "c.PyConfig.write_bytecode"
      ]
    ],
    "pyconfig.xoptions (c member)": [
      [
        34,
        "c.PyConfig.xoptions"
      ]
    ],
    "pyconfig_clear (c function)": [
      [
        34,
        "c.PyConfig_Clear"
      ]
    ],
    "pyconfig_initisolatedconfig (c function)": [
      [
        34,
        "c.PyConfig_InitIsolatedConfig"
      ]
    ],
    "pyconfig_initpythonconfig (c function)": [
      [
        34,
        "c.PyConfig_InitPythonConfig"
      ]
    ],
    "pyconfig_read (c function)": [
      [
        34,
        "c.PyConfig_Read"
      ]
    ],
    "pyconfig_setargv (c function)": [
      [
        34,
        "c.PyConfig_SetArgv"
      ]
    ],
    "pyconfig_setbytesargv (c function)": [
      [
        34,
        "c.PyConfig_SetBytesArgv"
      ]
    ],
    "pyconfig_setbytesstring (c function)": [
      [
        34,
        "c.PyConfig_SetBytesString"
      ]
    ],
    "pyconfig_setstring (c function)": [
      [
        34,
        "c.PyConfig_SetString"
      ]
    ],
    "pyconfig_setwidestringlist (c function)": [
      [
        34,
        "c.PyConfig_SetWideStringList"
      ]
    ],
    "pypreconfig (c type)": [
      [
        34,
        "c.PyPreConfig"
      ]
    ],
    "pypreconfig.allocator (c member)": [
      [
        34,
        "c.PyPreConfig.allocator"
      ]
    ],
    "pypreconfig.coerce_c_locale (c member)": [
      [
        34,
        "c.PyPreConfig.coerce_c_locale"
      ]
    ],
    "pypreconfig.coerce_c_locale_warn (c member)": [
      [
        34,
        "c.PyPreConfig.coerce_c_locale_warn"
      ]
    ],
    "pypreconfig.configure_locale (c member)": [
      [
        34,
        "c.PyPreConfig.configure_locale"
      ]
    ],
    "pypreconfig.dev_mode (c member)": [
      [
        34,
        "c.PyPreConfig.dev_mode"
      ]
    ],
    "pypreconfig.isolated (c member)": [
      [
        34,
        "c.PyPreConfig.isolated"
      ]
    ],
    "pypreconfig.legacy_windows_fs_encoding (c member)": [
      [
        34,
        "c.PyPreConfig.legacy_windows_fs_encoding"
      ]
    ],
    "pypreconfig.parse_argv (c member)": [
      [
        34,
        "c.PyPreConfig.parse_argv"
      ]
    ],
    "pypreconfig.use_environment (c member)": [
      [
        34,
        "c.PyPreConfig.use_environment"
      ]
    ],
    "pypreconfig.utf8_mode (c member)": [
      [
        34,
        "c.PyPreConfig.utf8_mode"
      ]
    ],
    "pypreconfig_initisolatedconfig (c function)": [
      [
        34,
        "c.PyPreConfig_InitIsolatedConfig"
      ]
    ],
    "pypreconfig_initpythonconfig (c function)": [
      [
        34,
        "c.PyPreConfig_InitPythonConfig"
      ]
    ],
    "pystatus (c type)": [
      [
        34,
        "c.PyStatus"
      ]
    ],
    "pystatus.err_msg (c member)": [
      [
        34,
        "c.PyStatus.err_msg"
      ]
    ],
    "pystatus.exitcode (c member)": [
      [
        34,
        "c.PyStatus.exitcode"
      ]
    ],
    "pystatus.func (c member)": [
      [
        34,
        "c.PyStatus.func"
      ]
    ],
    "pystatus_error (c function)": [
      [
        34,
        "c.PyStatus_Error"
      ]
    ],
    "pystatus_exception (c function)": [
      [
        34,
        "c.PyStatus_Exception"
      ]
    ],
    "pystatus_exit (c function)": [
      [
        34,
        "c.PyStatus_Exit"
      ]
    ],
    "pystatus_iserror (c function)": [
      [
        34,
        "c.PyStatus_IsError"
      ]
    ],
    "pystatus_isexit (c function)": [
      [
        34,
        "c.PyStatus_IsExit"
      ]
    ],
    "pystatus_nomemory (c function)": [
      [
        34,
        "c.PyStatus_NoMemory"
      ]
    ],
    "pystatus_ok (c function)": [
      [
        34,
        "c.PyStatus_Ok"
      ]
    ],
    "pywidestringlist (c type)": [
      [
        34,
        "c.PyWideStringList"
      ]
    ],
    "pywidestringlist.items (c member)": [
      [
        34,
        "c.PyWideStringList.items"
      ]
    ],
    "pywidestringlist.length (c member)": [
      [
        34,
        "c.PyWideStringList.length"
      ]
    ],
    "pywidestringlist_append (c function)": [
      [
        34,
        "c.PyWideStringList_Append"
      ]
    ],
    "pywidestringlist_insert (c function)": [
      [
        34,
        "c.PyWideStringList_Insert"
      ]
    ],
    "py_exitstatusexception (c function)": [
      [
        34,
        "c.Py_ExitStatusException"
      ]
    ],
    "py_getargcargv (c function)": [
      [
        34,
        "c.Py_GetArgcArgv"
      ]
    ],
    "py_initializefromconfig (c function)": [
      [
        34,
        "c.Py_InitializeFromConfig"
      ]
    ],
    "py_preinitialize (c function)": [
      [
        34,
        "c.Py_PreInitialize"
      ]
    ],
    "py_preinitializefromargs (c function)": [
      [
        34,
        "c.Py_PreInitializeFromArgs"
      ]
    ],
    "py_preinitializefrombytesargs (c function)": [
      [
        34,
        "c.Py_PreInitializeFromBytesArgs"
      ]
    ],
    "py_runmain (c function)": [
      [
        34,
        "c.Py_RunMain"
      ]
    ],
    "_py_initializemain (c function)": [
      [
        34,
        "c._Py_InitializeMain"
      ]
    ],
    "__pyvenv_launcher__": [
      [
        34,
        "index-24"
      ],
      [
        34,
        "index-4"
      ]
    ],
    "pep 353": [
      [
        35,
        "index-10"
      ],
      [
        466,
        "index-16"
      ],
      [
        466,
        "index-17"
      ],
      [
        466,
        "index-29"
      ],
      [
        471,
        "index-37"
      ],
      [
        482,
        "index-157"
      ]
    ],
    "pep 7": [
      [
        35,
        "index-0"
      ],
      [
        35,
        "index-1"
      ],
      [
        35,
        "index-2"
      ],
      [
        455,
        "index-0"
      ],
      [
        478,
        "index-34"
      ]
    ],
    "pydoc_str (c macro)": [
      [
        35,
        "c.PyDoc_STR"
      ]
    ],
    "pydoc_strvar (c macro)": [
      [
        35,
        "c.PyDoc_STRVAR"
      ]
    ],
    "pylist_getitem (c function)": [
      [
        35,
        "index-7"
      ],
      [
        38,
        "c.PyList_GetItem"
      ]
    ],
    "pylist_setitem (c function)": [
      [
        35,
        "index-5"
      ],
      [
        38,
        "c.PyList_SetItem"
      ]
    ],
    "pymodinit_func (c macro)": [
      [
        35,
        "c.PyMODINIT_FUNC"
      ]
    ],
    "pysequence_getitem (c function)": [
      [
        35,
        "index-7"
      ],
      [
        54,
        "c.PySequence_GetItem"
      ]
    ],
    "pytuple_setitem (c function)": [
      [
        35,
        "index-5"
      ],
      [
        60,
        "c.PyTuple_SetItem"
      ]
    ],
    "py_abs (c macro)": [
      [
        35,
        "c.Py_ABS"
      ]
    ],
    "py_always_inline (c macro)": [
      [
        35,
        "c.Py_ALWAYS_INLINE"
      ]
    ],
    "py_charmask (c macro)": [
      [
        35,
        "c.Py_CHARMASK"
      ]
    ],
    "py_debug (c macro)": [
      [
        35,
        "c.Py_DEBUG"
      ]
    ],
    "py_decref (c function)": [
      [
        35,
        "index-4"
      ],
      [
        52,
        "c.Py_DECREF"
      ],
      [
        52,
        "c.Py_DecRef"
      ]
    ],
    "py_deprecated (c macro)": [
      [
        35,
        "c.Py_DEPRECATED"
      ]
    ],
    "py_getenv (c macro)": [
      [
        35,
        "c.Py_GETENV"
      ]
    ],
    "py_incref (c function)": [
      [
        35,
        "index-4"
      ],
      [
        52,
        "c.Py_INCREF"
      ],
      [
        52,
        "c.Py_IncRef"
      ]
    ],
    "py_max (c macro)": [
      [
        35,
        "c.Py_MAX"
      ]
    ],
    "py_member_size (c macro)": [
      [
        35,
        "c.Py_MEMBER_SIZE"
      ]
    ],
    "py_min (c macro)": [
      [
        35,
        "c.Py_MIN"
      ]
    ],
    "py_no_inline (c macro)": [
      [
        35,
        "c.Py_NO_INLINE"
      ]
    ],
    "py_stringify (c macro)": [
      [
        35,
        "c.Py_STRINGIFY"
      ]
    ],
    "py_unreachable (c macro)": [
      [
        35,
        "c.Py_UNREACHABLE"
      ]
    ],
    "py_unused (c macro)": [
      [
        35,
        "c.Py_UNUSED"
      ]
    ],
    "py_xdecref (c function)": [
      [
        35,
        "index-17"
      ],
      [
        52,
        "c.Py_XDECREF"
      ]
    ],
    "py_ssize_t (c type)": [
      [
        35,
        "c.Py_ssize_t"
      ]
    ],
    "exc_info (in module sys)": [
      [
        35,
        "index-13"
      ],
      [
        427,
        "index-66"
      ]
    ],
    "incr_item()": [
      [
        35,
        "index-15"
      ],
      [
        35,
        "index-16"
      ]
    ],
    "set_all()": [
      [
        35,
        "index-6"
      ]
    ],
    "sum_list()": [
      [
        35,
        "index-8"
      ]
    ],
    "sum_sequence()": [
      [
        35,
        "index-14"
      ],
      [
        35,
        "index-9"
      ]
    ],
    "type": [
      [
        35,
        "index-3"
      ],
      [
        49,
        "index-7"
      ],
      [
        61,
        "index-0"
      ],
      [
        87,
        "term-type"
      ],
      [
        224,
        "index-0"
      ],
      [
        224,
        "index-12"
      ],
      [
        343,
        "index-24"
      ],
      [
        343,
        "index-52"
      ],
      [
        343,
        "index-59"
      ],
      [
        343,
        "index-65"
      ],
      [
        427,
        "index-1"
      ],
      [
        427,
        "index-4"
      ],
      [
        427,
        "index-86"
      ],
      [
        429,
        "index-7"
      ],
      [
        435,
        "index-47"
      ]
    ],
    "pyaiter_check (c function)": [
      [
        36,
        "c.PyAIter_Check"
      ]
    ],
    "pyiter_check (c function)": [
      [
        36,
        "c.PyIter_Check"
      ]
    ],
    "pyiter_next (c function)": [
      [
        36,
        "c.PyIter_Next"
      ]
    ],
    "pyiter_send (c function)": [
      [
        36,
        "c.PyIter_Send"
      ]
    ],
    "pysendresult (c type)": [
      [
        36,
        "c.PySendResult"
      ]
    ],
    "pycalliter_check (c function)": [
      [
        37,
        "c.PyCallIter_Check"
      ]
    ],
    "pycalliter_new (c function)": [
      [
        37,
        "c.PyCallIter_New"
      ]
    ],
    "pycalliter_type (c var)": [
      [
        37,
        "c.PyCallIter_Type"
      ]
    ],
    "pyseqiter_check (c function)": [
      [
        37,
        "c.PySeqIter_Check"
      ]
    ],
    "pyseqiter_new (c function)": [
      [
        37,
        "c.PySeqIter_New"
      ]
    ],
    "pyseqiter_type (c var)": [
      [
        37,
        "c.PySeqIter_Type"
      ]
    ],
    "pylistobject (c type)": [
      [
        38,
        "c.PyListObject"
      ]
    ],
    "pylist_append (c function)": [
      [
        38,
        "c.PyList_Append"
      ]
    ],
    "pylist_astuple (c function)": [
      [
        38,
        "c.PyList_AsTuple"
      ]
    ],
    "pylist_check (c function)": [
      [
        38,
        "c.PyList_Check"
      ]
    ],
    "pylist_checkexact (c function)": [
      [
        38,
        "c.PyList_CheckExact"
      ]
    ],
    "pylist_get_item (c function)": [
      [
        38,
        "c.PyList_GET_ITEM"
      ]
    ],
    "pylist_get_size (c function)": [
      [
        38,
        "c.PyList_GET_SIZE"
      ]
    ],
    "pylist_getslice (c function)": [
      [
        38,
        "c.PyList_GetSlice"
      ]
    ],
    "pylist_insert (c function)": [
      [
        38,
        "c.PyList_Insert"
      ]
    ],
    "pylist_new (c function)": [
      [
        38,
        "c.PyList_New"
      ]
    ],
    "pylist_reverse (c function)": [
      [
        38,
        "c.PyList_Reverse"
      ]
    ],
    "pylist_set_item (c function)": [
      [
        38,
        "c.PyList_SET_ITEM"
      ]
    ],
    "pylist_setslice (c function)": [
      [
        38,
        "c.PyList_SetSlice"
      ]
    ],
    "pylist_size (c function)": [
      [
        38,
        "c.PyList_Size"
      ]
    ],
    "pylist_sort (c function)": [
      [
        38,
        "c.PyList_Sort"
      ]
    ],
    "pylist_type (c var)": [
      [
        38,
        "c.PyList_Type"
      ]
    ],
    "list": [
      [
        38,
        "index-0"
      ],
      [
        87,
        "term-list"
      ],
      [
        343,
        "index-23"
      ],
      [
        343,
        "index-24"
      ],
      [
        343,
        "index-25"
      ],
      [
        426,
        "index-6"
      ],
      [
        427,
        "index-25"
      ],
      [
        429,
        "index-15"
      ],
      [
        429,
        "index-40"
      ],
      [
        429,
        "index-42"
      ],
      [
        429,
        "index-45"
      ],
      [
        429,
        "index-91"
      ],
      [
        435,
        "index-1"
      ],
      [
        435,
        "index-10"
      ],
      [
        435,
        "index-2"
      ],
      [
        435,
        "index-21"
      ],
      [
        435,
        "index-5"
      ],
      [
        435,
        "index-6"
      ]
    ],
    "tuple": [
      [
        38,
        "index-2"
      ],
      [
        54,
        "index-1"
      ],
      [
        60,
        "index-0"
      ],
      [
        343,
        "index-22"
      ],
      [
        343,
        "index-26"
      ],
      [
        427,
        "index-20"
      ],
      [
        429,
        "index-42"
      ],
      [
        429,
        "index-45"
      ],
      [
        429,
        "index-9"
      ],
      [
        429,
        "index-92"
      ]
    ],
    "long_max (c macro)": [
      [
        39,
        "index-1"
      ]
    ],
    "overflowerror (built-in exception)": [
      [
        39,
        "index-1"
      ],
      [
        39,
        "index-2"
      ],
      [
        39,
        "index-3"
      ],
      [
        39,
        "index-4"
      ],
      [
        39,
        "index-5"
      ],
      [
        39,
        "index-6"
      ]
    ],
    "py_ssize_t_max (c macro)": [
      [
        39,
        "index-3"
      ]
    ],
    "pylongobject (c type)": [
      [
        39,
        "c.PyLongObject"
      ]
    ],
    "pylong_asdouble (c function)": [
      [
        39,
        "c.PyLong_AsDouble"
      ]
    ],
    "pylong_aslong (c function)": [
      [
        39,
        "c.PyLong_AsLong"
      ]
    ],
    "pylong_aslongandoverflow (c function)": [
      [
        39,
        "c.PyLong_AsLongAndOverflow"
      ]
    ],
    "pylong_aslonglong (c function)": [
      [
        39,
        "c.PyLong_AsLongLong"
      ]
    ],
    "pylong_aslonglongandoverflow (c function)": [
      [
        39,
        "c.PyLong_AsLongLongAndOverflow"
      ]
    ],
    "pylong_assize_t (c function)": [
      [
        39,
        "c.PyLong_AsSize_t"
      ]
    ],
    "pylong_asssize_t (c function)": [
      [
        39,
        "c.PyLong_AsSsize_t"
      ]
    ],
    "pylong_asunsignedlong (c function)": [
      [
        39,
        "c.PyLong_AsUnsignedLong"
      ]
    ],
    "pylong_asunsignedlonglong (c function)": [
      [
        39,
        "c.PyLong_AsUnsignedLongLong"
      ]
    ],
    "pylong_asunsignedlonglongmask (c function)": [
      [
        39,
        "c.PyLong_AsUnsignedLongLongMask"
      ]
    ],
    "pylong_asunsignedlongmask (c function)": [
      [
        39,
        "c.PyLong_AsUnsignedLongMask"
      ]
    ],
    "pylong_asvoidptr (c function)": [
      [
        39,
        "c.PyLong_AsVoidPtr"
      ]
    ],
    "pylong_check (c function)": [
      [
        39,
        "c.PyLong_Check"
      ]
    ],
    "pylong_checkexact (c function)": [
      [
        39,
        "c.PyLong_CheckExact"
      ]
    ],
    "pylong_fromdouble (c function)": [
      [
        39,
        "c.PyLong_FromDouble"
      ]
    ],
    "pylong_fromlong (c function)": [
      [
        39,
        "c.PyLong_FromLong"
      ]
    ],
    "pylong_fromlonglong (c function)": [
      [
        39,
        "c.PyLong_FromLongLong"
      ]
    ],
    "pylong_fromsize_t (c function)": [
      [
        39,
        "c.PyLong_FromSize_t"
      ]
    ],
    "pylong_fromssize_t (c function)": [
      [
        39,
        "c.PyLong_FromSsize_t"
      ]
    ],
    "pylong_fromstring (c function)": [
      [
        39,
        "c.PyLong_FromString"
      ]
    ],
    "pylong_fromunicodeobject (c function)": [
      [
        39,
        "c.PyLong_FromUnicodeObject"
      ]
    ],
    "pylong_fromunsignedlong (c function)": [
      [
        39,
        "c.PyLong_FromUnsignedLong"
      ]
    ],
    "pylong_fromunsignedlonglong (c function)": [
      [
        39,
        "c.PyLong_FromUnsignedLongLong"
      ]
    ],
    "pylong_fromvoidptr (c function)": [
      [
        39,
        "c.PyLong_FromVoidPtr"
      ]
    ],
    "pylong_type (c var)": [
      [
        39,
        "c.PyLong_Type"
      ]
    ],
    "pyunstable_long_compactvalue (c function)": [
      [
        39,
        "c.PyUnstable_Long_CompactValue"
      ]
    ],
    "pyunstable_long_iscompact (c function)": [
      [
        39,
        "c.PyUnstable_Long_IsCompact"
      ]
    ],
    "size_max (c macro)": [
      [
        39,
        "index-5"
      ]
    ],
    "ulong_max (c macro)": [
      [
        39,
        "index-4"
      ]
    ],
    "integer": [
      [
        39,
        "index-0"
      ],
      [
        343,
        "index-11"
      ],
      [
        343,
        "index-12"
      ],
      [
        343,
        "index-16"
      ],
      [
        427,
        "index-10"
      ],
      [
        427,
        "index-11"
      ],
      [
        427,
        "index-19"
      ]
    ],
    "long integer": [
      [
        39,
        "index-0"
      ]
    ],
    "pymapping_check (c function)": [
      [
        40,
        "c.PyMapping_Check"
      ]
    ],
    "pymapping_delitem (c function)": [
      [
        40,
        "c.PyMapping_DelItem"
      ]
    ],
    "pymapping_delitemstring (c function)": [
      [
        40,
        "c.PyMapping_DelItemString"
      ]
    ],
    "pymapping_getitemstring (c function)": [
      [
        40,
        "c.PyMapping_GetItemString"
      ]
    ],
    "pymapping_haskey (c function)": [
      [
        40,
        "c.PyMapping_HasKey"
      ]
    ],
    "pymapping_haskeystring (c function)": [
      [
        40,
        "c.PyMapping_HasKeyString"
      ]
    ],
    "pymapping_items (c function)": [
      [
        40,
        "c.PyMapping_Items"
      ]
    ],
    "pymapping_keys (c function)": [
      [
        40,
        "c.PyMapping_Keys"
      ]
    ],
    "pymapping_length (c function)": [
      [
        40,
        "c.PyMapping_Length"
      ]
    ],
    "pymapping_setitemstring (c function)": [
      [
        40,
        "c.PyMapping_SetItemString"
      ]
    ],
    "pymapping_size (c function)": [
      [
        40,
        "c.PyMapping_Size"
      ]
    ],
    "pymapping_values (c function)": [
      [
        40,
        "c.PyMapping_Values"
      ]
    ],
    "pymarshal_readlastobjectfromfile (c function)": [
      [
        41,
        "c.PyMarshal_ReadLastObjectFromFile"
      ]
    ],
    "pymarshal_readlongfromfile (c function)": [
      [
        41,
        "c.PyMarshal_ReadLongFromFile"
      ]
    ],
    "pymarshal_readobjectfromfile (c function)": [
      [
        41,
        "c.PyMarshal_ReadObjectFromFile"
      ]
    ],
    "pymarshal_readobjectfromstring (c function)": [
      [
        41,
        "c.PyMarshal_ReadObjectFromString"
      ]
    ],
    "pymarshal_readshortfromfile (c function)": [
      [
        41,
        "c.PyMarshal_ReadShortFromFile"
      ]
    ],
    "pymarshal_writelongtofile (c function)": [
      [
        41,
        "c.PyMarshal_WriteLongToFile"
      ]
    ],
    "pymarshal_writeobjecttofile (c function)": [
      [
        41,
        "c.PyMarshal_WriteObjectToFile"
      ]
    ],
    "pymarshal_writeobjecttostring (c function)": [
      [
        41,
        "c.PyMarshal_WriteObjectToString"
      ]
    ],
    "pymem_domain_mem (c macro)": [
      [
        42,
        "c.PYMEM_DOMAIN_MEM"
      ]
    ],
    "pymem_domain_obj (c macro)": [
      [
        42,
        "c.PYMEM_DOMAIN_OBJ"
      ]
    ],
    "pymem_domain_raw (c macro)": [
      [
        42,
        "c.PYMEM_DOMAIN_RAW"
      ]
    ],
    "pythonmalloc": [
      [
        42,
        "index-1"
      ],
      [
        42,
        "index-3"
      ],
      [
        42,
        "index-4"
      ],
      [
        42,
        "index-5"
      ],
      [
        187,
        "index-2"
      ],
      [
        187,
        "index-3"
      ],
      [
        454,
        "envvar-PYTHONMALLOC"
      ],
      [
        454,
        "index-39"
      ],
      [
        455,
        "index-5"
      ],
      [
        478,
        "index-27"
      ],
      [
        478,
        "index-38"
      ],
      [
        482,
        "index-285"
      ]
    ],
    "pymemallocatordomain (c type)": [
      [
        42,
        "c.PyMemAllocatorDomain"
      ]
    ],
    "pymemallocatorex (c type)": [
      [
        42,
        "c.PyMemAllocatorEx"
      ]
    ],
    "pymem_calloc (c function)": [
      [
        42,
        "c.PyMem_Calloc"
      ]
    ],
    "pymem_del (c function)": [
      [
        42,
        "c.PyMem_Del"
      ]
    ],
    "pymem_free (c function)": [
      [
        42,
        "c.PyMem_Free"
      ]
    ],
    "pymem_getallocator (c function)": [
      [
        42,
        "c.PyMem_GetAllocator"
      ]
    ],
    "pymem_malloc (c function)": [
      [
        42,
        "c.PyMem_Malloc"
      ]
    ],
    "pymem_new (c macro)": [
      [
        42,
        "c.PyMem_New"
      ]
    ],
    "pymem_rawcalloc (c function)": [
      [
        42,
        "c.PyMem_RawCalloc"
      ]
    ],
    "pymem_rawfree (c function)": [
      [
        42,
        "c.PyMem_RawFree"
      ]
    ],
    "pymem_rawmalloc (c function)": [
      [
        42,
        "c.PyMem_RawMalloc"
      ]
    ],
    "pymem_rawrealloc (c function)": [
      [
        42,
        "c.PyMem_RawRealloc"
      ]
    ],
    "pymem_realloc (c function)": [
      [
        42,
        "c.PyMem_Realloc"
      ]
    ],
    "pymem_resize (c macro)": [
      [
        42,
        "c.PyMem_Resize"
      ]
    ],
    "pymem_setallocator (c function)": [
      [
        42,
        "c.PyMem_SetAllocator"
      ]
    ],
    "pymem_setupdebughooks (c function)": [
      [
        42,
        "c.PyMem_SetupDebugHooks"
      ]
    ],
    "pyobjectarenaallocator (c type)": [
      [
        42,
        "c.PyObjectArenaAllocator"
      ]
    ],
    "pyobject_calloc (c function)": [
      [
        42,
        "c.PyObject_Calloc"
      ]
    ],
    "pyobject_free (c function)": [
      [
        42,
        "c.PyObject_Free"
      ]
    ],
    "pyobject_getarenaallocator (c function)": [
      [
        42,
        "c.PyObject_GetArenaAllocator"
      ]
    ],
    "pyobject_malloc (c function)": [
      [
        42,
        "c.PyObject_Malloc"
      ]
    ],
    "pyobject_realloc (c function)": [
      [
        42,
        "c.PyObject_Realloc"
      ]
    ],
    "pyobject_setarenaallocator (c function)": [
      [
        42,
        "c.PyObject_SetArenaAllocator"
      ]
    ],
    "pytracemalloc_track (c function)": [
      [
        42,
        "c.PyTraceMalloc_Track"
      ]
    ],
    "pytracemalloc_untrack (c function)": [
      [
        42,
        "c.PyTraceMalloc_Untrack"
      ]
    ],
    "calloc (c function)": [
      [
        42,
        "index-0"
      ]
    ],
    "free (c function)": [
      [
        42,
        "index-0"
      ]
    ],
    "malloc (c function)": [
      [
        42,
        "index-0"
      ]
    ],
    "realloc (c function)": [
      [
        42,
        "index-0"
      ]
    ],
    "pybuf_read (c macro)": [
      [
        43,
        "c.PyBUF_READ"
      ]
    ],
    "pybuf_write (c macro)": [
      [
        43,
        "c.PyBUF_WRITE"
      ]
    ],
    "pymemoryview_check (c function)": [
      [
        43,
        "c.PyMemoryView_Check"
      ]
    ],
    "pymemoryview_frombuffer (c function)": [
      [
        43,
        "c.PyMemoryView_FromBuffer"
      ]
    ],
    "pymemoryview_frommemory (c function)": [
      [
        43,
        "c.PyMemoryView_FromMemory"
      ]
    ],
    "pymemoryview_fromobject (c function)": [
      [
        43,
        "c.PyMemoryView_FromObject"
      ]
    ],
    "pymemoryview_get_base (c function)": [
      [
        43,
        "c.PyMemoryView_GET_BASE"
      ]
    ],
    "pymemoryview_get_buffer (c function)": [
      [
        43,
        "c.PyMemoryView_GET_BUFFER"
      ]
    ],
    "pymemoryview_getcontiguous (c function)": [
      [
        43,
        "c.PyMemoryView_GetContiguous"
      ]
    ],
    "memoryview": [
      [
        43,
        "index-0"
      ],
      [
        343,
        "index-40"
      ]
    ],
    "pyinstancemethod_check (c function)": [
      [
        44,
        "c.PyInstanceMethod_Check"
      ]
    ],
    "pyinstancemethod_function (c function)": [
      [
        44,
        "c.PyInstanceMethod_Function"
      ]
    ],
    "pyinstancemethod_get_function (c function)": [
      [
        44,
        "c.PyInstanceMethod_GET_FUNCTION"
      ]
    ],
    "pyinstancemethod_new (c function)": [
      [
        44,
        "c.PyInstanceMethod_New"
      ]
    ],
    "pyinstancemethod_type (c var)": [
      [
        44,
        "c.PyInstanceMethod_Type"
      ]
    ],
    "pymethod_check (c function)": [
      [
        44,
        "c.PyMethod_Check"
      ]
    ],
    "pymethod_function (c function)": [
      [
        44,
        "c.PyMethod_Function"
      ]
    ],
    "pymethod_get_function (c function)": [
      [
        44,
        "c.PyMethod_GET_FUNCTION"
      ]
    ],
    "pymethod_get_self (c function)": [
      [
        44,
        "c.PyMethod_GET_SELF"
      ]
    ],
    "pymethod_new (c function)": [
      [
        44,
        "c.PyMethod_New"
      ]
    ],
    "pymethod_self (c function)": [
      [
        44,
        "c.PyMethod_Self"
      ]
    ],
    "pymethod_type (c var)": [
      [
        44,
        "c.PyMethod_Type"
      ]
    ],
    "instancemethod": [
      [
        44,
        "index-0"
      ]
    ],
    "method": [
      [
        44,
        "index-1"
      ],
      [
        87,
        "index-26"
      ],
      [
        87,
        "index-34"
      ],
      [
        87,
        "term-method"
      ],
      [
        343,
        "index-61"
      ],
      [
        427,
        "index-37"
      ],
      [
        427,
        "index-43"
      ],
      [
        429,
        "index-53"
      ],
      [
        439,
        "index-0"
      ]
    ],
    "moduletype (in module types)": [
      [
        45,
        "index-1"
      ]
    ],
    "pep 3121": [
      [
        45,
        "index-6"
      ],
      [
        469,
        "index-34"
      ],
      [
        482,
        "index-151"
      ]
    ],
    "pep 451": [
      [
        45,
        "index-7"
      ],
      [
        87,
        "index-16"
      ],
      [
        249,
        "index-6"
      ],
      [
        301,
        "index-1"
      ],
      [
        301,
        "index-4"
      ],
      [
        323,
        "index-3"
      ],
      [
        323,
        "index-5"
      ],
      [
        323,
        "index-8"
      ],
      [
        351,
        "index-20"
      ],
      [
        431,
        "index-27"
      ],
      [
        471,
        "index-33"
      ],
      [
        473,
        "index-36"
      ],
      [
        476,
        "index-23"
      ],
      [
        476,
        "index-3"
      ],
      [
        477,
        "index-27"
      ],
      [
        482,
        "index-284"
      ],
      [
        482,
        "index-44"
      ]
    ],
    "pymoduledef (c type)": [
      [
        45,
        "c.PyModuleDef"
      ]
    ],
    "pymoduledef.m_base (c member)": [
      [
        45,
        "c.PyModuleDef.m_base"
      ]
    ],
    "pymoduledef.m_clear (c member)": [
      [
        45,
        "c.PyModuleDef.m_clear"
      ]
    ],
    "pymoduledef.m_doc (c member)": [
      [
        45,
        "c.PyModuleDef.m_doc"
      ]
    ],
    "pymoduledef.m_free (c member)": [
      [
        45,
        "c.PyModuleDef.m_free"
      ]
    ],
    "pymoduledef.m_methods (c member)": [
      [
        45,
        "c.PyModuleDef.m_methods"
      ]
    ],
    "pymoduledef.m_name (c member)": [
      [
        45,
        "c.PyModuleDef.m_name"
      ]
    ],
    "pymoduledef.m_size (c member)": [
      [
        45,
        "c.PyModuleDef.m_size"
      ]
    ],
    "pymoduledef.m_slots (c member)": [
      [
        45,
        "c.PyModuleDef.m_slots"
      ]
    ],
    "pymoduledef.m_slots.m_reload (c member)": [
      [
        45,
        "c.PyModuleDef.m_slots.m_reload"
      ]
    ],
    "pymoduledef.m_traverse (c member)": [
      [
        45,
        "c.PyModuleDef.m_traverse"
      ]
    ],
    "pymoduledef_init (c function)": [
      [
        45,
        "c.PyModuleDef_Init"
      ]
    ],
    "pymoduledef_slot (c type)": [
      [
        45,
        "c.PyModuleDef_Slot"
      ]
    ],
    "pymoduledef_slot.slot (c member)": [
      [
        45,
        "c.PyModuleDef_Slot.slot"
      ]
    ],
    "pymoduledef_slot.value (c member)": [
      [
        45,
        "c.PyModuleDef_Slot.value"
      ]
    ],
    "pymodule_addfunctions (c function)": [
      [
        45,
        "c.PyModule_AddFunctions"
      ]
    ],
    "pymodule_addintconstant (c function)": [
      [
        45,
        "c.PyModule_AddIntConstant"
      ]
    ],
    "pymodule_addintmacro (c macro)": [
      [
        45,
        "c.PyModule_AddIntMacro"
      ]
    ],
    "pymodule_addobject (c function)": [
      [
        45,
        "c.PyModule_AddObject"
      ]
    ],
    "pymodule_addobjectref (c function)": [
      [
        45,
        "c.PyModule_AddObjectRef"
      ]
    ],
    "pymodule_addstringconstant (c function)": [
      [
        45,
        "c.PyModule_AddStringConstant"
      ]
    ],
    "pymodule_addstringmacro (c macro)": [
      [
        45,
        "c.PyModule_AddStringMacro"
      ]
    ],
    "pymodule_addtype (c function)": [
      [
        45,
        "c.PyModule_AddType"
      ]
    ],
    "pymodule_check (c function)": [
      [
        45,
        "c.PyModule_Check"
      ]
    ],
    "pymodule_checkexact (c function)": [
      [
        45,
        "c.PyModule_CheckExact"
      ]
    ],
    "pymodule_create (c function)": [
      [
        45,
        "c.PyModule_Create"
      ]
    ],
    "pymodule_create2 (c function)": [
      [
        45,
        "c.PyModule_Create2"
      ]
    ],
    "pymodule_execdef (c function)": [
      [
        45,
        "c.PyModule_ExecDef"
      ]
    ],
    "pymodule_fromdefandspec (c function)": [
      [
        45,
        "c.PyModule_FromDefAndSpec"
      ]
    ],
    "pymodule_fromdefandspec2 (c function)": [
      [
        45,
        "c.PyModule_FromDefAndSpec2"
      ]
    ],
    "pymodule_getdef (c function)": [
      [
        45,
        "c.PyModule_GetDef"
      ]
    ],
    "pymodule_getdict (c function)": [
      [
        45,
        "c.PyModule_GetDict"
      ]
    ],
    "pymodule_getfilename (c function)": [
      [
        45,
        "c.PyModule_GetFilename"
      ]
    ],
    "pymodule_getfilenameobject (c function)": [
      [
        45,
        "c.PyModule_GetFilenameObject"
      ]
    ],
    "pymodule_getname (c function)": [
      [
        45,
        "c.PyModule_GetName"
      ]
    ],
    "pymodule_getnameobject (c function)": [
      [
        45,
        "c.PyModule_GetNameObject"
      ]
    ],
    "pymodule_getstate (c function)": [
      [
        45,
        "c.PyModule_GetState"
      ]
    ],
    "pymodule_new (c function)": [
      [
        45,
        "c.PyModule_New"
      ]
    ],
    "pymodule_newobject (c function)": [
      [
        45,
        "c.PyModule_NewObject"
      ]
    ],
    "pymodule_setdocstring (c function)": [
      [
        45,
        "c.PyModule_SetDocString"
      ]
    ],
    "pymodule_type (c var)": [
      [
        45,
        "c.PyModule_Type"
      ]
    ],
    "pystate_addmodule (c function)": [
      [
        45,
        "c.PyState_AddModule"
      ]
    ],
    "pystate_findmodule (c function)": [
      [
        45,
        "c.PyState_FindModule"
      ]
    ],
    "pystate_removemodule (c function)": [
      [
        45,
        "c.PyState_RemoveModule"
      ]
    ],
    "py_mod_multiple_interpreters_not_supported (c macro)": [
      [
        45,
        "c.Py_MOD_MULTIPLE_INTERPRETERS_NOT_SUPPORTED"
      ]
    ],
    "py_mod_multiple_interpreters_supported (c macro)": [
      [
        45,
        "c.Py_MOD_MULTIPLE_INTERPRETERS_SUPPORTED"
      ]
    ],
    "py_mod_per_interpreter_gil_supported (c macro)": [
      [
        45,
        "c.Py_MOD_PER_INTERPRETER_GIL_SUPPORTED"
      ]
    ],
    "py_mod_create (c macro)": [
      [
        45,
        "c.Py_mod_create"
      ]
    ],
    "py_mod_exec (c macro)": [
      [
        45,
        "c.Py_mod_exec"
      ]
    ],
    "py_mod_multiple_interpreters (c macro)": [
      [
        45,
        "c.Py_mod_multiple_interpreters"
      ]
    ],
    "systemerror (built-in exception)": [
      [
        45,
        "index-4"
      ],
      [
        45,
        "index-5"
      ]
    ],
    "__dict__ (module attribute)": [
      [
        45,
        "index-3"
      ],
      [
        427,
        "index-46"
      ]
    ],
    "__doc__ (module attribute)": [
      [
        45,
        "index-2"
      ],
      [
        427,
        "index-45"
      ]
    ],
    "__file__ (module attribute)": [
      [
        45,
        "index-2"
      ],
      [
        45,
        "index-5"
      ],
      [
        427,
        "index-45"
      ]
    ],
    "__loader__ (module attribute)": [
      [
        45,
        "index-2"
      ]
    ],
    "__name__ (module attribute)": [
      [
        45,
        "index-2"
      ],
      [
        45,
        "index-4"
      ],
      [
        427,
        "index-45"
      ]
    ],
    "__package__ (module attribute)": [
      [
        45,
        "index-2"
      ]
    ],
    "none": [
      [
        46,
        "index-0"
      ],
      [
        427,
        "index-6"
      ],
      [
        435,
        "index-3"
      ]
    ],
    "py_none (c var)": [
      [
        46,
        "c.Py_None"
      ]
    ],
    "py_return_none (c macro)": [
      [
        46,
        "c.Py_RETURN_NONE"
      ]
    ],
    "pyindex_check (c function)": [
      [
        47,
        "c.PyIndex_Check"
      ]
    ],
    "pynumber_absolute (c function)": [
      [
        47,
        "c.PyNumber_Absolute"
      ]
    ],
    "pynumber_add (c function)": [
      [
        47,
        "c.PyNumber_Add"
      ]
    ],
    "pynumber_and (c function)": [
      [
        47,
        "c.PyNumber_And"
      ]
    ],
    "pynumber_asssize_t (c function)": [
      [
        47,
        "c.PyNumber_AsSsize_t"
      ]
    ],
    "pynumber_check (c function)": [
      [
        47,
        "c.PyNumber_Check"
      ]
    ],
    "pynumber_divmod (c function)": [
      [
        47,
        "c.PyNumber_Divmod"
      ]
    ],
    "pynumber_float (c function)": [
      [
        47,
        "c.PyNumber_Float"
      ]
    ],
    "pynumber_floordivide (c function)": [
      [
        47,
        "c.PyNumber_FloorDivide"
      ]
    ],
    "pynumber_inplaceadd (c function)": [
      [
        47,
        "c.PyNumber_InPlaceAdd"
      ]
    ],
    "pynumber_inplaceand (c function)": [
      [
        47,
        "c.PyNumber_InPlaceAnd"
      ]
    ],
    "pynumber_inplacefloordivide (c function)": [
      [
        47,
        "c.PyNumber_InPlaceFloorDivide"
      ]
    ],
    "pynumber_inplacelshift (c function)": [
      [
        47,
        "c.PyNumber_InPlaceLshift"
      ]
    ],
    "pynumber_inplacematrixmultiply (c function)": [
      [
        47,
        "c.PyNumber_InPlaceMatrixMultiply"
      ]
    ],
    "pynumber_inplacemultiply (c function)": [
      [
        47,
        "c.PyNumber_InPlaceMultiply"
      ]
    ],
    "pynumber_inplaceor (c function)": [
      [
        47,
        "c.PyNumber_InPlaceOr"
      ]
    ],
    "pynumber_inplacepower (c function)": [
      [
        47,
        "c.PyNumber_InPlacePower"
      ]
    ],
    "pynumber_inplaceremainder (c function)": [
      [
        47,
        "c.PyNumber_InPlaceRemainder"
      ]
    ],
    "pynumber_inplacershift (c function)": [
      [
        47,
        "c.PyNumber_InPlaceRshift"
      ]
    ],
    "pynumber_inplacesubtract (c function)": [
      [
        47,
        "c.PyNumber_InPlaceSubtract"
      ]
    ],
    "pynumber_inplacetruedivide (c function)": [
      [
        47,
        "c.PyNumber_InPlaceTrueDivide"
      ]
    ],
    "pynumber_inplacexor (c function)": [
      [
        47,
        "c.PyNumber_InPlaceXor"
      ]
    ],
    "pynumber_index (c function)": [
      [
        47,
        "c.PyNumber_Index"
      ]
    ],
    "pynumber_invert (c function)": [
      [
        47,
        "c.PyNumber_Invert"
      ]
    ],
    "pynumber_long (c function)": [
      [
        47,
        "c.PyNumber_Long"
      ]
    ],
    "pynumber_lshift (c function)": [
      [
        47,
        "c.PyNumber_Lshift"
      ]
    ],
    "pynumber_matrixmultiply (c function)": [
      [
        47,
        "c.PyNumber_MatrixMultiply"
      ]
    ],
    "pynumber_multiply (c function)": [
      [
        47,
        "c.PyNumber_Multiply"
      ]
    ],
    "pynumber_negative (c function)": [
      [
        47,
        "c.PyNumber_Negative"
      ]
    ],
    "pynumber_or (c function)": [
      [
        47,
        "c.PyNumber_Or"
      ]
    ],
    "pynumber_positive (c function)": [
      [
        47,
        "c.PyNumber_Positive"
      ]
    ],
    "pynumber_power (c function)": [
      [
        47,
        "c.PyNumber_Power"
      ]
    ],
    "pynumber_remainder (c function)": [
      [
        47,
        "c.PyNumber_Remainder"
      ]
    ],
    "pynumber_rshift (c function)": [
      [
        47,
        "c.PyNumber_Rshift"
      ]
    ],
    "pynumber_subtract (c function)": [
      [
        47,
        "c.PyNumber_Subtract"
      ]
    ],
    "pynumber_tobase (c function)": [
      [
        47,
        "c.PyNumber_ToBase"
      ]
    ],
    "pynumber_truedivide (c function)": [
      [
        47,
        "c.PyNumber_TrueDivide"
      ]
    ],
    "pynumber_xor (c function)": [
      [
        47,
        "c.PyNumber_Xor"
      ]
    ],
    "abs": [
      [
        47,
        "index-2"
      ],
      [
        427,
        "index-103"
      ]
    ],
    "divmod": [
      [
        47,
        "index-0"
      ],
      [
        427,
        "index-100"
      ],
      [
        427,
        "index-101"
      ]
    ],
    "float": [
      [
        47,
        "index-5"
      ],
      [
        343,
        "index-13"
      ],
      [
        427,
        "index-104"
      ]
    ],
    "int": [
      [
        47,
        "index-4"
      ],
      [
        343,
        "index-13"
      ],
      [
        427,
        "index-104"
      ]
    ],
    "pow": [
      [
        47,
        "index-1"
      ],
      [
        47,
        "index-3"
      ],
      [
        427,
        "index-100"
      ],
      [
        427,
        "index-101"
      ],
      [
        427,
        "index-102"
      ]
    ],
    "pyobject_ascharbuffer (c function)": [
      [
        48,
        "c.PyObject_AsCharBuffer"
      ]
    ],
    "pyobject_asreadbuffer (c function)": [
      [
        48,
        "c.PyObject_AsReadBuffer"
      ]
    ],
    "pyobject_aswritebuffer (c function)": [
      [
        48,
        "c.PyObject_AsWriteBuffer"
      ]
    ],
    "pyobject_checkreadbuffer (c function)": [
      [
        48,
        "c.PyObject_CheckReadBuffer"
      ]
    ],
    "pep 3119": [
      [
        49,
        "index-4"
      ],
      [
        49,
        "index-5"
      ],
      [
        115,
        "index-0"
      ],
      [
        160,
        "index-5"
      ],
      [
        427,
        "index-94"
      ],
      [
        467,
        "index-16"
      ]
    ],
    "pyobject_ascii (c function)": [
      [
        49,
        "c.PyObject_ASCII"
      ]
    ],
    "pyobject_bytes (c function)": [
      [
        49,
        "c.PyObject_Bytes"
      ]
    ],
    "pyobject_delattr (c function)": [
      [
        49,
        "c.PyObject_DelAttr"
      ]
    ],
    "pyobject_delattrstring (c function)": [
      [
        49,
        "c.PyObject_DelAttrString"
      ]
    ],
    "pyobject_delitem (c function)": [
      [
        49,
        "c.PyObject_DelItem"
      ]
    ],
    "pyobject_dir (c function)": [
      [
        49,
        "c.PyObject_Dir"
      ]
    ],
    "pyobject_format (c function)": [
      [
        49,
        "c.PyObject_Format"
      ]
    ],
    "pyobject_genericgetattr (c function)": [
      [
        49,
        "c.PyObject_GenericGetAttr"
      ]
    ],
    "pyobject_genericgetdict (c function)": [
      [
        49,
        "c.PyObject_GenericGetDict"
      ]
    ],
    "pyobject_genericsetattr (c function)": [
      [
        49,
        "c.PyObject_GenericSetAttr"
      ]
    ],
    "pyobject_genericsetdict (c function)": [
      [
        49,
        "c.PyObject_GenericSetDict"
      ]
    ],
    "pyobject_getaiter (c function)": [
      [
        49,
        "c.PyObject_GetAIter"
      ]
    ],
    "pyobject_getattr (c function)": [
      [
        49,
        "c.PyObject_GetAttr"
      ]
    ],
    "pyobject_getattrstring (c function)": [
      [
        49,
        "c.PyObject_GetAttrString"
      ]
    ],
    "pyobject_getitem (c function)": [
      [
        49,
        "c.PyObject_GetItem"
      ]
    ],
    "pyobject_getitemdata (c function)": [
      [
        49,
        "c.PyObject_GetItemData"
      ]
    ],
    "pyobject_getiter (c function)": [
      [
        49,
        "c.PyObject_GetIter"
      ]
    ],
    "pyobject_gettypedata (c function)": [
      [
        49,
        "c.PyObject_GetTypeData"
      ]
    ],
    "pyobject_hasattr (c function)": [
      [
        49,
        "c.PyObject_HasAttr"
      ]
    ],
    "pyobject_hasattrstring (c function)": [
      [
        49,
        "c.PyObject_HasAttrString"
      ]
    ],
    "pyobject_hash (c function)": [
      [
        49,
        "c.PyObject_Hash"
      ]
    ],
    "pyobject_hashnotimplemented (c function)": [
      [
        49,
        "c.PyObject_HashNotImplemented"
      ]
    ],
    "pyobject_isinstance (c function)": [
      [
        49,
        "c.PyObject_IsInstance"
      ]
    ],
    "pyobject_issubclass (c function)": [
      [
        49,
        "c.PyObject_IsSubclass"
      ]
    ],
    "pyobject_istrue (c function)": [
      [
        49,
        "c.PyObject_IsTrue"
      ]
    ],
    "pyobject_length (c function)": [
      [
        49,
        "c.PyObject_Length"
      ]
    ],
    "pyobject_lengthhint (c function)": [
      [
        49,
        "c.PyObject_LengthHint"
      ]
    ],
    "pyobject_not (c function)": [
      [
        49,
        "c.PyObject_Not"
      ]
    ],
    "pyobject_print (c function)": [
      [
        49,
        "c.PyObject_Print"
      ]
    ],
    "pyobject_repr (c function)": [
      [
        49,
        "c.PyObject_Repr"
      ]
    ],
    "pyobject_richcompare (c function)": [
      [
        49,
        "c.PyObject_RichCompare"
      ]
    ],
    "pyobject_richcomparebool (c function)": [
      [
        49,
        "c.PyObject_RichCompareBool"
      ]
    ],
    "pyobject_setattr (c function)": [
      [
        49,
        "c.PyObject_SetAttr"
      ]
    ],
    "pyobject_setattrstring (c function)": [
      [
        49,
        "c.PyObject_SetAttrString"
      ]
    ],
    "pyobject_setitem (c function)": [
      [
        49,
        "c.PyObject_SetItem"
      ]
    ],
    "pyobject_size (c function)": [
      [
        49,
        "c.PyObject_Size"
      ]
    ],
    "pyobject_str (c function)": [
      [
        49,
        "c.PyObject_Str"
      ],
      [
        49,
        "index-2"
      ]
    ],
    "pyobject_type (c function)": [
      [
        49,
        "c.PyObject_Type"
      ]
    ],
    "pyobject_typecheck (c function)": [
      [
        49,
        "c.PyObject_TypeCheck"
      ]
    ],
    "pytype_gettypedatasize (c function)": [
      [
        49,
        "c.PyType_GetTypeDataSize"
      ]
    ],
    "py_notimplemented (c var)": [
      [
        49,
        "c.Py_NotImplemented"
      ]
    ],
    "py_return_notimplemented (c macro)": [
      [
        49,
        "c.Py_RETURN_NOTIMPLEMENTED"
      ]
    ],
    "_pyobject_getdictptr (c function)": [
      [
        49,
        "c._PyObject_GetDictPtr"
      ]
    ],
    "ascii": [
      [
        49,
        "index-1"
      ],
      [
        433,
        "index-1"
      ],
      [
        434,
        "index-17"
      ]
    ],
    "hash": [
      [
        49,
        "index-6"
      ],
      [
        63,
        "index-2"
      ],
      [
        343,
        "index-22"
      ],
      [
        427,
        "index-80"
      ]
    ],
    "repr": [
      [
        49,
        "index-0"
      ],
      [
        63,
        "index-1"
      ],
      [
        75,
        "index-3"
      ],
      [
        435,
        "index-3"
      ]
    ],
    "string": [
      [
        49,
        "index-2"
      ],
      [
        75,
        "index-3"
      ],
      [
        224,
        "index-11"
      ],
      [
        224,
        "index-4"
      ],
      [
        343,
        "index-28"
      ],
      [
        343,
        "index-30"
      ],
      [
        343,
        "index-32"
      ],
      [
        343,
        "index-35"
      ],
      [
        344,
        "module-string"
      ],
      [
        427,
        "index-18"
      ],
      [
        427,
        "index-76"
      ],
      [
        427,
        "index-78"
      ],
      [
        429,
        "index-42"
      ],
      [
        429,
        "index-43"
      ],
      [
        429,
        "index-45"
      ],
      [
        434,
        "index-25"
      ],
      [
        435,
        "index-3"
      ]
    ],
    "pyunstable_perfmapstate_fini (c function)": [
      [
        51,
        "c.PyUnstable_PerfMapState_Fini"
      ]
    ],
    "pyunstable_perfmapstate_init (c function)": [
      [
        51,
        "c.PyUnstable_PerfMapState_Init"
      ]
    ],
    "pyunstable_writeperfmapentry (c function)": [
      [
        51,
        "c.PyUnstable_WritePerfMapEntry"
      ]
    ],
    "py_clear (c function)": [
      [
        52,
        "c.Py_CLEAR"
      ]
    ],
    "py_newref (c function)": [
      [
        52,
        "c.Py_NewRef"
      ]
    ],
    "py_refcnt (c function)": [
      [
        52,
        "c.Py_REFCNT"
      ]
    ],
    "py_setref (c macro)": [
      [
        52,
        "c.Py_SETREF"
      ]
    ],
    "py_set_refcnt (c function)": [
      [
        52,
        "c.Py_SET_REFCNT"
      ]
    ],
    "py_xincref (c function)": [
      [
        52,
        "c.Py_XINCREF"
      ]
    ],
    "py_xnewref (c function)": [
      [
        52,
        "c.Py_XNewRef"
      ]
    ],
    "py_xsetref (c macro)": [
      [
        52,
        "c.Py_XSETREF"
      ]
    ],
    "pyeval_getbuiltins (c function)": [
      [
        53,
        "c.PyEval_GetBuiltins"
      ]
    ],
    "pyeval_getframe (c function)": [
      [
        53,
        "c.PyEval_GetFrame"
      ]
    ],
    "pyeval_getfuncdesc (c function)": [
      [
        53,
        "c.PyEval_GetFuncDesc"
      ]
    ],
    "pyeval_getfuncname (c function)": [
      [
        53,
        "c.PyEval_GetFuncName"
      ]
    ],
    "pyeval_getglobals (c function)": [
      [
        53,
        "c.PyEval_GetGlobals"
      ]
    ],
    "pyeval_getlocals (c function)": [
      [
        53,
        "c.PyEval_GetLocals"
      ]
    ],
    "pysequence_check (c function)": [
      [
        54,
        "c.PySequence_Check"
      ]
    ],
    "pysequence_concat (c function)": [
      [
        54,
        "c.PySequence_Concat"
      ]
    ],
    "pysequence_contains (c function)": [
      [
        54,
        "c.PySequence_Contains"
      ]
    ],
    "pysequence_count (c function)": [
      [
        54,
        "c.PySequence_Count"
      ]
    ],
    "pysequence_delitem (c function)": [
      [
        54,
        "c.PySequence_DelItem"
      ]
    ],
    "pysequence_delslice (c function)": [
      [
        54,
        "c.PySequence_DelSlice"
      ]
    ],
    "pysequence_fast (c function)": [
      [
        54,
        "c.PySequence_Fast"
      ]
    ],
    "pysequence_fast_get_item (c function)": [
      [
        54,
        "c.PySequence_Fast_GET_ITEM"
      ]
    ],
    "pysequence_fast_get_size (c function)": [
      [
        54,
        "c.PySequence_Fast_GET_SIZE"
      ]
    ],
    "pysequence_fast_items (c function)": [
      [
        54,
        "c.PySequence_Fast_ITEMS"
      ]
    ],
    "pysequence_getslice (c function)": [
      [
        54,
        "c.PySequence_GetSlice"
      ]
    ],
    "pysequence_item (c function)": [
      [
        54,
        "c.PySequence_ITEM"
      ]
    ],
    "pysequence_inplaceconcat (c function)": [
      [
        54,
        "c.PySequence_InPlaceConcat"
      ]
    ],
    "pysequence_inplacerepeat (c function)": [
      [
        54,
        "c.PySequence_InPlaceRepeat"
      ]
    ],
    "pysequence_index (c function)": [
      [
        54,
        "c.PySequence_Index"
      ]
    ],
    "pysequence_length (c function)": [
      [
        54,
        "c.PySequence_Length"
      ]
    ],
    "pysequence_list (c function)": [
      [
        54,
        "c.PySequence_List"
      ]
    ],
    "pysequence_repeat (c function)": [
      [
        54,
        "c.PySequence_Repeat"
      ]
    ],
    "pysequence_setitem (c function)": [
      [
        54,
        "c.PySequence_SetItem"
      ]
    ],
    "pysequence_setslice (c function)": [
      [
        54,
        "c.PySequence_SetSlice"
      ]
    ],
    "pysequence_size (c function)": [
      [
        54,
        "c.PySequence_Size"
      ]
    ],
    "pysequence_tuple (c function)": [
      [
        54,
        "c.PySequence_Tuple"
      ]
    ],
    "pyanyset_check (c function)": [
      [
        55,
        "c.PyAnySet_Check"
      ]
    ],
    "pyanyset_checkexact (c function)": [
      [
        55,
        "c.PyAnySet_CheckExact"
      ]
    ],
    "pyfrozenset_check (c function)": [
      [
        55,
        "c.PyFrozenSet_Check"
      ]
    ],
    "pyfrozenset_checkexact (c function)": [
      [
        55,
        "c.PyFrozenSet_CheckExact"
      ]
    ],
    "pyfrozenset_new (c function)": [
      [
        55,
        "c.PyFrozenSet_New"
      ]
    ],
    "pyfrozenset_type (c var)": [
      [
        55,
        "c.PyFrozenSet_Type"
      ]
    ],
    "pysetobject (c type)": [
      [
        55,
        "c.PySetObject"
      ]
    ],
    "pyset_add (c function)": [
      [
        55,
        "c.PySet_Add"
      ]
    ],
    "pyset_check (c function)": [
      [
        55,
        "c.PySet_Check"
      ]
    ],
    "pyset_checkexact (c function)": [
      [
        55,
        "c.PySet_CheckExact"
      ]
    ],
    "pyset_clear (c function)": [
      [
        55,
        "c.PySet_Clear"
      ]
    ],
    "pyset_contains (c function)": [
      [
        55,
        "c.PySet_Contains"
      ]
    ],
    "pyset_discard (c function)": [
      [
        55,
        "c.PySet_Discard"
      ]
    ],
    "pyset_get_size (c function)": [
      [
        55,
        "c.PySet_GET_SIZE"
      ]
    ],
    "pyset_new (c function)": [
      [
        55,
        "c.PySet_New"
      ]
    ],
    "pyset_pop (c function)": [
      [
        55,
        "c.PySet_Pop"
      ]
    ],
    "pyset_size (c function)": [
      [
        55,
        "c.PySet_Size"
      ]
    ],
    "pyset_type (c var)": [
      [
        55,
        "c.PySet_Type"
      ]
    ],
    "frozenset": [
      [
        55,
        "index-0"
      ],
      [
        427,
        "index-29"
      ]
    ],
    "set": [
      [
        55,
        "index-0"
      ],
      [
        343,
        "index-51"
      ],
      [
        427,
        "index-28"
      ],
      [
        429,
        "index-16"
      ]
    ],
    "pyslice_adjustindices (c function)": [
      [
        56,
        "c.PySlice_AdjustIndices"
      ]
    ],
    "pyslice_check (c function)": [
      [
        56,
        "c.PySlice_Check"
      ]
    ],
    "pyslice_getindices (c function)": [
      [
        56,
        "c.PySlice_GetIndices"
      ]
    ],
    "pyslice_getindicesex (c function)": [
      [
        56,
        "c.PySlice_GetIndicesEx"
      ]
    ],
    "pyslice_new (c function)": [
      [
        56,
        "c.PySlice_New"
      ]
    ],
    "pyslice_type (c var)": [
      [
        56,
        "c.PySlice_Type"
      ]
    ],
    "pyslice_unpack (c function)": [
      [
        56,
        "c.PySlice_Unpack"
      ]
    ],
    "py_ellipsis (c var)": [
      [
        56,
        "c.Py_Ellipsis"
      ]
    ],
    "pep 387": [
      [
        57,
        "index-0"
      ],
      [
        80,
        "index-0"
      ],
      [
        212,
        "index-11"
      ],
      [
        212,
        "index-12"
      ]
    ],
    "pyunstable": [
      [
        57,
        "index-1"
      ]
    ],
    "py_limited_api (c macro)": [
      [
        57,
        "c.Py_LIMITED_API"
      ]
    ],
    "meth_class (c macro)": [
      [
        58,
        "c.METH_CLASS"
      ]
    ],
    "meth_coexist (c macro)": [
      [
        58,
        "c.METH_COEXIST"
      ]
    ],
    "meth_fastcall (c macro)": [
      [
        58,
        "c.METH_FASTCALL"
      ]
    ],
    "meth_keywords (c macro)": [
      [
        58,
        "c.METH_KEYWORDS"
      ]
    ],
    "meth_method (c macro)": [
      [
        58,
        "c.METH_METHOD"
      ]
    ],
    "meth_noargs (c macro)": [
      [
        58,
        "c.METH_NOARGS"
      ]
    ],
    "meth_o (c macro)": [
      [
        58,
        "c.METH_O"
      ]
    ],
    "meth_static (c macro)": [
      [
        58,
        "c.METH_STATIC"
      ]
    ],
    "meth_varargs (c macro)": [
      [
        58,
        "c.METH_VARARGS"
      ]
    ],
    "pycfunction (c type)": [
      [
        58,
        "c.PyCFunction"
      ]
    ],
    "pycfunctionwithkeywords (c type)": [
      [
        58,
        "c.PyCFunctionWithKeywords"
      ]
    ],
    "pycfunction_new (c function)": [
      [
        58,
        "c.PyCFunction_New"
      ]
    ],
    "pycfunction_newex (c function)": [
      [
        58,
        "c.PyCFunction_NewEx"
      ]
    ],
    "pycmethod (c type)": [
      [
        58,
        "c.PyCMethod"
      ]
    ],
    "pycmethod_new (c function)": [
      [
        58,
        "c.PyCMethod_New"
      ]
    ],
    "pygetsetdef (c type)": [
      [
        58,
        "c.PyGetSetDef"
      ]
    ],
    "pygetsetdef.closure (c member)": [
      [
        58,
        "c.PyGetSetDef.closure"
      ]
    ],
    "pygetsetdef.doc (c member)": [
      [
        58,
        "c.PyGetSetDef.doc"
      ]
    ],
    "pygetsetdef.get (c member)": [
      [
        58,
        "c.PyGetSetDef.get"
      ]
    ],
    "pygetsetdef.name (c member)": [
      [
        58,
        "c.PyGetSetDef.name"
      ]
    ],
    "pygetsetdef.set (c member)": [
      [
        58,
        "c.PyGetSetDef.set"
      ]
    ],
    "pymemberdef (c type)": [
      [
        58,
        "c.PyMemberDef"
      ]
    ],
    "pymemberdef.doc (c member)": [
      [
        58,
        "c.PyMemberDef.doc"
      ]
    ],
    "pymemberdef.flags (c member)": [
      [
        58,
        "c.PyMemberDef.flags"
      ]
    ],
    "pymemberdef.name (c member)": [
      [
        58,
        "c.PyMemberDef.name"
      ]
    ],
    "pymemberdef.offset (c member)": [
      [
        58,
        "c.PyMemberDef.offset"
      ]
    ],
    "pymemberdef.type (c member)": [
      [
        58,
        "c.PyMemberDef.type"
      ]
    ],
    "pymember_getone (c function)": [
      [
        58,
        "c.PyMember_GetOne"
      ]
    ],
    "pymember_setone (c function)": [
      [
        58,
        "c.PyMember_SetOne"
      ]
    ],
    "pymethoddef (c type)": [
      [
        58,
        "c.PyMethodDef"
      ]
    ],
    "pymethoddef.ml_doc (c member)": [
      [
        58,
        "c.PyMethodDef.ml_doc"
      ]
    ],
    "pymethoddef.ml_flags (c member)": [
      [
        58,
        "c.PyMethodDef.ml_flags"
      ]
    ],
    "pymethoddef.ml_meth (c member)": [
      [
        58,
        "c.PyMethodDef.ml_meth"
      ]
    ],
    "pymethoddef.ml_name (c member)": [
      [
        58,
        "c.PyMethodDef.ml_name"
      ]
    ],
    "pyobject (c type)": [
      [
        58,
        "c.PyObject"
      ]
    ],
    "pyobject_head (c macro)": [
      [
        58,
        "c.PyObject_HEAD"
      ]
    ],
    "pyobject_head_init (c macro)": [
      [
        58,
        "c.PyObject_HEAD_INIT"
      ]
    ],
    "pyobject_var_head (c macro)": [
      [
        58,
        "c.PyObject_VAR_HEAD"
      ]
    ],
    "pyvarobject (c type)": [
      [
        58,
        "c.PyVarObject"
      ]
    ],
    "pyvarobject_head_init (c macro)": [
      [
        58,
        "c.PyVarObject_HEAD_INIT"
      ]
    ],
    "py_audit_read (c macro)": [
      [
        58,
        "c.Py_AUDIT_READ"
      ]
    ],
    "py_is_type (c function)": [
      [
        58,
        "c.Py_IS_TYPE"
      ]
    ],
    "py_is (c function)": [
      [
        58,
        "c.Py_Is"
      ]
    ],
    "py_isfalse (c function)": [
      [
        58,
        "c.Py_IsFalse"
      ]
    ],
    "py_isnone (c function)": [
      [
        58,
        "c.Py_IsNone"
      ]
    ],
    "py_istrue (c function)": [
      [
        58,
        "c.Py_IsTrue"
      ]
    ],
    "py_readonly (c macro)": [
      [
        58,
        "c.Py_READONLY"
      ]
    ],
    "py_relative_offset (c macro)": [
      [
        58,
        "c.Py_RELATIVE_OFFSET"
      ]
    ],
    "py_set_size (c function)": [
      [
        58,
        "c.Py_SET_SIZE"
      ]
    ],
    "py_set_type (c function)": [
      [
        58,
        "c.Py_SET_TYPE"
      ]
    ],
    "py_size (c function)": [
      [
        58,
        "c.Py_SIZE"
      ]
    ],
    "py_type (c function)": [
      [
        58,
        "c.Py_TYPE"
      ]
    ],
    "py_t_bool (c macro)": [
      [
        58,
        "c.Py_T_BOOL"
      ]
    ],
    "py_t_byte (c macro)": [
      [
        58,
        "c.Py_T_BYTE"
      ]
    ],
    "py_t_char (c macro)": [
      [
        58,
        "c.Py_T_CHAR"
      ]
    ],
    "py_t_double (c macro)": [
      [
        58,
        "c.Py_T_DOUBLE"
      ]
    ],
    "py_t_float (c macro)": [
      [
        58,
        "c.Py_T_FLOAT"
      ]
    ],
    "py_t_int (c macro)": [
      [
        58,
        "c.Py_T_INT"
      ]
    ],
    "py_t_long (c macro)": [
      [
        58,
        "c.Py_T_LONG"
      ]
    ],
    "py_t_longlong (c macro)": [
      [
        58,
        "c.Py_T_LONGLONG"
      ]
    ],
    "py_t_object_ex (c macro)": [
      [
        58,
        "c.Py_T_OBJECT_EX"
      ]
    ],
    "py_t_pyssizet (c macro)": [
      [
        58,
        "c.Py_T_PYSSIZET"
      ]
    ],
    "py_t_short (c macro)": [
      [
        58,
        "c.Py_T_SHORT"
      ]
    ],
    "py_t_string (c macro)": [
      [
        58,
        "c.Py_T_STRING"
      ]
    ],
    "py_t_string_inplace (c macro)": [
      [
        58,
        "c.Py_T_STRING_INPLACE"
      ]
    ],
    "py_t_ubyte (c macro)": [
      [
        58,
        "c.Py_T_UBYTE"
      ]
    ],
    "py_t_uint (c macro)": [
      [
        58,
        "c.Py_T_UINT"
      ]
    ],
    "py_t_ulong (c macro)": [
      [
        58,
        "c.Py_T_ULONG"
      ]
    ],
    "py_t_ulonglong (c macro)": [
      [
        58,
        "c.Py_T_ULONGLONG"
      ]
    ],
    "py_t_ushort (c macro)": [
      [
        58,
        "c.Py_T_USHORT"
      ]
    ],
    "readonly (c macro)": [
      [
        58,
        "index-3"
      ]
    ],
    "read_restricted (c macro)": [
      [
        58,
        "index-2"
      ]
    ],
    "restricted (c macro)": [
      [
        58,
        "index-2"
      ]
    ],
    "t_bool (c macro)": [
      [
        58,
        "index-4"
      ]
    ],
    "t_byte (c macro)": [
      [
        58,
        "index-4"
      ]
    ],
    "t_char (c macro)": [
      [
        58,
        "index-4"
      ]
    ],
    "t_double (c macro)": [
      [
        58,
        "index-4"
      ]
    ],
    "t_float (c macro)": [
      [
        58,
        "index-4"
      ]
    ],
    "t_int (c macro)": [
      [
        58,
        "index-4"
      ]
    ],
    "t_long (c macro)": [
      [
        58,
        "index-4"
      ]
    ],
    "t_longlong (c macro)": [
      [
        58,
        "index-4"
      ]
    ],
    "t_none (c macro)": [
      [
        58,
        "c.T_NONE"
      ]
    ],
    "t_object (c macro)": [
      [
        58,
        "c.T_OBJECT"
      ]
    ],
    "t_object_ex (c macro)": [
      [
        58,
        "index-4"
      ]
    ],
    "t_pyssizet (c macro)": [
      [
        58,
        "index-4"
      ]
    ],
    "t_short (c macro)": [
      [
        58,
        "index-4"
      ]
    ],
    "t_string (c macro)": [
      [
        58,
        "index-4"
      ]
    ],
    "t_string_inplace (c macro)": [
      [
        58,
        "index-4"
      ]
    ],
    "t_ubyte (c macro)": [
      [
        58,
        "index-4"
      ]
    ],
    "t_uint (c macro)": [
      [
        58,
        "index-4"
      ]
    ],
    "t_ulong (c macro)": [
      [
        58,
        "index-4"
      ]
    ],
    "t_ulongulong (c macro)": [
      [
        58,
        "index-4"
      ]
    ],
    "t_ushort (c macro)": [
      [
        58,
        "index-4"
      ]
    ],
    "write_restricted (c macro)": [
      [
        58,
        "index-2"
      ]
    ],
    "_pycfunctionfast (c type)": [
      [
        58,
        "c._PyCFunctionFast"
      ]
    ],
    "_pycfunctionfastwithkeywords (c type)": [
      [
        58,
        "c._PyCFunctionFastWithKeywords"
      ]
    ],
    "classmethod": [
      [
        58,
        "index-0"
      ]
    ],
    "getter (c type)": [
      [
        58,
        "c.getter"
      ]
    ],
    "setter (c type)": [
      [
        58,
        "c.setter"
      ]
    ],
    "staticmethod": [
      [
        58,
        "index-1"
      ]
    ],
    "structmember.h": [
      [
        58,
        "index-4"
      ]
    ],
    "pep 578": [
      [
        59,
        "index-1"
      ],
      [
        141,
        "index-1"
      ],
      [
        351,
        "index-1"
      ],
      [
        480,
        "index-4"
      ]
    ],
    "pyos_afterfork (c function)": [
      [
        59,
        "c.PyOS_AfterFork"
      ]
    ],
    "pyos_afterfork_child (c function)": [
      [
        59,
        "c.PyOS_AfterFork_Child"
      ]
    ],
    "pyos_afterfork_parent (c function)": [
      [
        59,
        "c.PyOS_AfterFork_Parent"
      ]
    ],
    "pyos_beforefork (c function)": [
      [
        59,
        "c.PyOS_BeforeFork"
      ]
    ],
    "pyos_checkstack (c function)": [
      [
        59,
        "c.PyOS_CheckStack"
      ]
    ],
    "pyos_fspath (c function)": [
      [
        59,
        "c.PyOS_FSPath"
      ]
    ],
    "pyos_getsig (c function)": [
      [
        59,
        "c.PyOS_getsig"
      ]
    ],
    "pyos_setsig (c function)": [
      [
        59,
        "c.PyOS_setsig"
      ]
    ],
    "pyos_sighandler_t (c type)": [
      [
        59,
        "c.PyOS_sighandler_t"
      ]
    ],
    "pysys_addaudithook (c function)": [
      [
        59,
        "c.PySys_AddAuditHook"
      ]
    ],
    "pysys_addwarnoption (c function)": [
      [
        59,
        "c.PySys_AddWarnOption"
      ]
    ],
    "pysys_addwarnoptionunicode (c function)": [
      [
        59,
        "c.PySys_AddWarnOptionUnicode"
      ]
    ],
    "pysys_addxoption (c function)": [
      [
        59,
        "c.PySys_AddXOption"
      ]
    ],
    "pysys_audit (c function)": [
      [
        59,
        "c.PySys_Audit"
      ]
    ],
    "pysys_formatstderr (c function)": [
      [
        59,
        "c.PySys_FormatStderr"
      ]
    ],
    "pysys_formatstdout (c function)": [
      [
        59,
        "c.PySys_FormatStdout"
      ]
    ],
    "pysys_getobject (c function)": [
      [
        59,
        "c.PySys_GetObject"
      ]
    ],
    "pysys_getxoptions (c function)": [
      [
        59,
        "c.PySys_GetXOptions"
      ]
    ],
    "pysys_resetwarnoptions (c function)": [
      [
        59,
        "c.PySys_ResetWarnOptions"
      ]
    ],
    "pysys_setobject (c function)": [
      [
        59,
        "c.PySys_SetObject"
      ]
    ],
    "pysys_setpath (c function)": [
      [
        59,
        "c.PySys_SetPath"
      ]
    ],
    "pysys_writestderr (c function)": [
      [
        59,
        "c.PySys_WriteStderr"
      ]
    ],
    "pysys_writestdout (c function)": [
      [
        59,
        "c.PySys_WriteStdout"
      ]
    ],
    "py_atexit (c function)": [
      [
        59,
        "c.Py_AtExit"
      ]
    ],
    "py_audithookfunction (c type)": [
      [
        59,
        "c.Py_AuditHookFunction"
      ]
    ],
    "py_decodelocale (c function)": [
      [
        59,
        "c.Py_DecodeLocale"
      ]
    ],
    "py_encodelocale (c function)": [
      [
        59,
        "c.Py_EncodeLocale"
      ]
    ],
    "py_exit (c function)": [
      [
        59,
        "c.Py_Exit"
      ]
    ],
    "py_fatalerror (c function)": [
      [
        59,
        "c.Py_FatalError"
      ]
    ],
    "py_fdisinteractive (c function)": [
      [
        59,
        "c.Py_FdIsInteractive"
      ]
    ],
    "use_stackcheck (c macro)": [
      [
        59,
        "index-0"
      ]
    ],
    "abort (c function)": [
      [
        59,
        "index-2"
      ]
    ],
    "cleanup functions": [
      [
        59,
        "index-4"
      ]
    ],
    "exit (c function)": [
      [
        59,
        "index-3"
      ]
    ],
    "pystructsequence_desc (c type)": [
      [
        60,
        "c.PyStructSequence_Desc"
      ]
    ],
    "pystructsequence_desc.doc (c member)": [
      [
        60,
        "c.PyStructSequence_Desc.doc"
      ]
    ],
    "pystructsequence_desc.fields (c member)": [
      [
        60,
        "c.PyStructSequence_Desc.fields"
      ]
    ],
    "pystructsequence_desc.n_in_sequence (c member)": [
      [
        60,
        "c.PyStructSequence_Desc.n_in_sequence"
      ]
    ],
    "pystructsequence_desc.name (c member)": [
      [
        60,
        "c.PyStructSequence_Desc.name"
      ]
    ],
    "pystructsequence_field (c type)": [
      [
        60,
        "c.PyStructSequence_Field"
      ]
    ],
    "pystructsequence_field.doc (c member)": [
      [
        60,
        "c.PyStructSequence_Field.doc"
      ]
    ],
    "pystructsequence_field.name (c member)": [
      [
        60,
        "c.PyStructSequence_Field.name"
      ]
    ],
    "pystructsequence_get_item (c function)": [
      [
        60,
        "c.PyStructSequence_GET_ITEM"
      ]
    ],
    "pystructsequence_getitem (c function)": [
      [
        60,
        "c.PyStructSequence_GetItem"
      ]
    ],
    "pystructsequence_inittype (c function)": [
      [
        60,
        "c.PyStructSequence_InitType"
      ]
    ],
    "pystructsequence_inittype2 (c function)": [
      [
        60,
        "c.PyStructSequence_InitType2"
      ]
    ],
    "pystructsequence_new (c function)": [
      [
        60,
        "c.PyStructSequence_New"
      ]
    ],
    "pystructsequence_newtype (c function)": [
      [
        60,
        "c.PyStructSequence_NewType"
      ]
    ],
    "pystructsequence_set_item (c function)": [
      [
        60,
        "c.PyStructSequence_SET_ITEM"
      ]
    ],
    "pystructsequence_setitem (c function)": [
      [
        60,
        "c.PyStructSequence_SetItem"
      ]
    ],
    "pystructsequence_unnamedfield (c var)": [
      [
        60,
        "c.PyStructSequence_UnnamedField"
      ]
    ],
    "pytupleobject (c type)": [
      [
        60,
        "c.PyTupleObject"
      ]
    ],
    "pytuple_check (c function)": [
      [
        60,
        "c.PyTuple_Check"
      ]
    ],
    "pytuple_checkexact (c function)": [
      [
        60,
        "c.PyTuple_CheckExact"
      ]
    ],
    "pytuple_get_item (c function)": [
      [
        60,
        "c.PyTuple_GET_ITEM"
      ]
    ],
    "pytuple_get_size (c function)": [
      [
        60,
        "c.PyTuple_GET_SIZE"
      ]
    ],
    "pytuple_getitem (c function)": [
      [
        60,
        "c.PyTuple_GetItem"
      ]
    ],
    "pytuple_getslice (c function)": [
      [
        60,
        "c.PyTuple_GetSlice"
      ]
    ],
    "pytuple_new (c function)": [
      [
        60,
        "c.PyTuple_New"
      ]
    ],
    "pytuple_pack (c function)": [
      [
        60,
        "c.PyTuple_Pack"
      ]
    ],
    "pytuple_set_item (c function)": [
      [
        60,
        "c.PyTuple_SET_ITEM"
      ]
    ],
    "pytuple_size (c function)": [
      [
        60,
        "c.PyTuple_Size"
      ]
    ],
    "pytuple_type (c var)": [
      [
        60,
        "c.PyTuple_Type"
      ]
    ],
    "_pytuple_resize (c function)": [
      [
        60,
        "c._PyTuple_Resize"
      ]
    ],
    "pytypeobject (c type)": [
      [
        61,
        "c.PyTypeObject"
      ]
    ],
    "pytype_addwatcher (c function)": [
      [
        61,
        "c.PyType_AddWatcher"
      ]
    ],
    "pytype_check (c function)": [
      [
        61,
        "c.PyType_Check"
      ]
    ],
    "pytype_checkexact (c function)": [
      [
        61,
        "c.PyType_CheckExact"
      ]
    ],
    "pytype_clearcache (c function)": [
      [
        61,
        "c.PyType_ClearCache"
      ]
    ],
    "pytype_clearwatcher (c function)": [
      [
        61,
        "c.PyType_ClearWatcher"
      ]
    ],
    "pytype_frommetaclass (c function)": [
      [
        61,
        "c.PyType_FromMetaclass"
      ]
    ],
    "pytype_frommoduleandspec (c function)": [
      [
        61,
        "c.PyType_FromModuleAndSpec"
      ]
    ],
    "pytype_fromspec (c function)": [
      [
        61,
        "c.PyType_FromSpec"
      ]
    ],
    "pytype_fromspecwithbases (c function)": [
      [
        61,
        "c.PyType_FromSpecWithBases"
      ]
    ],
    "pytype_genericalloc (c function)": [
      [
        61,
        "c.PyType_GenericAlloc"
      ]
    ],
    "pytype_genericnew (c function)": [
      [
        61,
        "c.PyType_GenericNew"
      ]
    ],
    "pytype_getdict (c function)": [
      [
        61,
        "c.PyType_GetDict"
      ]
    ],
    "pytype_getflags (c function)": [
      [
        61,
        "c.PyType_GetFlags"
      ]
    ],
    "pytype_getmodule (c function)": [
      [
        61,
        "c.PyType_GetModule"
      ]
    ],
    "pytype_getmodulebydef (c function)": [
      [
        61,
        "c.PyType_GetModuleByDef"
      ]
    ],
    "pytype_getmodulestate (c function)": [
      [
        61,
        "c.PyType_GetModuleState"
      ]
    ],
    "pytype_getname (c function)": [
      [
        61,
        "c.PyType_GetName"
      ]
    ],
    "pytype_getqualname (c function)": [
      [
        61,
        "c.PyType_GetQualName"
      ]
    ],
    "pytype_getslot (c function)": [
      [
        61,
        "c.PyType_GetSlot"
      ]
    ],
    "pytype_hasfeature (c function)": [
      [
        61,
        "c.PyType_HasFeature"
      ]
    ],
    "pytype_is_gc (c function)": [
      [
        61,
        "c.PyType_IS_GC"
      ]
    ],
    "pytype_issubtype (c function)": [
      [
        61,
        "c.PyType_IsSubtype"
      ]
    ],
    "pytype_modified (c function)": [
      [
        61,
        "c.PyType_Modified"
      ]
    ],
    "pytype_ready (c function)": [
      [
        61,
        "c.PyType_Ready"
      ]
    ],
    "pytype_slot (c type)": [
      [
        61,
        "c.PyType_Slot"
      ]
    ],
    "pytype_slot.pfunc (c member)": [
      [
        61,
        "c.PyType_Slot.pfunc"
      ]
    ],
    "pytype_slot.slot (c member)": [
      [
        61,
        "c.PyType_Slot.slot"
      ]
    ],
    "pytype_spec (c type)": [
      [
        61,
        "c.PyType_Spec"
      ]
    ],
    "pytype_spec.basicsize (c member)": [
      [
        61,
        "c.PyType_Spec.basicsize"
      ]
    ],
    "pytype_spec.flags (c member)": [
      [
        61,
        "c.PyType_Spec.flags"
      ]
    ],
    "pytype_spec.itemsize (c member)": [
      [
        61,
        "c.PyType_Spec.itemsize"
      ]
    ],
    "pytype_spec.name (c member)": [
      [
        61,
        "c.PyType_Spec.name"
      ]
    ],
    "pytype_spec.slots (c member)": [
      [
        61,
        "c.PyType_Spec.slots"
      ]
    ],
    "pytype_type (c var)": [
      [
        61,
        "c.PyType_Type"
      ]
    ],
    "pytype_watch (c function)": [
      [
        61,
        "c.PyType_Watch"
      ]
    ],
    "pytype_watchcallback (c type)": [
      [
        61,
        "c.PyType_WatchCallback"
      ]
    ],
    "pyunstable_type_assignversiontag (c function)": [
      [
        61,
        "c.PyUnstable_Type_AssignVersionTag"
      ]
    ],
    "py_genericalias (c function)": [
      [
        62,
        "c.Py_GenericAlias"
      ]
    ],
    "py_genericaliastype (c var)": [
      [
        62,
        "c.Py_GenericAliasType"
      ]
    ],
    "pep 442": [
      [
        63,
        "index-5"
      ],
      [
        75,
        "index-2"
      ],
      [
        226,
        "index-0"
      ],
      [
        476,
        "index-15"
      ],
      [
        476,
        "index-16"
      ],
      [
        476,
        "index-45"
      ],
      [
        476,
        "index-46"
      ],
      [
        481,
        "index-20"
      ],
      [
        482,
        "index-208"
      ]
    ],
    "pep 634": [
      [
        63,
        "index-3"
      ],
      [
        63,
        "index-4"
      ],
      [
        111,
        "index-1"
      ],
      [
        426,
        "index-19"
      ],
      [
        426,
        "index-25"
      ],
      [
        427,
        "index-108"
      ],
      [
        471,
        "index-0"
      ],
      [
        471,
        "index-15"
      ],
      [
        482,
        "index-109"
      ],
      [
        482,
        "index-55"
      ],
      [
        482,
        "index-97"
      ]
    ],
    "pyasyncmethods (c type)": [
      [
        63,
        "c.PyAsyncMethods"
      ]
    ],
    "pyasyncmethods.am_aiter (c member)": [
      [
        63,
        "c.PyAsyncMethods.am_aiter"
      ]
    ],
    "pyasyncmethods.am_anext (c member)": [
      [
        63,
        "c.PyAsyncMethods.am_anext"
      ]
    ],
    "pyasyncmethods.am_await (c member)": [
      [
        63,
        "c.PyAsyncMethods.am_await"
      ]
    ],
    "pyasyncmethods.am_send (c member)": [
      [
        63,
        "c.PyAsyncMethods.am_send"
      ]
    ],
    "pybufferprocs.bf_getbuffer (c member)": [
      [
        63,
        "c.PyBufferProcs.bf_getbuffer"
      ]
    ],
    "pybufferprocs.bf_releasebuffer (c member)": [
      [
        63,
        "c.PyBufferProcs.bf_releasebuffer"
      ]
    ],
    "pymappingmethods (c type)": [
      [
        63,
        "c.PyMappingMethods"
      ]
    ],
    "pymappingmethods.mp_ass_subscript (c member)": [
      [
        63,
        "c.PyMappingMethods.mp_ass_subscript"
      ]
    ],
    "pymappingmethods.mp_length (c member)": [
      [
        63,
        "c.PyMappingMethods.mp_length"
      ]
    ],
    "pymappingmethods.mp_subscript (c member)": [
      [
        63,
        "c.PyMappingMethods.mp_subscript"
      ]
    ],
    "pynumbermethods (c type)": [
      [
        63,
        "c.PyNumberMethods"
      ]
    ],
    "pynumbermethods.nb_absolute (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_absolute"
      ]
    ],
    "pynumbermethods.nb_add (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_add"
      ]
    ],
    "pynumbermethods.nb_and (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_and"
      ]
    ],
    "pynumbermethods.nb_bool (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_bool"
      ]
    ],
    "pynumbermethods.nb_divmod (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_divmod"
      ]
    ],
    "pynumbermethods.nb_float (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_float"
      ]
    ],
    "pynumbermethods.nb_floor_divide (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_floor_divide"
      ]
    ],
    "pynumbermethods.nb_index (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_index"
      ]
    ],
    "pynumbermethods.nb_inplace_add (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_inplace_add"
      ]
    ],
    "pynumbermethods.nb_inplace_and (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_inplace_and"
      ]
    ],
    "pynumbermethods.nb_inplace_floor_divide (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_inplace_floor_divide"
      ]
    ],
    "pynumbermethods.nb_inplace_lshift (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_inplace_lshift"
      ]
    ],
    "pynumbermethods.nb_inplace_matrix_multiply (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_inplace_matrix_multiply"
      ]
    ],
    "pynumbermethods.nb_inplace_multiply (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_inplace_multiply"
      ]
    ],
    "pynumbermethods.nb_inplace_or (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_inplace_or"
      ]
    ],
    "pynumbermethods.nb_inplace_power (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_inplace_power"
      ]
    ],
    "pynumbermethods.nb_inplace_remainder (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_inplace_remainder"
      ]
    ],
    "pynumbermethods.nb_inplace_rshift (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_inplace_rshift"
      ]
    ],
    "pynumbermethods.nb_inplace_subtract (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_inplace_subtract"
      ]
    ],
    "pynumbermethods.nb_inplace_true_divide (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_inplace_true_divide"
      ]
    ],
    "pynumbermethods.nb_inplace_xor (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_inplace_xor"
      ]
    ],
    "pynumbermethods.nb_int (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_int"
      ]
    ],
    "pynumbermethods.nb_invert (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_invert"
      ]
    ],
    "pynumbermethods.nb_lshift (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_lshift"
      ]
    ],
    "pynumbermethods.nb_matrix_multiply (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_matrix_multiply"
      ]
    ],
    "pynumbermethods.nb_multiply (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_multiply"
      ]
    ],
    "pynumbermethods.nb_negative (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_negative"
      ]
    ],
    "pynumbermethods.nb_or (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_or"
      ]
    ],
    "pynumbermethods.nb_positive (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_positive"
      ]
    ],
    "pynumbermethods.nb_power (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_power"
      ]
    ],
    "pynumbermethods.nb_remainder (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_remainder"
      ]
    ],
    "pynumbermethods.nb_reserved (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_reserved"
      ]
    ],
    "pynumbermethods.nb_rshift (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_rshift"
      ]
    ],
    "pynumbermethods.nb_subtract (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_subtract"
      ]
    ],
    "pynumbermethods.nb_true_divide (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_true_divide"
      ]
    ],
    "pynumbermethods.nb_xor (c member)": [
      [
        63,
        "c.PyNumberMethods.nb_xor"
      ]
    ],
    "pyobject._ob_next (c member)": [
      [
        63,
        "c.PyObject._ob_next"
      ]
    ],
    "pyobject._ob_prev (c member)": [
      [
        63,
        "c.PyObject._ob_prev"
      ]
    ],
    "pyobject.ob_refcnt (c member)": [
      [
        63,
        "c.PyObject.ob_refcnt"
      ]
    ],
    "pyobject.ob_type (c member)": [
      [
        63,
        "c.PyObject.ob_type"
      ]
    ],
    "pysequencemethods (c type)": [
      [
        63,
        "c.PySequenceMethods"
      ]
    ],
    "pysequencemethods.sq_ass_item (c member)": [
      [
        63,
        "c.PySequenceMethods.sq_ass_item"
      ]
    ],
    "pysequencemethods.sq_concat (c member)": [
      [
        63,
        "c.PySequenceMethods.sq_concat"
      ]
    ],
    "pysequencemethods.sq_contains (c member)": [
      [
        63,
        "c.PySequenceMethods.sq_contains"
      ]
    ],
    "pysequencemethods.sq_inplace_concat (c member)": [
      [
        63,
        "c.PySequenceMethods.sq_inplace_concat"
      ]
    ],
    "pysequencemethods.sq_inplace_repeat (c member)": [
      [
        63,
        "c.PySequenceMethods.sq_inplace_repeat"
      ]
    ],
    "pysequencemethods.sq_item (c member)": [
      [
        63,
        "c.PySequenceMethods.sq_item"
      ]
    ],
    "pysequencemethods.sq_length (c member)": [
      [
        63,
        "c.PySequenceMethods.sq_length"
      ]
    ],
    "pysequencemethods.sq_repeat (c member)": [
      [
        63,
        "c.PySequenceMethods.sq_repeat"
      ]
    ],
    "pytypeobject.tp_alloc (c member)": [
      [
        63,
        "c.PyTypeObject.tp_alloc"
      ]
    ],
    "pytypeobject.tp_as_async (c member)": [
      [
        63,
        "c.PyTypeObject.tp_as_async"
      ]
    ],
    "pytypeobject.tp_as_buffer (c member)": [
      [
        63,
        "c.PyTypeObject.tp_as_buffer"
      ]
    ],
    "pytypeobject.tp_as_mapping (c member)": [
      [
        63,
        "c.PyTypeObject.tp_as_mapping"
      ]
    ],
    "pytypeobject.tp_as_number (c member)": [
      [
        63,
        "c.PyTypeObject.tp_as_number"
      ]
    ],
    "pytypeobject.tp_as_sequence (c member)": [
      [
        63,
        "c.PyTypeObject.tp_as_sequence"
      ]
    ],
    "pytypeobject.tp_base (c member)": [
      [
        63,
        "c.PyTypeObject.tp_base"
      ]
    ],
    "pytypeobject.tp_bases (c member)": [
      [
        63,
        "c.PyTypeObject.tp_bases"
      ]
    ],
    "pytypeobject.tp_basicsize (c member)": [
      [
        63,
        "c.PyTypeObject.tp_basicsize"
      ]
    ],
    "pytypeobject.tp_cache (c member)": [
      [
        63,
        "c.PyTypeObject.tp_cache"
      ]
    ],
    "pytypeobject.tp_call (c member)": [
      [
        63,
        "c.PyTypeObject.tp_call"
      ]
    ],
    "pytypeobject.tp_clear (c member)": [
      [
        63,
        "c.PyTypeObject.tp_clear"
      ]
    ],
    "pytypeobject.tp_dealloc (c member)": [
      [
        63,
        "c.PyTypeObject.tp_dealloc"
      ]
    ],
    "pytypeobject.tp_del (c member)": [
      [
        63,
        "c.PyTypeObject.tp_del"
      ]
    ],
    "pytypeobject.tp_descr_get (c member)": [
      [
        63,
        "c.PyTypeObject.tp_descr_get"
      ]
    ],
    "pytypeobject.tp_descr_set (c member)": [
      [
        63,
        "c.PyTypeObject.tp_descr_set"
      ]
    ],
    "pytypeobject.tp_dict (c member)": [
      [
        63,
        "c.PyTypeObject.tp_dict"
      ]
    ],
    "pytypeobject.tp_dictoffset (c member)": [
      [
        63,
        "c.PyTypeObject.tp_dictoffset"
      ]
    ],
    "pytypeobject.tp_doc (c member)": [
      [
        63,
        "c.PyTypeObject.tp_doc"
      ]
    ],
    "pytypeobject.tp_finalize (c member)": [
      [
        63,
        "c.PyTypeObject.tp_finalize"
      ]
    ],
    "pytypeobject.tp_flags (c member)": [
      [
        63,
        "c.PyTypeObject.tp_flags"
      ]
    ],
    "pytypeobject.tp_free (c member)": [
      [
        63,
        "c.PyTypeObject.tp_free"
      ]
    ],
    "pytypeobject.tp_getattr (c member)": [
      [
        63,
        "c.PyTypeObject.tp_getattr"
      ]
    ],
    "pytypeobject.tp_getattro (c member)": [
      [
        63,
        "c.PyTypeObject.tp_getattro"
      ]
    ],
    "pytypeobject.tp_getset (c member)": [
      [
        63,
        "c.PyTypeObject.tp_getset"
      ]
    ],
    "pytypeobject.tp_hash (c member)": [
      [
        63,
        "c.PyTypeObject.tp_hash"
      ]
    ],
    "pytypeobject.tp_init (c member)": [
      [
        63,
        "c.PyTypeObject.tp_init"
      ]
    ],
    "pytypeobject.tp_is_gc (c member)": [
      [
        63,
        "c.PyTypeObject.tp_is_gc"
      ]
    ],
    "pytypeobject.tp_itemsize (c member)": [
      [
        63,
        "c.PyTypeObject.tp_itemsize"
      ]
    ],
    "pytypeobject.tp_iter (c member)": [
      [
        63,
        "c.PyTypeObject.tp_iter"
      ]
    ],
    "pytypeobject.tp_iternext (c member)": [
      [
        63,
        "c.PyTypeObject.tp_iternext"
      ]
    ],
    "pytypeobject.tp_members (c member)": [
      [
        63,
        "c.PyTypeObject.tp_members"
      ]
    ],
    "pytypeobject.tp_methods (c member)": [
      [
        63,
        "c.PyTypeObject.tp_methods"
      ]
    ],
    "pytypeobject.tp_mro (c member)": [
      [
        63,
        "c.PyTypeObject.tp_mro"
      ]
    ],
    "pytypeobject.tp_name (c member)": [
      [
        63,
        "c.PyTypeObject.tp_name"
      ]
    ],
    "pytypeobject.tp_new (c member)": [
      [
        63,
        "c.PyTypeObject.tp_new"
      ]
    ],
    "pytypeobject.tp_repr (c member)": [
      [
        63,
        "c.PyTypeObject.tp_repr"
      ]
    ],
    "pytypeobject.tp_richcompare (c member)": [
      [
        63,
        "c.PyTypeObject.tp_richcompare"
      ]
    ],
    "pytypeobject.tp_setattr (c member)": [
      [
        63,
        "c.PyTypeObject.tp_setattr"
      ]
    ],
    "pytypeobject.tp_setattro (c member)": [
      [
        63,
        "c.PyTypeObject.tp_setattro"
      ]
    ],
    "pytypeobject.tp_str (c member)": [
      [
        63,
        "c.PyTypeObject.tp_str"
      ]
    ],
    "pytypeobject.tp_subclasses (c member)": [
      [
        63,
        "c.PyTypeObject.tp_subclasses"
      ]
    ],
    "pytypeobject.tp_traverse (c member)": [
      [
        63,
        "c.PyTypeObject.tp_traverse"
      ]
    ],
    "pytypeobject.tp_vectorcall (c member)": [
      [
        63,
        "c.PyTypeObject.tp_vectorcall"
      ]
    ],
    "pytypeobject.tp_vectorcall_offset (c member)": [
      [
        63,
        "c.PyTypeObject.tp_vectorcall_offset"
      ]
    ],
    "pytypeobject.tp_version_tag (c member)": [
      [
        63,
        "c.PyTypeObject.tp_version_tag"
      ]
    ],
    "pytypeobject.tp_watched (c member)": [
      [
        63,
        "c.PyTypeObject.tp_watched"
      ]
    ],
    "pytypeobject.tp_weaklist (c member)": [
      [
        63,
        "c.PyTypeObject.tp_weaklist"
      ]
    ],
    "pytypeobject.tp_weaklistoffset (c member)": [
      [
        63,
        "c.PyTypeObject.tp_weaklistoffset"
      ]
    ],
    "pyvarobject.ob_size (c member)": [
      [
        63,
        "c.PyVarObject.ob_size"
      ]
    ],
    "py_eq (c macro)": [
      [
        63,
        "c.Py_EQ"
      ]
    ],
    "py_ge (c macro)": [
      [
        63,
        "c.Py_GE"
      ]
    ],
    "py_gt (c macro)": [
      [
        63,
        "c.Py_GT"
      ]
    ],
    "py_le (c macro)": [
      [
        63,
        "c.Py_LE"
      ]
    ],
    "py_lt (c macro)": [
      [
        63,
        "c.Py_LT"
      ]
    ],
    "py_ne (c macro)": [
      [
        63,
        "c.Py_NE"
      ]
    ],
    "py_return_richcompare (c macro)": [
      [
        63,
        "c.Py_RETURN_RICHCOMPARE"
      ]
    ],
    "py_tpflags_basetype (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_BASETYPE"
      ]
    ],
    "py_tpflags_base_exc_subclass (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_BASE_EXC_SUBCLASS"
      ]
    ],
    "py_tpflags_bytes_subclass (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_BYTES_SUBCLASS"
      ]
    ],
    "py_tpflags_default (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_DEFAULT"
      ]
    ],
    "py_tpflags_dict_subclass (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_DICT_SUBCLASS"
      ]
    ],
    "py_tpflags_disallow_instantiation (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_DISALLOW_INSTANTIATION"
      ]
    ],
    "py_tpflags_have_finalize (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_HAVE_FINALIZE"
      ]
    ],
    "py_tpflags_have_gc (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_HAVE_GC"
      ]
    ],
    "py_tpflags_have_vectorcall (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_HAVE_VECTORCALL"
      ]
    ],
    "py_tpflags_heaptype (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_HEAPTYPE"
      ]
    ],
    "py_tpflags_immutabletype (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_IMMUTABLETYPE"
      ]
    ],
    "py_tpflags_items_at_end (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_ITEMS_AT_END"
      ]
    ],
    "py_tpflags_list_subclass (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_LIST_SUBCLASS"
      ]
    ],
    "py_tpflags_long_subclass (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_LONG_SUBCLASS"
      ]
    ],
    "py_tpflags_managed_dict (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_MANAGED_DICT"
      ]
    ],
    "py_tpflags_managed_weakref (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_MANAGED_WEAKREF"
      ]
    ],
    "py_tpflags_mapping (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_MAPPING"
      ]
    ],
    "py_tpflags_method_descriptor (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_METHOD_DESCRIPTOR"
      ]
    ],
    "py_tpflags_ready (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_READY"
      ]
    ],
    "py_tpflags_readying (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_READYING"
      ]
    ],
    "py_tpflags_sequence (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_SEQUENCE"
      ]
    ],
    "py_tpflags_tuple_subclass (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_TUPLE_SUBCLASS"
      ]
    ],
    "py_tpflags_type_subclass (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_TYPE_SUBCLASS"
      ]
    ],
    "py_tpflags_unicode_subclass (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_UNICODE_SUBCLASS"
      ]
    ],
    "py_tpflags_valid_version_tag (c macro)": [
      [
        63,
        "c.Py_TPFLAGS_VALID_VERSION_TAG"
      ]
    ],
    "allocfunc (c type)": [
      [
        63,
        "c.allocfunc"
      ]
    ],
    "binaryfunc (c type)": [
      [
        63,
        "c.binaryfunc"
      ]
    ],
    "descrgetfunc (c type)": [
      [
        63,
        "c.descrgetfunc"
      ]
    ],
    "descrsetfunc (c type)": [
      [
        63,
        "c.descrsetfunc"
      ]
    ],
    "destructor (c type)": [
      [
        63,
        "c.destructor"
      ]
    ],
    "freefunc (c type)": [
      [
        63,
        "c.freefunc"
      ]
    ],
    "getattrfunc (c type)": [
      [
        63,
        "c.getattrfunc"
      ]
    ],
    "getattrofunc (c type)": [
      [
        63,
        "c.getattrofunc"
      ]
    ],
    "getbufferproc (c type)": [
      [
        63,
        "c.getbufferproc"
      ]
    ],
    "getiterfunc (c type)": [
      [
        63,
        "c.getiterfunc"
      ]
    ],
    "hashfunc (c type)": [
      [
        63,
        "c.hashfunc"
      ]
    ],
    "initproc (c type)": [
      [
        63,
        "c.initproc"
      ]
    ],
    "iternextfunc (c type)": [
      [
        63,
        "c.iternextfunc"
      ]
    ],
    "lenfunc (c type)": [
      [
        63,
        "c.lenfunc"
      ]
    ],
    "newfunc (c type)": [
      [
        63,
        "c.newfunc"
      ]
    ],
    "objobjargproc (c type)": [
      [
        63,
        "c.objobjargproc"
      ]
    ],
    "objobjproc (c type)": [
      [
        63,
        "c.objobjproc"
      ]
    ],
    "releasebufferproc (c type)": [
      [
        63,
        "c.releasebufferproc"
      ]
    ],
    "reprfunc (c type)": [
      [
        63,
        "c.reprfunc"
      ]
    ],
    "richcmpfunc (c type)": [
      [
        63,
        "c.richcmpfunc"
      ]
    ],
    "sendfunc (c type)": [
      [
        63,
        "c.sendfunc"
      ]
    ],
    "setattrfunc (c type)": [
      [
        63,
        "c.setattrfunc"
      ]
    ],
    "setattrofunc (c type)": [
      [
        63,
        "c.setattrofunc"
      ]
    ],
    "ssizeargfunc (c type)": [
      [
        63,
        "c.ssizeargfunc"
      ]
    ],
    "ssizeobjargproc (c type)": [
      [
        63,
        "c.ssizeobjargproc"
      ]
    ],
    "ternaryfunc (c type)": [
      [
        63,
        "c.ternaryfunc"
      ]
    ],
    "unaryfunc (c type)": [
      [
        63,
        "c.unaryfunc"
      ]
    ],
    "pep 383": [
      [
        64,
        "index-2"
      ],
      [
        64,
        "index-3"
      ],
      [
        64,
        "index-4"
      ],
      [
        157,
        "index-2"
      ],
      [
        336,
        "index-1"
      ],
      [
        482,
        "index-61"
      ]
    ],
    "pep 393": [
      [
        64,
        "index-0"
      ],
      [
        157,
        "index-5"
      ],
      [
        351,
        "index-19"
      ],
      [
        471,
        "index-38"
      ],
      [
        475,
        "index-30"
      ],
      [
        475,
        "index-32"
      ],
      [
        475,
        "index-33"
      ],
      [
        475,
        "index-34"
      ],
      [
        475,
        "index-38"
      ],
      [
        475,
        "index-6"
      ],
      [
        475,
        "index-7"
      ],
      [
        475,
        "index-8"
      ],
      [
        481,
        "index-25"
      ],
      [
        481,
        "index-26"
      ],
      [
        482,
        "index-95"
      ]
    ],
    "pep 623": [
      [
        64,
        "index-1"
      ],
      [
        471,
        "index-11"
      ],
      [
        473,
        "index-1"
      ],
      [
        473,
        "index-26"
      ],
      [
        473,
        "index-48"
      ],
      [
        482,
        "index-108"
      ],
      [
        482,
        "index-110"
      ],
      [
        482,
        "index-64"
      ]
    ],
    "pyasciiobject (c type)": [
      [
        64,
        "c.PyASCIIObject"
      ]
    ],
    "pycompactunicodeobject (c type)": [
      [
        64,
        "c.PyCompactUnicodeObject"
      ]
    ],
    "pyunicodeobject (c type)": [
      [
        64,
        "c.PyUnicodeObject"
      ]
    ],
    "pyunicode_1byte_data (c function)": [
      [
        64,
        "c.PyUnicode_1BYTE_DATA"
      ]
    ],
    "pyunicode_1byte_kind (c macro)": [
      [
        64,
        "c.PyUnicode_1BYTE_KIND"
      ]
    ],
    "pyunicode_2byte_data (c function)": [
      [
        64,
        "c.PyUnicode_2BYTE_DATA"
      ]
    ],
    "pyunicode_2byte_kind (c macro)": [
      [
        64,
        "c.PyUnicode_2BYTE_KIND"
      ]
    ],
    "pyunicode_4byte_data (c function)": [
      [
        64,
        "c.PyUnicode_4BYTE_DATA"
      ]
    ],
    "pyunicode_4byte_kind (c macro)": [
      [
        64,
        "c.PyUnicode_4BYTE_KIND"
      ]
    ],
    "pyunicode_asasciistring (c function)": [
      [
        64,
        "c.PyUnicode_AsASCIIString"
      ]
    ],
    "pyunicode_ascharmapstring (c function)": [
      [
        64,
        "c.PyUnicode_AsCharmapString"
      ]
    ],
    "pyunicode_asencodedstring (c function)": [
      [
        64,
        "c.PyUnicode_AsEncodedString"
      ]
    ],
    "pyunicode_aslatin1string (c function)": [
      [
        64,
        "c.PyUnicode_AsLatin1String"
      ]
    ],
    "pyunicode_asmbcsstring (c function)": [
      [
        64,
        "c.PyUnicode_AsMBCSString"
      ]
    ],
    "pyunicode_asrawunicodeescapestring (c function)": [
      [
        64,
        "c.PyUnicode_AsRawUnicodeEscapeString"
      ]
    ],
    "pyunicode_asucs4 (c function)": [
      [
        64,
        "c.PyUnicode_AsUCS4"
      ]
    ],
    "pyunicode_asucs4copy (c function)": [
      [
        64,
        "c.PyUnicode_AsUCS4Copy"
      ]
    ],
    "pyunicode_asutf16string (c function)": [
      [
        64,
        "c.PyUnicode_AsUTF16String"
      ]
    ],
    "pyunicode_asutf32string (c function)": [
      [
        64,
        "c.PyUnicode_AsUTF32String"
      ]
    ],
    "pyunicode_asutf8 (c function)": [
      [
        64,
        "c.PyUnicode_AsUTF8"
      ]
    ],
    "pyunicode_asutf8andsize (c function)": [
      [
        64,
        "c.PyUnicode_AsUTF8AndSize"
      ]
    ],
    "pyunicode_asutf8string (c function)": [
      [
        64,
        "c.PyUnicode_AsUTF8String"
      ]
    ],
    "pyunicode_asunicodeescapestring (c function)": [
      [
        64,
        "c.PyUnicode_AsUnicodeEscapeString"
      ]
    ],
    "pyunicode_aswidechar (c function)": [
      [
        64,
        "c.PyUnicode_AsWideChar"
      ]
    ],
    "pyunicode_aswidecharstring (c function)": [
      [
        64,
        "c.PyUnicode_AsWideCharString"
      ]
    ],
    "pyunicode_check (c function)": [
      [
        64,
        "c.PyUnicode_Check"
      ]
    ],
    "pyunicode_checkexact (c function)": [
      [
        64,
        "c.PyUnicode_CheckExact"
      ]
    ],
    "pyunicode_compare (c function)": [
      [
        64,
        "c.PyUnicode_Compare"
      ]
    ],
    "pyunicode_comparewithasciistring (c function)": [
      [
        64,
        "c.PyUnicode_CompareWithASCIIString"
      ]
    ],
    "pyunicode_concat (c function)": [
      [
        64,
        "c.PyUnicode_Concat"
      ]
    ],
    "pyunicode_contains (c function)": [
      [
        64,
        "c.PyUnicode_Contains"
      ]
    ],
    "pyunicode_copycharacters (c function)": [
      [
        64,
        "c.PyUnicode_CopyCharacters"
      ]
    ],
    "pyunicode_count (c function)": [
      [
        64,
        "c.PyUnicode_Count"
      ]
    ],
    "pyunicode_data (c function)": [
      [
        64,
        "c.PyUnicode_DATA"
      ]
    ],
    "pyunicode_decode (c function)": [
      [
        64,
        "c.PyUnicode_Decode"
      ]
    ],
    "pyunicode_decodeascii (c function)": [
      [
        64,
        "c.PyUnicode_DecodeASCII"
      ]
    ],
    "pyunicode_decodecharmap (c function)": [
      [
        64,
        "c.PyUnicode_DecodeCharmap"
      ]
    ],
    "pyunicode_decodefsdefault (c function)": [
      [
        64,
        "c.PyUnicode_DecodeFSDefault"
      ]
    ],
    "pyunicode_decodefsdefaultandsize (c function)": [
      [
        64,
        "c.PyUnicode_DecodeFSDefaultAndSize"
      ]
    ],
    "pyunicode_decodelatin1 (c function)": [
      [
        64,
        "c.PyUnicode_DecodeLatin1"
      ]
    ],
    "pyunicode_decodelocale (c function)": [
      [
        64,
        "c.PyUnicode_DecodeLocale"
      ]
    ],
    "pyunicode_decodelocaleandsize (c function)": [
      [
        64,
        "c.PyUnicode_DecodeLocaleAndSize"
      ]
    ],
    "pyunicode_decodembcs (c function)": [
      [
        64,
        "c.PyUnicode_DecodeMBCS"
      ]
    ],
    "pyunicode_decodembcsstateful (c function)": [
      [
        64,
        "c.PyUnicode_DecodeMBCSStateful"
      ]
    ],
    "pyunicode_decoderawunicodeescape (c function)": [
      [
        64,
        "c.PyUnicode_DecodeRawUnicodeEscape"
      ]
    ],
    "pyunicode_decodeutf16 (c function)": [
      [
        64,
        "c.PyUnicode_DecodeUTF16"
      ]
    ],
    "pyunicode_decodeutf16stateful (c function)": [
      [
        64,
        "c.PyUnicode_DecodeUTF16Stateful"
      ]
    ],
    "pyunicode_decodeutf32 (c function)": [
      [
        64,
        "c.PyUnicode_DecodeUTF32"
      ]
    ],
    "pyunicode_decodeutf32stateful (c function)": [
      [
        64,
        "c.PyUnicode_DecodeUTF32Stateful"
      ]
    ],
    "pyunicode_decodeutf7 (c function)": [
      [
        64,
        "c.PyUnicode_DecodeUTF7"
      ]
    ],
    "pyunicode_decodeutf7stateful (c function)": [
      [
        64,
        "c.PyUnicode_DecodeUTF7Stateful"
      ]
    ],
    "pyunicode_decodeutf8 (c function)": [
      [
        64,
        "c.PyUnicode_DecodeUTF8"
      ]
    ],
    "pyunicode_decodeutf8stateful (c function)": [
      [
        64,
        "c.PyUnicode_DecodeUTF8Stateful"
      ]
    ],
    "pyunicode_decodeunicodeescape (c function)": [
      [
        64,
        "c.PyUnicode_DecodeUnicodeEscape"
      ]
    ],
    "pyunicode_encodecodepage (c function)": [
      [
        64,
        "c.PyUnicode_EncodeCodePage"
      ]
    ],
    "pyunicode_encodefsdefault (c function)": [
      [
        64,
        "c.PyUnicode_EncodeFSDefault"
      ]
    ],
    "pyunicode_encodelocale (c function)": [
      [
        64,
        "c.PyUnicode_EncodeLocale"
      ]
    ],
    "pyunicode_fsconverter (c function)": [
      [
        64,
        "c.PyUnicode_FSConverter"
      ]
    ],
    "pyunicode_fsdecoder (c function)": [
      [
        64,
        "c.PyUnicode_FSDecoder"
      ]
    ],
    "pyunicode_fill (c function)": [
      [
        64,
        "c.PyUnicode_Fill"
      ]
    ],
    "pyunicode_find (c function)": [
      [
        64,
        "c.PyUnicode_Find"
      ]
    ],
    "pyunicode_findchar (c function)": [
      [
        64,
        "c.PyUnicode_FindChar"
      ]
    ],
    "pyunicode_format (c function)": [
      [
        64,
        "c.PyUnicode_Format"
      ]
    ],
    "pyunicode_fromencodedobject (c function)": [
      [
        64,
        "c.PyUnicode_FromEncodedObject"
      ]
    ],
    "pyunicode_fromformat (c function)": [
      [
        64,
        "c.PyUnicode_FromFormat"
      ]
    ],
    "pyunicode_fromformatv (c function)": [
      [
        64,
        "c.PyUnicode_FromFormatV"
      ]
    ],
    "pyunicode_fromkindanddata (c function)": [
      [
        64,
        "c.PyUnicode_FromKindAndData"
      ]
    ],
    "pyunicode_fromobject (c function)": [
      [
        64,
        "c.PyUnicode_FromObject"
      ]
    ],
    "pyunicode_fromstring (c function)": [
      [
        64,
        "c.PyUnicode_FromString"
      ]
    ],
    "pyunicode_fromstringandsize (c function)": [
      [
        64,
        "c.PyUnicode_FromStringAndSize"
      ]
    ],
    "pyunicode_fromwidechar (c function)": [
      [
        64,
        "c.PyUnicode_FromWideChar"
      ]
    ],
    "pyunicode_get_length (c function)": [
      [
        64,
        "c.PyUnicode_GET_LENGTH"
      ]
    ],
    "pyunicode_getlength (c function)": [
      [
        64,
        "c.PyUnicode_GetLength"
      ]
    ],
    "pyunicode_internfromstring (c function)": [
      [
        64,
        "c.PyUnicode_InternFromString"
      ]
    ],
    "pyunicode_interninplace (c function)": [
      [
        64,
        "c.PyUnicode_InternInPlace"
      ]
    ],
    "pyunicode_isidentifier (c function)": [
      [
        64,
        "c.PyUnicode_IsIdentifier"
      ]
    ],
    "pyunicode_join (c function)": [
      [
        64,
        "c.PyUnicode_Join"
      ]
    ],
    "pyunicode_kind (c function)": [
      [
        64,
        "c.PyUnicode_KIND"
      ]
    ],
    "pyunicode_max_char_value (c function)": [
      [
        64,
        "c.PyUnicode_MAX_CHAR_VALUE"
      ]
    ],
    "pyunicode_new (c function)": [
      [
        64,
        "c.PyUnicode_New"
      ]
    ],
    "pyunicode_read (c function)": [
      [
        64,
        "c.PyUnicode_READ"
      ]
    ],
    "pyunicode_ready (c function)": [
      [
        64,
        "c.PyUnicode_READY"
      ]
    ],
    "pyunicode_read_char (c function)": [
      [
        64,
        "c.PyUnicode_READ_CHAR"
      ]
    ],
    "pyunicode_readchar (c function)": [
      [
        64,
        "c.PyUnicode_ReadChar"
      ]
    ],
    "pyunicode_replace (c function)": [
      [
        64,
        "c.PyUnicode_Replace"
      ]
    ],
    "pyunicode_richcompare (c function)": [
      [
        64,
        "c.PyUnicode_RichCompare"
      ]
    ],
    "pyunicode_split (c function)": [
      [
        64,
        "c.PyUnicode_Split"
      ]
    ],
    "pyunicode_splitlines (c function)": [
      [
        64,
        "c.PyUnicode_Splitlines"
      ]
    ],
    "pyunicode_substring (c function)": [
      [
        64,
        "c.PyUnicode_Substring"
      ]
    ],
    "pyunicode_tailmatch (c function)": [
      [
        64,
        "c.PyUnicode_Tailmatch"
      ]
    ],
    "pyunicode_translate (c function)": [
      [
        64,
        "c.PyUnicode_Translate"
      ]
    ],
    "pyunicode_type (c var)": [
      [
        64,
        "c.PyUnicode_Type"
      ]
    ],
    "pyunicode_write (c function)": [
      [
        64,
        "c.PyUnicode_WRITE"
      ]
    ],
    "pyunicode_writechar (c function)": [
      [
        64,
        "c.PyUnicode_WriteChar"
      ]
    ],
    "py_ucs1 (c type)": [
      [
        64,
        "c.Py_UCS1"
      ]
    ],
    "py_ucs2 (c type)": [
      [
        64,
        "c.Py_UCS2"
      ]
    ],
    "py_ucs4 (c type)": [
      [
        64,
        "c.Py_UCS4"
      ]
    ],
    "py_unicode (c type)": [
      [
        64,
        "c.Py_UNICODE"
      ]
    ],
    "py_unicode_isalnum (c function)": [
      [
        64,
        "c.Py_UNICODE_ISALNUM"
      ]
    ],
    "py_unicode_isalpha (c function)": [
      [
        64,
        "c.Py_UNICODE_ISALPHA"
      ]
    ],
    "py_unicode_isdecimal (c function)": [
      [
        64,
        "c.Py_UNICODE_ISDECIMAL"
      ]
    ],
    "py_unicode_isdigit (c function)": [
      [
        64,
        "c.Py_UNICODE_ISDIGIT"
      ]
    ],
    "py_unicode_islinebreak (c function)": [
      [
        64,
        "c.Py_UNICODE_ISLINEBREAK"
      ]
    ],
    "py_unicode_islower (c function)": [
      [
        64,
        "c.Py_UNICODE_ISLOWER"
      ]
    ],
    "py_unicode_isnumeric (c function)": [
      [
        64,
        "c.Py_UNICODE_ISNUMERIC"
      ]
    ],
    "py_unicode_isprintable (c function)": [
      [
        64,
        "c.Py_UNICODE_ISPRINTABLE"
      ]
    ],
    "py_unicode_isspace (c function)": [
      [
        64,
        "c.Py_UNICODE_ISSPACE"
      ]
    ],
    "py_unicode_istitle (c function)": [
      [
        64,
        "c.Py_UNICODE_ISTITLE"
      ]
    ],
    "py_unicode_isupper (c function)": [
      [
        64,
        "c.Py_UNICODE_ISUPPER"
      ]
    ],
    "py_unicode_is_high_surrogate (c function)": [
      [
        64,
        "c.Py_UNICODE_IS_HIGH_SURROGATE"
      ]
    ],
    "py_unicode_is_low_surrogate (c function)": [
      [
        64,
        "c.Py_UNICODE_IS_LOW_SURROGATE"
      ]
    ],
    "py_unicode_is_surrogate (c function)": [
      [
        64,
        "c.Py_UNICODE_IS_SURROGATE"
      ]
    ],
    "py_unicode_join_surrogates (c function)": [
      [
        64,
        "c.Py_UNICODE_JOIN_SURROGATES"
      ]
    ],
    "py_unicode_todecimal (c function)": [
      [
        64,
        "c.Py_UNICODE_TODECIMAL"
      ]
    ],
    "py_unicode_todigit (c function)": [
      [
        64,
        "c.Py_UNICODE_TODIGIT"
      ]
    ],
    "py_unicode_tolower (c function)": [
      [
        64,
        "c.Py_UNICODE_TOLOWER"
      ]
    ],
    "py_unicode_tonumeric (c function)": [
      [
        64,
        "c.Py_UNICODE_TONUMERIC"
      ]
    ],
    "py_unicode_totitle (c function)": [
      [
        64,
        "c.Py_UNICODE_TOTITLE"
      ]
    ],
    "py_unicode_toupper (c function)": [
      [
        64,
        "c.Py_UNICODE_TOUPPER"
      ]
    ],
    "co_future_division (c var)": [
      [
        66,
        "c.CO_FUTURE_DIVISION"
      ]
    ],
    "pep 238": [
      [
        66,
        "index-3"
      ],
      [
        87,
        "index-17"
      ],
      [
        112,
        "index-2"
      ],
      [
        463,
        "index-11"
      ],
      [
        463,
        "index-12"
      ],
      [
        463,
        "index-13"
      ],
      [
        469,
        "index-2"
      ]
    ],
    "pycompilerflags (c struct)": [
      [
        66,
        "c.PyCompilerFlags"
      ]
    ],
    "pycompilerflags.cf_feature_version (c member)": [
      [
        66,
        "c.PyCompilerFlags.cf_feature_version"
      ]
    ],
    "pycompilerflags.cf_flags (c member)": [
      [
        66,
        "c.PyCompilerFlags.cf_flags"
      ]
    ],
    "pyeval_evalcode (c function)": [
      [
        66,
        "c.PyEval_EvalCode"
      ]
    ],
    "pyeval_evalcodeex (c function)": [
      [
        66,
        "c.PyEval_EvalCodeEx"
      ]
    ],
    "pyeval_evalframe (c function)": [
      [
        66,
        "c.PyEval_EvalFrame"
      ]
    ],
    "pyeval_evalframeex (c function)": [
      [
        66,
        "c.PyEval_EvalFrameEx"
      ]
    ],
    "pyeval_mergecompilerflags (c function)": [
      [
        66,
        "c.PyEval_MergeCompilerFlags"
      ]
    ],
    "pyos_inputhook (c var)": [
      [
        66,
        "c.PyOS_InputHook"
      ]
    ],
    "pyos_readlinefunctionpointer (c var)": [
      [
        66,
        "c.PyOS_ReadlineFunctionPointer"
      ]
    ],
    "pyrun_anyfile (c function)": [
      [
        66,
        "c.PyRun_AnyFile"
      ]
    ],
    "pyrun_anyfileex (c function)": [
      [
        66,
        "c.PyRun_AnyFileEx"
      ]
    ],
    "pyrun_anyfileexflags (c function)": [
      [
        66,
        "c.PyRun_AnyFileExFlags"
      ]
    ],
    "pyrun_anyfileflags (c function)": [
      [
        66,
        "c.PyRun_AnyFileFlags"
      ]
    ],
    "pyrun_file (c function)": [
      [
        66,
        "c.PyRun_File"
      ]
    ],
    "pyrun_fileex (c function)": [
      [
        66,
        "c.PyRun_FileEx"
      ]
    ],
    "pyrun_fileexflags (c function)": [
      [
        66,
        "c.PyRun_FileExFlags"
      ]
    ],
    "pyrun_fileflags (c function)": [
      [
        66,
        "c.PyRun_FileFlags"
      ]
    ],
    "pyrun_interactiveloop (c function)": [
      [
        66,
        "c.PyRun_InteractiveLoop"
      ]
    ],
    "pyrun_interactiveloopflags (c function)": [
      [
        66,
        "c.PyRun_InteractiveLoopFlags"
      ]
    ],
    "pyrun_interactiveone (c function)": [
      [
        66,
        "c.PyRun_InteractiveOne"
      ]
    ],
    "pyrun_interactiveoneflags (c function)": [
      [
        66,
        "c.PyRun_InteractiveOneFlags"
      ]
    ],
    "pyrun_simplefile (c function)": [
      [
        66,
        "c.PyRun_SimpleFile"
      ]
    ],
    "pyrun_simplefileex (c function)": [
      [
        66,
        "c.PyRun_SimpleFileEx"
      ]
    ],
    "pyrun_simplefileexflags (c function)": [
      [
        66,
        "c.PyRun_SimpleFileExFlags"
      ]
    ],
    "pyrun_simplestring (c function)": [
      [
        66,
        "c.PyRun_SimpleString"
      ]
    ],
    "pyrun_simplestringflags (c function)": [
      [
        66,
        "c.PyRun_SimpleStringFlags"
      ]
    ],
    "pyrun_string (c function)": [
      [
        66,
        "c.PyRun_String"
      ]
    ],
    "pyrun_stringflags (c function)": [
      [
        66,
        "c.PyRun_StringFlags"
      ]
    ],
    "py_bytesmain (c function)": [
      [
        66,
        "c.Py_BytesMain"
      ]
    ],
    "py_compilestring (c function)": [
      [
        66,
        "c.Py_CompileString"
      ],
      [
        66,
        "index-0"
      ],
      [
        66,
        "index-1"
      ],
      [
        66,
        "index-2"
      ]
    ],
    "py_compilestringexflags (c function)": [
      [
        66,
        "c.Py_CompileStringExFlags"
      ]
    ],
    "py_compilestringflags (c function)": [
      [
        66,
        "c.Py_CompileStringFlags"
      ]
    ],
    "py_compilestringobject (c function)": [
      [
        66,
        "c.Py_CompileStringObject"
      ]
    ],
    "py_main (c function)": [
      [
        66,
        "c.Py_Main"
      ]
    ],
    "py_eval_input (c var)": [
      [
        66,
        "c.Py_eval_input"
      ]
    ],
    "py_file_input (c var)": [
      [
        66,
        "c.Py_file_input"
      ]
    ],
    "py_single_input (c var)": [
      [
        66,
        "c.Py_single_input"
      ]
    ],
    "pyobject_clearweakrefs (c function)": [
      [
        67,
        "c.PyObject_ClearWeakRefs"
      ]
    ],
    "pyweakref_check (c function)": [
      [
        67,
        "c.PyWeakref_Check"
      ]
    ],
    "pyweakref_checkproxy (c function)": [
      [
        67,
        "c.PyWeakref_CheckProxy"
      ]
    ],
    "pyweakref_checkref (c function)": [
      [
        67,
        "c.PyWeakref_CheckRef"
      ]
    ],
    "pyweakref_get_object (c function)": [
      [
        67,
        "c.PyWeakref_GET_OBJECT"
      ]
    ],
    "pyweakref_getobject (c function)": [
      [
        67,
        "c.PyWeakref_GetObject"
      ]
    ],
    "pyweakref_newproxy (c function)": [
      [
        67,
        "c.PyWeakref_NewProxy"
      ]
    ],
    "pyweakref_newref (c function)": [
      [
        67,
        "c.PyWeakref_NewRef"
      ]
    ],
    "pep 3101": [
      [
        68,
        "index-23"
      ],
      [
        344,
        "index-0"
      ],
      [
        344,
        "index-1"
      ],
      [
        467,
        "index-9"
      ],
      [
        469,
        "index-23"
      ],
      [
        469,
        "index-24"
      ],
      [
        483,
        "index-23"
      ]
    ],
    "rfc": [
      [
        68,
        "index-0"
      ],
      [
        101,
        "index-0"
      ],
      [
        102,
        "index-0"
      ],
      [
        102,
        "index-1"
      ],
      [
        102,
        "index-2"
      ],
      [
        102,
        "index-3"
      ],
      [
        102,
        "index-4"
      ],
      [
        102,
        "index-5"
      ],
      [
        109,
        "index-0"
      ],
      [
        109,
        "index-1"
      ],
      [
        109,
        "index-2"
      ],
      [
        125,
        "index-3"
      ],
      [
        125,
        "index-4"
      ],
      [
        142,
        "index-1"
      ],
      [
        142,
        "index-10"
      ],
      [
        142,
        "index-11"
      ],
      [
        142,
        "index-12"
      ],
      [
        142,
        "index-2"
      ],
      [
        142,
        "index-3"
      ],
      [
        142,
        "index-4"
      ],
      [
        142,
        "index-5"
      ],
      [
        142,
        "index-6"
      ],
      [
        142,
        "index-7"
      ],
      [
        142,
        "index-8"
      ],
      [
        142,
        "index-9"
      ],
      [
        145,
        "index-1"
      ],
      [
        145,
        "index-2"
      ],
      [
        145,
        "index-3"
      ],
      [
        157,
        "index-10"
      ],
      [
        157,
        "index-11"
      ],
      [
        157,
        "index-12"
      ],
      [
        157,
        "index-13"
      ],
      [
        157,
        "index-14"
      ],
      [
        157,
        "index-6"
      ],
      [
        157,
        "index-7"
      ],
      [
        157,
        "index-8"
      ],
      [
        157,
        "index-9"
      ],
      [
        174,
        "index-1"
      ],
      [
        193,
        "index-0"
      ],
      [
        193,
        "index-1"
      ],
      [
        193,
        "index-2"
      ],
      [
        193,
        "index-3"
      ],
      [
        193,
        "index-4"
      ],
      [
        193,
        "index-5"
      ],
      [
        193,
        "index-6"
      ],
      [
        193,
        "index-7"
      ],
      [
        195,
        "index-0"
      ],
      [
        195,
        "index-1"
      ],
      [
        195,
        "index-10"
      ],
      [
        195,
        "index-11"
      ],
      [
        195,
        "index-2"
      ],
      [
        195,
        "index-3"
      ],
      [
        195,
        "index-4"
      ],
      [
        195,
        "index-5"
      ],
      [
        195,
        "index-6"
      ],
      [
        195,
        "index-7"
      ],
      [
        195,
        "index-8"
      ],
      [
        195,
        "index-9"
      ],
      [
        196,
        "index-0"
      ],
      [
        198,
        "index-0"
      ],
      [
        199,
        "index-0"
      ],
      [
        200,
        "index-0"
      ],
      [
        200,
        "index-1"
      ],
      [
        201,
        "index-0"
      ],
      [
        201,
        "index-1"
      ],
      [
        201,
        "index-10"
      ],
      [
        201,
        "index-11"
      ],
      [
        201,
        "index-12"
      ],
      [
        201,
        "index-13"
      ],
      [
        201,
        "index-2"
      ],
      [
        201,
        "index-3"
      ],
      [
        201,
        "index-4"
      ],
      [
        201,
        "index-5"
      ],
      [
        201,
        "index-6"
      ],
      [
        201,
        "index-7"
      ],
      [
        201,
        "index-8"
      ],
      [
        201,
        "index-9"
      ],
      [
        202,
        "index-0"
      ],
      [
        202,
        "index-1"
      ],
      [
        202,
        "index-10"
      ],
      [
        202,
        "index-11"
      ],
      [
        202,
        "index-12"
      ],
      [
        202,
        "index-13"
      ],
      [
        202,
        "index-14"
      ],
      [
        202,
        "index-2"
      ],
      [
        202,
        "index-3"
      ],
      [
        202,
        "index-4"
      ],
      [
        202,
        "index-5"
      ],
      [
        202,
        "index-6"
      ],
      [
        202,
        "index-7"
      ],
      [
        202,
        "index-8"
      ],
      [
        202,
        "index-9"
      ],
      [
        204,
        "index-0"
      ],
      [
        204,
        "index-1"
      ],
      [
        204,
        "index-10"
      ],
      [
        204,
        "index-2"
      ],
      [
        204,
        "index-3"
      ],
      [
        204,
        "index-4"
      ],
      [
        204,
        "index-5"
      ],
      [
        204,
        "index-6"
      ],
      [
        204,
        "index-7"
      ],
      [
        204,
        "index-8"
      ],
      [
        204,
        "index-9"
      ],
      [
        206,
        "index-0"
      ],
      [
        206,
        "index-1"
      ],
      [
        207,
        "index-0"
      ],
      [
        207,
        "index-1"
      ],
      [
        207,
        "index-2"
      ],
      [
        207,
        "index-3"
      ],
      [
        207,
        "index-4"
      ],
      [
        207,
        "index-5"
      ],
      [
        207,
        "index-6"
      ],
      [
        207,
        "index-7"
      ],
      [
        207,
        "index-8"
      ],
      [
        207,
        "index-9"
      ],
      [
        208,
        "index-0"
      ],
      [
        208,
        "index-1"
      ],
      [
        208,
        "index-10"
      ],
      [
        208,
        "index-2"
      ],
      [
        208,
        "index-3"
      ],
      [
        208,
        "index-4"
      ],
      [
        208,
        "index-5"
      ],
      [
        208,
        "index-6"
      ],
      [
        208,
        "index-7"
      ],
      [
        208,
        "index-8"
      ],
      [
        208,
        "index-9"
      ],
      [
        222,
        "index-1"
      ],
      [
        222,
        "index-2"
      ],
      [
        222,
        "index-3"
      ],
      [
        222,
        "index-4"
      ],
      [
        222,
        "index-5"
      ],
      [
        222,
        "index-6"
      ],
      [
        229,
        "index-9"
      ],
      [
        234,
        "index-1"
      ],
      [
        234,
        "index-3"
      ],
      [
        234,
        "index-5"
      ],
      [
        236,
        "index-0"
      ],
      [
        240,
        "index-1"
      ],
      [
        240,
        "index-10"
      ],
      [
        240,
        "index-11"
      ],
      [
        240,
        "index-12"
      ],
      [
        240,
        "index-13"
      ],
      [
        240,
        "index-14"
      ],
      [
        240,
        "index-15"
      ],
      [
        240,
        "index-16"
      ],
      [
        240,
        "index-17"
      ],
      [
        240,
        "index-18"
      ],
      [
        240,
        "index-19"
      ],
      [
        240,
        "index-2"
      ],
      [
        240,
        "index-20"
      ],
      [
        240,
        "index-21"
      ],
      [
        240,
        "index-22"
      ],
      [
        240,
        "index-23"
      ],
      [
        240,
        "index-24"
      ],
      [
        240,
        "index-25"
      ],
      [
        240,
        "index-26"
      ],
      [
        240,
        "index-27"
      ],
      [
        240,
        "index-28"
      ],
      [
        240,
        "index-29"
      ],
      [
        240,
        "index-3"
      ],
      [
        240,
        "index-30"
      ],
      [
        240,
        "index-31"
      ],
      [
        240,
        "index-32"
      ],
      [
        240,
        "index-33"
      ],
      [
        240,
        "index-34"
      ],
      [
        240,
        "index-35"
      ],
      [
        240,
        "index-36"
      ],
      [
        240,
        "index-37"
      ],
      [
        240,
        "index-38"
      ],
      [
        240,
        "index-39"
      ],
      [
        240,
        "index-4"
      ],
      [
        240,
        "index-40"
      ],
      [
        240,
        "index-41"
      ],
      [
        240,
        "index-42"
      ],
      [
        240,
        "index-43"
      ],
      [
        240,
        "index-44"
      ],
      [
        240,
        "index-45"
      ],
      [
        240,
        "index-46"
      ],
      [
        240,
        "index-47"
      ],
      [
        240,
        "index-48"
      ],
      [
        240,
        "index-49"
      ],
      [
        240,
        "index-5"
      ],
      [
        240,
        "index-50"
      ],
      [
        240,
        "index-51"
      ],
      [
        240,
        "index-52"
      ],
      [
        240,
        "index-53"
      ],
      [
        240,
        "index-54"
      ],
      [
        240,
        "index-55"
      ],
      [
        240,
        "index-56"
      ],
      [
        240,
        "index-57"
      ],
      [
        240,
        "index-58"
      ],
      [
        240,
        "index-59"
      ],
      [
        240,
        "index-6"
      ],
      [
        240,
        "index-60"
      ],
      [
        240,
        "index-61"
      ],
      [
        240,
        "index-62"
      ],
      [
        240,
        "index-63"
      ],
      [
        240,
        "index-64"
      ],
      [
        240,
        "index-65"
      ],
      [
        240,
        "index-66"
      ],
      [
        240,
        "index-67"
      ],
      [
        240,
        "index-68"
      ],
      [
        240,
        "index-69"
      ],
      [
        240,
        "index-7"
      ],
      [
        240,
        "index-70"
      ],
      [
        240,
        "index-71"
      ],
      [
        240,
        "index-72"
      ],
      [
        240,
        "index-73"
      ],
      [
        240,
        "index-74"
      ],
      [
        240,
        "index-75"
      ],
      [
        240,
        "index-76"
      ],
      [
        240,
        "index-8"
      ],
      [
        240,
        "index-9"
      ],
      [
        241,
        "index-2"
      ],
      [
        241,
        "index-3"
      ],
      [
        241,
        "index-4"
      ],
      [
        241,
        "index-5"
      ],
      [
        241,
        "index-6"
      ],
      [
        241,
        "index-7"
      ],
      [
        242,
        "index-0"
      ],
      [
        242,
        "index-1"
      ],
      [
        242,
        "index-10"
      ],
      [
        242,
        "index-11"
      ],
      [
        242,
        "index-12"
      ],
      [
        242,
        "index-13"
      ],
      [
        242,
        "index-14"
      ],
      [
        242,
        "index-15"
      ],
      [
        242,
        "index-16"
      ],
      [
        242,
        "index-17"
      ],
      [
        242,
        "index-18"
      ],
      [
        242,
        "index-19"
      ],
      [
        242,
        "index-2"
      ],
      [
        242,
        "index-20"
      ],
      [
        242,
        "index-21"
      ],
      [
        242,
        "index-22"
      ],
      [
        242,
        "index-23"
      ],
      [
        242,
        "index-24"
      ],
      [
        242,
        "index-25"
      ],
      [
        242,
        "index-3"
      ],
      [
        242,
        "index-4"
      ],
      [
        242,
        "index-5"
      ],
      [
        242,
        "index-6"
      ],
      [
        242,
        "index-7"
      ],
      [
        242,
        "index-8"
      ],
      [
        242,
        "index-9"
      ],
      [
        243,
        "index-0"
      ],
      [
        243,
        "index-1"
      ],
      [
        243,
        "index-2"
      ],
      [
        243,
        "index-3"
      ],
      [
        243,
        "index-4"
      ],
      [
        243,
        "index-5"
      ],
      [
        243,
        "index-6"
      ],
      [
        243,
        "index-7"
      ],
      [
        244,
        "index-1"
      ],
      [
        244,
        "index-2"
      ],
      [
        247,
        "index-1"
      ],
      [
        247,
        "index-2"
      ],
      [
        247,
        "index-3"
      ],
      [
        247,
        "index-4"
      ],
      [
        247,
        "index-5"
      ],
      [
        247,
        "index-6"
      ],
      [
        247,
        "index-7"
      ],
      [
        247,
        "index-8"
      ],
      [
        253,
        "index-0"
      ],
      [
        255,
        "index-0"
      ],
      [
        258,
        "index-0"
      ],
      [
        258,
        "index-1"
      ],
      [
        258,
        "index-10"
      ],
      [
        258,
        "index-11"
      ],
      [
        258,
        "index-12"
      ],
      [
        258,
        "index-13"
      ],
      [
        258,
        "index-2"
      ],
      [
        258,
        "index-3"
      ],
      [
        258,
        "index-4"
      ],
      [
        258,
        "index-5"
      ],
      [
        258,
        "index-6"
      ],
      [
        258,
        "index-7"
      ],
      [
        258,
        "index-8"
      ],
      [
        258,
        "index-9"
      ],
      [
        261,
        "index-0"
      ],
      [
        261,
        "index-1"
      ],
      [
        261,
        "index-2"
      ],
      [
        261,
        "index-3"
      ],
      [
        261,
        "index-4"
      ],
      [
        265,
        "index-4"
      ],
      [
        265,
        "index-5"
      ],
      [
        268,
        "index-0"
      ],
      [
        270,
        "index-0"
      ],
      [
        271,
        "index-1"
      ],
      [
        271,
        "index-2"
      ],
      [
        287,
        "index-10"
      ],
      [
        287,
        "index-2"
      ],
      [
        287,
        "index-3"
      ],
      [
        287,
        "index-4"
      ],
      [
        287,
        "index-5"
      ],
      [
        287,
        "index-6"
      ],
      [
        287,
        "index-7"
      ],
      [
        287,
        "index-8"
      ],
      [
        287,
        "index-9"
      ],
      [
        304,
        "index-1"
      ],
      [
        304,
        "index-2"
      ],
      [
        304,
        "index-3"
      ],
      [
        304,
        "index-4"
      ],
      [
        304,
        "index-5"
      ],
      [
        304,
        "index-6"
      ],
      [
        316,
        "index-1"
      ],
      [
        316,
        "index-2"
      ],
      [
        316,
        "index-3"
      ],
      [
        316,
        "index-4"
      ],
      [
        326,
        "index-1"
      ],
      [
        334,
        "index-1"
      ],
      [
        334,
        "index-10"
      ],
      [
        334,
        "index-11"
      ],
      [
        334,
        "index-12"
      ],
      [
        334,
        "index-2"
      ],
      [
        334,
        "index-3"
      ],
      [
        334,
        "index-4"
      ],
      [
        334,
        "index-5"
      ],
      [
        334,
        "index-6"
      ],
      [
        334,
        "index-7"
      ],
      [
        334,
        "index-8"
      ],
      [
        334,
        "index-9"
      ],
      [
        336,
        "index-15"
      ],
      [
        336,
        "index-3"
      ],
      [
        340,
        "index-10"
      ],
      [
        340,
        "index-11"
      ],
      [
        340,
        "index-12"
      ],
      [
        340,
        "index-13"
      ],
      [
        340,
        "index-16"
      ],
      [
        340,
        "index-17"
      ],
      [
        340,
        "index-18"
      ],
      [
        340,
        "index-19"
      ],
      [
        340,
        "index-20"
      ],
      [
        340,
        "index-21"
      ],
      [
        340,
        "index-22"
      ],
      [
        340,
        "index-5"
      ],
      [
        340,
        "index-6"
      ],
      [
        340,
        "index-7"
      ],
      [
        340,
        "index-8"
      ],
      [
        340,
        "index-9"
      ],
      [
        345,
        "index-0"
      ],
      [
        345,
        "index-1"
      ],
      [
        358,
        "index-2"
      ],
      [
        358,
        "index-3"
      ],
      [
        365,
        "index-10"
      ],
      [
        365,
        "index-19"
      ],
      [
        365,
        "index-20"
      ],
      [
        365,
        "index-21"
      ],
      [
        365,
        "index-22"
      ],
      [
        392,
        "index-0"
      ],
      [
        393,
        "index-1"
      ],
      [
        393,
        "index-10"
      ],
      [
        393,
        "index-11"
      ],
      [
        393,
        "index-12"
      ],
      [
        393,
        "index-13"
      ],
      [
        393,
        "index-2"
      ],
      [
        393,
        "index-3"
      ],
      [
        393,
        "index-4"
      ],
      [
        393,
        "index-5"
      ],
      [
        393,
        "index-6"
      ],
      [
        393,
        "index-7"
      ],
      [
        393,
        "index-8"
      ],
      [
        393,
        "index-9"
      ],
      [
        394,
        "index-0"
      ],
      [
        394,
        "index-1"
      ],
      [
        394,
        "index-2"
      ],
      [
        394,
        "index-4"
      ],
      [
        394,
        "index-5"
      ],
      [
        394,
        "index-6"
      ],
      [
        394,
        "index-7"
      ],
      [
        394,
        "index-8"
      ],
      [
        397,
        "index-0"
      ],
      [
        397,
        "index-1"
      ],
      [
        397,
        "index-10"
      ],
      [
        397,
        "index-11"
      ],
      [
        397,
        "index-2"
      ],
      [
        397,
        "index-3"
      ],
      [
        397,
        "index-4"
      ],
      [
        406,
        "index-10"
      ],
      [
        406,
        "index-5"
      ],
      [
        407,
        "index-2"
      ],
      [
        407,
        "index-3"
      ],
      [
        407,
        "index-4"
      ],
      [
        407,
        "index-5"
      ],
      [
        418,
        "index-0"
      ],
      [
        450,
        "index-1"
      ],
      [
        463,
        "index-17"
      ],
      [
        463,
        "index-18"
      ],
      [
        463,
        "index-19"
      ],
      [
        463,
        "index-20"
      ],
      [
        463,
        "index-21"
      ],
      [
        465,
        "index-18"
      ],
      [
        466,
        "index-22"
      ],
      [
        466,
        "index-23"
      ],
      [
        467,
        "index-22"
      ],
      [
        467,
        "index-23"
      ],
      [
        468,
        "index-10"
      ],
      [
        468,
        "index-12"
      ],
      [
        468,
        "index-9"
      ],
      [
        471,
        "index-32"
      ],
      [
        474,
        "index-11"
      ],
      [
        474,
        "index-12"
      ],
      [
        474,
        "index-13"
      ],
      [
        474,
        "index-7"
      ],
      [
        474,
        "index-8"
      ],
      [
        475,
        "index-26"
      ],
      [
        475,
        "index-27"
      ],
      [
        477,
        "index-31"
      ],
      [
        477,
        "index-32"
      ],
      [
        477,
        "index-33"
      ],
      [
        477,
        "index-34"
      ],
      [
        477,
        "index-35"
      ],
      [
        477,
        "index-36"
      ],
      [
        477,
        "index-37"
      ],
      [
        477,
        "index-38"
      ],
      [
        477,
        "index-39"
      ],
      [
        477,
        "index-40"
      ],
      [
        477,
        "index-41"
      ],
      [
        477,
        "index-42"
      ],
      [
        477,
        "index-43"
      ],
      [
        477,
        "index-44"
      ],
      [
        477,
        "index-51"
      ],
      [
        479,
        "index-34"
      ],
      [
        479,
        "index-35"
      ],
      [
        480,
        "index-25"
      ],
      [
        481,
        "index-22"
      ],
      [
        481,
        "index-28"
      ],
      [
        482,
        "index-176"
      ],
      [
        482,
        "index-217"
      ],
      [
        482,
        "index-33"
      ],
      [
        482,
        "index-34"
      ],
      [
        482,
        "index-35"
      ],
      [
        482,
        "index-43"
      ],
      [
        482,
        "index-84"
      ],
      [
        482,
        "index-90"
      ],
      [
        482,
        "index-92"
      ]
    ],
    "rfc 4122": [
      [
        68,
        "index-0"
      ],
      [
        253,
        "index-0"
      ],
      [
        255,
        "index-0"
      ],
      [
        397,
        "index-0"
      ],
      [
        397,
        "index-1"
      ],
      [
        397,
        "index-10"
      ],
      [
        397,
        "index-11"
      ],
      [
        397,
        "index-2"
      ],
      [
        397,
        "index-3"
      ],
      [
        397,
        "index-4"
      ],
      [
        466,
        "index-22"
      ],
      [
        466,
        "index-23"
      ]
    ],
    "pyinit_modulename (c function)": [
      [
        71,
        "c.PyInit_modulename"
      ]
    ],
    "philbrick, geoff": [
      [
        73,
        "index-4"
      ]
    ],
    "deallocation": [
      [
        75,
        "index-0"
      ]
    ],
    "deallocation, object": [
      [
        75,
        "index-0"
      ]
    ],
    "finalization": [
      [
        75,
        "index-0"
      ]
    ],
    "finalization, of objects": [
      [
        75,
        "index-0"
      ]
    ],
    "object representation": [
      [
        75,
        "index-3"
      ]
    ],
    "pep 572": [
      [
        78,
        "index-0"
      ],
      [
        426,
        "index-24"
      ],
      [
        429,
        "index-21"
      ],
      [
        429,
        "index-87"
      ],
      [
        473,
        "index-20"
      ],
      [
        480,
        "index-0"
      ],
      [
        480,
        "index-24"
      ],
      [
        482,
        "index-192"
      ],
      [
        482,
        "index-205"
      ],
      [
        482,
        "index-215"
      ],
      [
        482,
        "index-31"
      ]
    ],
    "pep 5": [
      [
        80,
        "index-2"
      ],
      [
        462,
        "index-6"
      ]
    ],
    "pep 602": [
      [
        80,
        "index-1"
      ],
      [
        481,
        "index-10"
      ]
    ],
    "pep 8": [
      [
        85,
        "index-0"
      ],
      [
        85,
        "index-2"
      ],
      [
        86,
        "index-0"
      ],
      [
        107,
        "index-0"
      ],
      [
        224,
        "index-10"
      ],
      [
        429,
        "index-79"
      ],
      [
        440,
        "index-10"
      ],
      [
        456,
        "index-0"
      ],
      [
        469,
        "index-21"
      ],
      [
        482,
        "index-241"
      ],
      [
        482,
        "index-303"
      ]
    ],
    "argument": [
      [
        85,
        "index-1"
      ],
      [
        87,
        "term-argument"
      ],
      [
        426,
        "index-31"
      ],
      [
        427,
        "index-33"
      ],
      [
        429,
        "index-47"
      ]
    ],
    "difference from argument": [
      [
        85,
        "index-1"
      ]
    ],
    "difference from parameter": [
      [
        85,
        "index-1"
      ]
    ],
    "parameter": [
      [
        85,
        "index-1"
      ],
      [
        87,
        "term-parameter"
      ],
      [
        426,
        "index-27"
      ],
      [
        426,
        "index-31"
      ],
      [
        429,
        "index-48"
      ]
    ],
    "...": [
      [
        87,
        "term-..."
      ],
      [
        167,
        "index-0"
      ],
      [
        192,
        "index-0"
      ],
      [
        192,
        "index-3"
      ],
      [
        306,
        "index-1"
      ],
      [
        320,
        "index-0"
      ],
      [
        343,
        "index-66"
      ],
      [
        351,
        "index-27"
      ],
      [
        363,
        "index-0"
      ],
      [
        427,
        "index-8"
      ]
    ],
    "2to3": [
      [
        87,
        "term-2to3"
      ]
    ],
    ">>>": [
      [
        87,
        "term-0"
      ],
      [
        192,
        "index-0"
      ],
      [
        351,
        "index-27"
      ]
    ],
    "bdfl": [
      [
        87,
        "term-BDFL"
      ]
    ],
    "cpython": [
      [
        87,
        "term-CPython"
      ]
    ],
    "eafp": [
      [
        87,
        "term-EAFP"
      ]
    ],
    "gil": [
      [
        87,
        "term-GIL"
      ]
    ],
    "idle": [
      [
        87,
        "term-IDLE"
      ],
      [
        246,
        "index-0"
      ]
    ],
    "lbyl": [
      [
        87,
        "term-LBYL"
      ]
    ],
    "mro": [
      [
        87,
        "term-MRO"
      ]
    ],
    "pep": [
      [
        87,
        "term-PEP"
      ]
    ],
    "pep 1": [
      [
        87,
        "index-30"
      ],
      [
        461,
        "index-0"
      ],
      [
        461,
        "index-1"
      ]
    ],
    "pep 278": [
      [
        87,
        "index-37"
      ],
      [
        464,
        "index-9"
      ]
    ],
    "pep 302": [
      [
        87,
        "index-14"
      ],
      [
        87,
        "index-25"
      ],
      [
        224,
        "index-14"
      ],
      [
        249,
        "index-12"
      ],
      [
        249,
        "index-13"
      ],
      [
        249,
        "index-14"
      ],
      [
        249,
        "index-16"
      ],
      [
        249,
        "index-2"
      ],
      [
        264,
        "index-1"
      ],
      [
        301,
        "index-0"
      ],
      [
        301,
        "index-2"
      ],
      [
        301,
        "index-3"
      ],
      [
        301,
        "index-5"
      ],
      [
        301,
        "index-6"
      ],
      [
        301,
        "index-7"
      ],
      [
        323,
        "index-1"
      ],
      [
        351,
        "index-25"
      ],
      [
        351,
        "index-26"
      ],
      [
        422,
        "index-2"
      ],
      [
        431,
        "index-1"
      ],
      [
        431,
        "index-19"
      ],
      [
        464,
        "index-17"
      ],
      [
        464,
        "index-18"
      ],
      [
        464,
        "index-19"
      ],
      [
        464,
        "index-6"
      ],
      [
        466,
        "index-21"
      ],
      [
        470,
        "index-2"
      ],
      [
        475,
        "index-20"
      ],
      [
        475,
        "index-21"
      ],
      [
        475,
        "index-37"
      ]
    ],
    "pep 3116": [
      [
        87,
        "index-38"
      ],
      [
        467,
        "index-14"
      ],
      [
        470,
        "index-3"
      ]
    ],
    "pep 3155": [
      [
        87,
        "index-33"
      ],
      [
        475,
        "index-15"
      ]
    ],
    "pep 343": [
      [
        87,
        "index-9"
      ],
      [
        112,
        "index-4"
      ],
      [
        168,
        "index-0"
      ],
      [
        426,
        "index-17"
      ],
      [
        427,
        "index-107"
      ],
      [
        466,
        "index-10"
      ],
      [
        466,
        "index-14"
      ],
      [
        467,
        "index-3"
      ]
    ],
    "pep 362": [
      [
        87,
        "index-2"
      ],
      [
        87,
        "index-28"
      ],
      [
        254,
        "index-0"
      ],
      [
        475,
        "index-17"
      ]
    ],
    "pep 411": [
      [
        87,
        "index-32"
      ],
      [
        351,
        "index-13"
      ],
      [
        351,
        "index-14"
      ],
      [
        351,
        "index-31"
      ],
      [
        351,
        "index-32"
      ]
    ],
    "pep 420": [
      [
        87,
        "index-15"
      ],
      [
        87,
        "index-27"
      ],
      [
        87,
        "index-31"
      ],
      [
        249,
        "index-5"
      ],
      [
        431,
        "index-14"
      ],
      [
        431,
        "index-15"
      ],
      [
        431,
        "index-2"
      ],
      [
        431,
        "index-20"
      ],
      [
        431,
        "index-21"
      ],
      [
        431,
        "index-22"
      ],
      [
        431,
        "index-6"
      ],
      [
        475,
        "index-2"
      ],
      [
        475,
        "index-3"
      ],
      [
        482,
        "index-283"
      ],
      [
        482,
        "index-290"
      ]
    ],
    "pep 443": [
      [
        87,
        "index-21"
      ],
      [
        476,
        "index-11"
      ],
      [
        476,
        "index-36"
      ]
    ],
    "pep 483": [
      [
        87,
        "index-22"
      ],
      [
        385,
        "index-1"
      ],
      [
        385,
        "index-3"
      ],
      [
        477,
        "index-12"
      ]
    ],
    "pep 484": [
      [
        87,
        "index-0"
      ],
      [
        87,
        "index-18"
      ],
      [
        87,
        "index-23"
      ],
      [
        87,
        "index-35"
      ],
      [
        87,
        "index-36"
      ],
      [
        87,
        "index-39"
      ],
      [
        121,
        "index-2"
      ],
      [
        121,
        "index-3"
      ],
      [
        121,
        "index-5"
      ],
      [
        121,
        "index-6"
      ],
      [
        343,
        "index-57"
      ],
      [
        385,
        "index-0"
      ],
      [
        385,
        "index-2"
      ],
      [
        385,
        "index-23"
      ],
      [
        385,
        "index-26"
      ],
      [
        385,
        "index-27"
      ],
      [
        385,
        "index-41"
      ],
      [
        385,
        "index-54"
      ],
      [
        426,
        "index-37"
      ],
      [
        427,
        "index-95"
      ],
      [
        435,
        "index-17"
      ],
      [
        440,
        "index-8"
      ],
      [
        471,
        "index-19"
      ],
      [
        471,
        "index-21"
      ],
      [
        471,
        "index-23"
      ],
      [
        472,
        "index-11"
      ],
      [
        472,
        "index-12"
      ],
      [
        473,
        "index-15"
      ],
      [
        473,
        "index-16"
      ],
      [
        473,
        "index-3"
      ],
      [
        477,
        "index-10"
      ],
      [
        477,
        "index-11"
      ],
      [
        478,
        "index-5"
      ],
      [
        479,
        "index-20"
      ],
      [
        480,
        "index-10"
      ],
      [
        480,
        "index-12"
      ]
    ],
    "pep 492": [
      [
        87,
        "index-11"
      ],
      [
        87,
        "index-12"
      ],
      [
        87,
        "index-3"
      ],
      [
        87,
        "index-4"
      ],
      [
        87,
        "index-6"
      ],
      [
        87,
        "index-7"
      ],
      [
        87,
        "index-8"
      ],
      [
        160,
        "index-3"
      ],
      [
        254,
        "index-1"
      ],
      [
        254,
        "index-2"
      ],
      [
        426,
        "index-52"
      ],
      [
        427,
        "index-111"
      ],
      [
        429,
        "index-30"
      ],
      [
        477,
        "index-1"
      ],
      [
        477,
        "index-2"
      ],
      [
        477,
        "index-47"
      ],
      [
        477,
        "index-52"
      ],
      [
        478,
        "index-35"
      ],
      [
        478,
        "index-9"
      ],
      [
        482,
        "index-246"
      ],
      [
        482,
        "index-280"
      ],
      [
        482,
        "index-291"
      ],
      [
        482,
        "index-295"
      ]
    ],
    "pep 498": [
      [
        87,
        "index-13"
      ],
      [
        434,
        "index-26"
      ],
      [
        478,
        "index-3"
      ],
      [
        478,
        "index-4"
      ],
      [
        482,
        "index-287"
      ]
    ],
    "pep 519": [
      [
        87,
        "index-29"
      ],
      [
        478,
        "index-16"
      ],
      [
        482,
        "index-271"
      ],
      [
        482,
        "index-276"
      ],
      [
        482,
        "index-277"
      ],
      [
        482,
        "index-278"
      ],
      [
        482,
        "index-279"
      ],
      [
        482,
        "index-282"
      ]
    ],
    "pep 525": [
      [
        87,
        "index-5"
      ],
      [
        160,
        "index-2"
      ],
      [
        254,
        "index-3"
      ],
      [
        351,
        "index-12"
      ],
      [
        351,
        "index-30"
      ],
      [
        429,
        "index-29"
      ],
      [
        478,
        "index-10"
      ],
      [
        482,
        "index-264"
      ]
    ],
    "pep 526": [
      [
        87,
        "index-1"
      ],
      [
        87,
        "index-40"
      ],
      [
        121,
        "index-4"
      ],
      [
        121,
        "index-7"
      ],
      [
        180,
        "index-1"
      ],
      [
        180,
        "index-2"
      ],
      [
        385,
        "index-34"
      ],
      [
        385,
        "index-4"
      ],
      [
        385,
        "index-48"
      ],
      [
        385,
        "index-50"
      ],
      [
        426,
        "index-38"
      ],
      [
        435,
        "index-16"
      ],
      [
        471,
        "index-27"
      ],
      [
        478,
        "index-33"
      ],
      [
        478,
        "index-6"
      ],
      [
        479,
        "index-1"
      ],
      [
        480,
        "index-11"
      ],
      [
        482,
        "index-265"
      ]
    ],
    "pep 585": [
      [
        87,
        "index-24"
      ],
      [
        160,
        "index-0"
      ],
      [
        343,
        "index-58"
      ],
      [
        384,
        "index-5"
      ],
      [
        385,
        "index-59"
      ],
      [
        385,
        "index-6"
      ],
      [
        385,
        "index-61"
      ],
      [
        385,
        "index-62"
      ],
      [
        385,
        "index-63"
      ],
      [
        385,
        "index-64"
      ],
      [
        385,
        "index-65"
      ],
      [
        385,
        "index-66"
      ],
      [
        385,
        "index-67"
      ],
      [
        385,
        "index-68"
      ],
      [
        385,
        "index-69"
      ],
      [
        385,
        "index-70"
      ],
      [
        385,
        "index-71"
      ],
      [
        385,
        "index-72"
      ],
      [
        385,
        "index-73"
      ],
      [
        385,
        "index-74"
      ],
      [
        385,
        "index-75"
      ],
      [
        385,
        "index-76"
      ],
      [
        385,
        "index-77"
      ],
      [
        385,
        "index-78"
      ],
      [
        385,
        "index-79"
      ],
      [
        385,
        "index-80"
      ],
      [
        385,
        "index-81"
      ],
      [
        385,
        "index-82"
      ],
      [
        385,
        "index-83"
      ],
      [
        385,
        "index-84"
      ],
      [
        385,
        "index-85"
      ],
      [
        385,
        "index-86"
      ],
      [
        385,
        "index-87"
      ],
      [
        385,
        "index-88"
      ],
      [
        385,
        "index-89"
      ],
      [
        385,
        "index-90"
      ],
      [
        385,
        "index-91"
      ],
      [
        385,
        "index-92"
      ],
      [
        385,
        "index-93"
      ],
      [
        385,
        "index-95"
      ],
      [
        385,
        "index-96"
      ],
      [
        385,
        "index-97"
      ],
      [
        385,
        "index-98"
      ],
      [
        385,
        "index-99"
      ],
      [
        481,
        "index-13"
      ],
      [
        481,
        "index-2"
      ],
      [
        482,
        "index-32"
      ],
      [
        482,
        "index-81"
      ],
      [
        482,
        "index-85"
      ]
    ],
    "python 3000": [
      [
        87,
        "term-Python-3000"
      ]
    ],
    "pythonic": [
      [
        87,
        "term-Pythonic"
      ]
    ],
    "zen of python": [
      [
        87,
        "term-Zen-of-Python"
      ]
    ],
    "__future__": [
      [
        87,
        "term-__future__"
      ],
      [
        112,
        "module-__future__"
      ],
      [
        435,
        "index-40"
      ]
    ],
    "__slots__": [
      [
        87,
        "term-__slots__"
      ]
    ],
    "abstract base class": [
      [
        87,
        "term-abstract-base-class"
      ]
    ],
    "annotation": [
      [
        87,
        "term-annotation"
      ],
      [
        343,
        "index-55"
      ]
    ],
    "asynchronous context manager": [
      [
        87,
        "term-asynchronous-context-manager"
      ]
    ],
    "asynchronous generator": [
      [
        87,
        "term-asynchronous-generator"
      ],
      [
        427,
        "index-41"
      ]
    ],
    "asynchronous generator iterator": [
      [
        87,
        "term-asynchronous-generator-iterator"
      ]
    ],
    "asynchronous iterable": [
      [
        87,
        "term-asynchronous-iterable"
      ]
    ],
    "asynchronous iterator": [
      [
        87,
        "term-asynchronous-iterator"
      ],
      [
        427,
        "index-41"
      ]
    ],
    "attribute": [
      [
        87,
        "term-attribute"
      ],
      [
        427,
        "index-47"
      ],
      [
        427,
        "index-48"
      ],
      [
        427,
        "index-5"
      ],
      [
        427,
        "index-51"
      ],
      [
        427,
        "index-52"
      ],
      [
        429,
        "index-39"
      ],
      [
        435,
        "index-23"
      ],
      [
        435,
        "index-4"
      ],
      [
        435,
        "index-8"
      ]
    ],
    "awaitable": [
      [
        87,
        "term-awaitable"
      ]
    ],
    "binary file": [
      [
        87,
        "term-binary-file"
      ]
    ],
    "borrowed reference": [
      [
        87,
        "term-borrowed-reference"
      ]
    ],
    "bytecode": [
      [
        87,
        "term-bytecode"
      ],
      [
        427,
        "index-57"
      ]
    ],
    "bytes-like object": [
      [
        87,
        "term-bytes-like-object"
      ]
    ],
    "callable": [
      [
        87,
        "term-callable"
      ],
      [
        427,
        "index-33"
      ],
      [
        429,
        "index-47"
      ]
    ],
    "callback": [
      [
        87,
        "term-callback"
      ]
    ],
    "class": [
      [
        87,
        "term-class"
      ],
      [
        426,
        "index-42"
      ],
      [
        427,
        "index-47"
      ],
      [
        427,
        "index-48"
      ],
      [
        427,
        "index-51"
      ],
      [
        427,
        "index-73"
      ],
      [
        427,
        "index-91"
      ],
      [
        429,
        "index-54"
      ],
      [
        435,
        "index-24"
      ]
    ],
    "class variable": [
      [
        87,
        "term-class-variable"
      ]
    ],
    "context manager": [
      [
        87,
        "term-context-manager"
      ],
      [
        343,
        "index-54"
      ],
      [
        427,
        "index-106"
      ]
    ],
    "context variable": [
      [
        87,
        "term-context-variable"
      ]
    ],
    "coroutine": [
      [
        87,
        "term-coroutine"
      ],
      [
        427,
        "index-110"
      ],
      [
        427,
        "index-40"
      ],
      [
        429,
        "index-24"
      ]
    ],
    "coroutine function": [
      [
        87,
        "term-coroutine-function"
      ]
    ],
    "decorator": [
      [
        87,
        "term-decorator"
      ]
    ],
    "descriptor": [
      [
        87,
        "term-descriptor"
      ]
    ],
    "dictionary comprehension": [
      [
        87,
        "term-dictionary-comprehension"
      ]
    ],
    "dictionary view": [
      [
        87,
        "term-dictionary-view"
      ]
    ],
    "docstring": [
      [
        87,
        "term-docstring"
      ],
      [
        426,
        "index-42"
      ]
    ],
    "duck-typing": [
      [
        87,
        "term-duck-typing"
      ]
    ],
    "expression": [
      [
        87,
        "term-expression"
      ],
      [
        426,
        "index-35"
      ],
      [
        429,
        "index-0"
      ],
      [
        429,
        "index-22"
      ],
      [
        429,
        "index-23"
      ],
      [
        429,
        "index-82"
      ],
      [
        429,
        "index-88"
      ],
      [
        429,
        "index-90"
      ],
      [
        429,
        "index-91"
      ],
      [
        435,
        "index-1"
      ],
      [
        435,
        "index-2"
      ]
    ],
    "extension module": [
      [
        87,
        "term-extension-module"
      ]
    ],
    "f-string": [
      [
        87,
        "term-f-string"
      ],
      [
        434,
        "index-25"
      ]
    ],
    "file object": [
      [
        87,
        "term-file-object"
      ],
      [
        224,
        "index-5"
      ],
      [
        257,
        "index-0"
      ]
    ],
    "file-like object": [
      [
        87,
        "term-file-like-object"
      ]
    ],
    "filesystem encoding and error handler": [
      [
        87,
        "term-filesystem-encoding-and-error-handler"
      ]
    ],
    "finder": [
      [
        87,
        "term-finder"
      ],
      [
        431,
        "index-10"
      ],
      [
        431,
        "index-8"
      ]
    ],
    "floor division": [
      [
        87,
        "term-floor-division"
      ]
    ],
    "function annotation": [
      [
        87,
        "term-function-annotation"
      ]
    ],
    "garbage collection": [
      [
        87,
        "term-garbage-collection"
      ],
      [
        427,
        "index-2"
      ]
    ],
    "generator": [
      [
        87,
        "index-19"
      ],
      [
        87,
        "term-generator"
      ],
      [
        427,
        "index-39"
      ],
      [
        427,
        "index-59"
      ],
      [
        429,
        "index-22"
      ],
      [
        429,
        "index-23"
      ],
      [
        429,
        "index-31"
      ],
      [
        435,
        "index-26"
      ]
    ],
    "generator expression": [
      [
        87,
        "index-20"
      ],
      [
        87,
        "term-generator-expression"
      ],
      [
        429,
        "index-22"
      ]
    ],
    "generator iterator": [
      [
        87,
        "term-generator-iterator"
      ]
    ],
    "generic function": [
      [
        87,
        "term-generic-function"
      ]
    ],
    "generic type": [
      [
        87,
        "term-generic-type"
      ]
    ],
    "hash-based pyc": [
      [
        87,
        "term-hash-based-pyc"
      ]
    ],
    "hashable": [
      [
        87,
        "term-hashable"
      ],
      [
        429,
        "index-20"
      ]
    ],
    "immutable": [
      [
        87,
        "term-immutable"
      ],
      [
        343,
        "index-22"
      ],
      [
        427,
        "index-17"
      ],
      [
        429,
        "index-20"
      ],
      [
        429,
        "index-7"
      ]
    ],
    "import path": [
      [
        87,
        "term-import-path"
      ]
    ],
    "importer": [
      [
        87,
        "term-importer"
      ]
    ],
    "importing": [
      [
        87,
        "term-importing"
      ],
      [
        435,
        "index-34"
      ]
    ],
    "interactive": [
      [
        87,
        "term-interactive"
      ]
    ],
    "interpreted": [
      [
        87,
        "term-interpreted"
      ]
    ],
    "interpreter shutdown": [
      [
        87,
        "term-interpreter-shutdown"
      ]
    ],
    "iterable": [
      [
        87,
        "term-iterable"
      ],
      [
        429,
        "index-93"
      ]
    ],
    "iterator": [
      [
        87,
        "term-iterator"
      ],
      [
        343,
        "index-18"
      ],
      [
        427,
        "index-39"
      ],
      [
        435,
        "index-26"
      ]
    ],
    "key function": [
      [
        87,
        "term-key-function"
      ]
    ],
    "keyword argument": [
      [
        87,
        "term-keyword-argument"
      ]
    ],
    "lambda": [
      [
        87,
        "term-lambda"
      ],
      [
        426,
        "index-35"
      ],
      [
        429,
        "index-90"
      ]
    ],
    "list comprehension": [
      [
        87,
        "term-list-comprehension"
      ]
    ],
    "loader": [
      [
        87,
        "term-loader"
      ],
      [
        431,
        "index-8"
      ]
    ],
    "locale encoding": [
      [
        87,
        "term-locale-encoding"
      ]
    ],
    "magic": [
      [
        87,
        "index-26"
      ]
    ],
    "magic method": [
      [
        87,
        "term-magic-method"
      ]
    ],
    "meta path finder": [
      [
        87,
        "term-meta-path-finder"
      ]
    ],
    "metaclass": [
      [
        87,
        "term-metaclass"
      ],
      [
        427,
        "index-86"
      ]
    ],
    "method resolution order": [
      [
        87,
        "term-method-resolution-order"
      ]
    ],
    "module spec": [
      [
        87,
        "term-module-spec"
      ],
      [
        431,
        "index-8"
      ]
    ],
    "mutable": [
      [
        87,
        "term-mutable"
      ],
      [
        343,
        "index-23"
      ],
      [
        427,
        "index-22"
      ],
      [
        435,
        "index-4"
      ],
      [
        435,
        "index-9"
      ]
    ],
    "named tuple": [
      [
        87,
        "term-named-tuple"
      ]
    ],
    "namespace": [
      [
        87,
        "term-namespace"
      ],
      [
        427,
        "index-35"
      ],
      [
        427,
        "index-45"
      ],
      [
        428,
        "index-3"
      ],
      [
        431,
        "index-5"
      ]
    ],
    "namespace package": [
      [
        87,
        "term-namespace-package"
      ]
    ],
    "nested scope": [
      [
        87,
        "term-nested-scope"
      ]
    ],
    "new-style class": [
      [
        87,
        "term-new-style-class"
      ]
    ],
    "package": [
      [
        87,
        "term-package"
      ],
      [
        333,
        "index-4"
      ],
      [
        431,
        "index-3"
      ],
      [
        431,
        "index-4"
      ],
      [
        431,
        "index-5"
      ]
    ],
    "path based finder": [
      [
        87,
        "term-path-based-finder"
      ],
      [
        431,
        "index-16"
      ]
    ],
    "path entry": [
      [
        87,
        "term-path-entry"
      ]
    ],
    "path entry finder": [
      [
        87,
        "term-path-entry-finder"
      ]
    ],
    "path entry hook": [
      [
        87,
        "term-path-entry-hook"
      ]
    ],
    "path-like object": [
      [
        87,
        "term-path-like-object"
      ]
    ],
    "portion": [
      [
        87,
        "term-portion"
      ],
      [
        431,
        "index-5"
      ]
    ],
    "positional argument": [
      [
        87,
        "term-positional-argument"
      ]
    ],
    "provisional api": [
      [
        87,
        "term-provisional-API"
      ]
    ],
    "provisional package": [
      [
        87,
        "term-provisional-package"
      ]
    ],
    "qualified name": [
      [
        87,
        "term-qualified-name"
      ]
    ],
    "reference count": [
      [
        87,
        "term-reference-count"
      ]
    ],
    "regular package": [
      [
        87,
        "term-regular-package"
      ]
    ],
    "set comprehension": [
      [
        87,
        "term-set-comprehension"
      ]
    ],
    "single dispatch": [
      [
        87,
        "term-single-dispatch"
      ]
    ],
    "slice": [
      [
        87,
        "term-slice"
      ],
      [
        190,
        "index-1"
      ],
      [
        343,
        "index-20"
      ],
      [
        343,
        "index-24"
      ],
      [
        427,
        "index-69"
      ],
      [
        427,
        "index-99"
      ],
      [
        429,
        "index-44"
      ]
    ],
    "special": [
      [
        87,
        "index-34"
      ],
      [
        427,
        "index-5"
      ]
    ],
    "special method": [
      [
        87,
        "term-special-method"
      ]
    ],
    "statement": [
      [
        87,
        "term-statement"
      ],
      [
        212,
        "index-0"
      ],
      [
        212,
        "index-1"
      ],
      [
        212,
        "index-4"
      ],
      [
        224,
        "index-13"
      ],
      [
        333,
        "index-2"
      ],
      [
        343,
        "index-1"
      ],
      [
        343,
        "index-24"
      ],
      [
        343,
        "index-52"
      ],
      [
        426,
        "index-0"
      ],
      [
        426,
        "index-13"
      ],
      [
        426,
        "index-15"
      ],
      [
        426,
        "index-16"
      ],
      [
        426,
        "index-18"
      ],
      [
        426,
        "index-28"
      ],
      [
        426,
        "index-3"
      ],
      [
        426,
        "index-4"
      ],
      [
        426,
        "index-4"
      ],
      [
        426,
        "index-42"
      ],
      [
        426,
        "index-48"
      ],
      [
        426,
        "index-5"
      ],
      [
        426,
        "index-50"
      ],
      [
        426,
        "index-51"
      ],
      [
        426,
        "index-6"
      ],
      [
        426,
        "index-6"
      ],
      [
        426,
        "index-7"
      ],
      [
        426,
        "index-9"
      ],
      [
        427,
        "index-106"
      ],
      [
        427,
        "index-22"
      ],
      [
        427,
        "index-44"
      ],
      [
        427,
        "index-67"
      ],
      [
        427,
        "index-74"
      ],
      [
        435,
        "index-0"
      ],
      [
        435,
        "index-1"
      ],
      [
        435,
        "index-14"
      ],
      [
        435,
        "index-15"
      ],
      [
        435,
        "index-18"
      ],
      [
        435,
        "index-20"
      ],
      [
        435,
        "index-21"
      ],
      [
        435,
        "index-22"
      ],
      [
        435,
        "index-24"
      ],
      [
        435,
        "index-26"
      ],
      [
        435,
        "index-27"
      ],
      [
        435,
        "index-30"
      ],
      [
        435,
        "index-30"
      ],
      [
        435,
        "index-33"
      ],
      [
        435,
        "index-33"
      ],
      [
        435,
        "index-34"
      ],
      [
        435,
        "index-4"
      ],
      [
        435,
        "index-40"
      ],
      [
        435,
        "index-43"
      ],
      [
        435,
        "index-45"
      ],
      [
        435,
        "index-47"
      ],
      [
        440,
        "index-0"
      ]
    ],
    "static type checker": [
      [
        87,
        "term-static-type-checker"
      ]
    ],
    "strong reference": [
      [
        87,
        "term-strong-reference"
      ]
    ],
    "text encoding": [
      [
        87,
        "term-text-encoding"
      ]
    ],
    "text file": [
      [
        87,
        "term-text-file"
      ]
    ],
    "triple-quoted string": [
      [
        87,
        "term-triple-quoted-string"
      ],
      [
        434,
        "index-18"
      ]
    ],
    "type alias": [
      [
        87,
        "term-type-alias"
      ]
    ],
    "type hint": [
      [
        87,
        "term-type-hint"
      ]
    ],
    "universal newlines": [
      [
        87,
        "term-universal-newlines"
      ],
      [
        174,
        "index-3"
      ],
      [
        224,
        "index-7"
      ],
      [
        249,
        "index-15"
      ],
      [
        257,
        "index-4"
      ],
      [
        257,
        "index-5"
      ],
      [
        343,
        "index-34"
      ],
      [
        343,
        "index-44"
      ],
      [
        347,
        "index-1"
      ],
      [
        464,
        "index-8"
      ],
      [
        465,
        "index-7"
      ],
      [
        466,
        "index-20"
      ],
      [
        467,
        "index-13"
      ]
    ],
    "variable annotation": [
      [
        87,
        "term-variable-annotation"
      ]
    ],
    "virtual environment": [
      [
        87,
        "term-virtual-environment"
      ]
    ],
    "virtual machine": [
      [
        87,
        "term-virtual-machine"
      ]
    ],
    "pep 604": [
      [
        88,
        "index-0"
      ],
      [
        343,
        "index-60"
      ],
      [
        385,
        "index-11"
      ],
      [
        471,
        "index-20"
      ],
      [
        471,
        "index-5"
      ],
      [
        482,
        "index-115"
      ],
      [
        482,
        "index-156"
      ]
    ],
    "pep 289": [
      [
        95,
        "index-1"
      ],
      [
        465,
        "index-15"
      ],
      [
        465,
        "index-2"
      ]
    ],
    "pep 342": [
      [
        95,
        "index-0"
      ],
      [
        95,
        "index-2"
      ],
      [
        160,
        "index-1"
      ],
      [
        429,
        "index-27"
      ],
      [
        466,
        "index-11"
      ],
      [
        466,
        "index-31"
      ],
      [
        466,
        "index-9"
      ]
    ],
    "rfc 3339": [
      [
        101,
        "index-0"
      ]
    ],
    "__init__() (logging.logging.formatter method)": [
      [
        101,
        "logging.logging.Formatter.__init__"
      ]
    ],
    "rfc 3164": [
      [
        102,
        "index-5"
      ]
    ],
    "rfc 5424": [
      [
        102,
        "index-0"
      ],
      [
        102,
        "index-2"
      ],
      [
        102,
        "index-3"
      ],
      [
        102,
        "index-4"
      ],
      [
        268,
        "index-0"
      ]
    ],
    "rfc 5424#section-6": [
      [
        102,
        "index-1"
      ]
    ],
    "pep 373": [
      [
        104,
        "index-0"
      ],
      [
        468,
        "index-0"
      ]
    ],
    "pep 263": [
      [
        108,
        "index-0"
      ],
      [
        249,
        "index-1"
      ],
      [
        377,
        "index-0"
      ],
      [
        377,
        "index-1"
      ],
      [
        464,
        "index-3"
      ],
      [
        466,
        "index-19"
      ],
      [
        482,
        "index-80"
      ]
    ],
    "rfc 2616": [
      [
        109,
        "index-0"
      ],
      [
        109,
        "index-1"
      ],
      [
        109,
        "index-2"
      ],
      [
        392,
        "index-0"
      ],
      [
        394,
        "index-5"
      ],
      [
        394,
        "index-6"
      ],
      [
        394,
        "index-8"
      ],
      [
        406,
        "index-10"
      ],
      [
        406,
        "index-5"
      ],
      [
        474,
        "index-7"
      ]
    ],
    "pep 617": [
      [
        111,
        "index-0"
      ],
      [
        430,
        "index-0"
      ],
      [
        471,
        "index-14"
      ],
      [
        472,
        "index-32"
      ],
      [
        473,
        "index-8"
      ],
      [
        481,
        "index-14"
      ],
      [
        481,
        "index-19"
      ],
      [
        481,
        "index-7"
      ],
      [
        482,
        "index-172"
      ],
      [
        482,
        "index-89"
      ]
    ],
    "apply (2to3 fixer)": [
      [
        111,
        "to3fixer-apply"
      ]
    ],
    "asserts (2to3 fixer)": [
      [
        111,
        "to3fixer-asserts"
      ]
    ],
    "basestring (2to3 fixer)": [
      [
        111,
        "to3fixer-basestring"
      ]
    ],
    "buffer (2to3 fixer)": [
      [
        111,
        "to3fixer-buffer"
      ]
    ],
    "dict (2to3 fixer)": [
      [
        111,
        "to3fixer-dict"
      ]
    ],
    "except (2to3 fixer)": [
      [
        111,
        "to3fixer-except"
      ]
    ],
    "exec (2to3 fixer)": [
      [
        111,
        "to3fixer-exec"
      ]
    ],
    "execfile (2to3 fixer)": [
      [
        111,
        "to3fixer-execfile"
      ]
    ],
    "exitfunc (2to3 fixer)": [
      [
        111,
        "to3fixer-exitfunc"
      ]
    ],
    "filter (2to3 fixer)": [
      [
        111,
        "to3fixer-filter"
      ]
    ],
    "funcattrs (2to3 fixer)": [
      [
        111,
        "to3fixer-funcattrs"
      ]
    ],
    "future (2to3 fixer)": [
      [
        111,
        "to3fixer-future"
      ]
    ],
    "getcwdu (2to3 fixer)": [
      [
        111,
        "to3fixer-getcwdu"
      ]
    ],
    "has_key (2to3 fixer)": [
      [
        111,
        "to3fixer-has_key"
      ]
    ],
    "idioms (2to3 fixer)": [
      [
        111,
        "to3fixer-idioms"
      ]
    ],
    "import (2to3 fixer)": [
      [
        111,
        "to3fixer-import"
      ]
    ],
    "imports (2to3 fixer)": [
      [
        111,
        "to3fixer-imports"
      ]
    ],
    "imports2 (2to3 fixer)": [
      [
        111,
        "to3fixer-imports2"
      ]
    ],
    "input (2to3 fixer)": [
      [
        111,
        "to3fixer-input"
      ]
    ],
    "intern (2to3 fixer)": [
      [
        111,
        "to3fixer-intern"
      ]
    ],
    "isinstance (2to3 fixer)": [
      [
        111,
        "to3fixer-isinstance"
      ]
    ],
    "itertools (2to3 fixer)": [
      [
        111,
        "to3fixer-itertools"
      ]
    ],
    "itertools_imports (2to3 fixer)": [
      [
        111,
        "to3fixer-itertools_imports"
      ]
    ],
    "lib2to3": [
      [
        111,
        "module-lib2to3"
      ]
    ],
    "long (2to3 fixer)": [
      [
        111,
        "to3fixer-long"
      ]
    ],
    "map (2to3 fixer)": [
      [
        111,
        "to3fixer-map"
      ]
    ],
    "metaclass (2to3 fixer)": [
      [
        111,
        "to3fixer-metaclass"
      ]
    ],
    "methodattrs (2to3 fixer)": [
      [
        111,
        "to3fixer-methodattrs"
      ]
    ],
    "ne (2to3 fixer)": [
      [
        111,
        "to3fixer-ne"
      ]
    ],
    "next (2to3 fixer)": [
      [
        111,
        "to3fixer-next"
      ]
    ],
    "nonzero (2to3 fixer)": [
      [
        111,
        "to3fixer-nonzero"
      ]
    ],
    "numliterals (2to3 fixer)": [
      [
        111,
        "to3fixer-numliterals"
      ]
    ],
    "operator (2to3 fixer)": [
      [
        111,
        "to3fixer-operator"
      ]
    ],
    "paren (2to3 fixer)": [
      [
        111,
        "to3fixer-paren"
      ]
    ],
    "print (2to3 fixer)": [
      [
        111,
        "to3fixer-print"
      ]
    ],
    "raise (2to3 fixer)": [
      [
        111,
        "to3fixer-raise"
      ]
    ],
    "raw_input (2to3 fixer)": [
      [
        111,
        "to3fixer-raw_input"
      ]
    ],
    "reduce (2to3 fixer)": [
      [
        111,
        "to3fixer-reduce"
      ]
    ],
    "reload (2to3 fixer)": [
      [
        111,
        "to3fixer-reload"
      ]
    ],
    "renames (2to3 fixer)": [
      [
        111,
        "to3fixer-renames"
      ]
    ],
    "repr (2to3 fixer)": [
      [
        111,
        "to3fixer-repr"
      ]
    ],
    "set_literal (2to3 fixer)": [
      [
        111,
        "to3fixer-set_literal"
      ]
    ],
    "standarderror (2to3 fixer)": [
      [
        111,
        "to3fixer-standarderror"
      ]
    ],
    "sys_exc (2to3 fixer)": [
      [
        111,
        "to3fixer-sys_exc"
      ]
    ],
    "throw (2to3 fixer)": [
      [
        111,
        "to3fixer-throw"
      ]
    ],
    "tuple_params (2to3 fixer)": [
      [
        111,
        "to3fixer-tuple_params"
      ]
    ],
    "types (2to3 fixer)": [
      [
        111,
        "to3fixer-types"
      ]
    ],
    "unicode (2to3 fixer)": [
      [
        111,
        "to3fixer-unicode"
      ]
    ],
    "urllib (2to3 fixer)": [
      [
        111,
        "to3fixer-urllib"
      ]
    ],
    "ws_comma (2to3 fixer)": [
      [
        111,
        "to3fixer-ws_comma"
      ]
    ],
    "xrange (2to3 fixer)": [
      [
        111,
        "to3fixer-xrange"
      ]
    ],
    "xreadlines (2to3 fixer)": [
      [
        111,
        "to3fixer-xreadlines"
      ]
    ],
    "zip (2to3 fixer)": [
      [
        111,
        "to3fixer-zip"
      ]
    ],
    "pep 227": [
      [
        112,
        "index-0"
      ],
      [
        462,
        "index-2"
      ],
      [
        463,
        "index-16"
      ]
    ],
    "pep 236": [
      [
        112,
        "index-11"
      ],
      [
        435,
        "index-42"
      ],
      [
        462,
        "index-0"
      ],
      [
        462,
        "index-1"
      ],
      [
        462,
        "index-3"
      ]
    ],
    "pep 255": [
      [
        112,
        "index-1"
      ],
      [
        429,
        "index-26"
      ],
      [
        463,
        "index-8"
      ],
      [
        463,
        "index-9"
      ],
      [
        464,
        "index-1"
      ],
      [
        464,
        "index-2"
      ]
    ],
    "pep 3105": [
      [
        112,
        "index-5"
      ],
      [
        467,
        "index-10"
      ],
      [
        469,
        "index-0"
      ]
    ],
    "pep 3112": [
      [
        112,
        "index-6"
      ],
      [
        467,
        "index-12"
      ]
    ],
    "pep 328": [
      [
        112,
        "index-3"
      ],
      [
        224,
        "index-15"
      ],
      [
        249,
        "index-3"
      ],
      [
        431,
        "index-24"
      ],
      [
        465,
        "index-10"
      ],
      [
        465,
        "index-17"
      ],
      [
        466,
        "index-5"
      ],
      [
        466,
        "index-6"
      ],
      [
        469,
        "index-16"
      ],
      [
        475,
        "index-36"
      ]
    ],
    "pep 479": [
      [
        112,
        "index-7"
      ],
      [
        212,
        "index-6"
      ],
      [
        212,
        "index-7"
      ],
      [
        477,
        "index-17"
      ],
      [
        477,
        "index-18"
      ],
      [
        479,
        "index-37"
      ],
      [
        482,
        "index-221"
      ],
      [
        482,
        "index-229"
      ],
      [
        482,
        "index-232"
      ],
      [
        482,
        "index-254"
      ],
      [
        482,
        "index-275"
      ],
      [
        482,
        "index-289"
      ]
    ],
    "pep 563": [
      [
        112,
        "index-8"
      ],
      [
        112,
        "index-9"
      ],
      [
        385,
        "index-57"
      ],
      [
        385,
        "index-60"
      ],
      [
        426,
        "index-39"
      ],
      [
        435,
        "index-41"
      ],
      [
        472,
        "index-20"
      ],
      [
        479,
        "index-2"
      ],
      [
        482,
        "index-100"
      ],
      [
        482,
        "index-133"
      ]
    ],
    "pep 649": [
      [
        112,
        "index-10"
      ],
      [
        428,
        "index-11"
      ]
    ],
    "_feature (class in __future__)": [
      [
        112,
        "future__._Feature"
      ]
    ],
    "compiler_flag (__future__._feature attribute)": [
      [
        112,
        "future__._Feature.compiler_flag"
      ]
    ],
    "getmandatoryrelease() (__future__._feature method)": [
      [
        112,
        "future__._Feature.getMandatoryRelease"
      ]
    ],
    "getoptionalrelease() (__future__._feature method)": [
      [
        112,
        "future__._Feature.getOptionalRelease"
      ]
    ],
    "locktype (in module _thread)": [
      [
        114,
        "thread.LockType"
      ]
    ],
    "posix": [
      [
        114,
        "index-1"
      ],
      [
        305,
        "module-posix"
      ],
      [
        360,
        "index-0"
      ]
    ],
    "timeout_max (in module _thread)": [
      [
        114,
        "thread.TIMEOUT_MAX"
      ]
    ],
    "acquire() (_thread.lock method)": [
      [
        114,
        "thread.lock.acquire"
      ]
    ],
    "allocate_lock() (in module _thread)": [
      [
        114,
        "thread.allocate_lock"
      ]
    ],
    "binary semaphores": [
      [
        114,
        "index-0"
      ]
    ],
    "error": [
      [
        114,
        "thread.error"
      ],
      [
        140,
        "audioop.error"
      ],
      [
        145,
        "binascii.Error"
      ],
      [
        166,
        "configparser.Error"
      ],
      [
        170,
        "copy.Error"
      ],
      [
        174,
        "csv.Error"
      ],
      [
        176,
        "curses.error"
      ],
      [
        183,
        "dbm.dumb.error"
      ],
      [
        183,
        "dbm.error"
      ],
      [
        183,
        "dbm.gnu.error"
      ],
      [
        183,
        "dbm.ndbm.error"
      ],
      [
        227,
        "getopt.error"
      ],
      [
        265,
        "locale.Error"
      ],
      [
        270,
        "mailbox.Error"
      ],
      [
        286,
        "nis.error"
      ],
      [
        292,
        "os.error"
      ],
      [
        313,
        "xml.parsers.expat.error"
      ],
      [
        318,
        "re.error"
      ],
      [
        321,
        "resource.error"
      ],
      [
        327,
        "select.error"
      ],
      [
        331,
        "shutil.Error"
      ],
      [
        336,
        "socket.error"
      ],
      [
        339,
        "sqlite3.Error"
      ],
      [
        346,
        "struct.error"
      ],
      [
        348,
        "sunau.Error"
      ],
      [
        396,
        "uu.Error"
      ],
      [
        400,
        "wave.Error"
      ],
      [
        402,
        "webbrowser.Error"
      ],
      [
        407,
        "xdrlib.Error"
      ],
      [
        423,
        "zlib.error"
      ]
    ],
    "exit() (in module _thread)": [
      [
        114,
        "thread.exit"
      ]
    ],
    "get_ident() (in module _thread)": [
      [
        114,
        "thread.get_ident"
      ]
    ],
    "get_native_id() (in module _thread)": [
      [
        114,
        "thread.get_native_id"
      ]
    ],
    "interrupt_main() (in module _thread)": [
      [
        114,
        "thread.interrupt_main"
      ]
    ],
    "light-weight processes": [
      [
        114,
        "index-0"
      ]
    ],
    "locked() (_thread.lock method)": [
      [
        114,
        "thread.lock.locked"
      ]
    ],
    "processes, light-weight": [
      [
        114,
        "index-0"
      ]
    ],
    "pthreads": [
      [
        114,
        "index-1"
      ]
    ],
    "release() (_thread.lock method)": [
      [
        114,
        "thread.lock.release"
      ]
    ],
    "semaphores, binary": [
      [
        114,
        "index-0"
      ]
    ],
    "stack_size() (in module _thread)": [
      [
        114,
        "thread.stack_size"
      ]
    ],
    "start_new_thread() (in module _thread)": [
      [
        114,
        "thread.start_new_thread"
      ]
    ],
    "threads": [
      [
        114,
        "index-1"
      ]
    ],
    "abc (class in abc)": [
      [
        115,
        "abc.ABC"
      ]
    ],
    "abcmeta (class in abc)": [
      [
        115,
        "abc.ABCMeta"
      ]
    ],
    "pep 3141": [
      [
        115,
        "index-1"
      ],
      [
        288,
        "index-0"
      ],
      [
        467,
        "index-19"
      ]
    ],
    "__subclasshook__() (abc.abcmeta method)": [
      [
        115,
        "abc.ABCMeta.__subclasshook__"
      ]
    ],
    "abc": [
      [
        115,
        "module-abc"
      ]
    ],
    "abstractclassmethod() (in module abc)": [
      [
        115,
        "abc.abstractclassmethod"
      ]
    ],
    "abstractmethod() (in module abc)": [
      [
        115,
        "abc.abstractmethod"
      ]
    ],
    "abstractproperty() (in module abc)": [
      [
        115,
        "abc.abstractproperty"
      ]
    ],
    "abstractstaticmethod() (in module abc)": [
      [
        115,
        "abc.abstractstaticmethod"
      ]
    ],
    "get_cache_token() (in module abc)": [
      [
        115,
        "abc.get_cache_token"
      ]
    ],
    "register() (abc.abcmeta method)": [
      [
        115,
        "abc.ABCMeta.register"
      ]
    ],
    "update_abstractmethods() (in module abc)": [
      [
        115,
        "abc.update_abstractmethods"
      ]
    ],
    "a-law": [
      [
        116,
        "index-2"
      ],
      [
        140,
        "index-1"
      ],
      [
        335,
        "index-0"
      ]
    ],
    "aiff": [
      [
        116,
        "index-0"
      ],
      [
        152,
        "index-0"
      ]
    ],
    "aiff-c": [
      [
        116,
        "index-0"
      ],
      [
        152,
        "index-0"
      ]
    ],
    "audio interchange file format": [
      [
        116,
        "index-0"
      ],
      [
        152,
        "index-0"
      ]
    ],
    "g.722": [
      [
        116,
        "index-2"
      ]
    ],
    "pep 594#aifc": [
      [
        116,
        "index-1"
      ]
    ],
    "aifc": [
      [
        116,
        "module-aifc"
      ]
    ],
    "aifc() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.aifc"
      ]
    ],
    "aiff() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.aiff"
      ]
    ],
    "close() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.close"
      ]
    ],
    "getcompname() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.getcompname"
      ]
    ],
    "getcomptype() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.getcomptype"
      ]
    ],
    "getframerate() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.getframerate"
      ]
    ],
    "getmark() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.getmark"
      ]
    ],
    "getmarkers() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.getmarkers"
      ]
    ],
    "getnchannels() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.getnchannels"
      ]
    ],
    "getnframes() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.getnframes"
      ]
    ],
    "getparams() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.getparams"
      ]
    ],
    "getsampwidth() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.getsampwidth"
      ]
    ],
    "open() (in module aifc)": [
      [
        116,
        "aifc.open"
      ]
    ],
    "readframes() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.readframes"
      ]
    ],
    "rewind() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.rewind"
      ]
    ],
    "setcomptype() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.setcomptype"
      ]
    ],
    "setframerate() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.setframerate"
      ]
    ],
    "setmark() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.setmark"
      ]
    ],
    "setnchannels() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.setnchannels"
      ]
    ],
    "setnframes() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.setnframes"
      ]
    ],
    "setparams() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.setparams"
      ]
    ],
    "setpos() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.setpos"
      ]
    ],
    "setsampwidth() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.setsampwidth"
      ]
    ],
    "tell() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.tell"
      ]
    ],
    "u-law": [
      [
        116,
        "index-2"
      ],
      [
        140,
        "index-1"
      ],
      [
        335,
        "index-0"
      ]
    ],
    "writeframes() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.writeframes"
      ]
    ],
    "writeframesraw() (aifc.aifc method)": [
      [
        116,
        "aifc.aifc.writeframesraw"
      ]
    ],
    "* (asterisk)": [
      [
        119,
        "index-1"
      ],
      [
        121,
        "index-1"
      ],
      [
        219,
        "index-2"
      ],
      [
        230,
        "index-1"
      ],
      [
        318,
        "index-3"
      ],
      [
        343,
        "index-13"
      ],
      [
        343,
        "index-36"
      ],
      [
        343,
        "index-46"
      ],
      [
        426,
        "index-32"
      ],
      [
        429,
        "index-49"
      ],
      [
        429,
        "index-65"
      ],
      [
        429,
        "index-93"
      ],
      [
        435,
        "index-37"
      ],
      [
        435,
        "index-6"
      ],
      [
        440,
        "index-3"
      ]
    ],
    "+ (plus)": [
      [
        119,
        "index-2"
      ],
      [
        192,
        "index-4"
      ],
      [
        318,
        "index-4"
      ],
      [
        343,
        "index-13"
      ],
      [
        343,
        "index-37"
      ],
      [
        343,
        "index-47"
      ],
      [
        344,
        "index-4"
      ],
      [
        429,
        "index-61"
      ],
      [
        429,
        "index-69"
      ]
    ],
    "? (question mark)": [
      [
        119,
        "index-0"
      ],
      [
        121,
        "index-0"
      ],
      [
        154,
        "index-0"
      ],
      [
        157,
        "index-1"
      ],
      [
        219,
        "index-2"
      ],
      [
        230,
        "index-1"
      ],
      [
        318,
        "index-5"
      ],
      [
        339,
        "index-6"
      ],
      [
        346,
        "index-2"
      ],
      [
        346,
        "index-3"
      ]
    ],
    "action (class in argparse)": [
      [
        119,
        "argparse.Action"
      ]
    ],
    "argumentdefaultshelpformatter (class in argparse)": [
      [
        119,
        "argparse.ArgumentDefaultsHelpFormatter"
      ]
    ],
    "argumenterror": [
      [
        119,
        "argparse.ArgumentError"
      ],
      [
        175,
        "ctypes.ArgumentError"
      ]
    ],
    "argumentparser (class in argparse)": [
      [
        119,
        "argparse.ArgumentParser"
      ]
    ],
    "argumenttypeerror": [
      [
        119,
        "argparse.ArgumentTypeError"
      ]
    ],
    "filetype (class in argparse)": [
      [
        119,
        "argparse.FileType"
      ]
    ],
    "metavartypehelpformatter (class in argparse)": [
      [
        119,
        "argparse.MetavarTypeHelpFormatter"
      ]
    ],
    "namespace (class in argparse)": [
      [
        119,
        "argparse.Namespace"
      ]
    ],
    "rawdescriptionhelpformatter (class in argparse)": [
      [
        119,
        "argparse.RawDescriptionHelpFormatter"
      ]
    ],
    "rawtexthelpformatter (class in argparse)": [
      [
        119,
        "argparse.RawTextHelpFormatter"
      ]
    ],
    "add_argument() (argparse.argumentparser method)": [
      [
        119,
        "argparse.ArgumentParser.add_argument"
      ]
    ],
    "add_argument_group() (argparse.argumentparser method)": [
      [
        119,
        "argparse.ArgumentParser.add_argument_group"
      ]
    ],
    "add_mutually_exclusive_group() (argparse.argumentparser method)": [
      [
        119,
        "argparse.ArgumentParser.add_mutually_exclusive_group"
      ]
    ],
    "add_subparsers() (argparse.argumentparser method)": [
      [
        119,
        "argparse.ArgumentParser.add_subparsers"
      ]
    ],
    "argparse": [
      [
        119,
        "module-argparse"
      ]
    ],
    "convert_arg_line_to_args() (argparse.argumentparser method)": [
      [
        119,
        "argparse.ArgumentParser.convert_arg_line_to_args"
      ]
    ],
    "error() (argparse.argumentparser method)": [
      [
        119,
        "argparse.ArgumentParser.error"
      ]
    ],
    "exit() (argparse.argumentparser method)": [
      [
        119,
        "argparse.ArgumentParser.exit"
      ]
    ],
    "format_help() (argparse.argumentparser method)": [
      [
        119,
        "argparse.ArgumentParser.format_help"
      ]
    ],
    "format_usage() (argparse.argumentparser method)": [
      [
        119,
        "argparse.ArgumentParser.format_usage"
      ]
    ],
    "get_default() (argparse.argumentparser method)": [
      [
        119,
        "argparse.ArgumentParser.get_default"
      ]
    ],
    "in argparse module": [
      [
        119,
        "index-0"
      ],
      [
        119,
        "index-1"
      ],
      [
        119,
        "index-2"
      ]
    ],
    "parse_args() (argparse.argumentparser method)": [
      [
        119,
        "argparse.ArgumentParser.parse_args"
      ]
    ],
    "parse_intermixed_args() (argparse.argumentparser method)": [
      [
        119,
        "argparse.ArgumentParser.parse_intermixed_args"
      ]
    ],
    "parse_known_args() (argparse.argumentparser method)": [
      [
        119,
        "argparse.ArgumentParser.parse_known_args"
      ]
    ],
    "parse_known_intermixed_args() (argparse.argumentparser method)": [
      [
        119,
        "argparse.ArgumentParser.parse_known_intermixed_args"
      ]
    ],
    "print_help() (argparse.argumentparser method)": [
      [
        119,
        "argparse.ArgumentParser.print_help"
      ]
    ],
    "print_usage() (argparse.argumentparser method)": [
      [
        119,
        "argparse.ArgumentParser.print_usage"
      ]
    ],
    "set_defaults() (argparse.argumentparser method)": [
      [
        119,
        "argparse.ArgumentParser.set_defaults"
      ]
    ],
    "append() (array.array method)": [
      [
        120,
        "array.array.append"
      ]
    ],
    "array": [
      [
        120,
        "module-array"
      ],
      [
        343,
        "index-40"
      ],
      [
        427,
        "index-23"
      ]
    ],
    "array (class in array)": [
      [
        120,
        "array.array"
      ]
    ],
    "arrays": [
      [
        120,
        "index-0"
      ]
    ],
    "buffer_info() (array.array method)": [
      [
        120,
        "array.array.buffer_info"
      ]
    ],
    "byteswap() (array.array method)": [
      [
        120,
        "array.array.byteswap"
      ]
    ],
    "count() (array.array method)": [
      [
        120,
        "array.array.count"
      ]
    ],
    "extend() (array.array method)": [
      [
        120,
        "array.array.extend"
      ]
    ],
    "frombytes() (array.array method)": [
      [
        120,
        "array.array.frombytes"
      ]
    ],
    "fromfile() (array.array method)": [
      [
        120,
        "array.array.fromfile"
      ]
    ],
    "fromlist() (array.array method)": [
      [
        120,
        "array.array.fromlist"
      ]
    ],
    "fromunicode() (array.array method)": [
      [
        120,
        "array.array.fromunicode"
      ]
    ],
    "index() (array.array method)": [
      [
        120,
        "array.array.index"
      ]
    ],
    "insert() (array.array method)": [
      [
        120,
        "array.array.insert"
      ]
    ],
    "itemsize (array.array attribute)": [
      [
        120,
        "array.array.itemsize"
      ]
    ],
    "pop() (array.array method)": [
      [
        120,
        "array.array.pop"
      ]
    ],
    "remove() (array.array method)": [
      [
        120,
        "array.array.remove"
      ]
    ],
    "reverse() (array.array method)": [
      [
        120,
        "array.array.reverse"
      ]
    ],
    "tobytes() (array.array method)": [
      [
        120,
        "array.array.tobytes"
      ]
    ],
    "tofile() (array.array method)": [
      [
        120,
        "array.array.tofile"
      ]
    ],
    "tolist() (array.array method)": [
      [
        120,
        "array.array.tolist"
      ]
    ],
    "tounicode() (array.array method)": [
      [
        120,
        "array.array.tounicode"
      ]
    ],
    "typecode (array.array attribute)": [
      [
        120,
        "array.array.typecode"
      ]
    ],
    "typecodes (in module array)": [
      [
        120,
        "array.typecodes"
      ]
    ],
    "--help": [
      [
        121,
        "cmdoption-ast-h"
      ],
      [
        149,
        "cmdoption-calendar-help"
      ],
      [
        190,
        "cmdoption-dis-h"
      ],
      [
        233,
        "cmdoption-gzip-h"
      ],
      [
        261,
        "cmdoption-json.tool-h"
      ],
      [
        339,
        "cmdoption-python-m-sqlite3-h-v-filename-sql-h"
      ],
      [
        366,
        "cmdoption-timeit-h"
      ],
      [
        377,
        "cmdoption-tokenize-h"
      ],
      [
        379,
        "cmdoption-trace-help"
      ],
      [
        397,
        "cmdoption-uuid-h"
      ],
      [
        420,
        "cmdoption-zipapp-h"
      ],
      [
        454,
        "cmdoption-help"
      ]
    ],
    "--include-attributes": [
      [
        121,
        "cmdoption-ast-a"
      ]
    ],
    "--indent": [
      [
        121,
        "cmdoption-ast-indent"
      ],
      [
        261,
        "cmdoption-json.tool-indent"
      ]
    ],
    "--mode": [
      [
        121,
        "cmdoption-ast-mode"
      ]
    ],
    "--no-type-comments": [
      [
        121,
        "cmdoption-ast-no-type-comments"
      ]
    ],
    "-a": [
      [
        121,
        "cmdoption-ast-a"
      ],
      [
        299,
        "cmdoption-pickletools-a"
      ]
    ],
    "-h": [
      [
        121,
        "cmdoption-ast-h"
      ],
      [
        149,
        "cmdoption-calendar-help"
      ],
      [
        190,
        "cmdoption-dis-h"
      ],
      [
        233,
        "cmdoption-gzip-h"
      ],
      [
        261,
        "cmdoption-json.tool-h"
      ],
      [
        339,
        "cmdoption-python-m-sqlite3-h-v-filename-sql-h"
      ],
      [
        366,
        "cmdoption-timeit-h"
      ],
      [
        377,
        "cmdoption-tokenize-h"
      ],
      [
        397,
        "cmdoption-uuid-h"
      ],
      [
        420,
        "cmdoption-zipapp-h"
      ],
      [
        454,
        "cmdoption-h"
      ]
    ],
    "-i": [
      [
        121,
        "cmdoption-ast-i"
      ],
      [
        162,
        "cmdoption-compileall-i"
      ],
      [
        454,
        "cmdoption-I"
      ],
      [
        454,
        "cmdoption-i"
      ]
    ],
    "-m": [
      [
        121,
        "cmdoption-ast-m"
      ],
      [
        149,
        "cmdoption-calendar-months"
      ],
      [
        299,
        "cmdoption-pickletools-m"
      ],
      [
        379,
        "cmdoption-trace-m"
      ],
      [
        420,
        "cmdoption-zipapp-m"
      ],
      [
        454,
        "cmdoption-m"
      ]
    ],
    "ast (class in ast)": [
      [
        121,
        "ast.AST"
      ]
    ],
    "add (class in ast)": [
      [
        121,
        "ast.Add"
      ]
    ],
    "and (class in ast)": [
      [
        121,
        "ast.And"
      ]
    ],
    "annassign (class in ast)": [
      [
        121,
        "ast.AnnAssign"
      ]
    ],
    "assert (class in ast)": [
      [
        121,
        "ast.Assert"
      ]
    ],
    "assign (class in ast)": [
      [
        121,
        "ast.Assign"
      ]
    ],
    "asyncfor (class in ast)": [
      [
        121,
        "ast.AsyncFor"
      ]
    ],
    "asyncfunctiondef (class in ast)": [
      [
        121,
        "ast.AsyncFunctionDef"
      ]
    ],
    "asyncwith (class in ast)": [
      [
        121,
        "ast.AsyncWith"
      ]
    ],
    "attribute (class in ast)": [
      [
        121,
        "ast.Attribute"
      ]
    ],
    "augassign (class in ast)": [
      [
        121,
        "ast.AugAssign"
      ]
    ],
    "await (class in ast)": [
      [
        121,
        "ast.Await"
      ]
    ],
    "binop (class in ast)": [
      [
        121,
        "ast.BinOp"
      ]
    ],
    "bitand (class in ast)": [
      [
        121,
        "ast.BitAnd"
      ]
    ],
    "bitor (class in ast)": [
      [
        121,
        "ast.BitOr"
      ]
    ],
    "bitxor (class in ast)": [
      [
        121,
        "ast.BitXor"
      ]
    ],
    "boolop (class in ast)": [
      [
        121,
        "ast.BoolOp"
      ]
    ],
    "break (class in ast)": [
      [
        121,
        "ast.Break"
      ]
    ],
    "call (class in ast)": [
      [
        121,
        "ast.Call"
      ]
    ],
    "classdef (class in ast)": [
      [
        121,
        "ast.ClassDef"
      ]
    ],
    "compare (class in ast)": [
      [
        121,
        "ast.Compare"
      ]
    ],
    "constant (class in ast)": [
      [
        121,
        "ast.Constant"
      ]
    ],
    "continue (class in ast)": [
      [
        121,
        "ast.Continue"
      ]
    ],
    "del (class in ast)": [
      [
        121,
        "ast.Del"
      ]
    ],
    "delete (class in ast)": [
      [
        121,
        "ast.Delete"
      ]
    ],
    "dict (class in ast)": [
      [
        121,
        "ast.Dict"
      ]
    ],
    "dictcomp (class in ast)": [
      [
        121,
        "ast.DictComp"
      ]
    ],
    "div (class in ast)": [
      [
        121,
        "ast.Div"
      ]
    ],
    "eq (class in ast)": [
      [
        121,
        "ast.Eq"
      ]
    ],
    "excepthandler (class in ast)": [
      [
        121,
        "ast.ExceptHandler"
      ]
    ],
    "expr (class in ast)": [
      [
        121,
        "ast.Expr"
      ]
    ],
    "expression (class in ast)": [
      [
        121,
        "ast.Expression"
      ]
    ],
    "floordiv (class in ast)": [
      [
        121,
        "ast.FloorDiv"
      ]
    ],
    "for (class in ast)": [
      [
        121,
        "ast.For"
      ]
    ],
    "formattedvalue (class in ast)": [
      [
        121,
        "ast.FormattedValue"
      ]
    ],
    "functiondef (class in ast)": [
      [
        121,
        "ast.FunctionDef"
      ]
    ],
    "functiontype (class in ast)": [
      [
        121,
        "ast.FunctionType"
      ]
    ],
    "generatorexp (class in ast)": [
      [
        121,
        "ast.GeneratorExp"
      ]
    ],
    "global (class in ast)": [
      [
        121,
        "ast.Global"
      ]
    ],
    "gt (class in ast)": [
      [
        121,
        "ast.Gt"
      ]
    ],
    "gte (class in ast)": [
      [
        121,
        "ast.GtE"
      ]
    ],
    "if (class in ast)": [
      [
        121,
        "ast.If"
      ]
    ],
    "ifexp (class in ast)": [
      [
        121,
        "ast.IfExp"
      ]
    ],
    "import (class in ast)": [
      [
        121,
        "ast.Import"
      ]
    ],
    "importfrom (class in ast)": [
      [
        121,
        "ast.ImportFrom"
      ]
    ],
    "in (class in ast)": [
      [
        121,
        "ast.In"
      ]
    ],
    "interactive (class in ast)": [
      [
        121,
        "ast.Interactive"
      ]
    ],
    "invert (class in ast)": [
      [
        121,
        "ast.Invert"
      ]
    ],
    "is (class in ast)": [
      [
        121,
        "ast.Is"
      ]
    ],
    "isnot (class in ast)": [
      [
        121,
        "ast.IsNot"
      ]
    ],
    "joinedstr (class in ast)": [
      [
        121,
        "ast.JoinedStr"
      ]
    ],
    "lshift (class in ast)": [
      [
        121,
        "ast.LShift"
      ]
    ],
    "lambda (class in ast)": [
      [
        121,
        "ast.Lambda"
      ]
    ],
    "list (class in ast)": [
      [
        121,
        "ast.List"
      ]
    ],
    "listcomp (class in ast)": [
      [
        121,
        "ast.ListComp"
      ]
    ],
    "load (class in ast)": [
      [
        121,
        "ast.Load"
      ]
    ],
    "lt (class in ast)": [
      [
        121,
        "ast.Lt"
      ]
    ],
    "lte (class in ast)": [
      [
        121,
        "ast.LtE"
      ]
    ],
    "matmult (class in ast)": [
      [
        121,
        "ast.MatMult"
      ]
    ],
    "match (class in ast)": [
      [
        121,
        "ast.Match"
      ]
    ],
    "matchas (class in ast)": [
      [
        121,
        "ast.MatchAs"
      ]
    ],
    "matchclass (class in ast)": [
      [
        121,
        "ast.MatchClass"
      ]
    ],
    "matchmapping (class in ast)": [
      [
        121,
        "ast.MatchMapping"
      ]
    ],
    "matchor (class in ast)": [
      [
        121,
        "ast.MatchOr"
      ]
    ],
    "matchsequence (class in ast)": [
      [
        121,
        "ast.MatchSequence"
      ]
    ],
    "matchsingleton (class in ast)": [
      [
        121,
        "ast.MatchSingleton"
      ]
    ],
    "matchstar (class in ast)": [
      [
        121,
        "ast.MatchStar"
      ]
    ],
    "matchvalue (class in ast)": [
      [
        121,
        "ast.MatchValue"
      ]
    ],
    "mod (class in ast)": [
      [
        121,
        "ast.Mod"
      ]
    ],
    "module (class in ast)": [
      [
        121,
        "ast.Module"
      ]
    ],
    "mult (class in ast)": [
      [
        121,
        "ast.Mult"
      ]
    ],
    "name (class in ast)": [
      [
        121,
        "ast.Name"
      ]
    ],
    "namedexpr (class in ast)": [
      [
        121,
        "ast.NamedExpr"
      ]
    ],
    "nodetransformer (class in ast)": [
      [
        121,
        "ast.NodeTransformer"
      ]
    ],
    "nodevisitor (class in ast)": [
      [
        121,
        "ast.NodeVisitor"
      ]
    ],
    "nonlocal (class in ast)": [
      [
        121,
        "ast.Nonlocal"
      ]
    ],
    "not (class in ast)": [
      [
        121,
        "ast.Not"
      ]
    ],
    "noteq (class in ast)": [
      [
        121,
        "ast.NotEq"
      ]
    ],
    "notin (class in ast)": [
      [
        121,
        "ast.NotIn"
      ]
    ],
    "or (class in ast)": [
      [
        121,
        "ast.Or"
      ]
    ],
    "paramspec (class in ast)": [
      [
        121,
        "ast.ParamSpec"
      ]
    ],
    "pass (class in ast)": [
      [
        121,
        "ast.Pass"
      ]
    ],
    "pow (class in ast)": [
      [
        121,
        "ast.Pow"
      ]
    ],
    "pycf_allow_top_level_await (in module ast)": [
      [
        121,
        "ast.PyCF_ALLOW_TOP_LEVEL_AWAIT"
      ]
    ],
    "pycf_only_ast (in module ast)": [
      [
        121,
        "ast.PyCF_ONLY_AST"
      ]
    ],
    "pycf_type_comments (in module ast)": [
      [
        121,
        "ast.PyCF_TYPE_COMMENTS"
      ]
    ],
    "rshift (class in ast)": [
      [
        121,
        "ast.RShift"
      ]
    ],
    "raise (class in ast)": [
      [
        121,
        "ast.Raise"
      ]
    ],
    "return (class in ast)": [
      [
        121,
        "ast.Return"
      ]
    ],
    "set (class in ast)": [
      [
        121,
        "ast.Set"
      ]
    ],
    "setcomp (class in ast)": [
      [
        121,
        "ast.SetComp"
      ]
    ],
    "slice (class in ast)": [
      [
        121,
        "ast.Slice"
      ]
    ],
    "starred (class in ast)": [
      [
        121,
        "ast.Starred"
      ]
    ],
    "store (class in ast)": [
      [
        121,
        "ast.Store"
      ]
    ],
    "sub (class in ast)": [
      [
        121,
        "ast.Sub"
      ]
    ],
    "subscript (class in ast)": [
      [
        121,
        "ast.Subscript"
      ]
    ],
    "try (class in ast)": [
      [
        121,
        "ast.Try"
      ]
    ],
    "trystar (class in ast)": [
      [
        121,
        "ast.TryStar"
      ]
    ],
    "tuple (class in ast)": [
      [
        121,
        "ast.Tuple"
      ]
    ],
    "typealias (class in ast)": [
      [
        121,
        "ast.TypeAlias"
      ]
    ],
    "typevar (class in ast)": [
      [
        121,
        "ast.TypeVar"
      ]
    ],
    "typevartuple (class in ast)": [
      [
        121,
        "ast.TypeVarTuple"
      ]
    ],
    "uadd (class in ast)": [
      [
        121,
        "ast.UAdd"
      ]
    ],
    "usub (class in ast)": [
      [
        121,
        "ast.USub"
      ]
    ],
    "unaryop (class in ast)": [
      [
        121,
        "ast.UnaryOp"
      ]
    ],
    "while (class in ast)": [
      [
        121,
        "ast.While"
      ]
    ],
    "with (class in ast)": [
      [
        121,
        "ast.With"
      ]
    ],
    "yield (class in ast)": [
      [
        121,
        "ast.Yield"
      ]
    ],
    "yieldfrom (class in ast)": [
      [
        121,
        "ast.YieldFrom"
      ]
    ],
    "_fields (ast.ast attribute)": [
      [
        121,
        "ast.AST._fields"
      ]
    ],
    "alias (class in ast)": [
      [
        121,
        "ast.alias"
      ]
    ],
    "arg (class in ast)": [
      [
        121,
        "ast.arg"
      ]
    ],
    "arguments (class in ast)": [
      [
        121,
        "ast.arguments"
      ]
    ],
    "ast": [
      [
        121,
        "module-ast"
      ]
    ],
    "ast command line option": [
      [
        121,
        "cmdoption-ast-a"
      ],
      [
        121,
        "cmdoption-ast-h"
      ],
      [
        121,
        "cmdoption-ast-i"
      ],
      [
        121,
        "cmdoption-ast-indent"
      ],
      [
        121,
        "cmdoption-ast-m"
      ],
      [
        121,
        "cmdoption-ast-mode"
      ],
      [
        121,
        "cmdoption-ast-no-type-comments"
      ]
    ],
    "col_offset (ast.ast attribute)": [
      [
        121,
        "ast.AST.col_offset"
      ]
    ],
    "comprehension (class in ast)": [
      [
        121,
        "ast.comprehension"
      ]
    ],
    "copy_location() (in module ast)": [
      [
        121,
        "ast.copy_location"
      ]
    ],
    "dump() (in module ast)": [
      [
        121,
        "ast.dump"
      ]
    ],
    "end_col_offset (ast.ast attribute)": [
      [
        121,
        "ast.AST.end_col_offset"
      ]
    ],
    "end_lineno (ast.ast attribute)": [
      [
        121,
        "ast.AST.end_lineno"
      ]
    ],
    "fix_missing_locations() (in module ast)": [
      [
        121,
        "ast.fix_missing_locations"
      ]
    ],
    "generic_visit() (ast.nodevisitor method)": [
      [
        121,
        "ast.NodeVisitor.generic_visit"
      ]
    ],
    "get_docstring() (in module ast)": [
      [
        121,
        "ast.get_docstring"
      ]
    ],
    "get_source_segment() (in module ast)": [
      [
        121,
        "ast.get_source_segment"
      ]
    ],
    "in ast grammar": [
      [
        121,
        "index-0"
      ],
      [
        121,
        "index-1"
      ]
    ],
    "increment_lineno() (in module ast)": [
      [
        121,
        "ast.increment_lineno"
      ]
    ],
    "iter_child_nodes() (in module ast)": [
      [
        121,
        "ast.iter_child_nodes"
      ]
    ],
    "iter_fields() (in module ast)": [
      [
        121,
        "ast.iter_fields"
      ]
    ],
    "keyword (class in ast)": [
      [
        121,
        "ast.keyword"
      ]
    ],
    "lineno (ast.ast attribute)": [
      [
        121,
        "ast.AST.lineno"
      ]
    ],
    "literal_eval() (in module ast)": [
      [
        121,
        "ast.literal_eval"
      ]
    ],
    "match_case (class in ast)": [
      [
        121,
        "ast.match_case"
      ]
    ],
    "parse() (in module ast)": [
      [
        121,
        "ast.parse"
      ]
    ],
    "type_comment (ast.assign attribute)": [
      [
        121,
        "ast.Assign.type_comment"
      ]
    ],
    "type_comment (ast.for attribute)": [
      [
        121,
        "ast.For.type_comment"
      ]
    ],
    "type_comment (ast.functiondef attribute)": [
      [
        121,
        "ast.FunctionDef.type_comment"
      ]
    ],
    "type_comment (ast.with attribute)": [
      [
        121,
        "ast.With.type_comment"
      ]
    ],
    "type_comment (ast.arg attribute)": [
      [
        121,
        "ast.arg.type_comment"
      ]
    ],
    "unparse() (in module ast)": [
      [
        121,
        "ast.unparse"
      ]
    ],
    "visit() (ast.nodevisitor method)": [
      [
        121,
        "ast.NodeVisitor.visit"
      ]
    ],
    "visit_constant() (ast.nodevisitor method)": [
      [
        121,
        "ast.NodeVisitor.visit_Constant"
      ]
    ],
    "walk() (in module ast)": [
      [
        121,
        "ast.walk"
      ]
    ],
    "withitem (class in ast)": [
      [
        121,
        "ast.withitem"
      ]
    ],
    "asyncio": [
      [
        122,
        "module-asyncio"
      ]
    ],
    "pythonasynciodebug": [
      [
        124,
        "index-0"
      ],
      [
        125,
        "index-5"
      ],
      [
        187,
        "index-5"
      ],
      [
        454,
        "envvar-PYTHONASYNCIODEBUG"
      ]
    ],
    "abstracteventloop (class in asyncio)": [
      [
        125,
        "asyncio.AbstractEventLoop"
      ]
    ],
    "handle (class in asyncio)": [
      [
        125,
        "asyncio.Handle"
      ]
    ],
    "pep 567": [
      [
        125,
        "index-0"
      ],
      [
        125,
        "index-1"
      ],
      [
        125,
        "index-2"
      ],
      [
        128,
        "index-0"
      ],
      [
        169,
        "index-0"
      ],
      [
        479,
        "index-28"
      ],
      [
        479,
        "index-30"
      ],
      [
        482,
        "index-224"
      ],
      [
        482,
        "index-228"
      ],
      [
        482,
        "index-233"
      ]
    ],
    "proactoreventloop (class in asyncio)": [
      [
        125,
        "asyncio.ProactorEventLoop"
      ]
    ],
    "rfc 8305": [
      [
        125,
        "index-3"
      ],
      [
        125,
        "index-4"
      ]
    ],
    "selectoreventloop (class in asyncio)": [
      [
        125,
        "asyncio.SelectorEventLoop"
      ]
    ],
    "server (class in asyncio)": [
      [
        125,
        "asyncio.Server"
      ]
    ],
    "timerhandle (class in asyncio)": [
      [
        125,
        "asyncio.TimerHandle"
      ]
    ],
    "add_reader() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.add_reader"
      ]
    ],
    "add_signal_handler() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.add_signal_handler"
      ]
    ],
    "add_writer() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.add_writer"
      ]
    ],
    "call_at() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.call_at"
      ]
    ],
    "call_exception_handler() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.call_exception_handler"
      ]
    ],
    "call_later() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.call_later"
      ]
    ],
    "call_soon() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.call_soon"
      ]
    ],
    "call_soon_threadsafe() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.call_soon_threadsafe"
      ]
    ],
    "cancel() (asyncio.handle method)": [
      [
        125,
        "asyncio.Handle.cancel"
      ]
    ],
    "cancelled() (asyncio.handle method)": [
      [
        125,
        "asyncio.Handle.cancelled"
      ]
    ],
    "close() (asyncio.server method)": [
      [
        125,
        "asyncio.Server.close"
      ]
    ],
    "close() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.close"
      ]
    ],
    "connect_accepted_socket() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.connect_accepted_socket"
      ]
    ],
    "connect_read_pipe() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.connect_read_pipe"
      ]
    ],
    "connect_write_pipe() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.connect_write_pipe"
      ]
    ],
    "create_connection() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.create_connection"
      ]
    ],
    "create_datagram_endpoint() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.create_datagram_endpoint"
      ]
    ],
    "create_future() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.create_future"
      ]
    ],
    "create_server() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.create_server"
      ]
    ],
    "create_task() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.create_task"
      ]
    ],
    "create_unix_connection() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.create_unix_connection"
      ]
    ],
    "create_unix_server() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.create_unix_server"
      ]
    ],
    "default_exception_handler() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.default_exception_handler"
      ]
    ],
    "get_context() (asyncio.handle method)": [
      [
        125,
        "asyncio.Handle.get_context"
      ]
    ],
    "get_debug() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.get_debug"
      ]
    ],
    "get_event_loop() (in module asyncio)": [
      [
        125,
        "asyncio.get_event_loop"
      ]
    ],
    "get_exception_handler() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.get_exception_handler"
      ]
    ],
    "get_loop() (asyncio.server method)": [
      [
        125,
        "asyncio.Server.get_loop"
      ]
    ],
    "get_running_loop() (in module asyncio)": [
      [
        125,
        "asyncio.get_running_loop"
      ]
    ],
    "get_task_factory() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.get_task_factory"
      ]
    ],
    "getaddrinfo() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.getaddrinfo"
      ]
    ],
    "getnameinfo() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.getnameinfo"
      ]
    ],
    "is_closed() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.is_closed"
      ]
    ],
    "is_running() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.is_running"
      ]
    ],
    "is_serving() (asyncio.server method)": [
      [
        125,
        "asyncio.Server.is_serving"
      ]
    ],
    "new_event_loop() (in module asyncio)": [
      [
        125,
        "asyncio.new_event_loop"
      ]
    ],
    "remove_reader() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.remove_reader"
      ]
    ],
    "remove_signal_handler() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.remove_signal_handler"
      ]
    ],
    "remove_writer() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.remove_writer"
      ]
    ],
    "run_forever() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.run_forever"
      ]
    ],
    "run_in_executor() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.run_in_executor"
      ]
    ],
    "run_until_complete() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.run_until_complete"
      ]
    ],
    "sendfile() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.sendfile"
      ]
    ],
    "serve_forever() (asyncio.server method)": [
      [
        125,
        "asyncio.Server.serve_forever"
      ]
    ],
    "set_debug() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.set_debug"
      ]
    ],
    "set_default_executor() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.set_default_executor"
      ]
    ],
    "set_event_loop() (in module asyncio)": [
      [
        125,
        "asyncio.set_event_loop"
      ]
    ],
    "set_exception_handler() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.set_exception_handler"
      ]
    ],
    "set_task_factory() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.set_task_factory"
      ]
    ],
    "shutdown_asyncgens() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.shutdown_asyncgens"
      ]
    ],
    "shutdown_default_executor() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.shutdown_default_executor"
      ]
    ],
    "slow_callback_duration (asyncio.loop attribute)": [
      [
        125,
        "asyncio.loop.slow_callback_duration"
      ]
    ],
    "sock_accept() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.sock_accept"
      ]
    ],
    "sock_connect() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.sock_connect"
      ]
    ],
    "sock_recv() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.sock_recv"
      ]
    ],
    "sock_recv_into() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.sock_recv_into"
      ]
    ],
    "sock_recvfrom() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.sock_recvfrom"
      ]
    ],
    "sock_recvfrom_into() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.sock_recvfrom_into"
      ]
    ],
    "sock_sendall() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.sock_sendall"
      ]
    ],
    "sock_sendfile() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.sock_sendfile"
      ]
    ],
    "sock_sendto() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.sock_sendto"
      ]
    ],
    "sockets (asyncio.server attribute)": [
      [
        125,
        "asyncio.Server.sockets"
      ]
    ],
    "start_serving() (asyncio.server method)": [
      [
        125,
        "asyncio.Server.start_serving"
      ]
    ],
    "start_tls() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.start_tls"
      ]
    ],
    "stop() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.stop"
      ]
    ],
    "subprocess_exec() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.subprocess_exec"
      ]
    ],
    "subprocess_shell() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.subprocess_shell"
      ]
    ],
    "time() (asyncio.loop method)": [
      [
        125,
        "asyncio.loop.time"
      ]
    ],
    "wait_closed() (asyncio.server method)": [
      [
        125,
        "asyncio.Server.wait_closed"
      ]
    ],
    "when() (asyncio.timerhandle method)": [
      [
        125,
        "asyncio.TimerHandle.when"
      ]
    ],
    "cancellederror": [
      [
        126,
        "asyncio.CancelledError"
      ],
      [
        165,
        "concurrent.futures.CancelledError"
      ]
    ],
    "incompletereaderror": [
      [
        126,
        "asyncio.IncompleteReadError"
      ]
    ],
    "invalidstateerror": [
      [
        126,
        "asyncio.InvalidStateError"
      ],
      [
        165,
        "concurrent.futures.InvalidStateError"
      ]
    ],
    "limitoverrunerror": [
      [
        126,
        "asyncio.LimitOverrunError"
      ]
    ],
    "sendfilenotavailableerror": [
      [
        126,
        "asyncio.SendfileNotAvailableError"
      ]
    ],
    "timeouterror": [
      [
        126,
        "asyncio.TimeoutError"
      ],
      [
        165,
        "concurrent.futures.TimeoutError"
      ],
      [
        212,
        "TimeoutError"
      ],
      [
        282,
        "multiprocessing.TimeoutError"
      ]
    ],
    "consumed (asyncio.limitoverrunerror attribute)": [
      [
        126,
        "asyncio.LimitOverrunError.consumed"
      ]
    ],
    "expected (asyncio.incompletereaderror attribute)": [
      [
        126,
        "asyncio.IncompleteReadError.expected"
      ]
    ],
    "partial (asyncio.incompletereaderror attribute)": [
      [
        126,
        "asyncio.IncompleteReadError.partial"
      ]
    ],
    "__init__() (asyncio.future method)": [
      [
        127,
        "asyncio.Future.__init__"
      ]
    ],
    "__init__() (asyncio.task method)": [
      [
        127,
        "asyncio.Task.__init__"
      ]
    ],
    "_enter_task() (in module asyncio)": [
      [
        127,
        "asyncio._enter_task"
      ]
    ],
    "_leave_task() (in module asyncio)": [
      [
        127,
        "asyncio._leave_task"
      ]
    ],
    "_register_task() (in module asyncio)": [
      [
        127,
        "asyncio._register_task"
      ]
    ],
    "_unregister_task() (in module asyncio)": [
      [
        127,
        "asyncio._unregister_task"
      ]
    ],
    "future (class in asyncio)": [
      [
        128,
        "asyncio.Future"
      ]
    ],
    "add_done_callback() (asyncio.future method)": [
      [
        128,
        "asyncio.Future.add_done_callback"
      ]
    ],
    "cancel() (asyncio.future method)": [
      [
        128,
        "asyncio.Future.cancel"
      ]
    ],
    "cancelled() (asyncio.future method)": [
      [
        128,
        "asyncio.Future.cancelled"
      ]
    ],
    "done() (asyncio.future method)": [
      [
        128,
        "asyncio.Future.done"
      ]
    ],
    "ensure_future() (in module asyncio)": [
      [
        128,
        "asyncio.ensure_future"
      ]
    ],
    "exception() (asyncio.future method)": [
      [
        128,
        "asyncio.Future.exception"
      ]
    ],
    "get_loop() (asyncio.future method)": [
      [
        128,
        "asyncio.Future.get_loop"
      ]
    ],
    "isfuture() (in module asyncio)": [
      [
        128,
        "asyncio.isfuture"
      ]
    ],
    "remove_done_callback() (asyncio.future method)": [
      [
        128,
        "asyncio.Future.remove_done_callback"
      ]
    ],
    "result() (asyncio.future method)": [
      [
        128,
        "asyncio.Future.result"
      ]
    ],
    "set_exception() (asyncio.future method)": [
      [
        128,
        "asyncio.Future.set_exception"
      ]
    ],
    "set_result() (asyncio.future method)": [
      [
        128,
        "asyncio.Future.set_result"
      ]
    ],
    "wrap_future() (in module asyncio)": [
      [
        128,
        "asyncio.wrap_future"
      ]
    ],
    "abstractchildwatcher (class in asyncio)": [
      [
        131,
        "asyncio.AbstractChildWatcher"
      ]
    ],
    "abstracteventlooppolicy (class in asyncio)": [
      [
        131,
        "asyncio.AbstractEventLoopPolicy"
      ]
    ],
    "defaulteventlooppolicy (class in asyncio)": [
      [
        131,
        "asyncio.DefaultEventLoopPolicy"
      ]
    ],
    "fastchildwatcher (class in asyncio)": [
      [
        131,
        "asyncio.FastChildWatcher"
      ]
    ],
    "multiloopchildwatcher (class in asyncio)": [
      [
        131,
        "asyncio.MultiLoopChildWatcher"
      ]
    ],
    "pidfdchildwatcher (class in asyncio)": [
      [
        131,
        "asyncio.PidfdChildWatcher"
      ]
    ],
    "safechildwatcher (class in asyncio)": [
      [
        131,
        "asyncio.SafeChildWatcher"
      ]
    ],
    "threadedchildwatcher (class in asyncio)": [
      [
        131,
        "asyncio.ThreadedChildWatcher"
      ]
    ],
    "windowsproactoreventlooppolicy (class in asyncio)": [
      [
        131,
        "asyncio.WindowsProactorEventLoopPolicy"
      ]
    ],
    "windowsselectoreventlooppolicy (class in asyncio)": [
      [
        131,
        "asyncio.WindowsSelectorEventLoopPolicy"
      ]
    ],
    "add_child_handler() (asyncio.abstractchildwatcher method)": [
      [
        131,
        "asyncio.AbstractChildWatcher.add_child_handler"
      ]
    ],
    "attach_loop() (asyncio.abstractchildwatcher method)": [
      [
        131,
        "asyncio.AbstractChildWatcher.attach_loop"
      ]
    ],
    "close() (asyncio.abstractchildwatcher method)": [
      [
        131,
        "asyncio.AbstractChildWatcher.close"
      ]
    ],
    "get_child_watcher() (asyncio.abstracteventlooppolicy method)": [
      [
        131,
        "asyncio.AbstractEventLoopPolicy.get_child_watcher"
      ]
    ],
    "get_child_watcher() (in module asyncio)": [
      [
        131,
        "asyncio.get_child_watcher"
      ]
    ],
    "get_event_loop() (asyncio.abstracteventlooppolicy method)": [
      [
        131,
        "asyncio.AbstractEventLoopPolicy.get_event_loop"
      ]
    ],
    "get_event_loop_policy() (in module asyncio)": [
      [
        131,
        "asyncio.get_event_loop_policy"
      ]
    ],
    "is_active() (asyncio.abstractchildwatcher method)": [
      [
        131,
        "asyncio.AbstractChildWatcher.is_active"
      ]
    ],
    "new_event_loop() (asyncio.abstracteventlooppolicy method)": [
      [
        131,
        "asyncio.AbstractEventLoopPolicy.new_event_loop"
      ]
    ],
    "remove_child_handler() (asyncio.abstractchildwatcher method)": [
      [
        131,
        "asyncio.AbstractChildWatcher.remove_child_handler"
      ]
    ],
    "set_child_watcher() (asyncio.abstracteventlooppolicy method)": [
      [
        131,
        "asyncio.AbstractEventLoopPolicy.set_child_watcher"
      ]
    ],
    "set_child_watcher() (in module asyncio)": [
      [
        131,
        "asyncio.set_child_watcher"
      ]
    ],
    "set_event_loop() (asyncio.abstracteventlooppolicy method)": [
      [
        131,
        "asyncio.AbstractEventLoopPolicy.set_event_loop"
      ]
    ],
    "set_event_loop_policy() (in module asyncio)": [
      [
        131,
        "asyncio.set_event_loop_policy"
      ]
    ],
    "baseprotocol (class in asyncio)": [
      [
        132,
        "asyncio.BaseProtocol"
      ]
    ],
    "basetransport (class in asyncio)": [
      [
        132,
        "asyncio.BaseTransport"
      ]
    ],
    "bufferedprotocol (class in asyncio)": [
      [
        132,
        "asyncio.BufferedProtocol"
      ]
    ],
    "datagramprotocol (class in asyncio)": [
      [
        132,
        "asyncio.DatagramProtocol"
      ]
    ],
    "datagramtransport (class in asyncio)": [
      [
        132,
        "asyncio.DatagramTransport"
      ]
    ],
    "protocol (class in asyncio)": [
      [
        132,
        "asyncio.Protocol"
      ]
    ],
    "readtransport (class in asyncio)": [
      [
        132,
        "asyncio.ReadTransport"
      ]
    ],
    "subprocessprotocol (class in asyncio)": [
      [
        132,
        "asyncio.SubprocessProtocol"
      ]
    ],
    "subprocesstransport (class in asyncio)": [
      [
        132,
        "asyncio.SubprocessTransport"
      ]
    ],
    "transport (class in asyncio)": [
      [
        132,
        "asyncio.Transport"
      ]
    ],
    "writetransport (class in asyncio)": [
      [
        132,
        "asyncio.WriteTransport"
      ]
    ],
    "abort() (asyncio.datagramtransport method)": [
      [
        132,
        "asyncio.DatagramTransport.abort"
      ]
    ],
    "abort() (asyncio.writetransport method)": [
      [
        132,
        "asyncio.WriteTransport.abort"
      ]
    ],
    "buffer_updated() (asyncio.bufferedprotocol method)": [
      [
        132,
        "asyncio.BufferedProtocol.buffer_updated"
      ]
    ],
    "can_write_eof() (asyncio.writetransport method)": [
      [
        132,
        "asyncio.WriteTransport.can_write_eof"
      ]
    ],
    "close() (asyncio.basetransport method)": [
      [
        132,
        "asyncio.BaseTransport.close"
      ]
    ],
    "close() (asyncio.subprocesstransport method)": [
      [
        132,
        "asyncio.SubprocessTransport.close"
      ]
    ],
    "connection_lost() (asyncio.baseprotocol method)": [
      [
        132,
        "asyncio.BaseProtocol.connection_lost"
      ]
    ],
    "connection_made() (asyncio.baseprotocol method)": [
      [
        132,
        "asyncio.BaseProtocol.connection_made"
      ]
    ],
    "data_received() (asyncio.protocol method)": [
      [
        132,
        "asyncio.Protocol.data_received"
      ]
    ],
    "datagram_received() (asyncio.datagramprotocol method)": [
      [
        132,
        "asyncio.DatagramProtocol.datagram_received"
      ]
    ],
    "eof_received() (asyncio.bufferedprotocol method)": [
      [
        132,
        "asyncio.BufferedProtocol.eof_received"
      ]
    ],
    "eof_received() (asyncio.protocol method)": [
      [
        132,
        "asyncio.Protocol.eof_received"
      ]
    ],
    "error_received() (asyncio.datagramprotocol method)": [
      [
        132,
        "asyncio.DatagramProtocol.error_received"
      ]
    ],
    "get_buffer() (asyncio.bufferedprotocol method)": [
      [
        132,
        "asyncio.BufferedProtocol.get_buffer"
      ]
    ],
    "get_extra_info() (asyncio.basetransport method)": [
      [
        132,
        "asyncio.BaseTransport.get_extra_info"
      ]
    ],
    "get_pid() (asyncio.subprocesstransport method)": [
      [
        132,
        "asyncio.SubprocessTransport.get_pid"
      ]
    ],
    "get_pipe_transport() (asyncio.subprocesstransport method)": [
      [
        132,
        "asyncio.SubprocessTransport.get_pipe_transport"
      ]
    ],
    "get_protocol() (asyncio.basetransport method)": [
      [
        132,
        "asyncio.BaseTransport.get_protocol"
      ]
    ],
    "get_returncode() (asyncio.subprocesstransport method)": [
      [
        132,
        "asyncio.SubprocessTransport.get_returncode"
      ]
    ],
    "get_write_buffer_limits() (asyncio.writetransport method)": [
      [
        132,
        "asyncio.WriteTransport.get_write_buffer_limits"
      ]
    ],
    "get_write_buffer_size() (asyncio.writetransport method)": [
      [
        132,
        "asyncio.WriteTransport.get_write_buffer_size"
      ]
    ],
    "is_closing() (asyncio.basetransport method)": [
      [
        132,
        "asyncio.BaseTransport.is_closing"
      ]
    ],
    "is_reading() (asyncio.readtransport method)": [
      [
        132,
        "asyncio.ReadTransport.is_reading"
      ]
    ],
    "kill() (asyncio.subprocesstransport method)": [
      [
        132,
        "asyncio.SubprocessTransport.kill"
      ]
    ],
    "pause_reading() (asyncio.readtransport method)": [
      [
        132,
        "asyncio.ReadTransport.pause_reading"
      ]
    ],
    "pause_writing() (asyncio.baseprotocol method)": [
      [
        132,
        "asyncio.BaseProtocol.pause_writing"
      ]
    ],
    "pipe_connection_lost() (asyncio.subprocessprotocol method)": [
      [
        132,
        "asyncio.SubprocessProtocol.pipe_connection_lost"
      ]
    ],
    "pipe_data_received() (asyncio.subprocessprotocol method)": [
      [
        132,
        "asyncio.SubprocessProtocol.pipe_data_received"
      ]
    ],
    "process_exited() (asyncio.subprocessprotocol method)": [
      [
        132,
        "asyncio.SubprocessProtocol.process_exited"
      ]
    ],
    "resume_reading() (asyncio.readtransport method)": [
      [
        132,
        "asyncio.ReadTransport.resume_reading"
      ]
    ],
    "resume_writing() (asyncio.baseprotocol method)": [
      [
        132,
        "asyncio.BaseProtocol.resume_writing"
      ]
    ],
    "send_signal() (asyncio.subprocesstransport method)": [
      [
        132,
        "asyncio.SubprocessTransport.send_signal"
      ]
    ],
    "sendto() (asyncio.datagramtransport method)": [
      [
        132,
        "asyncio.DatagramTransport.sendto"
      ]
    ],
    "set_protocol() (asyncio.basetransport method)": [
      [
        132,
        "asyncio.BaseTransport.set_protocol"
      ]
    ],
    "set_write_buffer_limits() (asyncio.writetransport method)": [
      [
        132,
        "asyncio.WriteTransport.set_write_buffer_limits"
      ]
    ],
    "terminate() (asyncio.subprocesstransport method)": [
      [
        132,
        "asyncio.SubprocessTransport.terminate"
      ]
    ],
    "write() (asyncio.writetransport method)": [
      [
        132,
        "asyncio.WriteTransport.write"
      ]
    ],
    "write_eof() (asyncio.writetransport method)": [
      [
        132,
        "asyncio.WriteTransport.write_eof"
      ]
    ],
    "writelines() (asyncio.writetransport method)": [
      [
        132,
        "asyncio.WriteTransport.writelines"
      ]
    ],
    "lifoqueue (class in asyncio)": [
      [
        133,
        "asyncio.LifoQueue"
      ]
    ],
    "priorityqueue (class in asyncio)": [
      [
        133,
        "asyncio.PriorityQueue"
      ]
    ],
    "queue (class in asyncio)": [
      [
        133,
        "asyncio.Queue"
      ]
    ],
    "queueempty": [
      [
        133,
        "asyncio.QueueEmpty"
      ]
    ],
    "queuefull": [
      [
        133,
        "asyncio.QueueFull"
      ]
    ],
    "empty() (asyncio.queue method)": [
      [
        133,
        "asyncio.Queue.empty"
      ]
    ],
    "full() (asyncio.queue method)": [
      [
        133,
        "asyncio.Queue.full"
      ]
    ],
    "get() (asyncio.queue method)": [
      [
        133,
        "asyncio.Queue.get"
      ]
    ],
    "get_nowait() (asyncio.queue method)": [
      [
        133,
        "asyncio.Queue.get_nowait"
      ]
    ],
    "join() (asyncio.queue method)": [
      [
        133,
        "asyncio.Queue.join"
      ]
    ],
    "maxsize (asyncio.queue attribute)": [
      [
        133,
        "asyncio.Queue.maxsize"
      ]
    ],
    "put() (asyncio.queue method)": [
      [
        133,
        "asyncio.Queue.put"
      ]
    ],
    "put_nowait() (asyncio.queue method)": [
      [
        133,
        "asyncio.Queue.put_nowait"
      ]
    ],
    "qsize() (asyncio.queue method)": [
      [
        133,
        "asyncio.Queue.qsize"
      ]
    ],
    "task_done() (asyncio.queue method)": [
      [
        133,
        "asyncio.Queue.task_done"
      ]
    ],
    "runner (class in asyncio)": [
      [
        134,
        "asyncio.Runner"
      ]
    ],
    "close() (asyncio.runner method)": [
      [
        134,
        "asyncio.Runner.close"
      ]
    ],
    "get_loop() (asyncio.runner method)": [
      [
        134,
        "asyncio.Runner.get_loop"
      ]
    ],
    "run() (asyncio.runner method)": [
      [
        134,
        "asyncio.Runner.run"
      ]
    ],
    "run() (in module asyncio)": [
      [
        134,
        "asyncio.run"
      ]
    ],
    "streamreader (class in asyncio)": [
      [
        135,
        "asyncio.StreamReader"
      ]
    ],
    "streamwriter (class in asyncio)": [
      [
        135,
        "asyncio.StreamWriter"
      ]
    ],
    "at_eof() (asyncio.streamreader method)": [
      [
        135,
        "asyncio.StreamReader.at_eof"
      ]
    ],
    "can_write_eof() (asyncio.streamwriter method)": [
      [
        135,
        "asyncio.StreamWriter.can_write_eof"
      ]
    ],
    "close() (asyncio.streamwriter method)": [
      [
        135,
        "asyncio.StreamWriter.close"
      ]
    ],
    "drain() (asyncio.streamwriter method)": [
      [
        135,
        "asyncio.StreamWriter.drain"
      ]
    ],
    "feed_eof() (asyncio.streamreader method)": [
      [
        135,
        "asyncio.StreamReader.feed_eof"
      ]
    ],
    "get_extra_info() (asyncio.streamwriter method)": [
      [
        135,
        "asyncio.StreamWriter.get_extra_info"
      ]
    ],
    "is_closing() (asyncio.streamwriter method)": [
      [
        135,
        "asyncio.StreamWriter.is_closing"
      ]
    ],
    "open_connection() (in module asyncio)": [
      [
        135,
        "asyncio.open_connection"
      ]
    ],
    "open_unix_connection() (in module asyncio)": [
      [
        135,
        "asyncio.open_unix_connection"
      ]
    ],
    "read() (asyncio.streamreader method)": [
      [
        135,
        "asyncio.StreamReader.read"
      ]
    ],
    "readexactly() (asyncio.streamreader method)": [
      [
        135,
        "asyncio.StreamReader.readexactly"
      ]
    ],
    "readline() (asyncio.streamreader method)": [
      [
        135,
        "asyncio.StreamReader.readline"
      ]
    ],
    "readuntil() (asyncio.streamreader method)": [
      [
        135,
        "asyncio.StreamReader.readuntil"
      ]
    ],
    "start_server() (in module asyncio)": [
      [
        135,
        "asyncio.start_server"
      ]
    ],
    "start_tls() (asyncio.streamwriter method)": [
      [
        135,
        "asyncio.StreamWriter.start_tls"
      ]
    ],
    "start_unix_server() (in module asyncio)": [
      [
        135,
        "asyncio.start_unix_server"
      ]
    ],
    "transport (asyncio.streamwriter attribute)": [
      [
        135,
        "asyncio.StreamWriter.transport"
      ]
    ],
    "wait_closed() (asyncio.streamwriter method)": [
      [
        135,
        "asyncio.StreamWriter.wait_closed"
      ]
    ],
    "write() (asyncio.streamwriter method)": [
      [
        135,
        "asyncio.StreamWriter.write"
      ]
    ],
    "write_eof() (asyncio.streamwriter method)": [
      [
        135,
        "asyncio.StreamWriter.write_eof"
      ]
    ],
    "writelines() (asyncio.streamwriter method)": [
      [
        135,
        "asyncio.StreamWriter.writelines"
      ]
    ],
    "asyncio.subprocess.devnull (built-in variable)": [
      [
        136,
        "asyncio.subprocess.DEVNULL"
      ]
    ],
    "asyncio.subprocess.pipe (built-in variable)": [
      [
        136,
        "asyncio.subprocess.PIPE"
      ]
    ],
    "asyncio.subprocess.process (built-in class)": [
      [
        136,
        "asyncio.subprocess.Process"
      ]
    ],
    "asyncio.subprocess.stdout (built-in variable)": [
      [
        136,
        "asyncio.subprocess.STDOUT"
      ]
    ],
    "communicate() (asyncio.subprocess.process method)": [
      [
        136,
        "asyncio.subprocess.Process.communicate"
      ]
    ],
    "create_subprocess_exec() (in module asyncio)": [
      [
        136,
        "asyncio.create_subprocess_exec"
      ]
    ],
    "create_subprocess_shell() (in module asyncio)": [
      [
        136,
        "asyncio.create_subprocess_shell"
      ]
    ],
    "kill() (asyncio.subprocess.process method)": [
      [
        136,
        "asyncio.subprocess.Process.kill"
      ]
    ],
    "pid (asyncio.subprocess.process attribute)": [
      [
        136,
        "asyncio.subprocess.Process.pid"
      ]
    ],
    "returncode (asyncio.subprocess.process attribute)": [
      [
        136,
        "asyncio.subprocess.Process.returncode"
      ]
    ],
    "send_signal() (asyncio.subprocess.process method)": [
      [
        136,
        "asyncio.subprocess.Process.send_signal"
      ]
    ],
    "stderr (asyncio.subprocess.process attribute)": [
      [
        136,
        "asyncio.subprocess.Process.stderr"
      ]
    ],
    "stdin (asyncio.subprocess.process attribute)": [
      [
        136,
        "asyncio.subprocess.Process.stdin"
      ]
    ],
    "stdout (asyncio.subprocess.process attribute)": [
      [
        136,
        "asyncio.subprocess.Process.stdout"
      ]
    ],
    "terminate() (asyncio.subprocess.process method)": [
      [
        136,
        "asyncio.subprocess.Process.terminate"
      ]
    ],
    "wait() (asyncio.subprocess.process method)": [
      [
        136,
        "asyncio.subprocess.Process.wait"
      ]
    ],
    "barrier (class in asyncio)": [
      [
        137,
        "asyncio.Barrier"
      ]
    ],
    "boundedsemaphore (class in asyncio)": [
      [
        137,
        "asyncio.BoundedSemaphore"
      ]
    ],
    "brokenbarriererror": [
      [
        137,
        "asyncio.BrokenBarrierError"
      ],
      [
        364,
        "threading.BrokenBarrierError"
      ]
    ],
    "condition (class in asyncio)": [
      [
        137,
        "asyncio.Condition"
      ]
    ],
    "event (class in asyncio)": [
      [
        137,
        "asyncio.Event"
      ]
    ],
    "lock (class in asyncio)": [
      [
        137,
        "asyncio.Lock"
      ]
    ],
    "semaphore (class in asyncio)": [
      [
        137,
        "asyncio.Semaphore"
      ]
    ],
    "abort() (asyncio.barrier method)": [
      [
        137,
        "asyncio.Barrier.abort"
      ]
    ],
    "acquire() (asyncio.condition method)": [
      [
        137,
        "asyncio.Condition.acquire"
      ]
    ],
    "acquire() (asyncio.lock method)": [
      [
        137,
        "asyncio.Lock.acquire"
      ]
    ],
    "acquire() (asyncio.semaphore method)": [
      [
        137,
        "asyncio.Semaphore.acquire"
      ]
    ],
    "broken (asyncio.barrier attribute)": [
      [
        137,
        "asyncio.Barrier.broken"
      ]
    ],
    "clear() (asyncio.event method)": [
      [
        137,
        "asyncio.Event.clear"
      ]
    ],
    "is_set() (asyncio.event method)": [
      [
        137,
        "asyncio.Event.is_set"
      ]
    ],
    "locked() (asyncio.condition method)": [
      [
        137,
        "asyncio.Condition.locked"
      ]
    ],
    "locked() (asyncio.lock method)": [
      [
        137,
        "asyncio.Lock.locked"
      ]
    ],
    "locked() (asyncio.semaphore method)": [
      [
        137,
        "asyncio.Semaphore.locked"
      ]
    ],
    "n_waiting (asyncio.barrier attribute)": [
      [
        137,
        "asyncio.Barrier.n_waiting"
      ]
    ],
    "notify() (asyncio.condition method)": [
      [
        137,
        "asyncio.Condition.notify"
      ]
    ],
    "notify_all() (asyncio.condition method)": [
      [
        137,
        "asyncio.Condition.notify_all"
      ]
    ],
    "parties (asyncio.barrier attribute)": [
      [
        137,
        "asyncio.Barrier.parties"
      ]
    ],
    "release() (asyncio.condition method)": [
      [
        137,
        "asyncio.Condition.release"
      ]
    ],
    "release() (asyncio.lock method)": [
      [
        137,
        "asyncio.Lock.release"
      ]
    ],
    "release() (asyncio.semaphore method)": [
      [
        137,
        "asyncio.Semaphore.release"
      ]
    ],
    "reset() (asyncio.barrier method)": [
      [
        137,
        "asyncio.Barrier.reset"
      ]
    ],
    "set() (asyncio.event method)": [
      [
        137,
        "asyncio.Event.set"
      ]
    ],
    "wait() (asyncio.barrier method)": [
      [
        137,
        "asyncio.Barrier.wait"
      ]
    ],
    "wait() (asyncio.condition method)": [
      [
        137,
        "asyncio.Condition.wait"
      ]
    ],
    "wait() (asyncio.event method)": [
      [
        137,
        "asyncio.Event.wait"
      ]
    ],
    "wait_for() (asyncio.condition method)": [
      [
        137,
        "asyncio.Condition.wait_for"
      ]
    ],
    "all_completed (in module asyncio)": [
      [
        138,
        "asyncio.ALL_COMPLETED"
      ]
    ],
    "first_completed (in module asyncio)": [
      [
        138,
        "asyncio.FIRST_COMPLETED"
      ]
    ],
    "first_exception (in module asyncio)": [
      [
        138,
        "asyncio.FIRST_EXCEPTION"
      ]
    ],
    "task (class in asyncio)": [
      [
        138,
        "asyncio.Task"
      ]
    ],
    "taskgroup (class in asyncio)": [
      [
        138,
        "asyncio.TaskGroup"
      ]
    ],
    "timeout (class in asyncio)": [
      [
        138,
        "asyncio.Timeout"
      ]
    ],
    "add_done_callback() (asyncio.task method)": [
      [
        138,
        "asyncio.Task.add_done_callback"
      ]
    ],
    "all_tasks() (in module asyncio)": [
      [
        138,
        "asyncio.all_tasks"
      ]
    ],
    "as_completed() (in module asyncio)": [
      [
        138,
        "asyncio.as_completed"
      ]
    ],
    "cancel() (asyncio.task method)": [
      [
        138,
        "asyncio.Task.cancel"
      ]
    ],
    "cancelled() (asyncio.task method)": [
      [
        138,
        "asyncio.Task.cancelled"
      ]
    ],
    "cancelling() (asyncio.task method)": [
      [
        138,
        "asyncio.Task.cancelling"
      ]
    ],
    "create_eager_task_factory() (in module asyncio)": [
      [
        138,
        "asyncio.create_eager_task_factory"
      ]
    ],
    "create_task() (asyncio.taskgroup method)": [
      [
        138,
        "asyncio.TaskGroup.create_task"
      ]
    ],
    "create_task() (in module asyncio)": [
      [
        138,
        "asyncio.create_task"
      ]
    ],
    "current_task() (in module asyncio)": [
      [
        138,
        "asyncio.current_task"
      ]
    ],
    "done() (asyncio.task method)": [
      [
        138,
        "asyncio.Task.done"
      ]
    ],
    "eager_task_factory() (in module asyncio)": [
      [
        138,
        "asyncio.eager_task_factory"
      ]
    ],
    "exception() (asyncio.task method)": [
      [
        138,
        "asyncio.Task.exception"
      ]
    ],
    "expired() (asyncio.timeout method)": [
      [
        138,
        "asyncio.Timeout.expired"
      ]
    ],
    "gather() (in module asyncio)": [
      [
        138,
        "asyncio.gather"
      ]
    ],
    "get_context() (asyncio.task method)": [
      [
        138,
        "asyncio.Task.get_context"
      ]
    ],
    "get_coro() (asyncio.task method)": [
      [
        138,
        "asyncio.Task.get_coro"
      ]
    ],
    "get_name() (asyncio.task method)": [
      [
        138,
        "asyncio.Task.get_name"
      ]
    ],
    "get_stack() (asyncio.task method)": [
      [
        138,
        "asyncio.Task.get_stack"
      ]
    ],
    "iscoroutine() (in module asyncio)": [
      [
        138,
        "asyncio.iscoroutine"
      ]
    ],
    "print_stack() (asyncio.task method)": [
      [
        138,
        "asyncio.Task.print_stack"
      ]
    ],
    "remove_done_callback() (asyncio.task method)": [
      [
        138,
        "asyncio.Task.remove_done_callback"
      ]
    ],
    "reschedule() (asyncio.timeout method)": [
      [
        138,
        "asyncio.Timeout.reschedule"
      ]
    ],
    "result() (asyncio.task method)": [
      [
        138,
        "asyncio.Task.result"
      ]
    ],
    "run_coroutine_threadsafe() (in module asyncio)": [
      [
        138,
        "asyncio.run_coroutine_threadsafe"
      ]
    ],
    "set_name() (asyncio.task method)": [
      [
        138,
        "asyncio.Task.set_name"
      ]
    ],
    "shield() (in module asyncio)": [
      [
        138,
        "asyncio.shield"
      ]
    ],
    "sleep() (in module asyncio)": [
      [
        138,
        "asyncio.sleep"
      ]
    ],
    "timeout() (in module asyncio)": [
      [
        138,
        "asyncio.timeout"
      ]
    ],
    "timeout_at() (in module asyncio)": [
      [
        138,
        "asyncio.timeout_at"
      ]
    ],
    "to_thread() (in module asyncio)": [
      [
        138,
        "asyncio.to_thread"
      ]
    ],
    "uncancel() (asyncio.task method)": [
      [
        138,
        "asyncio.Task.uncancel"
      ]
    ],
    "wait() (in module asyncio)": [
      [
        138,
        "asyncio.wait"
      ]
    ],
    "wait_for() (in module asyncio)": [
      [
        138,
        "asyncio.wait_for"
      ]
    ],
    "when() (asyncio.timeout method)": [
      [
        138,
        "asyncio.Timeout.when"
      ]
    ],
    "atexit": [
      [
        139,
        "module-atexit"
      ]
    ],
    "register() (in module atexit)": [
      [
        139,
        "atexit.register"
      ]
    ],
    "unregister() (in module atexit)": [
      [
        139,
        "atexit.unregister"
      ]
    ],
    "adpcm, intel/dvi": [
      [
        140,
        "index-1"
      ]
    ],
    "intel/dvi adpcm": [
      [
        140,
        "index-1"
      ]
    ],
    "pep 594#audioop": [
      [
        140,
        "index-0"
      ]
    ],
    "add() (in module audioop)": [
      [
        140,
        "audioop.add"
      ]
    ],
    "adpcm2lin() (in module audioop)": [
      [
        140,
        "audioop.adpcm2lin"
      ]
    ],
    "alaw2lin() (in module audioop)": [
      [
        140,
        "audioop.alaw2lin"
      ]
    ],
    "audioop": [
      [
        140,
        "module-audioop"
      ]
    ],
    "avg() (in module audioop)": [
      [
        140,
        "audioop.avg"
      ]
    ],
    "avgpp() (in module audioop)": [
      [
        140,
        "audioop.avgpp"
      ]
    ],
    "bias() (in module audioop)": [
      [
        140,
        "audioop.bias"
      ]
    ],
    "byteswap() (in module audioop)": [
      [
        140,
        "audioop.byteswap"
      ]
    ],
    "cross() (in module audioop)": [
      [
        140,
        "audioop.cross"
      ]
    ],
    "findfactor() (in module audioop)": [
      [
        140,
        "audioop.findfactor"
      ]
    ],
    "findfit() (in module audioop)": [
      [
        140,
        "audioop.findfit"
      ]
    ],
    "findmax() (in module audioop)": [
      [
        140,
        "audioop.findmax"
      ]
    ],
    "getsample() (in module audioop)": [
      [
        140,
        "audioop.getsample"
      ]
    ],
    "lin2adpcm() (in module audioop)": [
      [
        140,
        "audioop.lin2adpcm"
      ]
    ],
    "lin2alaw() (in module audioop)": [
      [
        140,
        "audioop.lin2alaw"
      ]
    ],
    "lin2lin() (in module audioop)": [
      [
        140,
        "audioop.lin2lin"
      ]
    ],
    "lin2ulaw() (in module audioop)": [
      [
        140,
        "audioop.lin2ulaw"
      ]
    ],
    "max() (in module audioop)": [
      [
        140,
        "audioop.max"
      ]
    ],
    "maxpp() (in module audioop)": [
      [
        140,
        "audioop.maxpp"
      ]
    ],
    "minmax() (in module audioop)": [
      [
        140,
        "audioop.minmax"
      ]
    ],
    "mul() (in module audioop)": [
      [
        140,
        "audioop.mul"
      ]
    ],
    "ratecv() (in module audioop)": [
      [
        140,
        "audioop.ratecv"
      ]
    ],
    "reverse() (in module audioop)": [
      [
        140,
        "audioop.reverse"
      ]
    ],
    "rms() (in module audioop)": [
      [
        140,
        "audioop.rms"
      ]
    ],
    "tomono() (in module audioop)": [
      [
        140,
        "audioop.tomono"
      ]
    ],
    "tostereo() (in module audioop)": [
      [
        140,
        "audioop.tostereo"
      ]
    ],
    "ulaw2lin() (in module audioop)": [
      [
        140,
        "audioop.ulaw2lin"
      ]
    ],
    "audit events": [
      [
        141,
        "index-0"
      ]
    ],
    "mime": [
      [
        142,
        "index-0"
      ],
      [
        150,
        "index-0"
      ],
      [
        275,
        "index-0"
      ],
      [
        275,
        "index-1"
      ],
      [
        316,
        "index-0"
      ]
    ],
    "rfc 1521": [
      [
        142,
        "index-12"
      ],
      [
        316,
        "index-1"
      ],
      [
        316,
        "index-3"
      ]
    ],
    "rfc 2045": [
      [
        142,
        "index-10"
      ],
      [
        142,
        "index-4"
      ],
      [
        142,
        "index-5"
      ],
      [
        142,
        "index-9"
      ],
      [
        193,
        "index-3"
      ],
      [
        195,
        "index-4"
      ],
      [
        195,
        "index-5"
      ],
      [
        195,
        "index-6"
      ],
      [
        195,
        "index-9"
      ],
      [
        201,
        "index-4"
      ],
      [
        202,
        "index-10"
      ],
      [
        202,
        "index-9"
      ],
      [
        204,
        "index-6"
      ],
      [
        204,
        "index-7"
      ],
      [
        204,
        "index-8"
      ]
    ],
    "rfc 4648": [
      [
        142,
        "index-1"
      ],
      [
        142,
        "index-11"
      ],
      [
        142,
        "index-2"
      ],
      [
        142,
        "index-3"
      ],
      [
        142,
        "index-6"
      ],
      [
        142,
        "index-7"
      ],
      [
        142,
        "index-8"
      ],
      [
        326,
        "index-1"
      ],
      [
        482,
        "index-92"
      ]
    ],
    "a85decode() (in module base64)": [
      [
        142,
        "base64.a85decode"
      ]
    ],
    "a85encode() (in module base64)": [
      [
        142,
        "base64.a85encode"
      ]
    ],
    "b16decode() (in module base64)": [
      [
        142,
        "base64.b16decode"
      ]
    ],
    "b16encode() (in module base64)": [
      [
        142,
        "base64.b16encode"
      ]
    ],
    "b32decode() (in module base64)": [
      [
        142,
        "base64.b32decode"
      ]
    ],
    "b32encode() (in module base64)": [
      [
        142,
        "base64.b32encode"
      ]
    ],
    "b32hexdecode() (in module base64)": [
      [
        142,
        "base64.b32hexdecode"
      ]
    ],
    "b32hexencode() (in module base64)": [
      [
        142,
        "base64.b32hexencode"
      ]
    ],
    "b64decode() (in module base64)": [
      [
        142,
        "base64.b64decode"
      ]
    ],
    "b64encode() (in module base64)": [
      [
        142,
        "base64.b64encode"
      ]
    ],
    "b85decode() (in module base64)": [
      [
        142,
        "base64.b85decode"
      ]
    ],
    "b85encode() (in module base64)": [
      [
        142,
        "base64.b85encode"
      ]
    ],
    "base64": [
      [
        142,
        "index-0"
      ],
      [
        142,
        "module-base64"
      ],
      [
        145,
        "index-0"
      ]
    ],
    "base64 encoding": [
      [
        142,
        "index-0"
      ]
    ],
    "decode() (in module base64)": [
      [
        142,
        "base64.decode"
      ]
    ],
    "decodebytes() (in module base64)": [
      [
        142,
        "base64.decodebytes"
      ]
    ],
    "encode() (in module base64)": [
      [
        142,
        "base64.encode"
      ]
    ],
    "encodebytes() (in module base64)": [
      [
        142,
        "base64.encodebytes"
      ]
    ],
    "encoding": [
      [
        142,
        "index-0"
      ],
      [
        316,
        "index-0"
      ]
    ],
    "standard_b64decode() (in module base64)": [
      [
        142,
        "base64.standard_b64decode"
      ]
    ],
    "standard_b64encode() (in module base64)": [
      [
        142,
        "base64.standard_b64encode"
      ]
    ],
    "urlsafe_b64decode() (in module base64)": [
      [
        142,
        "base64.urlsafe_b64decode"
      ]
    ],
    "urlsafe_b64encode() (in module base64)": [
      [
        142,
        "base64.urlsafe_b64encode"
      ]
    ],
    "bdb (class in bdb)": [
      [
        143,
        "bdb.Bdb"
      ]
    ],
    "bdbquit": [
      [
        143,
        "bdb.BdbQuit"
      ]
    ],
    "breakpoint (class in bdb)": [
      [
        143,
        "bdb.Breakpoint"
      ]
    ],
    "bdb": [
      [
        143,
        "module-bdb"
      ],
      [
        296,
        "index-1"
      ]
    ],
    "bpbynumber (bdb.breakpoint attribute)": [
      [
        143,
        "bdb.Breakpoint.bpbynumber"
      ]
    ],
    "bpformat() (bdb.breakpoint method)": [
      [
        143,
        "bdb.Breakpoint.bpformat"
      ]
    ],
    "bplist (bdb.breakpoint attribute)": [
      [
        143,
        "bdb.Breakpoint.bplist"
      ]
    ],
    "bpprint() (bdb.breakpoint method)": [
      [
        143,
        "bdb.Breakpoint.bpprint"
      ]
    ],
    "break_anywhere() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.break_anywhere"
      ]
    ],
    "break_here() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.break_here"
      ]
    ],
    "canonic() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.canonic"
      ]
    ],
    "checkfuncname() (in module bdb)": [
      [
        143,
        "bdb.checkfuncname"
      ]
    ],
    "clear_all_breaks() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.clear_all_breaks"
      ]
    ],
    "clear_all_file_breaks() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.clear_all_file_breaks"
      ]
    ],
    "clear_bpbynumber() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.clear_bpbynumber"
      ]
    ],
    "clear_break() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.clear_break"
      ]
    ],
    "cond (bdb.breakpoint attribute)": [
      [
        143,
        "bdb.Breakpoint.cond"
      ]
    ],
    "deleteme() (bdb.breakpoint method)": [
      [
        143,
        "bdb.Breakpoint.deleteMe"
      ]
    ],
    "disable() (bdb.breakpoint method)": [
      [
        143,
        "bdb.Breakpoint.disable"
      ]
    ],
    "dispatch_call() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.dispatch_call"
      ]
    ],
    "dispatch_exception() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.dispatch_exception"
      ]
    ],
    "dispatch_line() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.dispatch_line"
      ]
    ],
    "dispatch_return() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.dispatch_return"
      ]
    ],
    "do_clear() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.do_clear"
      ]
    ],
    "effective() (in module bdb)": [
      [
        143,
        "bdb.effective"
      ]
    ],
    "enable() (bdb.breakpoint method)": [
      [
        143,
        "bdb.Breakpoint.enable"
      ]
    ],
    "enabled (bdb.breakpoint attribute)": [
      [
        143,
        "bdb.Breakpoint.enabled"
      ]
    ],
    "file (bdb.breakpoint attribute)": [
      [
        143,
        "bdb.Breakpoint.file"
      ]
    ],
    "format_stack_entry() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.format_stack_entry"
      ]
    ],
    "funcname (bdb.breakpoint attribute)": [
      [
        143,
        "bdb.Breakpoint.funcname"
      ]
    ],
    "get_all_breaks() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.get_all_breaks"
      ]
    ],
    "get_bpbynumber() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.get_bpbynumber"
      ]
    ],
    "get_break() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.get_break"
      ]
    ],
    "get_breaks() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.get_breaks"
      ]
    ],
    "get_file_breaks() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.get_file_breaks"
      ]
    ],
    "get_stack() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.get_stack"
      ]
    ],
    "hits (bdb.breakpoint attribute)": [
      [
        143,
        "bdb.Breakpoint.hits"
      ]
    ],
    "ignore (bdb.breakpoint attribute)": [
      [
        143,
        "bdb.Breakpoint.ignore"
      ]
    ],
    "is_skipped_line() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.is_skipped_line"
      ]
    ],
    "line (bdb.breakpoint attribute)": [
      [
        143,
        "bdb.Breakpoint.line"
      ]
    ],
    "quitting (bdb.bdb attribute)": [
      [
        143,
        "index-0"
      ]
    ],
    "reset() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.reset"
      ]
    ],
    "run() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.run"
      ]
    ],
    "runcall() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.runcall"
      ]
    ],
    "runctx() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.runctx"
      ]
    ],
    "runeval() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.runeval"
      ]
    ],
    "set_break() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.set_break"
      ]
    ],
    "set_continue() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.set_continue"
      ]
    ],
    "set_next() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.set_next"
      ]
    ],
    "set_quit() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.set_quit"
      ]
    ],
    "set_return() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.set_return"
      ]
    ],
    "set_step() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.set_step"
      ]
    ],
    "set_trace() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.set_trace"
      ]
    ],
    "set_trace() (in module bdb)": [
      [
        143,
        "bdb.set_trace"
      ]
    ],
    "set_until() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.set_until"
      ]
    ],
    "stop_here() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.stop_here"
      ]
    ],
    "temporary (bdb.breakpoint attribute)": [
      [
        143,
        "bdb.Breakpoint.temporary"
      ]
    ],
    "trace_dispatch() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.trace_dispatch"
      ]
    ],
    "user_call() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.user_call"
      ]
    ],
    "user_exception() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.user_exception"
      ]
    ],
    "user_line() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.user_line"
      ]
    ],
    "user_return() (bdb.bdb method)": [
      [
        143,
        "bdb.Bdb.user_return"
      ]
    ],
    "incomplete": [
      [
        145,
        "binascii.Incomplete"
      ]
    ],
    "rfc 1522": [
      [
        145,
        "index-3"
      ],
      [
        316,
        "index-2"
      ],
      [
        316,
        "index-4"
      ]
    ],
    "rfc 3548": [
      [
        145,
        "index-1"
      ],
      [
        145,
        "index-2"
      ],
      [
        465,
        "index-18"
      ]
    ],
    "a2b_base64() (in module binascii)": [
      [
        145,
        "binascii.a2b_base64"
      ]
    ],
    "a2b_hex() (in module binascii)": [
      [
        145,
        "binascii.a2b_hex"
      ]
    ],
    "a2b_qp() (in module binascii)": [
      [
        145,
        "binascii.a2b_qp"
      ]
    ],
    "a2b_uu() (in module binascii)": [
      [
        145,
        "binascii.a2b_uu"
      ]
    ],
    "b2a_base64() (in module binascii)": [
      [
        145,
        "binascii.b2a_base64"
      ]
    ],
    "b2a_hex() (in module binascii)": [
      [
        145,
        "binascii.b2a_hex"
      ]
    ],
    "b2a_qp() (in module binascii)": [
      [
        145,
        "binascii.b2a_qp"
      ]
    ],
    "b2a_uu() (in module binascii)": [
      [
        145,
        "binascii.b2a_uu"
      ]
    ],
    "binascii": [
      [
        145,
        "module-binascii"
      ]
    ],
    "crc32() (in module binascii)": [
      [
        145,
        "binascii.crc32"
      ]
    ],
    "crc_hqx() (in module binascii)": [
      [
        145,
        "binascii.crc_hqx"
      ]
    ],
    "hexlify() (in module binascii)": [
      [
        145,
        "binascii.hexlify"
      ]
    ],
    "unhexlify() (in module binascii)": [
      [
        145,
        "binascii.unhexlify"
      ]
    ],
    "uu": [
      [
        145,
        "index-0"
      ],
      [
        396,
        "module-uu"
      ]
    ],
    "bisect": [
      [
        146,
        "module-bisect"
      ]
    ],
    "bisect() (in module bisect)": [
      [
        146,
        "bisect.bisect"
      ]
    ],
    "bisect_left() (in module bisect)": [
      [
        146,
        "bisect.bisect_left"
      ]
    ],
    "bisect_right() (in module bisect)": [
      [
        146,
        "bisect.bisect_right"
      ]
    ],
    "insort() (in module bisect)": [
      [
        146,
        "bisect.insort"
      ]
    ],
    "insort_left() (in module bisect)": [
      [
        146,
        "bisect.insort_left"
      ]
    ],
    "insort_right() (in module bisect)": [
      [
        146,
        "bisect.insort_right"
      ]
    ],
    "bz2compressor (class in bz2)": [
      [
        148,
        "bz2.BZ2Compressor"
      ]
    ],
    "bz2decompressor (class in bz2)": [
      [
        148,
        "bz2.BZ2Decompressor"
      ]
    ],
    "bz2file (class in bz2)": [
      [
        148,
        "bz2.BZ2File"
      ]
    ],
    "bz2": [
      [
        148,
        "module-bz2"
      ]
    ],
    "compress() (bz2.bz2compressor method)": [
      [
        148,
        "bz2.BZ2Compressor.compress"
      ]
    ],
    "compress() (in module bz2)": [
      [
        148,
        "bz2.compress"
      ]
    ],
    "decompress() (bz2.bz2decompressor method)": [
      [
        148,
        "bz2.BZ2Decompressor.decompress"
      ]
    ],
    "decompress() (in module bz2)": [
      [
        148,
        "bz2.decompress"
      ]
    ],
    "eof (bz2.bz2decompressor attribute)": [
      [
        148,
        "bz2.BZ2Decompressor.eof"
      ]
    ],
    "fileno() (bz2.bz2file method)": [
      [
        148,
        "bz2.BZ2File.fileno"
      ]
    ],
    "flush() (bz2.bz2compressor method)": [
      [
        148,
        "bz2.BZ2Compressor.flush"
      ]
    ],
    "needs_input (bz2.bz2decompressor attribute)": [
      [
        148,
        "bz2.BZ2Decompressor.needs_input"
      ]
    ],
    "open() (in module bz2)": [
      [
        148,
        "bz2.open"
      ]
    ],
    "peek() (bz2.bz2file method)": [
      [
        148,
        "bz2.BZ2File.peek"
      ]
    ],
    "read1() (bz2.bz2file method)": [
      [
        148,
        "bz2.BZ2File.read1"
      ]
    ],
    "readable() (bz2.bz2file method)": [
      [
        148,
        "bz2.BZ2File.readable"
      ]
    ],
    "readinto() (bz2.bz2file method)": [
      [
        148,
        "bz2.BZ2File.readinto"
      ]
    ],
    "seekable() (bz2.bz2file method)": [
      [
        148,
        "bz2.BZ2File.seekable"
      ]
    ],
    "unused_data (bz2.bz2decompressor attribute)": [
      [
        148,
        "bz2.BZ2Decompressor.unused_data"
      ]
    ],
    "writable() (bz2.bz2file method)": [
      [
        148,
        "bz2.BZ2File.writable"
      ]
    ],
    "--css": [
      [
        149,
        "cmdoption-calendar-css"
      ]
    ],
    "--encoding": [
      [
        149,
        "cmdoption-calendar-encoding"
      ]
    ],
    "--lines": [
      [
        149,
        "cmdoption-calendar-lines"
      ]
    ],
    "--locale": [
      [
        149,
        "cmdoption-calendar-locale"
      ]
    ],
    "--months": [
      [
        149,
        "cmdoption-calendar-months"
      ]
    ],
    "--spacing": [
      [
        149,
        "cmdoption-calendar-spacing"
      ]
    ],
    "--type": [
      [
        149,
        "cmdoption-calendar-type"
      ]
    ],
    "--width": [
      [
        149,
        "cmdoption-calendar-width"
      ]
    ],
    "-l": [
      [
        149,
        "cmdoption-calendar-locale"
      ],
      [
        149,
        "cmdoption-calendar-lines"
      ],
      [
        162,
        "cmdoption-compileall-l"
      ],
      [
        299,
        "cmdoption-pickletools-l"
      ],
      [
        357,
        "cmdoption-tarfile-l"
      ],
      [
        379,
        "cmdoption-trace-l"
      ],
      [
        421,
        "cmdoption-zipfile-l"
      ]
    ],
    "-c": [
      [
        149,
        "cmdoption-calendar-css"
      ],
      [
        357,
        "cmdoption-tarfile-c"
      ],
      [
        379,
        "cmdoption-trace-C"
      ],
      [
        379,
        "cmdoption-trace-c"
      ],
      [
        387,
        "cmdoption-unittest-c"
      ],
      [
        420,
        "cmdoption-zipapp-c"
      ],
      [
        421,
        "cmdoption-zipfile-c"
      ],
      [
        454,
        "cmdoption-c"
      ]
    ],
    "-e": [
      [
        149,
        "cmdoption-calendar-encoding"
      ],
      [
        162,
        "cmdoption-compileall-e"
      ],
      [
        357,
        "cmdoption-tarfile-e"
      ],
      [
        377,
        "cmdoption-tokenize-e"
      ],
      [
        421,
        "cmdoption-zipfile-e"
      ],
      [
        454,
        "cmdoption-E"
      ]
    ],
    "-s": [
      [
        149,
        "cmdoption-calendar-spacing"
      ],
      [
        162,
        "cmdoption-compileall-s"
      ],
      [
        366,
        "cmdoption-timeit-s"
      ],
      [
        379,
        "cmdoption-trace-s"
      ],
      [
        387,
        "cmdoption-unittest-discover-s"
      ],
      [
        454,
        "cmdoption-S"
      ],
      [
        454,
        "cmdoption-s"
      ]
    ],
    "-t": [
      [
        149,
        "cmdoption-calendar-type"
      ],
      [
        357,
        "cmdoption-tarfile-t"
      ],
      [
        379,
        "cmdoption-trace-T"
      ],
      [
        379,
        "cmdoption-trace-t"
      ],
      [
        387,
        "cmdoption-unittest-discover-t"
      ],
      [
        421,
        "cmdoption-zipfile-t"
      ]
    ],
    "-w": [
      [
        149,
        "cmdoption-calendar-width"
      ],
      [
        454,
        "cmdoption-W"
      ]
    ],
    "april (in module calendar)": [
      [
        149,
        "calendar.APRIL"
      ]
    ],
    "august (in module calendar)": [
      [
        149,
        "calendar.AUGUST"
      ]
    ],
    "calendar (class in calendar)": [
      [
        149,
        "calendar.Calendar"
      ]
    ],
    "december (in module calendar)": [
      [
        149,
        "calendar.DECEMBER"
      ]
    ],
    "day (class in calendar)": [
      [
        149,
        "calendar.Day"
      ]
    ],
    "february (in module calendar)": [
      [
        149,
        "calendar.FEBRUARY"
      ]
    ],
    "friday (in module calendar)": [
      [
        149,
        "calendar.FRIDAY"
      ]
    ],
    "htmlcalendar (class in calendar)": [
      [
        149,
        "calendar.HTMLCalendar"
      ]
    ],
    "illegalmontherror": [
      [
        149,
        "calendar.IllegalMonthError"
      ]
    ],
    "illegalweekdayerror": [
      [
        149,
        "calendar.IllegalWeekdayError"
      ]
    ],
    "january (in module calendar)": [
      [
        149,
        "calendar.JANUARY"
      ]
    ],
    "july (in module calendar)": [
      [
        149,
        "calendar.JULY"
      ]
    ],
    "june (in module calendar)": [
      [
        149,
        "calendar.JUNE"
      ]
    ],
    "localehtmlcalendar (class in calendar)": [
      [
        149,
        "calendar.LocaleHTMLCalendar"
      ]
    ],
    "localetextcalendar (class in calendar)": [
      [
        149,
        "calendar.LocaleTextCalendar"
      ]
    ],
    "march (in module calendar)": [
      [
        149,
        "calendar.MARCH"
      ]
    ],
    "may (in module calendar)": [
      [
        149,
        "calendar.MAY"
      ]
    ],
    "monday (in module calendar)": [
      [
        149,
        "calendar.MONDAY"
      ]
    ],
    "month (class in calendar)": [
      [
        149,
        "calendar.Month"
      ]
    ],
    "november (in module calendar)": [
      [
        149,
        "calendar.NOVEMBER"
      ]
    ],
    "october (in module calendar)": [
      [
        149,
        "calendar.OCTOBER"
      ]
    ],
    "saturday (in module calendar)": [
      [
        149,
        "calendar.SATURDAY"
      ]
    ],
    "september (in module calendar)": [
      [
        149,
        "calendar.SEPTEMBER"
      ]
    ],
    "sunday (in module calendar)": [
      [
        149,
        "calendar.SUNDAY"
      ]
    ],
    "thursday (in module calendar)": [
      [
        149,
        "calendar.THURSDAY"
      ]
    ],
    "tuesday (in module calendar)": [
      [
        149,
        "calendar.TUESDAY"
      ]
    ],
    "textcalendar (class in calendar)": [
      [
        149,
        "calendar.TextCalendar"
      ]
    ],
    "wednesday (in module calendar)": [
      [
        149,
        "calendar.WEDNESDAY"
      ]
    ],
    "calendar": [
      [
        149,
        "module-calendar"
      ]
    ],
    "calendar command line option": [
      [
        149,
        "cmdoption-calendar-arg-month"
      ],
      [
        149,
        "cmdoption-calendar-arg-year"
      ],
      [
        149,
        "cmdoption-calendar-css"
      ],
      [
        149,
        "cmdoption-calendar-encoding"
      ],
      [
        149,
        "cmdoption-calendar-help"
      ],
      [
        149,
        "cmdoption-calendar-lines"
      ],
      [
        149,
        "cmdoption-calendar-locale"
      ],
      [
        149,
        "cmdoption-calendar-months"
      ],
      [
        149,
        "cmdoption-calendar-spacing"
      ],
      [
        149,
        "cmdoption-calendar-type"
      ],
      [
        149,
        "cmdoption-calendar-width"
      ]
    ],
    "calendar() (in module calendar)": [
      [
        149,
        "calendar.calendar"
      ]
    ],
    "cssclass_month (calendar.htmlcalendar attribute)": [
      [
        149,
        "calendar.HTMLCalendar.cssclass_month"
      ]
    ],
    "cssclass_month_head (calendar.htmlcalendar attribute)": [
      [
        149,
        "calendar.HTMLCalendar.cssclass_month_head"
      ]
    ],
    "cssclass_noday (calendar.htmlcalendar attribute)": [
      [
        149,
        "calendar.HTMLCalendar.cssclass_noday"
      ]
    ],
    "cssclass_year (calendar.htmlcalendar attribute)": [
      [
        149,
        "calendar.HTMLCalendar.cssclass_year"
      ]
    ],
    "cssclass_year_head (calendar.htmlcalendar attribute)": [
      [
        149,
        "calendar.HTMLCalendar.cssclass_year_head"
      ]
    ],
    "cssclasses (calendar.htmlcalendar attribute)": [
      [
        149,
        "calendar.HTMLCalendar.cssclasses"
      ]
    ],
    "cssclasses_weekday_head (calendar.htmlcalendar attribute)": [
      [
        149,
        "calendar.HTMLCalendar.cssclasses_weekday_head"
      ]
    ],
    "day_abbr (in module calendar)": [
      [
        149,
        "calendar.day_abbr"
      ]
    ],
    "day_name (in module calendar)": [
      [
        149,
        "calendar.day_name"
      ]
    ],
    "firstweekday() (in module calendar)": [
      [
        149,
        "calendar.firstweekday"
      ]
    ],
    "formatmonth() (calendar.htmlcalendar method)": [
      [
        149,
        "calendar.HTMLCalendar.formatmonth"
      ]
    ],
    "formatmonth() (calendar.textcalendar method)": [
      [
        149,
        "calendar.TextCalendar.formatmonth"
      ]
    ],
    "formatmonthname() (calendar.htmlcalendar method)": [
      [
        149,
        "calendar.HTMLCalendar.formatmonthname"
      ]
    ],
    "formatyear() (calendar.htmlcalendar method)": [
      [
        149,
        "calendar.HTMLCalendar.formatyear"
      ]
    ],
    "formatyear() (calendar.textcalendar method)": [
      [
        149,
        "calendar.TextCalendar.formatyear"
      ]
    ],
    "formatyearpage() (calendar.htmlcalendar method)": [
      [
        149,
        "calendar.HTMLCalendar.formatyearpage"
      ]
    ],
    "isleap() (in module calendar)": [
      [
        149,
        "calendar.isleap"
      ]
    ],
    "itermonthdates() (calendar.calendar method)": [
      [
        149,
        "calendar.Calendar.itermonthdates"
      ]
    ],
    "itermonthdays() (calendar.calendar method)": [
      [
        149,
        "calendar.Calendar.itermonthdays"
      ]
    ],
    "itermonthdays2() (calendar.calendar method)": [
      [
        149,
        "calendar.Calendar.itermonthdays2"
      ]
    ],
    "itermonthdays3() (calendar.calendar method)": [
      [
        149,
        "calendar.Calendar.itermonthdays3"
      ]
    ],
    "itermonthdays4() (calendar.calendar method)": [
      [
        149,
        "calendar.Calendar.itermonthdays4"
      ]
    ],
    "iterweekdays() (calendar.calendar method)": [
      [
        149,
        "calendar.Calendar.iterweekdays"
      ]
    ],
    "leapdays() (in module calendar)": [
      [
        149,
        "calendar.leapdays"
      ]
    ],
    "month": [
      [
        149,
        "cmdoption-calendar-arg-month"
      ]
    ],
    "month (calendar.illegalmontherror attribute)": [
      [
        149,
        "calendar.IllegalMonthError.month"
      ]
    ],
    "month() (in module calendar)": [
      [
        149,
        "calendar.month"
      ]
    ],
    "month_abbr (in module calendar)": [
      [
        149,
        "calendar.month_abbr"
      ]
    ],
    "month_name (in module calendar)": [
      [
        149,
        "calendar.month_name"
      ]
    ],
    "monthcalendar() (in module calendar)": [
      [
        149,
        "calendar.monthcalendar"
      ]
    ],
    "monthdatescalendar() (calendar.calendar method)": [
      [
        149,
        "calendar.Calendar.monthdatescalendar"
      ]
    ],
    "monthdays2calendar() (calendar.calendar method)": [
      [
        149,
        "calendar.Calendar.monthdays2calendar"
      ]
    ],
    "monthdayscalendar() (calendar.calendar method)": [
      [
        149,
        "calendar.Calendar.monthdayscalendar"
      ]
    ],
    "monthrange() (in module calendar)": [
      [
        149,
        "calendar.monthrange"
      ]
    ],
    "prcal() (in module calendar)": [
      [
        149,
        "calendar.prcal"
      ]
    ],
    "prmonth() (calendar.textcalendar method)": [
      [
        149,
        "calendar.TextCalendar.prmonth"
      ]
    ],
    "prmonth() (in module calendar)": [
      [
        149,
        "calendar.prmonth"
      ]
    ],
    "pryear() (calendar.textcalendar method)": [
      [
        149,
        "calendar.TextCalendar.pryear"
      ]
    ],
    "setfirstweekday() (in module calendar)": [
      [
        149,
        "calendar.setfirstweekday"
      ]
    ],
    "timegm() (in module calendar)": [
      [
        149,
        "calendar.timegm"
      ]
    ],
    "weekday (calendar.illegalweekdayerror attribute)": [
      [
        149,
        "calendar.IllegalWeekdayError.weekday"
      ]
    ],
    "weekday() (in module calendar)": [
      [
        149,
        "calendar.weekday"
      ]
    ],
    "weekheader() (in module calendar)": [
      [
        149,
        "calendar.weekheader"
      ]
    ],
    "year": [
      [
        149,
        "cmdoption-calendar-arg-year"
      ]
    ],
    "yeardatescalendar() (calendar.calendar method)": [
      [
        149,
        "calendar.Calendar.yeardatescalendar"
      ]
    ],
    "yeardays2calendar() (calendar.calendar method)": [
      [
        149,
        "calendar.Calendar.yeardays2calendar"
      ]
    ],
    "yeardayscalendar() (calendar.calendar method)": [
      [
        149,
        "calendar.Calendar.yeardayscalendar"
      ]
    ],
    "cgi": [
      [
        150,
        "index-0"
      ],
      [
        150,
        "index-2"
      ],
      [
        150,
        "index-5"
      ],
      [
        150,
        "module-cgi"
      ],
      [
        151,
        "index-0"
      ]
    ],
    "common gateway interface": [
      [
        150,
        "index-0"
      ]
    ],
    "http": [
      [
        150,
        "index-0"
      ],
      [
        240,
        "index-0"
      ],
      [
        240,
        "module-http"
      ],
      [
        241,
        "index-0"
      ],
      [
        244,
        "index-0"
      ],
      [
        394,
        "index-10"
      ],
      [
        394,
        "index-9"
      ]
    ],
    "pep 594#cgi": [
      [
        150,
        "index-1"
      ]
    ],
    "url": [
      [
        150,
        "index-0"
      ],
      [
        244,
        "index-0"
      ],
      [
        393,
        "index-0"
      ],
      [
        395,
        "index-0"
      ]
    ],
    "www": [
      [
        150,
        "index-0"
      ],
      [
        244,
        "index-0"
      ],
      [
        255,
        "index-0"
      ],
      [
        393,
        "index-0"
      ],
      [
        395,
        "index-0"
      ]
    ],
    "debugging": [
      [
        150,
        "index-5"
      ],
      [
        296,
        "index-0"
      ],
      [
        435,
        "index-18"
      ]
    ],
    "getfirst() (cgi.fieldstorage method)": [
      [
        150,
        "cgi.FieldStorage.getfirst"
      ]
    ],
    "getlist() (cgi.fieldstorage method)": [
      [
        150,
        "cgi.FieldStorage.getlist"
      ]
    ],
    "headers": [
      [
        150,
        "index-0"
      ],
      [
        275,
        "index-1"
      ]
    ],
    "parse() (in module cgi)": [
      [
        150,
        "cgi.parse"
      ]
    ],
    "parse_header() (in module cgi)": [
      [
        150,
        "cgi.parse_header"
      ]
    ],
    "parse_multipart() (in module cgi)": [
      [
        150,
        "cgi.parse_multipart"
      ]
    ],
    "print_directory() (in module cgi)": [
      [
        150,
        "cgi.print_directory"
      ]
    ],
    "print_environ() (in module cgi)": [
      [
        150,
        "cgi.print_environ"
      ]
    ],
    "print_environ_usage() (in module cgi)": [
      [
        150,
        "cgi.print_environ_usage"
      ]
    ],
    "print_form() (in module cgi)": [
      [
        150,
        "cgi.print_form"
      ]
    ],
    "protocol": [
      [
        150,
        "index-0"
      ],
      [
        222,
        "index-0"
      ],
      [
        240,
        "index-0"
      ],
      [
        241,
        "index-0"
      ],
      [
        244,
        "index-0"
      ],
      [
        247,
        "index-0"
      ],
      [
        287,
        "index-0"
      ],
      [
        298,
        "index-5"
      ],
      [
        304,
        "index-0"
      ],
      [
        334,
        "index-0"
      ],
      [
        343,
        "index-18"
      ],
      [
        343,
        "index-54"
      ],
      [
        358,
        "index-0"
      ],
      [
        394,
        "index-10"
      ],
      [
        394,
        "index-9"
      ]
    ],
    "security": [
      [
        150,
        "index-2"
      ],
      [
        244,
        "index-3"
      ]
    ],
    "server": [
      [
        150,
        "index-0"
      ],
      [
        244,
        "index-0"
      ]
    ],
    "test() (in module cgi)": [
      [
        150,
        "cgi.test"
      ]
    ],
    "pep 594#cgitb": [
      [
        151,
        "index-1"
      ]
    ],
    "cgitb": [
      [
        151,
        "module-cgitb"
      ]
    ],
    "enable() (in module cgitb)": [
      [
        151,
        "cgitb.enable"
      ]
    ],
    "excepthook() (in module sys)": [
      [
        151,
        "index-2"
      ],
      [
        351,
        "sys.excepthook"
      ]
    ],
    "exceptions": [
      [
        151,
        "index-0"
      ]
    ],
    "handler() (in module cgitb)": [
      [
        151,
        "cgitb.handler"
      ]
    ],
    "html() (in module cgitb)": [
      [
        151,
        "cgitb.html"
      ]
    ],
    "in cgi scripts": [
      [
        151,
        "index-0"
      ]
    ],
    "text() (in module cgitb)": [
      [
        151,
        "cgitb.text"
      ]
    ],
    "tracebacks": [
      [
        151,
        "index-0"
      ]
    ],
    "chunk (class in chunk)": [
      [
        152,
        "chunk.Chunk"
      ]
    ],
    "pep 594#chunk": [
      [
        152,
        "index-1"
      ]
    ],
    "rmff": [
      [
        152,
        "index-0"
      ]
    ],
    "real media file format": [
      [
        152,
        "index-0"
      ]
    ],
    "chunk": [
      [
        152,
        "module-chunk"
      ]
    ],
    "close() (chunk.chunk method)": [
      [
        152,
        "chunk.Chunk.close"
      ]
    ],
    "getname() (chunk.chunk method)": [
      [
        152,
        "chunk.Chunk.getname"
      ]
    ],
    "getsize() (chunk.chunk method)": [
      [
        152,
        "chunk.Chunk.getsize"
      ]
    ],
    "isatty() (chunk.chunk method)": [
      [
        152,
        "chunk.Chunk.isatty"
      ]
    ],
    "read() (chunk.chunk method)": [
      [
        152,
        "chunk.Chunk.read"
      ]
    ],
    "seek() (chunk.chunk method)": [
      [
        152,
        "chunk.Chunk.seek"
      ]
    ],
    "skip() (chunk.chunk method)": [
      [
        152,
        "chunk.Chunk.skip"
      ]
    ],
    "tell() (chunk.chunk method)": [
      [
        152,
        "chunk.Chunk.tell"
      ]
    ],
    "pep 485": [
      [
        153,
        "index-0"
      ],
      [
        274,
        "index-0"
      ],
      [
        477,
        "index-19"
      ],
      [
        477,
        "index-20"
      ],
      [
        482,
        "index-296"
      ]
    ],
    "acos() (in module cmath)": [
      [
        153,
        "cmath.acos"
      ]
    ],
    "acosh() (in module cmath)": [
      [
        153,
        "cmath.acosh"
      ]
    ],
    "asin() (in module cmath)": [
      [
        153,
        "cmath.asin"
      ]
    ],
    "asinh() (in module cmath)": [
      [
        153,
        "cmath.asinh"
      ]
    ],
    "atan() (in module cmath)": [
      [
        153,
        "cmath.atan"
      ]
    ],
    "atanh() (in module cmath)": [
      [
        153,
        "cmath.atanh"
      ]
    ],
    "cmath": [
      [
        153,
        "module-cmath"
      ]
    ],
    "cos() (in module cmath)": [
      [
        153,
        "cmath.cos"
      ]
    ],
    "cosh() (in module cmath)": [
      [
        153,
        "cmath.cosh"
      ]
    ],
    "e (in module cmath)": [
      [
        153,
        "cmath.e"
      ]
    ],
    "exp() (in module cmath)": [
      [
        153,
        "cmath.exp"
      ]
    ],
    "inf (in module cmath)": [
      [
        153,
        "cmath.inf"
      ]
    ],
    "infj (in module cmath)": [
      [
        153,
        "cmath.infj"
      ]
    ],
    "isclose() (in module cmath)": [
      [
        153,
        "cmath.isclose"
      ]
    ],
    "isfinite() (in module cmath)": [
      [
        153,
        "cmath.isfinite"
      ]
    ],
    "isinf() (in module cmath)": [
      [
        153,
        "cmath.isinf"
      ]
    ],
    "isnan() (in module cmath)": [
      [
        153,
        "cmath.isnan"
      ]
    ],
    "log() (in module cmath)": [
      [
        153,
        "cmath.log"
      ]
    ],
    "log10() (in module cmath)": [
      [
        153,
        "cmath.log10"
      ]
    ],
    "math": [
      [
        153,
        "index-1"
      ],
      [
        274,
        "module-math"
      ],
      [
        343,
        "index-15"
      ]
    ],
    "nan (in module cmath)": [
      [
        153,
        "cmath.nan"
      ]
    ],
    "nanj (in module cmath)": [
      [
        153,
        "cmath.nanj"
      ]
    ],
    "phase() (in module cmath)": [
      [
        153,
        "cmath.phase"
      ]
    ],
    "pi (in module cmath)": [
      [
        153,
        "cmath.pi"
      ]
    ],
    "polar() (in module cmath)": [
      [
        153,
        "cmath.polar"
      ]
    ],
    "rect() (in module cmath)": [
      [
        153,
        "cmath.rect"
      ]
    ],
    "sin() (in module cmath)": [
      [
        153,
        "cmath.sin"
      ]
    ],
    "sinh() (in module cmath)": [
      [
        153,
        "cmath.sinh"
      ]
    ],
    "sqrt() (in module cmath)": [
      [
        153,
        "cmath.sqrt"
      ]
    ],
    "tan() (in module cmath)": [
      [
        153,
        "cmath.tan"
      ]
    ],
    "tanh() (in module cmath)": [
      [
        153,
        "cmath.tanh"
      ]
    ],
    "tau (in module cmath)": [
      [
        153,
        "cmath.tau"
      ]
    ],
    "! (exclamation)": [
      [
        154,
        "index-0"
      ],
      [
        177,
        "index-0"
      ],
      [
        219,
        "index-2"
      ],
      [
        230,
        "index-1"
      ],
      [
        344,
        "index-2"
      ],
      [
        346,
        "index-1"
      ],
      [
        434,
        "index-25"
      ]
    ],
    "cmd (class in cmd)": [
      [
        154,
        "cmd.Cmd"
      ]
    ],
    "cmd": [
      [
        154,
        "module-cmd"
      ],
      [
        296,
        "index-1"
      ]
    ],
    "cmdloop() (cmd.cmd method)": [
      [
        154,
        "cmd.Cmd.cmdloop"
      ]
    ],
    "cmdqueue (cmd.cmd attribute)": [
      [
        154,
        "cmd.Cmd.cmdqueue"
      ]
    ],
    "columnize() (cmd.cmd method)": [
      [
        154,
        "cmd.Cmd.columnize"
      ]
    ],
    "completedefault() (cmd.cmd method)": [
      [
        154,
        "cmd.Cmd.completedefault"
      ]
    ],
    "default() (cmd.cmd method)": [
      [
        154,
        "cmd.Cmd.default"
      ]
    ],
    "do_help() (cmd.cmd method)": [
      [
        154,
        "cmd.Cmd.do_help"
      ]
    ],
    "doc_header (cmd.cmd attribute)": [
      [
        154,
        "cmd.Cmd.doc_header"
      ]
    ],
    "emptyline() (cmd.cmd method)": [
      [
        154,
        "cmd.Cmd.emptyline"
      ]
    ],
    "identchars (cmd.cmd attribute)": [
      [
        154,
        "cmd.Cmd.identchars"
      ]
    ],
    "in a command interpreter": [
      [
        154,
        "index-0"
      ]
    ],
    "intro (cmd.cmd attribute)": [
      [
        154,
        "cmd.Cmd.intro"
      ]
    ],
    "lastcmd (cmd.cmd attribute)": [
      [
        154,
        "cmd.Cmd.lastcmd"
      ]
    ],
    "misc_header (cmd.cmd attribute)": [
      [
        154,
        "cmd.Cmd.misc_header"
      ]
    ],
    "onecmd() (cmd.cmd method)": [
      [
        154,
        "cmd.Cmd.onecmd"
      ]
    ],
    "postcmd() (cmd.cmd method)": [
      [
        154,
        "cmd.Cmd.postcmd"
      ]
    ],
    "postloop() (cmd.cmd method)": [
      [
        154,
        "cmd.Cmd.postloop"
      ]
    ],
    "precmd() (cmd.cmd method)": [
      [
        154,
        "cmd.Cmd.precmd"
      ]
    ],
    "preloop() (cmd.cmd method)": [
      [
        154,
        "cmd.Cmd.preloop"
      ]
    ],
    "prompt (cmd.cmd attribute)": [
      [
        154,
        "cmd.Cmd.prompt"
      ]
    ],
    "ruler (cmd.cmd attribute)": [
      [
        154,
        "cmd.Cmd.ruler"
      ]
    ],
    "undoc_header (cmd.cmd attribute)": [
      [
        154,
        "cmd.Cmd.undoc_header"
      ]
    ],
    "use_rawinput (cmd.cmd attribute)": [
      [
        154,
        "cmd.Cmd.use_rawinput"
      ]
    ],
    "interactiveconsole (class in code)": [
      [
        156,
        "code.InteractiveConsole"
      ]
    ],
    "interactiveinterpreter (class in code)": [
      [
        156,
        "code.InteractiveInterpreter"
      ]
    ],
    "compile_command() (in module code)": [
      [
        156,
        "code.compile_command"
      ]
    ],
    "interact() (code.interactiveconsole method)": [
      [
        156,
        "code.InteractiveConsole.interact"
      ]
    ],
    "interact() (in module code)": [
      [
        156,
        "code.interact"
      ]
    ],
    "push() (code.interactiveconsole method)": [
      [
        156,
        "code.InteractiveConsole.push"
      ]
    ],
    "raw_input() (code.interactiveconsole method)": [
      [
        156,
        "code.InteractiveConsole.raw_input"
      ]
    ],
    "resetbuffer() (code.interactiveconsole method)": [
      [
        156,
        "code.InteractiveConsole.resetbuffer"
      ]
    ],
    "runcode() (code.interactiveinterpreter method)": [
      [
        156,
        "code.InteractiveInterpreter.runcode"
      ]
    ],
    "runsource() (code.interactiveinterpreter method)": [
      [
        156,
        "code.InteractiveInterpreter.runsource"
      ]
    ],
    "showsyntaxerror() (code.interactiveinterpreter method)": [
      [
        156,
        "code.InteractiveInterpreter.showsyntaxerror"
      ]
    ],
    "showtraceback() (code.interactiveinterpreter method)": [
      [
        156,
        "code.InteractiveInterpreter.showtraceback"
      ]
    ],
    "write() (code.interactiveinterpreter method)": [
      [
        156,
        "code.InteractiveInterpreter.write"
      ]
    ],
    "bom (in module codecs)": [
      [
        157,
        "codecs.BOM"
      ]
    ],
    "bom_be (in module codecs)": [
      [
        157,
        "codecs.BOM_BE"
      ]
    ],
    "bom_le (in module codecs)": [
      [
        157,
        "codecs.BOM_LE"
      ]
    ],
    "bom_utf16 (in module codecs)": [
      [
        157,
        "codecs.BOM_UTF16"
      ]
    ],
    "bom_utf16_be (in module codecs)": [
      [
        157,
        "codecs.BOM_UTF16_BE"
      ]
    ],
    "bom_utf16_le (in module codecs)": [
      [
        157,
        "codecs.BOM_UTF16_LE"
      ]
    ],
    "bom_utf32 (in module codecs)": [
      [
        157,
        "codecs.BOM_UTF32"
      ]
    ],
    "bom_utf32_be (in module codecs)": [
      [
        157,
        "codecs.BOM_UTF32_BE"
      ]
    ],
    "bom_utf32_le (in module codecs)": [
      [
        157,
        "codecs.BOM_UTF32_LE"
      ]
    ],
    "bom_utf8 (in module codecs)": [
      [
        157,
        "codecs.BOM_UTF8"
      ]
    ],
    "codec (class in codecs)": [
      [
        157,
        "codecs.Codec"
      ]
    ],
    "codecinfo (class in codecs)": [
      [
        157,
        "codecs.CodecInfo"
      ]
    ],
    "codecs": [
      [
        157,
        "index-0"
      ],
      [
        157,
        "module-codecs"
      ]
    ],
    "encodedfile() (in module codecs)": [
      [
        157,
        "codecs.EncodedFile"
      ]
    ],
    "incrementaldecoder (class in codecs)": [
      [
        157,
        "codecs.IncrementalDecoder"
      ]
    ],
    "incrementalencoder (class in codecs)": [
      [
        157,
        "codecs.IncrementalEncoder"
      ]
    ],
    "rfc 3490": [
      [
        157,
        "index-13"
      ],
      [
        157,
        "index-14"
      ],
      [
        157,
        "index-6"
      ],
      [
        157,
        "index-8"
      ]
    ],
    "rfc 3490#section-3.1": [
      [
        157,
        "index-12"
      ]
    ],
    "rfc 3492": [
      [
        157,
        "index-7"
      ],
      [
        157,
        "index-9"
      ]
    ],
    "rfc 5891": [
      [
        157,
        "index-10"
      ]
    ],
    "rfc 5895": [
      [
        157,
        "index-11"
      ]
    ],
    "streamreader (class in codecs)": [
      [
        157,
        "codecs.StreamReader"
      ]
    ],
    "streamreaderwriter (class in codecs)": [
      [
        157,
        "codecs.StreamReaderWriter"
      ]
    ],
    "streamrecoder (class in codecs)": [
      [
        157,
        "codecs.StreamRecoder"
      ]
    ],
    "streamwriter (class in codecs)": [
      [
        157,
        "codecs.StreamWriter"
      ]
    ],
    "toascii() (in module encodings.idna)": [
      [
        157,
        "encodings.idna.ToASCII"
      ]
    ],
    "tounicode() (in module encodings.idna)": [
      [
        157,
        "encodings.idna.ToUnicode"
      ]
    ],
    "unicode": [
      [
        157,
        "index-0"
      ],
      [
        386,
        "index-0"
      ],
      [
        427,
        "index-19"
      ]
    ],
    "\\ (backslash)": [
      [
        157,
        "index-1"
      ],
      [
        292,
        "index-48"
      ],
      [
        318,
        "index-12"
      ],
      [
        318,
        "index-26"
      ],
      [
        318,
        "index-9"
      ],
      [
        434,
        "index-23"
      ]
    ],
    "\\n": [
      [
        157,
        "index-3"
      ],
      [
        318,
        "index-37"
      ],
      [
        318,
        "index-37"
      ],
      [
        434,
        "index-23"
      ],
      [
        434,
        "index-23"
      ]
    ],
    "\\u": [
      [
        157,
        "index-1"
      ],
      [
        157,
        "index-1"
      ],
      [
        318,
        "index-37"
      ],
      [
        318,
        "index-37"
      ],
      [
        434,
        "index-23"
      ],
      [
        434,
        "index-23"
      ]
    ],
    "\\x": [
      [
        157,
        "index-1"
      ],
      [
        318,
        "index-37"
      ],
      [
        434,
        "index-23"
      ]
    ],
    "backslashreplace": [
      [
        157,
        "index-1"
      ]
    ],
    "backslashreplace_errors() (in module codecs)": [
      [
        157,
        "codecs.backslashreplace_errors"
      ]
    ],
    "decode": [
      [
        157,
        "index-0"
      ]
    ],
    "decode (codecs.codecinfo attribute)": [
      [
        157,
        "codecs.CodecInfo.decode"
      ]
    ],
    "decode() (codecs.codec method)": [
      [
        157,
        "codecs.Codec.decode"
      ]
    ],
    "decode() (codecs.incrementaldecoder method)": [
      [
        157,
        "codecs.IncrementalDecoder.decode"
      ]
    ],
    "decode() (in module codecs)": [
      [
        157,
        "codecs.decode"
      ]
    ],
    "encode": [
      [
        157,
        "index-0"
      ]
    ],
    "encode (codecs.codecinfo attribute)": [
      [
        157,
        "codecs.CodecInfo.encode"
      ]
    ],
    "encode() (codecs.codec method)": [
      [
        157,
        "codecs.Codec.encode"
      ]
    ],
    "encode() (codecs.incrementalencoder method)": [
      [
        157,
        "codecs.IncrementalEncoder.encode"
      ]
    ],
    "encode() (in module codecs)": [
      [
        157,
        "codecs.encode"
      ]
    ],
    "encodings.idna": [
      [
        157,
        "module-encodings.idna"
      ]
    ],
    "encodings.mbcs": [
      [
        157,
        "module-encodings.mbcs"
      ]
    ],
    "encodings.utf_8_sig": [
      [
        157,
        "module-encodings.utf_8_sig"
      ]
    ],
    "error handler's name": [
      [
        157,
        "index-1"
      ],
      [
        157,
        "index-3"
      ],
      [
        157,
        "index-4"
      ]
    ],
    "escape sequence": [
      [
        157,
        "index-1"
      ],
      [
        157,
        "index-3"
      ],
      [
        434,
        "index-23"
      ]
    ],
    "getdecoder() (in module codecs)": [
      [
        157,
        "codecs.getdecoder"
      ]
    ],
    "getencoder() (in module codecs)": [
      [
        157,
        "codecs.getencoder"
      ]
    ],
    "getincrementaldecoder() (in module codecs)": [
      [
        157,
        "codecs.getincrementaldecoder"
      ]
    ],
    "getincrementalencoder() (in module codecs)": [
      [
        157,
        "codecs.getincrementalencoder"
      ]
    ],
    "getreader() (in module codecs)": [
      [
        157,
        "codecs.getreader"
      ]
    ],
    "getstate() (codecs.incrementaldecoder method)": [
      [
        157,
        "codecs.IncrementalDecoder.getstate"
      ]
    ],
    "getstate() (codecs.incrementalencoder method)": [
      [
        157,
        "codecs.IncrementalEncoder.getstate"
      ]
    ],
    "getwriter() (in module codecs)": [
      [
        157,
        "codecs.getwriter"
      ]
    ],
    "ignore": [
      [
        157,
        "index-1"
      ]
    ],
    "ignore_errors() (in module codecs)": [
      [
        157,
        "codecs.ignore_errors"
      ]
    ],
    "incrementaldecoder (codecs.codecinfo attribute)": [
      [
        157,
        "codecs.CodecInfo.incrementaldecoder"
      ]
    ],
    "incrementalencoder (codecs.codecinfo attribute)": [
      [
        157,
        "codecs.CodecInfo.incrementalencoder"
      ]
    ],
    "iterdecode() (in module codecs)": [
      [
        157,
        "codecs.iterdecode"
      ]
    ],
    "iterencode() (in module codecs)": [
      [
        157,
        "codecs.iterencode"
      ]
    ],
    "lookup() (in module codecs)": [
      [
        157,
        "codecs.lookup"
      ]
    ],
    "lookup_error() (in module codecs)": [
      [
        157,
        "codecs.lookup_error"
      ]
    ],
    "name (codecs.codecinfo attribute)": [
      [
        157,
        "codecs.CodecInfo.name"
      ]
    ],
    "nameprep() (in module encodings.idna)": [
      [
        157,
        "encodings.idna.nameprep"
      ]
    ],
    "namereplace": [
      [
        157,
        "index-3"
      ]
    ],
    "namereplace_errors() (in module codecs)": [
      [
        157,
        "codecs.namereplace_errors"
      ]
    ],
    "open() (in module codecs)": [
      [
        157,
        "codecs.open"
      ]
    ],
    "read() (codecs.streamreader method)": [
      [
        157,
        "codecs.StreamReader.read"
      ]
    ],
    "readline() (codecs.streamreader method)": [
      [
        157,
        "codecs.StreamReader.readline"
      ]
    ],
    "readlines() (codecs.streamreader method)": [
      [
        157,
        "codecs.StreamReader.readlines"
      ]
    ],
    "register() (in module codecs)": [
      [
        157,
        "codecs.register"
      ]
    ],
    "register_error() (in module codecs)": [
      [
        157,
        "codecs.register_error"
      ]
    ],
    "replace": [
      [
        157,
        "index-1"
      ]
    ],
    "replace_errors() (in module codecs)": [
      [
        157,
        "codecs.replace_errors"
      ]
    ],
    "replacement character": [
      [
        157,
        "index-1"
      ]
    ],
    "reset() (codecs.incrementaldecoder method)": [
      [
        157,
        "codecs.IncrementalDecoder.reset"
      ]
    ],
    "reset() (codecs.incrementalencoder method)": [
      [
        157,
        "codecs.IncrementalEncoder.reset"
      ]
    ],
    "reset() (codecs.streamreader method)": [
      [
        157,
        "codecs.StreamReader.reset"
      ]
    ],
    "reset() (codecs.streamwriter method)": [
      [
        157,
        "codecs.StreamWriter.reset"
      ]
    ],
    "setstate() (codecs.incrementaldecoder method)": [
      [
        157,
        "codecs.IncrementalDecoder.setstate"
      ]
    ],
    "setstate() (codecs.incrementalencoder method)": [
      [
        157,
        "codecs.IncrementalEncoder.setstate"
      ]
    ],
    "stackable": [
      [
        157,
        "index-0"
      ]
    ],
    "streamreader (codecs.codecinfo attribute)": [
      [
        157,
        "codecs.CodecInfo.streamreader"
      ]
    ],
    "streams": [
      [
        157,
        "index-0"
      ]
    ],
    "streamwriter (codecs.codecinfo attribute)": [
      [
        157,
        "codecs.CodecInfo.streamwriter"
      ]
    ],
    "strict": [
      [
        157,
        "index-1"
      ]
    ],
    "strict_errors() (in module codecs)": [
      [
        157,
        "codecs.strict_errors"
      ]
    ],
    "surrogateescape": [
      [
        157,
        "index-1"
      ]
    ],
    "surrogatepass": [
      [
        157,
        "index-4"
      ]
    ],
    "unregister() (in module codecs)": [
      [
        157,
        "codecs.unregister"
      ]
    ],
    "write() (codecs.streamwriter method)": [
      [
        157,
        "codecs.StreamWriter.write"
      ]
    ],
    "writelines() (codecs.streamwriter method)": [
      [
        157,
        "codecs.StreamWriter.writelines"
      ]
    ],
    "xmlcharrefreplace": [
      [
        157,
        "index-3"
      ]
    ],
    "xmlcharrefreplace_errors() (in module codecs)": [
      [
        157,
        "codecs.xmlcharrefreplace_errors"
      ]
    ],
    "commandcompiler (class in codeop)": [
      [
        158,
        "codeop.CommandCompiler"
      ]
    ],
    "compile (class in codeop)": [
      [
        158,
        "codeop.Compile"
      ]
    ],
    "codeop": [
      [
        158,
        "module-codeop"
      ]
    ],
    "compile_command() (in module codeop)": [
      [
        158,
        "codeop.compile_command"
      ]
    ],
    "chainmap (class in collections)": [
      [
        159,
        "collections.ChainMap"
      ]
    ],
    "counter (class in collections)": [
      [
        159,
        "collections.Counter"
      ]
    ],
    "ordereddict (class in collections)": [
      [
        159,
        "collections.OrderedDict"
      ]
    ],
    "pep 468": [
      [
        159,
        "index-2"
      ],
      [
        478,
        "index-24"
      ],
      [
        482,
        "index-259"
      ]
    ],
    "pep 584": [
      [
        159,
        "index-0"
      ],
      [
        159,
        "index-1"
      ],
      [
        159,
        "index-3"
      ],
      [
        292,
        "index-6"
      ],
      [
        292,
        "index-7"
      ],
      [
        384,
        "index-6"
      ],
      [
        401,
        "index-0"
      ],
      [
        401,
        "index-1"
      ],
      [
        481,
        "index-1"
      ],
      [
        481,
        "index-11"
      ],
      [
        482,
        "index-173"
      ],
      [
        482,
        "index-174"
      ],
      [
        482,
        "index-175"
      ],
      [
        482,
        "index-187"
      ],
      [
        482,
        "index-188"
      ],
      [
        482,
        "index-189"
      ],
      [
        482,
        "index-190"
      ]
    ],
    "userdict (class in collections)": [
      [
        159,
        "collections.UserDict"
      ]
    ],
    "userlist (class in collections)": [
      [
        159,
        "collections.UserList"
      ]
    ],
    "userstring (class in collections)": [
      [
        159,
        "collections.UserString"
      ]
    ],
    "__missing__() (collections.defaultdict method)": [
      [
        159,
        "collections.defaultdict.__missing__"
      ]
    ],
    "_asdict() (collections.somenamedtuple method)": [
      [
        159,
        "collections.somenamedtuple._asdict"
      ]
    ],
    "_field_defaults (collections.somenamedtuple attribute)": [
      [
        159,
        "collections.somenamedtuple._field_defaults"
      ]
    ],
    "_fields (collections.somenamedtuple attribute)": [
      [
        159,
        "collections.somenamedtuple._fields"
      ]
    ],
    "_make() (collections.somenamedtuple class method)": [
      [
        159,
        "collections.somenamedtuple._make"
      ]
    ],
    "_replace() (collections.somenamedtuple method)": [
      [
        159,
        "collections.somenamedtuple._replace"
      ]
    ],
    "append() (collections.deque method)": [
      [
        159,
        "collections.deque.append"
      ]
    ],
    "appendleft() (collections.deque method)": [
      [
        159,
        "collections.deque.appendleft"
      ]
    ],
    "clear() (collections.deque method)": [
      [
        159,
        "collections.deque.clear"
      ]
    ],
    "collections": [
      [
        159,
        "module-collections"
      ],
      [
        427,
        "index-24"
      ]
    ],
    "copy() (collections.deque method)": [
      [
        159,
        "collections.deque.copy"
      ]
    ],
    "count() (collections.deque method)": [
      [
        159,
        "collections.deque.count"
      ]
    ],
    "data (collections.userdict attribute)": [
      [
        159,
        "collections.UserDict.data"
      ]
    ],
    "data (collections.userlist attribute)": [
      [
        159,
        "collections.UserList.data"
      ]
    ],
    "data (collections.userstring attribute)": [
      [
        159,
        "collections.UserString.data"
      ]
    ],
    "default_factory (collections.defaultdict attribute)": [
      [
        159,
        "collections.defaultdict.default_factory"
      ]
    ],
    "defaultdict (class in collections)": [
      [
        159,
        "collections.defaultdict"
      ]
    ],
    "deque (class in collections)": [
      [
        159,
        "collections.deque"
      ]
    ],
    "elements() (collections.counter method)": [
      [
        159,
        "collections.Counter.elements"
      ]
    ],
    "extend() (collections.deque method)": [
      [
        159,
        "collections.deque.extend"
      ]
    ],
    "extendleft() (collections.deque method)": [
      [
        159,
        "collections.deque.extendleft"
      ]
    ],
    "fromkeys() (collections.counter method)": [
      [
        159,
        "collections.Counter.fromkeys"
      ]
    ],
    "index() (collections.deque method)": [
      [
        159,
        "collections.deque.index"
      ]
    ],
    "insert() (collections.deque method)": [
      [
        159,
        "collections.deque.insert"
      ]
    ],
    "maps (collections.chainmap attribute)": [
      [
        159,
        "collections.ChainMap.maps"
      ]
    ],
    "maxlen (collections.deque attribute)": [
      [
        159,
        "collections.deque.maxlen"
      ]
    ],
    "most_common() (collections.counter method)": [
      [
        159,
        "collections.Counter.most_common"
      ]
    ],
    "move_to_end() (collections.ordereddict method)": [
      [
        159,
        "collections.OrderedDict.move_to_end"
      ]
    ],
    "namedtuple() (in module collections)": [
      [
        159,
        "collections.namedtuple"
      ]
    ],
    "new_child() (collections.chainmap method)": [
      [
        159,
        "collections.ChainMap.new_child"
      ]
    ],
    "parents (collections.chainmap attribute)": [
      [
        159,
        "collections.ChainMap.parents"
      ]
    ],
    "pop() (collections.deque method)": [
      [
        159,
        "collections.deque.pop"
      ]
    ],
    "popitem() (collections.ordereddict method)": [
      [
        159,
        "collections.OrderedDict.popitem"
      ]
    ],
    "popleft() (collections.deque method)": [
      [
        159,
        "collections.deque.popleft"
      ]
    ],
    "remove() (collections.deque method)": [
      [
        159,
        "collections.deque.remove"
      ]
    ],
    "reverse() (collections.deque method)": [
      [
        159,
        "collections.deque.reverse"
      ]
    ],
    "rotate() (collections.deque method)": [
      [
        159,
        "collections.deque.rotate"
      ]
    ],
    "subtract() (collections.counter method)": [
      [
        159,
        "collections.Counter.subtract"
      ]
    ],
    "total() (collections.counter method)": [
      [
        159,
        "collections.Counter.total"
      ]
    ],
    "update() (collections.counter method)": [
      [
        159,
        "collections.Counter.update"
      ]
    ],
    "asyncgenerator (class in collections.abc)": [
      [
        160,
        "collections.abc.AsyncGenerator"
      ]
    ],
    "asynciterable (class in collections.abc)": [
      [
        160,
        "collections.abc.AsyncIterable"
      ]
    ],
    "asynciterator (class in collections.abc)": [
      [
        160,
        "collections.abc.AsyncIterator"
      ]
    ],
    "awaitable (class in collections.abc)": [
      [
        160,
        "collections.abc.Awaitable"
      ]
    ],
    "buffer (class in collections.abc)": [
      [
        160,
        "collections.abc.Buffer"
      ]
    ],
    "bytestring (class in collections.abc)": [
      [
        160,
        "collections.abc.ByteString"
      ]
    ],
    "callable (class in collections.abc)": [
      [
        160,
        "collections.abc.Callable"
      ]
    ],
    "collection (class in collections.abc)": [
      [
        160,
        "collections.abc.Collection"
      ]
    ],
    "container (class in collections.abc)": [
      [
        160,
        "collections.abc.Container"
      ]
    ],
    "coroutine (class in collections.abc)": [
      [
        160,
        "collections.abc.Coroutine"
      ]
    ],
    "generator (class in collections.abc)": [
      [
        160,
        "collections.abc.Generator"
      ]
    ],
    "hashable (class in collections.abc)": [
      [
        160,
        "collections.abc.Hashable"
      ]
    ],
    "itemsview (class in collections.abc)": [
      [
        160,
        "collections.abc.ItemsView"
      ]
    ],
    "iterable (class in collections.abc)": [
      [
        160,
        "collections.abc.Iterable"
      ]
    ],
    "iterator (class in collections.abc)": [
      [
        160,
        "collections.abc.Iterator"
      ]
    ],
    "keysview (class in collections.abc)": [
      [
        160,
        "collections.abc.KeysView"
      ]
    ],
    "mapping (class in collections.abc)": [
      [
        160,
        "collections.abc.Mapping"
      ]
    ],
    "mappingview (class in collections.abc)": [
      [
        160,
        "collections.abc.MappingView"
      ]
    ],
    "mutablemapping (class in collections.abc)": [
      [
        160,
        "collections.abc.MutableMapping"
      ]
    ],
    "mutablesequence (class in collections.abc)": [
      [
        160,
        "collections.abc.MutableSequence"
      ]
    ],
    "mutableset (class in collections.abc)": [
      [
        160,
        "collections.abc.MutableSet"
      ]
    ],
    "pep 688": [
      [
        160,
        "index-4"
      ],
      [
        427,
        "index-109"
      ],
      [
        473,
        "index-12"
      ],
      [
        482,
        "index-11"
      ]
    ],
    "reversible (class in collections.abc)": [
      [
        160,
        "collections.abc.Reversible"
      ]
    ],
    "sequence (class in collections.abc)": [
      [
        160,
        "collections.abc.Sequence"
      ]
    ],
    "set (class in collections.abc)": [
      [
        160,
        "collections.abc.Set"
      ]
    ],
    "sized (class in collections.abc)": [
      [
        160,
        "collections.abc.Sized"
      ]
    ],
    "valuesview (class in collections.abc)": [
      [
        160,
        "collections.abc.ValuesView"
      ]
    ],
    "collections.abc": [
      [
        160,
        "module-collections.abc"
      ]
    ],
    "colorsys": [
      [
        161,
        "module-colorsys"
      ]
    ],
    "hls_to_rgb() (in module colorsys)": [
      [
        161,
        "colorsys.hls_to_rgb"
      ]
    ],
    "hsv_to_rgb() (in module colorsys)": [
      [
        161,
        "colorsys.hsv_to_rgb"
      ]
    ],
    "rgb_to_hls() (in module colorsys)": [
      [
        161,
        "colorsys.rgb_to_hls"
      ]
    ],
    "rgb_to_hsv() (in module colorsys)": [
      [
        161,
        "colorsys.rgb_to_hsv"
      ]
    ],
    "rgb_to_yiq() (in module colorsys)": [
      [
        161,
        "colorsys.rgb_to_yiq"
      ]
    ],
    "yiq_to_rgb() (in module colorsys)": [
      [
        161,
        "colorsys.yiq_to_rgb"
      ]
    ],
    "--hardlink-dupes": [
      [
        162,
        "cmdoption-compileall-hardlink-dupes"
      ]
    ],
    "--invalidation-mode": [
      [
        162,
        "cmdoption-compileall-invalidation-mode"
      ]
    ],
    "-b": [
      [
        162,
        "cmdoption-compileall-b"
      ],
      [
        387,
        "cmdoption-unittest-b"
      ],
      [
        454,
        "cmdoption-B"
      ],
      [
        454,
        "cmdoption-b"
      ]
    ],
    "-d": [
      [
        162,
        "cmdoption-compileall-d"
      ],
      [
        233,
        "cmdoption-gzip-d"
      ],
      [
        454,
        "cmdoption-d"
      ]
    ],
    "-f": [
      [
        162,
        "cmdoption-compileall-f"
      ],
      [
        379,
        "cmdoption-trace-f"
      ],
      [
        387,
        "cmdoption-unittest-f"
      ]
    ],
    "-j": [
      [
        162,
        "cmdoption-compileall-j"
      ],
      [
        454,
        "cmdoption-J"
      ]
    ],
    "-o": [
      [
        162,
        "cmdoption-compileall-o"
      ],
      [
        299,
        "cmdoption-pickletools-o"
      ],
      [
        420,
        "cmdoption-zipapp-o"
      ],
      [
        454,
        "cmdoption-O"
      ]
    ],
    "-p": [
      [
        162,
        "cmdoption-compileall-p"
      ],
      [
        299,
        "cmdoption-pickletools-p"
      ],
      [
        366,
        "cmdoption-timeit-p"
      ],
      [
        387,
        "cmdoption-unittest-discover-p"
      ],
      [
        420,
        "cmdoption-zipapp-p"
      ],
      [
        454,
        "cmdoption-P"
      ]
    ],
    "-q": [
      [
        162,
        "cmdoption-compileall-q"
      ],
      [
        310,
        "cmdoption-python-m-py_compile-q"
      ],
      [
        454,
        "cmdoption-q"
      ]
    ],
    "-r": [
      [
        162,
        "cmdoption-compileall-r"
      ],
      [
        366,
        "cmdoption-timeit-r"
      ],
      [
        379,
        "cmdoption-trace-R"
      ],
      [
        379,
        "cmdoption-trace-r"
      ],
      [
        454,
        "cmdoption-R"
      ]
    ],
    "-x": [
      [
        162,
        "cmdoption-compileall-x"
      ],
      [
        454,
        "cmdoption-X"
      ],
      [
        454,
        "cmdoption-x"
      ]
    ],
    "source_date_epoch": [
      [
        162,
        "index-1"
      ],
      [
        310,
        "index-3"
      ],
      [
        310,
        "index-6"
      ],
      [
        310,
        "index-7"
      ],
      [
        479,
        "index-31"
      ],
      [
        482,
        "index-218"
      ],
      [
        482,
        "index-235"
      ]
    ],
    "compile_dir() (in module compileall)": [
      [
        162,
        "compileall.compile_dir"
      ]
    ],
    "compile_file() (in module compileall)": [
      [
        162,
        "compileall.compile_file"
      ]
    ],
    "compile_path() (in module compileall)": [
      [
        162,
        "compileall.compile_path"
      ]
    ],
    "compileall": [
      [
        162,
        "module-compileall"
      ]
    ],
    "compileall command line option": [
      [
        162,
        "cmdoption-compileall-arg-directory"
      ],
      [
        162,
        "cmdoption-compileall-arg-file"
      ],
      [
        162,
        "cmdoption-compileall-b"
      ],
      [
        162,
        "cmdoption-compileall-d"
      ],
      [
        162,
        "cmdoption-compileall-e"
      ],
      [
        162,
        "cmdoption-compileall-f"
      ],
      [
        162,
        "cmdoption-compileall-hardlink-dupes"
      ],
      [
        162,
        "cmdoption-compileall-i"
      ],
      [
        162,
        "cmdoption-compileall-invalidation-mode"
      ],
      [
        162,
        "cmdoption-compileall-j"
      ],
      [
        162,
        "cmdoption-compileall-l"
      ],
      [
        162,
        "cmdoption-compileall-o"
      ],
      [
        162,
        "cmdoption-compileall-p"
      ],
      [
        162,
        "cmdoption-compileall-q"
      ],
      [
        162,
        "cmdoption-compileall-r"
      ],
      [
        162,
        "cmdoption-compileall-s"
      ],
      [
        162,
        "cmdoption-compileall-x"
      ]
    ],
    "directory": [
      [
        162,
        "cmdoption-compileall-arg-directory"
      ],
      [
        292,
        "index-26"
      ],
      [
        292,
        "index-28"
      ],
      [
        292,
        "index-29"
      ],
      [
        292,
        "index-31"
      ],
      [
        292,
        "index-32"
      ],
      [
        331,
        "index-1"
      ],
      [
        333,
        "index-1"
      ]
    ],
    "all_completed (in module concurrent.futures)": [
      [
        165,
        "concurrent.futures.ALL_COMPLETED"
      ]
    ],
    "brokenexecutor": [
      [
        165,
        "concurrent.futures.BrokenExecutor"
      ]
    ],
    "brokenprocesspool": [
      [
        165,
        "concurrent.futures.process.BrokenProcessPool"
      ]
    ],
    "brokenthreadpool": [
      [
        165,
        "concurrent.futures.thread.BrokenThreadPool"
      ]
    ],
    "executor (class in concurrent.futures)": [
      [
        165,
        "concurrent.futures.Executor"
      ]
    ],
    "first_completed (in module concurrent.futures)": [
      [
        165,
        "concurrent.futures.FIRST_COMPLETED"
      ]
    ],
    "first_exception (in module concurrent.futures)": [
      [
        165,
        "concurrent.futures.FIRST_EXCEPTION"
      ]
    ],
    "future (class in concurrent.futures)": [
      [
        165,
        "concurrent.futures.Future"
      ]
    ],
    "pep 3148": [
      [
        165,
        "index-0"
      ],
      [
        474,
        "index-4"
      ]
    ],
    "processpoolexecutor (class in concurrent.futures)": [
      [
        165,
        "concurrent.futures.ProcessPoolExecutor"
      ]
    ],
    "threadpoolexecutor (class in concurrent.futures)": [
      [
        165,
        "concurrent.futures.ThreadPoolExecutor"
      ]
    ],
    "add_done_callback() (concurrent.futures.future method)": [
      [
        165,
        "concurrent.futures.Future.add_done_callback"
      ]
    ],
    "as_completed() (in module concurrent.futures)": [
      [
        165,
        "concurrent.futures.as_completed"
      ]
    ],
    "cancel() (concurrent.futures.future method)": [
      [
        165,
        "concurrent.futures.Future.cancel"
      ]
    ],
    "cancelled() (concurrent.futures.future method)": [
      [
        165,
        "concurrent.futures.Future.cancelled"
      ]
    ],
    "concurrent.futures": [
      [
        165,
        "module-concurrent.futures"
      ]
    ],
    "done() (concurrent.futures.future method)": [
      [
        165,
        "concurrent.futures.Future.done"
      ]
    ],
    "exception() (concurrent.futures.future method)": [
      [
        165,
        "concurrent.futures.Future.exception"
      ]
    ],
    "map() (concurrent.futures.executor method)": [
      [
        165,
        "concurrent.futures.Executor.map"
      ]
    ],
    "result() (concurrent.futures.future method)": [
      [
        165,
        "concurrent.futures.Future.result"
      ]
    ],
    "running() (concurrent.futures.future method)": [
      [
        165,
        "concurrent.futures.Future.running"
      ]
    ],
    "set_exception() (concurrent.futures.future method)": [
      [
        165,
        "concurrent.futures.Future.set_exception"
      ]
    ],
    "set_result() (concurrent.futures.future method)": [
      [
        165,
        "concurrent.futures.Future.set_result"
      ]
    ],
    "set_running_or_notify_cancel() (concurrent.futures.future method)": [
      [
        165,
        "concurrent.futures.Future.set_running_or_notify_cancel"
      ]
    ],
    "shutdown() (concurrent.futures.executor method)": [
      [
        165,
        "concurrent.futures.Executor.shutdown"
      ]
    ],
    "submit() (concurrent.futures.executor method)": [
      [
        165,
        "concurrent.futures.Executor.submit"
      ]
    ],
    "wait() (in module concurrent.futures)": [
      [
        165,
        "concurrent.futures.wait"
      ]
    ],
    "$ (dollar)": [
      [
        166,
        "index-2"
      ],
      [
        293,
        "index-9"
      ],
      [
        318,
        "index-2"
      ],
      [
        344,
        "index-13"
      ]
    ],
    "% (percent)": [
      [
        166,
        "index-1"
      ],
      [
        182,
        "index-0"
      ],
      [
        293,
        "index-9"
      ],
      [
        343,
        "index-13"
      ],
      [
        343,
        "index-35"
      ],
      [
        343,
        "index-45"
      ],
      [
        365,
        "index-11"
      ],
      [
        365,
        "index-9"
      ],
      [
        404,
        "index-0"
      ],
      [
        429,
        "index-68"
      ]
    ],
    ".ini": [
      [
        166,
        "index-0"
      ]
    ],
    "boolean_states (configparser.configparser attribute)": [
      [
        166,
        "configparser.ConfigParser.BOOLEAN_STATES"
      ]
    ],
    "basicinterpolation (class in configparser)": [
      [
        166,
        "configparser.BasicInterpolation"
      ]
    ],
    "configparser (class in configparser)": [
      [
        166,
        "configparser.ConfigParser"
      ]
    ],
    "duplicateoptionerror": [
      [
        166,
        "configparser.DuplicateOptionError"
      ]
    ],
    "duplicatesectionerror": [
      [
        166,
        "configparser.DuplicateSectionError"
      ]
    ],
    "extendedinterpolation (class in configparser)": [
      [
        166,
        "configparser.ExtendedInterpolation"
      ]
    ],
    "interpolationdeptherror": [
      [
        166,
        "configparser.InterpolationDepthError"
      ]
    ],
    "interpolationerror": [
      [
        166,
        "configparser.InterpolationError"
      ]
    ],
    "interpolationmissingoptionerror": [
      [
        166,
        "configparser.InterpolationMissingOptionError"
      ]
    ],
    "interpolationsyntaxerror": [
      [
        166,
        "configparser.InterpolationSyntaxError"
      ]
    ],
    "max_interpolation_depth (in module configparser)": [
      [
        166,
        "configparser.MAX_INTERPOLATION_DEPTH"
      ]
    ],
    "missingsectionheadererror": [
      [
        166,
        "configparser.MissingSectionHeaderError"
      ]
    ],
    "nooptionerror": [
      [
        166,
        "configparser.NoOptionError"
      ]
    ],
    "nosectionerror": [
      [
        166,
        "configparser.NoSectionError"
      ]
    ],
    "parsingerror": [
      [
        166,
        "configparser.ParsingError"
      ]
    ],
    "rawconfigparser (class in configparser)": [
      [
        166,
        "configparser.RawConfigParser"
      ]
    ],
    "sectcre (configparser.configparser attribute)": [
      [
        166,
        "configparser.ConfigParser.SECTCRE"
      ]
    ],
    "windows ini file": [
      [
        166,
        "index-0"
      ]
    ],
    "add_section() (configparser.configparser method)": [
      [
        166,
        "configparser.ConfigParser.add_section"
      ]
    ],
    "add_section() (configparser.rawconfigparser method)": [
      [
        166,
        "configparser.RawConfigParser.add_section"
      ]
    ],
    "configparser": [
      [
        166,
        "module-configparser"
      ]
    ],
    "configuration": [
      [
        166,
        "index-0"
      ],
      [
        296,
        "index-2"
      ],
      [
        333,
        "index-4"
      ]
    ],
    "defaults() (configparser.configparser method)": [
      [
        166,
        "configparser.ConfigParser.defaults"
      ]
    ],
    "get() (configparser.configparser method)": [
      [
        166,
        "configparser.ConfigParser.get"
      ]
    ],
    "getboolean() (configparser.configparser method)": [
      [
        166,
        "configparser.ConfigParser.getboolean"
      ]
    ],
    "getfloat() (configparser.configparser method)": [
      [
        166,
        "configparser.ConfigParser.getfloat"
      ]
    ],
    "getint() (configparser.configparser method)": [
      [
        166,
        "configparser.ConfigParser.getint"
      ]
    ],
    "has_option() (configparser.configparser method)": [
      [
        166,
        "configparser.ConfigParser.has_option"
      ]
    ],
    "has_section() (configparser.configparser method)": [
      [
        166,
        "configparser.ConfigParser.has_section"
      ]
    ],
    "ini file": [
      [
        166,
        "index-0"
      ]
    ],
    "interpolation in configuration files": [
      [
        166,
        "index-1"
      ],
      [
        166,
        "index-2"
      ]
    ],
    "items() (configparser.configparser method)": [
      [
        166,
        "configparser.ConfigParser.items"
      ]
    ],
    "options() (configparser.configparser method)": [
      [
        166,
        "configparser.ConfigParser.options"
      ]
    ],
    "optionxform() (configparser.configparser method)": [
      [
        166,
        "configparser.ConfigParser.optionxform"
      ]
    ],
    "read() (configparser.configparser method)": [
      [
        166,
        "configparser.ConfigParser.read"
      ]
    ],
    "read_dict() (configparser.configparser method)": [
      [
        166,
        "configparser.ConfigParser.read_dict"
      ]
    ],
    "read_file() (configparser.configparser method)": [
      [
        166,
        "configparser.ConfigParser.read_file"
      ]
    ],
    "read_string() (configparser.configparser method)": [
      [
        166,
        "configparser.ConfigParser.read_string"
      ]
    ],
    "remove_option() (configparser.configparser method)": [
      [
        166,
        "configparser.ConfigParser.remove_option"
      ]
    ],
    "remove_section() (configparser.configparser method)": [
      [
        166,
        "configparser.ConfigParser.remove_section"
      ]
    ],
    "sections() (configparser.configparser method)": [
      [
        166,
        "configparser.ConfigParser.sections"
      ]
    ],
    "set() (configparser.configparser method)": [
      [
        166,
        "configparser.ConfigParser.set"
      ]
    ],
    "set() (configparser.rawconfigparser method)": [
      [
        166,
        "configparser.RawConfigParser.set"
      ]
    ],
    "write() (configparser.configparser method)": [
      [
        166,
        "configparser.ConfigParser.write"
      ]
    ],
    "ellipsis (built-in variable)": [
      [
        167,
        "Ellipsis"
      ]
    ],
    "false (built-in variable)": [
      [
        167,
        "False"
      ]
    ],
    "none (built-in variable)": [
      [
        167,
        "None"
      ]
    ],
    "notimplemented (built-in variable)": [
      [
        167,
        "NotImplemented"
      ]
    ],
    "true (built-in variable)": [
      [
        167,
        "True"
      ]
    ],
    "__debug__ (built-in variable)": [
      [
        167,
        "debug__"
      ]
    ],
    "copyright (built-in variable)": [
      [
        167,
        "copyright"
      ]
    ],
    "credits (built-in variable)": [
      [
        167,
        "credits"
      ]
    ],
    "ellipsis literal": [
      [
        167,
        "index-0"
      ],
      [
        343,
        "index-66"
      ],
      [
        427,
        "index-8"
      ]
    ],
    "exit (built-in variable)": [
      [
        167,
        "exit"
      ]
    ],
    "license (built-in variable)": [
      [
        167,
        "license"
      ]
    ],
    "quit (built-in variable)": [
      [
        167,
        "quit"
      ]
    ],
    "abstractasynccontextmanager (class in contextlib)": [
      [
        168,
        "contextlib.AbstractAsyncContextManager"
      ]
    ],
    "abstractcontextmanager (class in contextlib)": [
      [
        168,
        "contextlib.AbstractContextManager"
      ]
    ],
    "asynccontextdecorator (class in contextlib)": [
      [
        168,
        "contextlib.AsyncContextDecorator"
      ]
    ],
    "asyncexitstack (class in contextlib)": [
      [
        168,
        "contextlib.AsyncExitStack"
      ]
    ],
    "contextdecorator (class in contextlib)": [
      [
        168,
        "contextlib.ContextDecorator"
      ]
    ],
    "exitstack (class in contextlib)": [
      [
        168,
        "contextlib.ExitStack"
      ]
    ],
    "aclose() (contextlib.asyncexitstack method)": [
      [
        168,
        "contextlib.AsyncExitStack.aclose"
      ]
    ],
    "aclosing() (in module contextlib)": [
      [
        168,
        "contextlib.aclosing"
      ]
    ],
    "asynccontextmanager() (in module contextlib)": [
      [
        168,
        "contextlib.asynccontextmanager"
      ]
    ],
    "callback() (contextlib.exitstack method)": [
      [
        168,
        "contextlib.ExitStack.callback"
      ]
    ],
    "chdir() (in module contextlib)": [
      [
        168,
        "contextlib.chdir"
      ]
    ],
    "close() (contextlib.exitstack method)": [
      [
        168,
        "contextlib.ExitStack.close"
      ]
    ],
    "closing() (in module contextlib)": [
      [
        168,
        "contextlib.closing"
      ]
    ],
    "contextlib": [
      [
        168,
        "module-contextlib"
      ]
    ],
    "contextmanager() (in module contextlib)": [
      [
        168,
        "contextlib.contextmanager"
      ]
    ],
    "enter_async_context() (contextlib.asyncexitstack method)": [
      [
        168,
        "contextlib.AsyncExitStack.enter_async_context"
      ]
    ],
    "enter_context() (contextlib.exitstack method)": [
      [
        168,
        "contextlib.ExitStack.enter_context"
      ]
    ],
    "nullcontext() (in module contextlib)": [
      [
        168,
        "contextlib.nullcontext"
      ]
    ],
    "pop_all() (contextlib.exitstack method)": [
      [
        168,
        "contextlib.ExitStack.pop_all"
      ]
    ],
    "push() (contextlib.exitstack method)": [
      [
        168,
        "contextlib.ExitStack.push"
      ]
    ],
    "push_async_callback() (contextlib.asyncexitstack method)": [
      [
        168,
        "contextlib.AsyncExitStack.push_async_callback"
      ]
    ],
    "push_async_exit() (contextlib.asyncexitstack method)": [
      [
        168,
        "contextlib.AsyncExitStack.push_async_exit"
      ]
    ],
    "redirect_stderr() (in module contextlib)": [
      [
        168,
        "contextlib.redirect_stderr"
      ]
    ],
    "redirect_stdout() (in module contextlib)": [
      [
        168,
        "contextlib.redirect_stdout"
      ]
    ],
    "suppress() (in module contextlib)": [
      [
        168,
        "contextlib.suppress"
      ]
    ],
    "context (class in contextvars)": [
      [
        169,
        "contextvars.Context"
      ]
    ],
    "contextvar (class in contextvars)": [
      [
        169,
        "contextvars.ContextVar"
      ]
    ],
    "missing (contextvars.token attribute)": [
      [
        169,
        "contextvars.Token.MISSING"
      ]
    ],
    "token (class in contextvars)": [
      [
        169,
        "contextvars.Token"
      ]
    ],
    "contextvars": [
      [
        169,
        "module-contextvars"
      ]
    ],
    "copy() (contextvars.context method)": [
      [
        169,
        "contextvars.Context.copy"
      ]
    ],
    "copy_context() (in module contextvars)": [
      [
        169,
        "contextvars.copy_context"
      ]
    ],
    "get() (contextvars.context method)": [
      [
        169,
        "contextvars.Context.get"
      ]
    ],
    "get() (contextvars.contextvar method)": [
      [
        169,
        "contextvars.ContextVar.get"
      ]
    ],
    "items() (contextvars.context method)": [
      [
        169,
        "contextvars.Context.items"
      ]
    ],
    "keys() (contextvars.context method)": [
      [
        169,
        "contextvars.Context.keys"
      ]
    ],
    "name (contextvars.contextvar attribute)": [
      [
        169,
        "contextvars.ContextVar.name"
      ]
    ],
    "old_value (contextvars.token attribute)": [
      [
        169,
        "contextvars.Token.old_value"
      ]
    ],
    "reset() (contextvars.contextvar method)": [
      [
        169,
        "contextvars.ContextVar.reset"
      ]
    ],
    "run() (contextvars.context method)": [
      [
        169,
        "contextvars.Context.run"
      ]
    ],
    "set() (contextvars.contextvar method)": [
      [
        169,
        "contextvars.ContextVar.set"
      ]
    ],
    "values() (contextvars.context method)": [
      [
        169,
        "contextvars.Context.values"
      ]
    ],
    "var (contextvars.token attribute)": [
      [
        169,
        "contextvars.Token.var"
      ]
    ],
    "__copy__() (copy protocol)": [
      [
        170,
        "index-1"
      ]
    ],
    "__deepcopy__() (copy protocol)": [
      [
        170,
        "index-1"
      ]
    ],
    "copy": [
      [
        170,
        "module-copy"
      ],
      [
        171,
        "index-0"
      ],
      [
        246,
        "index-4"
      ],
      [
        298,
        "index-5"
      ]
    ],
    "copy() (in module copy)": [
      [
        170,
        "copy.copy"
      ]
    ],
    "deepcopy() (in module copy)": [
      [
        170,
        "copy.deepcopy"
      ]
    ],
    "pickle": [
      [
        170,
        "index-0"
      ],
      [
        171,
        "index-0"
      ],
      [
        273,
        "index-0"
      ],
      [
        298,
        "module-pickle"
      ],
      [
        329,
        "index-0"
      ]
    ],
    "constructor() (in module copyreg)": [
      [
        171,
        "copyreg.constructor"
      ]
    ],
    "copyreg": [
      [
        171,
        "module-copyreg"
      ]
    ],
    "pickle() (in module copyreg)": [
      [
        171,
        "copyreg.pickle"
      ]
    ],
    "des": [
      [
        172,
        "index-0"
      ]
    ],
    "method_blowfish (in module crypt)": [
      [
        172,
        "crypt.METHOD_BLOWFISH"
      ]
    ],
    "method_crypt (in module crypt)": [
      [
        172,
        "crypt.METHOD_CRYPT"
      ]
    ],
    "method_md5 (in module crypt)": [
      [
        172,
        "crypt.METHOD_MD5"
      ]
    ],
    "method_sha256 (in module crypt)": [
      [
        172,
        "crypt.METHOD_SHA256"
      ]
    ],
    "method_sha512 (in module crypt)": [
      [
        172,
        "crypt.METHOD_SHA512"
      ]
    ],
    "pep 594#crypt": [
      [
        172,
        "index-1"
      ]
    ],
    "cipher": [
      [
        172,
        "index-0"
      ]
    ],
    "crypt": [
      [
        172,
        "module-crypt"
      ],
      [
        309,
        "index-0"
      ]
    ],
    "crypt() (in module crypt)": [
      [
        172,
        "crypt.crypt"
      ]
    ],
    "crypt(3)": [
      [
        172,
        "index-0"
      ],
      [
        172,
        "index-2"
      ],
      [
        172,
        "index-3"
      ]
    ],
    "methods (in module crypt)": [
      [
        172,
        "crypt.methods"
      ]
    ],
    "mksalt() (in module crypt)": [
      [
        172,
        "crypt.mksalt"
      ]
    ],
    "cryptography": [
      [
        173,
        "index-0"
      ]
    ],
    "dialect (class in csv)": [
      [
        174,
        "csv.Dialect"
      ]
    ],
    "dictreader (class in csv)": [
      [
        174,
        "csv.DictReader"
      ]
    ],
    "dictwriter (class in csv)": [
      [
        174,
        "csv.DictWriter"
      ]
    ],
    "pep 305": [
      [
        174,
        "index-2"
      ],
      [
        464,
        "index-20"
      ]
    ],
    "quote_all (in module csv)": [
      [
        174,
        "csv.QUOTE_ALL"
      ]
    ],
    "quote_minimal (in module csv)": [
      [
        174,
        "csv.QUOTE_MINIMAL"
      ]
    ],
    "quote_none (in module csv)": [
      [
        174,
        "csv.QUOTE_NONE"
      ]
    ],
    "quote_nonnumeric (in module csv)": [
      [
        174,
        "csv.QUOTE_NONNUMERIC"
      ]
    ],
    "quote_notnull (in module csv)": [
      [
        174,
        "csv.QUOTE_NOTNULL"
      ]
    ],
    "quote_strings (in module csv)": [
      [
        174,
        "csv.QUOTE_STRINGS"
      ]
    ],
    "rfc 4180": [
      [
        174,
        "index-1"
      ]
    ],
    "sniffer (class in csv)": [
      [
        174,
        "csv.Sniffer"
      ]
    ],
    "__next__() (csv.csvreader method)": [
      [
        174,
        "csv.csvreader.__next__"
      ]
    ],
    "csv": [
      [
        174,
        "index-0"
      ],
      [
        174,
        "module-csv"
      ]
    ],
    "csv.reader function": [
      [
        174,
        "index-3"
      ]
    ],
    "data": [
      [
        174,
        "index-0"
      ],
      [
        346,
        "index-0"
      ],
      [
        427,
        "index-0"
      ],
      [
        427,
        "index-4"
      ],
      [
        429,
        "index-7"
      ]
    ],
    "delimiter (csv.dialect attribute)": [
      [
        174,
        "csv.Dialect.delimiter"
      ]
    ],
    "dialect (csv.csvreader attribute)": [
      [
        174,
        "csv.csvreader.dialect"
      ]
    ],
    "dialect (csv.csvwriter attribute)": [
      [
        174,
        "csv.csvwriter.dialect"
      ]
    ],
    "doublequote (csv.dialect attribute)": [
      [
        174,
        "csv.Dialect.doublequote"
      ]
    ],
    "escapechar (csv.dialect attribute)": [
      [
        174,
        "csv.Dialect.escapechar"
      ]
    ],
    "excel (class in csv)": [
      [
        174,
        "csv.excel"
      ]
    ],
    "excel_tab (class in csv)": [
      [
        174,
        "csv.excel_tab"
      ]
    ],
    "field_size_limit() (in module csv)": [
      [
        174,
        "csv.field_size_limit"
      ]
    ],
    "fieldnames (csv.dictreader attribute)": [
      [
        174,
        "csv.DictReader.fieldnames"
      ]
    ],
    "get_dialect() (in module csv)": [
      [
        174,
        "csv.get_dialect"
      ]
    ],
    "has_header() (csv.sniffer method)": [
      [
        174,
        "csv.Sniffer.has_header"
      ]
    ],
    "line_num (csv.csvreader attribute)": [
      [
        174,
        "csv.csvreader.line_num"
      ]
    ],
    "lineterminator (csv.dialect attribute)": [
      [
        174,
        "csv.Dialect.lineterminator"
      ]
    ],
    "list_dialects() (in module csv)": [
      [
        174,
        "csv.list_dialects"
      ]
    ],
    "quotechar (csv.dialect attribute)": [
      [
        174,
        "csv.Dialect.quotechar"
      ]
    ],
    "quoting (csv.dialect attribute)": [
      [
        174,
        "csv.Dialect.quoting"
      ]
    ],
    "reader() (in module csv)": [
      [
        174,
        "csv.reader"
      ]
    ],
    "register_dialect() (in module csv)": [
      [
        174,
        "csv.register_dialect"
      ]
    ],
    "skipinitialspace (csv.dialect attribute)": [
      [
        174,
        "csv.Dialect.skipinitialspace"
      ]
    ],
    "sniff() (csv.sniffer method)": [
      [
        174,
        "csv.Sniffer.sniff"
      ]
    ],
    "strict (csv.dialect attribute)": [
      [
        174,
        "csv.Dialect.strict"
      ]
    ],
    "tabular": [
      [
        174,
        "index-0"
      ]
    ],
    "unix_dialect (class in csv)": [
      [
        174,
        "csv.unix_dialect"
      ]
    ],
    "unregister_dialect() (in module csv)": [
      [
        174,
        "csv.unregister_dialect"
      ]
    ],
    "writeheader() (csv.dictwriter method)": [
      [
        174,
        "csv.DictWriter.writeheader"
      ]
    ],
    "writer() (in module csv)": [
      [
        174,
        "csv.writer"
      ]
    ],
    "writerow() (csv.csvwriter method)": [
      [
        174,
        "csv.csvwriter.writerow"
      ]
    ],
    "writerows() (csv.csvwriter method)": [
      [
        174,
        "csv.csvwriter.writerows"
      ]
    ],
    "array (class in ctypes)": [
      [
        175,
        "ctypes.Array"
      ]
    ],
    "bigendianstructure (class in ctypes)": [
      [
        175,
        "ctypes.BigEndianStructure"
      ]
    ],
    "bigendianunion (class in ctypes)": [
      [
        175,
        "ctypes.BigEndianUnion"
      ]
    ],
    "cdll (class in ctypes)": [
      [
        175,
        "ctypes.CDLL"
      ]
    ],
    "cfunctype() (in module ctypes)": [
      [
        175,
        "ctypes.CFUNCTYPE"
      ]
    ],
    "dllcanunloadnow() (in module ctypes)": [
      [
        175,
        "ctypes.DllCanUnloadNow"
      ]
    ],
    "dllgetclassobject() (in module ctypes)": [
      [
        175,
        "ctypes.DllGetClassObject"
      ]
    ],
    "formaterror() (in module ctypes)": [
      [
        175,
        "ctypes.FormatError"
      ]
    ],
    "getlasterror() (in module ctypes)": [
      [
        175,
        "ctypes.GetLastError"
      ]
    ],
    "hresult (class in ctypes)": [
      [
        175,
        "ctypes.HRESULT"
      ]
    ],
    "libraryloader (class in ctypes)": [
      [
        175,
        "ctypes.LibraryLoader"
      ]
    ],
    "littleendianstructure (class in ctypes)": [
      [
        175,
        "ctypes.LittleEndianStructure"
      ]
    ],
    "littleendianunion (class in ctypes)": [
      [
        175,
        "ctypes.LittleEndianUnion"
      ]
    ],
    "loadlibrary() (ctypes.libraryloader method)": [
      [
        175,
        "ctypes.LibraryLoader.LoadLibrary"
      ]
    ],
    "oledll (class in ctypes)": [
      [
        175,
        "ctypes.OleDLL"
      ]
    ],
    "pointer() (in module ctypes)": [
      [
        175,
        "ctypes.POINTER"
      ],
      [
        175,
        "ctypes.pointer"
      ]
    ],
    "pyfunctype() (in module ctypes)": [
      [
        175,
        "ctypes.PYFUNCTYPE"
      ]
    ],
    "pydll (class in ctypes)": [
      [
        175,
        "ctypes.PyDLL"
      ]
    ],
    "structure (class in ctypes)": [
      [
        175,
        "ctypes.Structure"
      ]
    ],
    "union (class in ctypes)": [
      [
        175,
        "ctypes.Union"
      ]
    ],
    "winfunctype() (in module ctypes)": [
      [
        175,
        "ctypes.WINFUNCTYPE"
      ]
    ],
    "windll (class in ctypes)": [
      [
        175,
        "ctypes.WinDLL"
      ]
    ],
    "winerror() (in module ctypes)": [
      [
        175,
        "ctypes.WinError"
      ]
    ],
    "_cdata (class in ctypes)": [
      [
        175,
        "ctypes._CData"
      ]
    ],
    "_funcptr (class in ctypes)": [
      [
        175,
        "ctypes._FuncPtr"
      ]
    ],
    "_pointer (class in ctypes)": [
      [
        175,
        "ctypes._Pointer"
      ]
    ],
    "_simplecdata (class in ctypes)": [
      [
        175,
        "ctypes._SimpleCData"
      ]
    ],
    "_anonymous_ (ctypes.structure attribute)": [
      [
        175,
        "ctypes.Structure._anonymous_"
      ]
    ],
    "_b_base_ (ctypes._cdata attribute)": [
      [
        175,
        "ctypes._CData._b_base_"
      ]
    ],
    "_b_needsfree_ (ctypes._cdata attribute)": [
      [
        175,
        "ctypes._CData._b_needsfree_"
      ]
    ],
    "_fields_ (ctypes.structure attribute)": [
      [
        175,
        "ctypes.Structure._fields_"
      ]
    ],
    "_handle (ctypes.pydll attribute)": [
      [
        175,
        "ctypes.PyDLL._handle"
      ]
    ],
    "_length_ (ctypes.array attribute)": [
      [
        175,
        "ctypes.Array._length_"
      ]
    ],
    "_name (ctypes.pydll attribute)": [
      [
        175,
        "ctypes.PyDLL._name"
      ]
    ],
    "_objects (ctypes._cdata attribute)": [
      [
        175,
        "ctypes._CData._objects"
      ]
    ],
    "_pack_ (ctypes.structure attribute)": [
      [
        175,
        "ctypes.Structure._pack_"
      ]
    ],
    "_type_ (ctypes.array attribute)": [
      [
        175,
        "ctypes.Array._type_"
      ]
    ],
    "_type_ (ctypes._pointer attribute)": [
      [
        175,
        "ctypes._Pointer._type_"
      ]
    ],
    "addressof() (in module ctypes)": [
      [
        175,
        "ctypes.addressof"
      ]
    ],
    "alignment() (in module ctypes)": [
      [
        175,
        "ctypes.alignment"
      ]
    ],
    "argtypes (ctypes._funcptr attribute)": [
      [
        175,
        "ctypes._FuncPtr.argtypes"
      ]
    ],
    "byref() (in module ctypes)": [
      [
        175,
        "ctypes.byref"
      ]
    ],
    "c_bool (class in ctypes)": [
      [
        175,
        "ctypes.c_bool"
      ]
    ],
    "c_byte (class in ctypes)": [
      [
        175,
        "ctypes.c_byte"
      ]
    ],
    "c_char (class in ctypes)": [
      [
        175,
        "ctypes.c_char"
      ]
    ],
    "c_char_p (class in ctypes)": [
      [
        175,
        "ctypes.c_char_p"
      ]
    ],
    "c_double (class in ctypes)": [
      [
        175,
        "ctypes.c_double"
      ]
    ],
    "c_float (class in ctypes)": [
      [
        175,
        "ctypes.c_float"
      ]
    ],
    "c_int (class in ctypes)": [
      [
        175,
        "ctypes.c_int"
      ]
    ],
    "c_int16 (class in ctypes)": [
      [
        175,
        "ctypes.c_int16"
      ]
    ],
    "c_int32 (class in ctypes)": [
      [
        175,
        "ctypes.c_int32"
      ]
    ],
    "c_int64 (class in ctypes)": [
      [
        175,
        "ctypes.c_int64"
      ]
    ],
    "c_int8 (class in ctypes)": [
      [
        175,
        "ctypes.c_int8"
      ]
    ],
    "c_long (class in ctypes)": [
      [
        175,
        "ctypes.c_long"
      ]
    ],
    "c_longdouble (class in ctypes)": [
      [
        175,
        "ctypes.c_longdouble"
      ]
    ],
    "c_longlong (class in ctypes)": [
      [
        175,
        "ctypes.c_longlong"
      ]
    ],
    "c_short (class in ctypes)": [
      [
        175,
        "ctypes.c_short"
      ]
    ],
    "c_size_t (class in ctypes)": [
      [
        175,
        "ctypes.c_size_t"
      ]
    ],
    "c_ssize_t (class in ctypes)": [
      [
        175,
        "ctypes.c_ssize_t"
      ]
    ],
    "c_time_t (class in ctypes)": [
      [
        175,
        "ctypes.c_time_t"
      ]
    ],
    "c_ubyte (class in ctypes)": [
      [
        175,
        "ctypes.c_ubyte"
      ]
    ],
    "c_uint (class in ctypes)": [
      [
        175,
        "ctypes.c_uint"
      ]
    ],
    "c_uint16 (class in ctypes)": [
      [
        175,
        "ctypes.c_uint16"
      ]
    ],
    "c_uint32 (class in ctypes)": [
      [
        175,
        "ctypes.c_uint32"
      ]
    ],
    "c_uint64 (class in ctypes)": [
      [
        175,
        "ctypes.c_uint64"
      ]
    ],
    "c_uint8 (class in ctypes)": [
      [
        175,
        "ctypes.c_uint8"
      ]
    ],
    "c_ulong (class in ctypes)": [
      [
        175,
        "ctypes.c_ulong"
      ]
    ],
    "c_ulonglong (class in ctypes)": [
      [
        175,
        "ctypes.c_ulonglong"
      ]
    ],
    "c_ushort (class in ctypes)": [
      [
        175,
        "ctypes.c_ushort"
      ]
    ],
    "c_void_p (class in ctypes)": [
      [
        175,
        "ctypes.c_void_p"
      ]
    ],
    "c_wchar (class in ctypes)": [
      [
        175,
        "ctypes.c_wchar"
      ]
    ],
    "c_wchar_p (class in ctypes)": [
      [
        175,
        "ctypes.c_wchar_p"
      ]
    ],
    "cast() (in module ctypes)": [
      [
        175,
        "ctypes.cast"
      ]
    ],
    "contents (ctypes._pointer attribute)": [
      [
        175,
        "ctypes._Pointer.contents"
      ]
    ],
    "create_string_buffer() (in module ctypes)": [
      [
        175,
        "ctypes.create_string_buffer"
      ]
    ],
    "create_unicode_buffer() (in module ctypes)": [
      [
        175,
        "ctypes.create_unicode_buffer"
      ]
    ],
    "ctypes": [
      [
        175,
        "module-ctypes"
      ]
    ],
    "errcheck (ctypes._funcptr attribute)": [
      [
        175,
        "ctypes._FuncPtr.errcheck"
      ]
    ],
    "find_library() (in module ctypes.util)": [
      [
        175,
        "ctypes.util.find_library"
      ]
    ],
    "find_msvcrt() (in module ctypes.util)": [
      [
        175,
        "ctypes.util.find_msvcrt"
      ]
    ],
    "from_address() (ctypes._cdata method)": [
      [
        175,
        "ctypes._CData.from_address"
      ]
    ],
    "from_buffer() (ctypes._cdata method)": [
      [
        175,
        "ctypes._CData.from_buffer"
      ]
    ],
    "from_buffer_copy() (ctypes._cdata method)": [
      [
        175,
        "ctypes._CData.from_buffer_copy"
      ]
    ],
    "from_param() (ctypes._cdata method)": [
      [
        175,
        "ctypes._CData.from_param"
      ]
    ],
    "get_errno() (in module ctypes)": [
      [
        175,
        "ctypes.get_errno"
      ]
    ],
    "get_last_error() (in module ctypes)": [
      [
        175,
        "ctypes.get_last_error"
      ]
    ],
    "in_dll() (ctypes._cdata method)": [
      [
        175,
        "ctypes._CData.in_dll"
      ]
    ],
    "memmove() (in module ctypes)": [
      [
        175,
        "ctypes.memmove"
      ]
    ],
    "memset() (in module ctypes)": [
      [
        175,
        "ctypes.memset"
      ]
    ],
    "py_object (class in ctypes)": [
      [
        175,
        "ctypes.py_object"
      ]
    ],
    "resize() (in module ctypes)": [
      [
        175,
        "ctypes.resize"
      ]
    ],
    "restype (ctypes._funcptr attribute)": [
      [
        175,
        "ctypes._FuncPtr.restype"
      ]
    ],
    "set_errno() (in module ctypes)": [
      [
        175,
        "ctypes.set_errno"
      ]
    ],
    "set_last_error() (in module ctypes)": [
      [
        175,
        "ctypes.set_last_error"
      ]
    ],
    "sizeof() (in module ctypes)": [
      [
        175,
        "ctypes.sizeof"
      ]
    ],
    "string_at() (in module ctypes)": [
      [
        175,
        "ctypes.string_at"
      ]
    ],
    "value (ctypes._simplecdata attribute)": [
      [
        175,
        "ctypes._SimpleCData.value"
      ]
    ],
    "wstring_at() (in module ctypes)": [
      [
        175,
        "ctypes.wstring_at"
      ]
    ],
    "acs_bbss (in module curses)": [
      [
        176,
        "curses.ACS_BBSS"
      ]
    ],
    "acs_block (in module curses)": [
      [
        176,
        "curses.ACS_BLOCK"
      ]
    ],
    "acs_board (in module curses)": [
      [
        176,
        "curses.ACS_BOARD"
      ]
    ],
    "acs_bsbs (in module curses)": [
      [
        176,
        "curses.ACS_BSBS"
      ]
    ],
    "acs_bssb (in module curses)": [
      [
        176,
        "curses.ACS_BSSB"
      ]
    ],
    "acs_bsss (in module curses)": [
      [
        176,
        "curses.ACS_BSSS"
      ]
    ],
    "acs_btee (in module curses)": [
      [
        176,
        "curses.ACS_BTEE"
      ]
    ],
    "acs_bullet (in module curses)": [
      [
        176,
        "curses.ACS_BULLET"
      ]
    ],
    "acs_ckboard (in module curses)": [
      [
        176,
        "curses.ACS_CKBOARD"
      ]
    ],
    "acs_darrow (in module curses)": [
      [
        176,
        "curses.ACS_DARROW"
      ]
    ],
    "acs_degree (in module curses)": [
      [
        176,
        "curses.ACS_DEGREE"
      ]
    ],
    "acs_diamond (in module curses)": [
      [
        176,
        "curses.ACS_DIAMOND"
      ]
    ],
    "acs_gequal (in module curses)": [
      [
        176,
        "curses.ACS_GEQUAL"
      ]
    ],
    "acs_hline (in module curses)": [
      [
        176,
        "curses.ACS_HLINE"
      ]
    ],
    "acs_lantern (in module curses)": [
      [
        176,
        "curses.ACS_LANTERN"
      ]
    ],
    "acs_larrow (in module curses)": [
      [
        176,
        "curses.ACS_LARROW"
      ]
    ],
    "acs_lequal (in module curses)": [
      [
        176,
        "curses.ACS_LEQUAL"
      ]
    ],
    "acs_llcorner (in module curses)": [
      [
        176,
        "curses.ACS_LLCORNER"
      ]
    ],
    "acs_lrcorner (in module curses)": [
      [
        176,
        "curses.ACS_LRCORNER"
      ]
    ],
    "acs_ltee (in module curses)": [
      [
        176,
        "curses.ACS_LTEE"
      ]
    ],
    "acs_nequal (in module curses)": [
      [
        176,
        "curses.ACS_NEQUAL"
      ]
    ],
    "acs_pi (in module curses)": [
      [
        176,
        "curses.ACS_PI"
      ]
    ],
    "acs_plminus (in module curses)": [
      [
        176,
        "curses.ACS_PLMINUS"
      ]
    ],
    "acs_plus (in module curses)": [
      [
        176,
        "curses.ACS_PLUS"
      ]
    ],
    "acs_rarrow (in module curses)": [
      [
        176,
        "curses.ACS_RARROW"
      ]
    ],
    "acs_rtee (in module curses)": [
      [
        176,
        "curses.ACS_RTEE"
      ]
    ],
    "acs_s1 (in module curses)": [
      [
        176,
        "curses.ACS_S1"
      ]
    ],
    "acs_s3 (in module curses)": [
      [
        176,
        "curses.ACS_S3"
      ]
    ],
    "acs_s7 (in module curses)": [
      [
        176,
        "curses.ACS_S7"
      ]
    ],
    "acs_s9 (in module curses)": [
      [
        176,
        "curses.ACS_S9"
      ]
    ],
    "acs_sbbs (in module curses)": [
      [
        176,
        "curses.ACS_SBBS"
      ]
    ],
    "acs_sbsb (in module curses)": [
      [
        176,
        "curses.ACS_SBSB"
      ]
    ],
    "acs_sbss (in module curses)": [
      [
        176,
        "curses.ACS_SBSS"
      ]
    ],
    "acs_ssbb (in module curses)": [
      [
        176,
        "curses.ACS_SSBB"
      ]
    ],
    "acs_ssbs (in module curses)": [
      [
        176,
        "curses.ACS_SSBS"
      ]
    ],
    "acs_sssb (in module curses)": [
      [
        176,
        "curses.ACS_SSSB"
      ]
    ],
    "acs_ssss (in module curses)": [
      [
        176,
        "curses.ACS_SSSS"
      ]
    ],
    "acs_sterling (in module curses)": [
      [
        176,
        "curses.ACS_STERLING"
      ]
    ],
    "acs_ttee (in module curses)": [
      [
        176,
        "curses.ACS_TTEE"
      ]
    ],
    "acs_uarrow (in module curses)": [
      [
        176,
        "curses.ACS_UARROW"
      ]
    ],
    "acs_ulcorner (in module curses)": [
      [
        176,
        "curses.ACS_ULCORNER"
      ]
    ],
    "acs_urcorner (in module curses)": [
      [
        176,
        "curses.ACS_URCORNER"
      ]
    ],
    "acs_vline (in module curses)": [
      [
        176,
        "curses.ACS_VLINE"
      ]
    ],
    "a_altcharset (in module curses)": [
      [
        176,
        "curses.A_ALTCHARSET"
      ]
    ],
    "a_attributes (in module curses)": [
      [
        176,
        "curses.A_ATTRIBUTES"
      ]
    ],
    "a_blink (in module curses)": [
      [
        176,
        "curses.A_BLINK"
      ]
    ],
    "a_bold (in module curses)": [
      [
        176,
        "curses.A_BOLD"
      ]
    ],
    "a_chartext (in module curses)": [
      [
        176,
        "curses.A_CHARTEXT"
      ]
    ],
    "a_color (in module curses)": [
      [
        176,
        "curses.A_COLOR"
      ]
    ],
    "a_dim (in module curses)": [
      [
        176,
        "curses.A_DIM"
      ]
    ],
    "a_horizontal (in module curses)": [
      [
        176,
        "curses.A_HORIZONTAL"
      ]
    ],
    "a_invis (in module curses)": [
      [
        176,
        "curses.A_INVIS"
      ]
    ],
    "a_italic (in module curses)": [
      [
        176,
        "curses.A_ITALIC"
      ]
    ],
    "a_left (in module curses)": [
      [
        176,
        "curses.A_LEFT"
      ]
    ],
    "a_low (in module curses)": [
      [
        176,
        "curses.A_LOW"
      ]
    ],
    "a_normal (in module curses)": [
      [
        176,
        "curses.A_NORMAL"
      ]
    ],
    "a_protect (in module curses)": [
      [
        176,
        "curses.A_PROTECT"
      ]
    ],
    "a_reverse (in module curses)": [
      [
        176,
        "curses.A_REVERSE"
      ]
    ],
    "a_right (in module curses)": [
      [
        176,
        "curses.A_RIGHT"
      ]
    ],
    "a_standout (in module curses)": [
      [
        176,
        "curses.A_STANDOUT"
      ]
    ],
    "a_top (in module curses)": [
      [
        176,
        "curses.A_TOP"
      ]
    ],
    "a_underline (in module curses)": [
      [
        176,
        "curses.A_UNDERLINE"
      ]
    ],
    "a_vertical (in module curses)": [
      [
        176,
        "curses.A_VERTICAL"
      ]
    ],
    "button_alt (in module curses)": [
      [
        176,
        "curses.BUTTON_ALT"
      ]
    ],
    "button_ctrl (in module curses)": [
      [
        176,
        "curses.BUTTON_CTRL"
      ]
    ],
    "button_shift (in module curses)": [
      [
        176,
        "curses.BUTTON_SHIFT"
      ]
    ],
    "buttonn_clicked (in module curses)": [
      [
        176,
        "curses.BUTTONn_CLICKED"
      ]
    ],
    "buttonn_double_clicked (in module curses)": [
      [
        176,
        "curses.BUTTONn_DOUBLE_CLICKED"
      ]
    ],
    "buttonn_pressed (in module curses)": [
      [
        176,
        "curses.BUTTONn_PRESSED"
      ]
    ],
    "buttonn_released (in module curses)": [
      [
        176,
        "curses.BUTTONn_RELEASED"
      ]
    ],
    "buttonn_triple_clicked (in module curses)": [
      [
        176,
        "curses.BUTTONn_TRIPLE_CLICKED"
      ]
    ],
    "colors (in module curses)": [
      [
        176,
        "curses.COLORS"
      ]
    ],
    "color_black (in module curses)": [
      [
        176,
        "curses.COLOR_BLACK"
      ]
    ],
    "color_blue (in module curses)": [
      [
        176,
        "curses.COLOR_BLUE"
      ]
    ],
    "color_cyan (in module curses)": [
      [
        176,
        "curses.COLOR_CYAN"
      ]
    ],
    "color_green (in module curses)": [
      [
        176,
        "curses.COLOR_GREEN"
      ]
    ],
    "color_magenta (in module curses)": [
      [
        176,
        "curses.COLOR_MAGENTA"
      ]
    ],
    "color_pairs (in module curses)": [
      [
        176,
        "curses.COLOR_PAIRS"
      ]
    ],
    "color_red (in module curses)": [
      [
        176,
        "curses.COLOR_RED"
      ]
    ],
    "color_white (in module curses)": [
      [
        176,
        "curses.COLOR_WHITE"
      ]
    ],
    "color_yellow (in module curses)": [
      [
        176,
        "curses.COLOR_YELLOW"
      ]
    ],
    "cols (in module curses)": [
      [
        176,
        "curses.COLS"
      ]
    ],
    "columns": [
      [
        176,
        "index-4"
      ],
      [
        176,
        "index-6"
      ]
    ],
    "err (in module curses)": [
      [
        176,
        "curses.ERR"
      ]
    ],
    "key_a1 (in module curses)": [
      [
        176,
        "curses.KEY_A1"
      ]
    ],
    "key_a3 (in module curses)": [
      [
        176,
        "curses.KEY_A3"
      ]
    ],
    "key_b2 (in module curses)": [
      [
        176,
        "curses.KEY_B2"
      ]
    ],
    "key_backspace (in module curses)": [
      [
        176,
        "curses.KEY_BACKSPACE"
      ]
    ],
    "key_beg (in module curses)": [
      [
        176,
        "curses.KEY_BEG"
      ]
    ],
    "key_break (in module curses)": [
      [
        176,
        "curses.KEY_BREAK"
      ]
    ],
    "key_btab (in module curses)": [
      [
        176,
        "curses.KEY_BTAB"
      ]
    ],
    "key_c1 (in module curses)": [
      [
        176,
        "curses.KEY_C1"
      ]
    ],
    "key_c3 (in module curses)": [
      [
        176,
        "curses.KEY_C3"
      ]
    ],
    "key_cancel (in module curses)": [
      [
        176,
        "curses.KEY_CANCEL"
      ]
    ],
    "key_catab (in module curses)": [
      [
        176,
        "curses.KEY_CATAB"
      ]
    ],
    "key_clear (in module curses)": [
      [
        176,
        "curses.KEY_CLEAR"
      ]
    ],
    "key_close (in module curses)": [
      [
        176,
        "curses.KEY_CLOSE"
      ]
    ],
    "key_command (in module curses)": [
      [
        176,
        "curses.KEY_COMMAND"
      ]
    ],
    "key_copy (in module curses)": [
      [
        176,
        "curses.KEY_COPY"
      ]
    ],
    "key_create (in module curses)": [
      [
        176,
        "curses.KEY_CREATE"
      ]
    ],
    "key_ctab (in module curses)": [
      [
        176,
        "curses.KEY_CTAB"
      ]
    ],
    "key_dc (in module curses)": [
      [
        176,
        "curses.KEY_DC"
      ]
    ],
    "key_dl (in module curses)": [
      [
        176,
        "curses.KEY_DL"
      ]
    ],
    "key_down (in module curses)": [
      [
        176,
        "curses.KEY_DOWN"
      ]
    ],
    "key_eic (in module curses)": [
      [
        176,
        "curses.KEY_EIC"
      ]
    ],
    "key_end (in module curses)": [
      [
        176,
        "curses.KEY_END"
      ]
    ],
    "key_enter (in module curses)": [
      [
        176,
        "curses.KEY_ENTER"
      ]
    ],
    "key_eol (in module curses)": [
      [
        176,
        "curses.KEY_EOL"
      ]
    ],
    "key_eos (in module curses)": [
      [
        176,
        "curses.KEY_EOS"
      ]
    ],
    "key_exit (in module curses)": [
      [
        176,
        "curses.KEY_EXIT"
      ]
    ],
    "key_f0 (in module curses)": [
      [
        176,
        "curses.KEY_F0"
      ]
    ],
    "key_find (in module curses)": [
      [
        176,
        "curses.KEY_FIND"
      ]
    ],
    "key_fn (in module curses)": [
      [
        176,
        "curses.KEY_Fn"
      ]
    ],
    "key_help (in module curses)": [
      [
        176,
        "curses.KEY_HELP"
      ]
    ],
    "key_home (in module curses)": [
      [
        176,
        "curses.KEY_HOME"
      ]
    ],
    "key_ic (in module curses)": [
      [
        176,
        "curses.KEY_IC"
      ]
    ],
    "key_il (in module curses)": [
      [
        176,
        "curses.KEY_IL"
      ]
    ],
    "key_left (in module curses)": [
      [
        176,
        "curses.KEY_LEFT"
      ]
    ],
    "key_ll (in module curses)": [
      [
        176,
        "curses.KEY_LL"
      ]
    ],
    "key_mark (in module curses)": [
      [
        176,
        "curses.KEY_MARK"
      ]
    ],
    "key_max (in module curses)": [
      [
        176,
        "curses.KEY_MAX"
      ]
    ],
    "key_message (in module curses)": [
      [
        176,
        "curses.KEY_MESSAGE"
      ]
    ],
    "key_min (in module curses)": [
      [
        176,
        "curses.KEY_MIN"
      ]
    ],
    "key_mouse (in module curses)": [
      [
        176,
        "curses.KEY_MOUSE"
      ]
    ],
    "key_move (in module curses)": [
      [
        176,
        "curses.KEY_MOVE"
      ]
    ],
    "key_next (in module curses)": [
      [
        176,
        "curses.KEY_NEXT"
      ]
    ],
    "key_npage (in module curses)": [
      [
        176,
        "curses.KEY_NPAGE"
      ]
    ],
    "key_open (in module curses)": [
      [
        176,
        "curses.KEY_OPEN"
      ]
    ],
    "key_options (in module curses)": [
      [
        176,
        "curses.KEY_OPTIONS"
      ]
    ],
    "key_ppage (in module curses)": [
      [
        176,
        "curses.KEY_PPAGE"
      ]
    ],
    "key_previous (in module curses)": [
      [
        176,
        "curses.KEY_PREVIOUS"
      ]
    ],
    "key_print (in module curses)": [
      [
        176,
        "curses.KEY_PRINT"
      ]
    ],
    "key_redo (in module curses)": [
      [
        176,
        "curses.KEY_REDO"
      ]
    ],
    "key_reference (in module curses)": [
      [
        176,
        "curses.KEY_REFERENCE"
      ]
    ],
    "key_refresh (in module curses)": [
      [
        176,
        "curses.KEY_REFRESH"
      ]
    ],
    "key_replace (in module curses)": [
      [
        176,
        "curses.KEY_REPLACE"
      ]
    ],
    "key_reset (in module curses)": [
      [
        176,
        "curses.KEY_RESET"
      ]
    ],
    "key_resize (in module curses)": [
      [
        176,
        "curses.KEY_RESIZE"
      ]
    ],
    "key_restart (in module curses)": [
      [
        176,
        "curses.KEY_RESTART"
      ]
    ],
    "key_resume (in module curses)": [
      [
        176,
        "curses.KEY_RESUME"
      ]
    ],
    "key_right (in module curses)": [
      [
        176,
        "curses.KEY_RIGHT"
      ]
    ],
    "key_save (in module curses)": [
      [
        176,
        "curses.KEY_SAVE"
      ]
    ],
    "key_sbeg (in module curses)": [
      [
        176,
        "curses.KEY_SBEG"
      ]
    ],
    "key_scancel (in module curses)": [
      [
        176,
        "curses.KEY_SCANCEL"
      ]
    ],
    "key_scommand (in module curses)": [
      [
        176,
        "curses.KEY_SCOMMAND"
      ]
    ],
    "key_scopy (in module curses)": [
      [
        176,
        "curses.KEY_SCOPY"
      ]
    ],
    "key_screate (in module curses)": [
      [
        176,
        "curses.KEY_SCREATE"
      ]
    ],
    "key_sdc (in module curses)": [
      [
        176,
        "curses.KEY_SDC"
      ]
    ],
    "key_sdl (in module curses)": [
      [
        176,
        "curses.KEY_SDL"
      ]
    ],
    "key_select (in module curses)": [
      [
        176,
        "curses.KEY_SELECT"
      ]
    ],
    "key_send (in module curses)": [
      [
        176,
        "curses.KEY_SEND"
      ]
    ],
    "key_seol (in module curses)": [
      [
        176,
        "curses.KEY_SEOL"
      ]
    ],
    "key_sexit (in module curses)": [
      [
        176,
        "curses.KEY_SEXIT"
      ]
    ],
    "key_sf (in module curses)": [
      [
        176,
        "curses.KEY_SF"
      ]
    ],
    "key_sfind (in module curses)": [
      [
        176,
        "curses.KEY_SFIND"
      ]
    ],
    "key_shelp (in module curses)": [
      [
        176,
        "curses.KEY_SHELP"
      ]
    ],
    "key_shome (in module curses)": [
      [
        176,
        "curses.KEY_SHOME"
      ]
    ],
    "key_sic (in module curses)": [
      [
        176,
        "curses.KEY_SIC"
      ]
    ],
    "key_sleft (in module curses)": [
      [
        176,
        "curses.KEY_SLEFT"
      ]
    ],
    "key_smessage (in module curses)": [
      [
        176,
        "curses.KEY_SMESSAGE"
      ]
    ],
    "key_smove (in module curses)": [
      [
        176,
        "curses.KEY_SMOVE"
      ]
    ],
    "key_snext (in module curses)": [
      [
        176,
        "curses.KEY_SNEXT"
      ]
    ],
    "key_soptions (in module curses)": [
      [
        176,
        "curses.KEY_SOPTIONS"
      ]
    ],
    "key_sprevious (in module curses)": [
      [
        176,
        "curses.KEY_SPREVIOUS"
      ]
    ],
    "key_sprint (in module curses)": [
      [
        176,
        "curses.KEY_SPRINT"
      ]
    ],
    "key_sr (in module curses)": [
      [
        176,
        "curses.KEY_SR"
      ]
    ],
    "key_sredo (in module curses)": [
      [
        176,
        "curses.KEY_SREDO"
      ]
    ],
    "key_sreplace (in module curses)": [
      [
        176,
        "curses.KEY_SREPLACE"
      ]
    ],
    "key_sreset (in module curses)": [
      [
        176,
        "curses.KEY_SRESET"
      ]
    ],
    "key_sright (in module curses)": [
      [
        176,
        "curses.KEY_SRIGHT"
      ]
    ],
    "key_srsume (in module curses)": [
      [
        176,
        "curses.KEY_SRSUME"
      ]
    ],
    "key_ssave (in module curses)": [
      [
        176,
        "curses.KEY_SSAVE"
      ]
    ],
    "key_ssuspend (in module curses)": [
      [
        176,
        "curses.KEY_SSUSPEND"
      ]
    ],
    "key_stab (in module curses)": [
      [
        176,
        "curses.KEY_STAB"
      ]
    ],
    "key_sundo (in module curses)": [
      [
        176,
        "curses.KEY_SUNDO"
      ]
    ],
    "key_suspend (in module curses)": [
      [
        176,
        "curses.KEY_SUSPEND"
      ]
    ],
    "key_undo (in module curses)": [
      [
        176,
        "curses.KEY_UNDO"
      ]
    ],
    "key_up (in module curses)": [
      [
        176,
        "curses.KEY_UP"
      ]
    ],
    "lines": [
      [
        176,
        "index-0"
      ],
      [
        176,
        "index-3"
      ],
      [
        176,
        "index-5"
      ]
    ],
    "lines (in module curses)": [
      [
        176,
        "curses.LINES"
      ]
    ],
    "ok (in module curses)": [
      [
        176,
        "curses.OK"
      ]
    ],
    "term": [
      [
        176,
        "index-1"
      ],
      [
        176,
        "index-2"
      ]
    ],
    "textbox (class in curses.textpad)": [
      [
        176,
        "curses.textpad.Textbox"
      ]
    ],
    "__version__ (in module curses)": [
      [
        176,
        "curses.__version__"
      ]
    ],
    "addch() (curses.window method)": [
      [
        176,
        "curses.window.addch"
      ]
    ],
    "addnstr() (curses.window method)": [
      [
        176,
        "curses.window.addnstr"
      ]
    ],
    "addstr() (curses.window method)": [
      [
        176,
        "curses.window.addstr"
      ]
    ],
    "attroff() (curses.window method)": [
      [
        176,
        "curses.window.attroff"
      ]
    ],
    "attron() (curses.window method)": [
      [
        176,
        "curses.window.attron"
      ]
    ],
    "attrset() (curses.window method)": [
      [
        176,
        "curses.window.attrset"
      ]
    ],
    "baudrate() (in module curses)": [
      [
        176,
        "curses.baudrate"
      ]
    ],
    "beep() (in module curses)": [
      [
        176,
        "curses.beep"
      ]
    ],
    "bkgd() (curses.window method)": [
      [
        176,
        "curses.window.bkgd"
      ]
    ],
    "bkgdset() (curses.window method)": [
      [
        176,
        "curses.window.bkgdset"
      ]
    ],
    "border() (curses.window method)": [
      [
        176,
        "curses.window.border"
      ]
    ],
    "box() (curses.window method)": [
      [
        176,
        "curses.window.box"
      ]
    ],
    "can_change_color() (in module curses)": [
      [
        176,
        "curses.can_change_color"
      ]
    ],
    "cbreak() (in module curses)": [
      [
        176,
        "curses.cbreak"
      ]
    ],
    "chgat() (curses.window method)": [
      [
        176,
        "curses.window.chgat"
      ]
    ],
    "clear() (curses.window method)": [
      [
        176,
        "curses.window.clear"
      ]
    ],
    "clearok() (curses.window method)": [
      [
        176,
        "curses.window.clearok"
      ]
    ],
    "clrtobot() (curses.window method)": [
      [
        176,
        "curses.window.clrtobot"
      ]
    ],
    "clrtoeol() (curses.window method)": [
      [
        176,
        "curses.window.clrtoeol"
      ]
    ],
    "color_content() (in module curses)": [
      [
        176,
        "curses.color_content"
      ]
    ],
    "color_pair() (in module curses)": [
      [
        176,
        "curses.color_pair"
      ]
    ],
    "curs_set() (in module curses)": [
      [
        176,
        "curses.curs_set"
      ]
    ],
    "curses": [
      [
        176,
        "module-curses"
      ]
    ],
    "curses.textpad": [
      [
        176,
        "module-curses.textpad"
      ]
    ],
    "cursyncup() (curses.window method)": [
      [
        176,
        "curses.window.cursyncup"
      ]
    ],
    "def_prog_mode() (in module curses)": [
      [
        176,
        "curses.def_prog_mode"
      ]
    ],
    "def_shell_mode() (in module curses)": [
      [
        176,
        "curses.def_shell_mode"
      ]
    ],
    "delay_output() (in module curses)": [
      [
        176,
        "curses.delay_output"
      ]
    ],
    "delch() (curses.window method)": [
      [
        176,
        "curses.window.delch"
      ]
    ],
    "deleteln() (curses.window method)": [
      [
        176,
        "curses.window.deleteln"
      ]
    ],
    "derwin() (curses.window method)": [
      [
        176,
        "curses.window.derwin"
      ]
    ],
    "do_command() (curses.textpad.textbox method)": [
      [
        176,
        "curses.textpad.Textbox.do_command"
      ]
    ],
    "doupdate() (in module curses)": [
      [
        176,
        "curses.doupdate"
      ]
    ],
    "echo() (in module curses)": [
      [
        176,
        "curses.echo"
      ]
    ],
    "echochar() (curses.window method)": [
      [
        176,
        "curses.window.echochar"
      ]
    ],
    "edit() (curses.textpad.textbox method)": [
      [
        176,
        "curses.textpad.Textbox.edit"
      ]
    ],
    "enclose() (curses.window method)": [
      [
        176,
        "curses.window.enclose"
      ]
    ],
    "encoding (curses.window attribute)": [
      [
        176,
        "curses.window.encoding"
      ]
    ],
    "endwin() (in module curses)": [
      [
        176,
        "curses.endwin"
      ]
    ],
    "erase() (curses.window method)": [
      [
        176,
        "curses.window.erase"
      ]
    ],
    "erasechar() (in module curses)": [
      [
        176,
        "curses.erasechar"
      ]
    ],
    "filter() (in module curses)": [
      [
        176,
        "curses.filter"
      ]
    ],
    "flash() (in module curses)": [
      [
        176,
        "curses.flash"
      ]
    ],
    "flushinp() (in module curses)": [
      [
        176,
        "curses.flushinp"
      ]
    ],
    "gather() (curses.textpad.textbox method)": [
      [
        176,
        "curses.textpad.Textbox.gather"
      ]
    ],
    "get_escdelay() (in module curses)": [
      [
        176,
        "curses.get_escdelay"
      ]
    ],
    "get_tabsize() (in module curses)": [
      [
        176,
        "curses.get_tabsize"
      ]
    ],
    "get_wch() (curses.window method)": [
      [
        176,
        "curses.window.get_wch"
      ]
    ],
    "getbegyx() (curses.window method)": [
      [
        176,
        "curses.window.getbegyx"
      ]
    ],
    "getbkgd() (curses.window method)": [
      [
        176,
        "curses.window.getbkgd"
      ]
    ],
    "getch() (curses.window method)": [
      [
        176,
        "curses.window.getch"
      ]
    ],
    "getkey() (curses.window method)": [
      [
        176,
        "curses.window.getkey"
      ]
    ],
    "getmaxyx() (curses.window method)": [
      [
        176,
        "curses.window.getmaxyx"
      ]
    ],
    "getmouse() (in module curses)": [
      [
        176,
        "curses.getmouse"
      ]
    ],
    "getparyx() (curses.window method)": [
      [
        176,
        "curses.window.getparyx"
      ]
    ],
    "getstr() (curses.window method)": [
      [
        176,
        "curses.window.getstr"
      ]
    ],
    "getsyx() (in module curses)": [
      [
        176,
        "curses.getsyx"
      ]
    ],
    "getwin() (in module curses)": [
      [
        176,
        "curses.getwin"
      ]
    ],
    "getyx() (curses.window method)": [
      [
        176,
        "curses.window.getyx"
      ]
    ],
    "halfdelay() (in module curses)": [
      [
        176,
        "curses.halfdelay"
      ]
    ],
    "has_colors() (in module curses)": [
      [
        176,
        "curses.has_colors"
      ]
    ],
    "has_extended_color_support() (in module curses)": [
      [
        176,
        "curses.has_extended_color_support"
      ]
    ],
    "has_ic() (in module curses)": [
      [
        176,
        "curses.has_ic"
      ]
    ],
    "has_il() (in module curses)": [
      [
        176,
        "curses.has_il"
      ]
    ],
    "has_key() (in module curses)": [
      [
        176,
        "curses.has_key"
      ]
    ],
    "hline() (curses.window method)": [
      [
        176,
        "curses.window.hline"
      ]
    ],
    "idcok() (curses.window method)": [
      [
        176,
        "curses.window.idcok"
      ]
    ],
    "idlok() (curses.window method)": [
      [
        176,
        "curses.window.idlok"
      ]
    ],
    "immedok() (curses.window method)": [
      [
        176,
        "curses.window.immedok"
      ]
    ],
    "inch() (curses.window method)": [
      [
        176,
        "curses.window.inch"
      ]
    ],
    "init_color() (in module curses)": [
      [
        176,
        "curses.init_color"
      ]
    ],
    "init_pair() (in module curses)": [
      [
        176,
        "curses.init_pair"
      ]
    ],
    "initscr() (in module curses)": [
      [
        176,
        "curses.initscr"
      ]
    ],
    "insch() (curses.window method)": [
      [
        176,
        "curses.window.insch"
      ]
    ],
    "insdelln() (curses.window method)": [
      [
        176,
        "curses.window.insdelln"
      ]
    ],
    "insertln() (curses.window method)": [
      [
        176,
        "curses.window.insertln"
      ]
    ],
    "insnstr() (curses.window method)": [
      [
        176,
        "curses.window.insnstr"
      ]
    ],
    "insstr() (curses.window method)": [
      [
        176,
        "curses.window.insstr"
      ]
    ],
    "instr() (curses.window method)": [
      [
        176,
        "curses.window.instr"
      ]
    ],
    "is_linetouched() (curses.window method)": [
      [
        176,
        "curses.window.is_linetouched"
      ]
    ],
    "is_term_resized() (in module curses)": [
      [
        176,
        "curses.is_term_resized"
      ]
    ],
    "is_wintouched() (curses.window method)": [
      [
        176,
        "curses.window.is_wintouched"
      ]
    ],
    "isendwin() (in module curses)": [
      [
        176,
        "curses.isendwin"
      ]
    ],
    "keyname() (in module curses)": [
      [
        176,
        "curses.keyname"
      ]
    ],
    "keypad() (curses.window method)": [
      [
        176,
        "curses.window.keypad"
      ]
    ],
    "killchar() (in module curses)": [
      [
        176,
        "curses.killchar"
      ]
    ],
    "leaveok() (curses.window method)": [
      [
        176,
        "curses.window.leaveok"
      ]
    ],
    "longname() (in module curses)": [
      [
        176,
        "curses.longname"
      ]
    ],
    "meta() (in module curses)": [
      [
        176,
        "curses.meta"
      ]
    ],
    "mouseinterval() (in module curses)": [
      [
        176,
        "curses.mouseinterval"
      ]
    ],
    "mousemask() (in module curses)": [
      [
        176,
        "curses.mousemask"
      ]
    ],
    "move() (curses.window method)": [
      [
        176,
        "curses.window.move"
      ]
    ],
    "mvderwin() (curses.window method)": [
      [
        176,
        "curses.window.mvderwin"
      ]
    ],
    "mvwin() (curses.window method)": [
      [
        176,
        "curses.window.mvwin"
      ]
    ],
    "napms() (in module curses)": [
      [
        176,
        "curses.napms"
      ]
    ],
    "ncurses_version (in module curses)": [
      [
        176,
        "curses.ncurses_version"
      ]
    ],
    "newpad() (in module curses)": [
      [
        176,
        "curses.newpad"
      ]
    ],
    "newwin() (in module curses)": [
      [
        176,
        "curses.newwin"
      ]
    ],
    "nl() (in module curses)": [
      [
        176,
        "curses.nl"
      ]
    ],
    "nocbreak() (in module curses)": [
      [
        176,
        "curses.nocbreak"
      ]
    ],
    "nodelay() (curses.window method)": [
      [
        176,
        "curses.window.nodelay"
      ]
    ],
    "noecho() (in module curses)": [
      [
        176,
        "curses.noecho"
      ]
    ],
    "nonl() (in module curses)": [
      [
        176,
        "curses.nonl"
      ]
    ],
    "noqiflush() (in module curses)": [
      [
        176,
        "curses.noqiflush"
      ]
    ],
    "noraw() (in module curses)": [
      [
        176,
        "curses.noraw"
      ]
    ],
    "notimeout() (curses.window method)": [
      [
        176,
        "curses.window.notimeout"
      ]
    ],
    "noutrefresh() (curses.window method)": [
      [
        176,
        "curses.window.noutrefresh"
      ]
    ],
    "overlay() (curses.window method)": [
      [
        176,
        "curses.window.overlay"
      ]
    ],
    "overwrite() (curses.window method)": [
      [
        176,
        "curses.window.overwrite"
      ]
    ],
    "pair_content() (in module curses)": [
      [
        176,
        "curses.pair_content"
      ]
    ],
    "pair_number() (in module curses)": [
      [
        176,
        "curses.pair_number"
      ]
    ],
    "putp() (in module curses)": [
      [
        176,
        "curses.putp"
      ]
    ],
    "putwin() (curses.window method)": [
      [
        176,
        "curses.window.putwin"
      ]
    ],
    "qiflush() (in module curses)": [
      [
        176,
        "curses.qiflush"
      ]
    ],
    "raw() (in module curses)": [
      [
        176,
        "curses.raw"
      ]
    ],
    "rectangle() (in module curses.textpad)": [
      [
        176,
        "curses.textpad.rectangle"
      ]
    ],
    "redrawln() (curses.window method)": [
      [
        176,
        "curses.window.redrawln"
      ]
    ],
    "redrawwin() (curses.window method)": [
      [
        176,
        "curses.window.redrawwin"
      ]
    ],
    "refresh() (curses.window method)": [
      [
        176,
        "curses.window.refresh"
      ]
    ],
    "reset_prog_mode() (in module curses)": [
      [
        176,
        "curses.reset_prog_mode"
      ]
    ],
    "reset_shell_mode() (in module curses)": [
      [
        176,
        "curses.reset_shell_mode"
      ]
    ],
    "resetty() (in module curses)": [
      [
        176,
        "curses.resetty"
      ]
    ],
    "resize() (curses.window method)": [
      [
        176,
        "curses.window.resize"
      ]
    ],
    "resize_term() (in module curses)": [
      [
        176,
        "curses.resize_term"
      ]
    ],
    "resizeterm() (in module curses)": [
      [
        176,
        "curses.resizeterm"
      ]
    ],
    "savetty() (in module curses)": [
      [
        176,
        "curses.savetty"
      ]
    ],
    "scroll() (curses.window method)": [
      [
        176,
        "curses.window.scroll"
      ]
    ],
    "scrollok() (curses.window method)": [
      [
        176,
        "curses.window.scrollok"
      ]
    ],
    "set_escdelay() (in module curses)": [
      [
        176,
        "curses.set_escdelay"
      ]
    ],
    "set_tabsize() (in module curses)": [
      [
        176,
        "curses.set_tabsize"
      ]
    ],
    "setscrreg() (curses.window method)": [
      [
        176,
        "curses.window.setscrreg"
      ]
    ],
    "setsyx() (in module curses)": [
      [
        176,
        "curses.setsyx"
      ]
    ],
    "setupterm() (in module curses)": [
      [
        176,
        "curses.setupterm"
      ]
    ],
    "standend() (curses.window method)": [
      [
        176,
        "curses.window.standend"
      ]
    ],
    "standout() (curses.window method)": [
      [
        176,
        "curses.window.standout"
      ]
    ],
    "start_color() (in module curses)": [
      [
        176,
        "curses.start_color"
      ]
    ],
    "stripspaces (curses.textpad.textbox attribute)": [
      [
        176,
        "curses.textpad.Textbox.stripspaces"
      ]
    ],
    "subpad() (curses.window method)": [
      [
        176,
        "curses.window.subpad"
      ]
    ],
    "subwin() (curses.window method)": [
      [
        176,
        "curses.window.subwin"
      ]
    ],
    "syncdown() (curses.window method)": [
      [
        176,
        "curses.window.syncdown"
      ]
    ],
    "syncok() (curses.window method)": [
      [
        176,
        "curses.window.syncok"
      ]
    ],
    "syncup() (curses.window method)": [
      [
        176,
        "curses.window.syncup"
      ]
    ],
    "termattrs() (in module curses)": [
      [
        176,
        "curses.termattrs"
      ]
    ],
    "termname() (in module curses)": [
      [
        176,
        "curses.termname"
      ]
    ],
    "tigetflag() (in module curses)": [
      [
        176,
        "curses.tigetflag"
      ]
    ],
    "tigetnum() (in module curses)": [
      [
        176,
        "curses.tigetnum"
      ]
    ],
    "tigetstr() (in module curses)": [
      [
        176,
        "curses.tigetstr"
      ]
    ],
    "timeout() (curses.window method)": [
      [
        176,
        "curses.window.timeout"
      ]
    ],
    "touchline() (curses.window method)": [
      [
        176,
        "curses.window.touchline"
      ]
    ],
    "touchwin() (curses.window method)": [
      [
        176,
        "curses.window.touchwin"
      ]
    ],
    "tparm() (in module curses)": [
      [
        176,
        "curses.tparm"
      ]
    ],
    "typeahead() (in module curses)": [
      [
        176,
        "curses.typeahead"
      ]
    ],
    "unctrl() (in module curses)": [
      [
        176,
        "curses.unctrl"
      ]
    ],
    "unget_wch() (in module curses)": [
      [
        176,
        "curses.unget_wch"
      ]
    ],
    "ungetch() (in module curses)": [
      [
        176,
        "curses.ungetch"
      ]
    ],
    "ungetmouse() (in module curses)": [
      [
        176,
        "curses.ungetmouse"
      ]
    ],
    "untouchwin() (curses.window method)": [
      [
        176,
        "curses.window.untouchwin"
      ]
    ],
    "update_lines_cols() (in module curses)": [
      [
        176,
        "curses.update_lines_cols"
      ]
    ],
    "use_default_colors() (in module curses)": [
      [
        176,
        "curses.use_default_colors"
      ]
    ],
    "use_env() (in module curses)": [
      [
        176,
        "curses.use_env"
      ]
    ],
    "version (in module curses)": [
      [
        176,
        "curses.version"
      ]
    ],
    "vline() (curses.window method)": [
      [
        176,
        "curses.window.vline"
      ]
    ],
    "wrapper() (in module curses)": [
      [
        176,
        "curses.wrapper"
      ]
    ],
    "ack (in module curses.ascii)": [
      [
        177,
        "curses.ascii.ACK"
      ]
    ],
    "bel (in module curses.ascii)": [
      [
        177,
        "curses.ascii.BEL"
      ]
    ],
    "bs (in module curses.ascii)": [
      [
        177,
        "curses.ascii.BS"
      ]
    ],
    "can (in module curses.ascii)": [
      [
        177,
        "curses.ascii.CAN"
      ]
    ],
    "cr (in module curses.ascii)": [
      [
        177,
        "curses.ascii.CR"
      ]
    ],
    "dc1 (in module curses.ascii)": [
      [
        177,
        "curses.ascii.DC1"
      ]
    ],
    "dc2 (in module curses.ascii)": [
      [
        177,
        "curses.ascii.DC2"
      ]
    ],
    "dc3 (in module curses.ascii)": [
      [
        177,
        "curses.ascii.DC3"
      ]
    ],
    "dc4 (in module curses.ascii)": [
      [
        177,
        "curses.ascii.DC4"
      ]
    ],
    "del (in module curses.ascii)": [
      [
        177,
        "curses.ascii.DEL"
      ]
    ],
    "dle (in module curses.ascii)": [
      [
        177,
        "curses.ascii.DLE"
      ]
    ],
    "em (in module curses.ascii)": [
      [
        177,
        "curses.ascii.EM"
      ]
    ],
    "enq (in module curses.ascii)": [
      [
        177,
        "curses.ascii.ENQ"
      ]
    ],
    "eot (in module curses.ascii)": [
      [
        177,
        "curses.ascii.EOT"
      ]
    ],
    "esc (in module curses.ascii)": [
      [
        177,
        "curses.ascii.ESC"
      ]
    ],
    "etb (in module curses.ascii)": [
      [
        177,
        "curses.ascii.ETB"
      ]
    ],
    "etx (in module curses.ascii)": [
      [
        177,
        "curses.ascii.ETX"
      ]
    ],
    "ff (in module curses.ascii)": [
      [
        177,
        "curses.ascii.FF"
      ]
    ],
    "fs (in module curses.ascii)": [
      [
        177,
        "curses.ascii.FS"
      ]
    ],
    "gs (in module curses.ascii)": [
      [
        177,
        "curses.ascii.GS"
      ]
    ],
    "ht (in module curses.ascii)": [
      [
        177,
        "curses.ascii.HT"
      ]
    ],
    "lf (in module curses.ascii)": [
      [
        177,
        "curses.ascii.LF"
      ]
    ],
    "nak (in module curses.ascii)": [
      [
        177,
        "curses.ascii.NAK"
      ]
    ],
    "nl (in module curses.ascii)": [
      [
        177,
        "curses.ascii.NL"
      ]
    ],
    "nul (in module curses.ascii)": [
      [
        177,
        "curses.ascii.NUL"
      ]
    ],
    "rs (in module curses.ascii)": [
      [
        177,
        "curses.ascii.RS"
      ]
    ],
    "si (in module curses.ascii)": [
      [
        177,
        "curses.ascii.SI"
      ]
    ],
    "so (in module curses.ascii)": [
      [
        177,
        "curses.ascii.SO"
      ]
    ],
    "soh (in module curses.ascii)": [
      [
        177,
        "curses.ascii.SOH"
      ]
    ],
    "sp (in module curses.ascii)": [
      [
        177,
        "curses.ascii.SP"
      ]
    ],
    "stx (in module curses.ascii)": [
      [
        177,
        "curses.ascii.STX"
      ]
    ],
    "sub (in module curses.ascii)": [
      [
        177,
        "curses.ascii.SUB"
      ]
    ],
    "syn (in module curses.ascii)": [
      [
        177,
        "curses.ascii.SYN"
      ]
    ],
    "tab (in module curses.ascii)": [
      [
        177,
        "curses.ascii.TAB"
      ]
    ],
    "us (in module curses.ascii)": [
      [
        177,
        "curses.ascii.US"
      ]
    ],
    "vt (in module curses.ascii)": [
      [
        177,
        "curses.ascii.VT"
      ]
    ],
    "^ (caret)": [
      [
        177,
        "index-0"
      ],
      [
        192,
        "index-1"
      ],
      [
        318,
        "index-1"
      ],
      [
        318,
        "index-13"
      ],
      [
        343,
        "index-16"
      ],
      [
        344,
        "index-3"
      ],
      [
        380,
        "index-1"
      ],
      [
        429,
        "index-75"
      ]
    ],
    "alt() (in module curses.ascii)": [
      [
        177,
        "curses.ascii.alt"
      ]
    ],
    "ascii() (in module curses.ascii)": [
      [
        177,
        "curses.ascii.ascii"
      ]
    ],
    "controlnames (in module curses.ascii)": [
      [
        177,
        "curses.ascii.controlnames"
      ]
    ],
    "ctrl() (in module curses.ascii)": [
      [
        177,
        "curses.ascii.ctrl"
      ]
    ],
    "curses.ascii": [
      [
        177,
        "module-curses.ascii"
      ]
    ],
    "in curses module": [
      [
        177,
        "index-0"
      ]
    ],
    "isalnum() (in module curses.ascii)": [
      [
        177,
        "curses.ascii.isalnum"
      ]
    ],
    "isalpha() (in module curses.ascii)": [
      [
        177,
        "curses.ascii.isalpha"
      ]
    ],
    "isascii() (in module curses.ascii)": [
      [
        177,
        "curses.ascii.isascii"
      ]
    ],
    "isblank() (in module curses.ascii)": [
      [
        177,
        "curses.ascii.isblank"
      ]
    ],
    "iscntrl() (in module curses.ascii)": [
      [
        177,
        "curses.ascii.iscntrl"
      ]
    ],
    "isctrl() (in module curses.ascii)": [
      [
        177,
        "curses.ascii.isctrl"
      ]
    ],
    "isdigit() (in module curses.ascii)": [
      [
        177,
        "curses.ascii.isdigit"
      ]
    ],
    "isgraph() (in module curses.ascii)": [
      [
        177,
        "curses.ascii.isgraph"
      ]
    ],
    "islower() (in module curses.ascii)": [
      [
        177,
        "curses.ascii.islower"
      ]
    ],
    "ismeta() (in module curses.ascii)": [
      [
        177,
        "curses.ascii.ismeta"
      ]
    ],
    "isprint() (in module curses.ascii)": [
      [
        177,
        "curses.ascii.isprint"
      ]
    ],
    "ispunct() (in module curses.ascii)": [
      [
        177,
        "curses.ascii.ispunct"
      ]
    ],
    "isspace() (in module curses.ascii)": [
      [
        177,
        "curses.ascii.isspace"
      ]
    ],
    "isupper() (in module curses.ascii)": [
      [
        177,
        "curses.ascii.isupper"
      ]
    ],
    "isxdigit() (in module curses.ascii)": [
      [
        177,
        "curses.ascii.isxdigit"
      ]
    ],
    "unctrl() (in module curses.ascii)": [
      [
        177,
        "curses.ascii.unctrl"
      ]
    ],
    "above() (curses.panel.panel method)": [
      [
        178,
        "curses.panel.Panel.above"
      ]
    ],
    "below() (curses.panel.panel method)": [
      [
        178,
        "curses.panel.Panel.below"
      ]
    ],
    "bottom() (curses.panel.panel method)": [
      [
        178,
        "curses.panel.Panel.bottom"
      ]
    ],
    "bottom_panel() (in module curses.panel)": [
      [
        178,
        "curses.panel.bottom_panel"
      ]
    ],
    "curses.panel": [
      [
        178,
        "module-curses.panel"
      ]
    ],
    "hidden() (curses.panel.panel method)": [
      [
        178,
        "curses.panel.Panel.hidden"
      ]
    ],
    "hide() (curses.panel.panel method)": [
      [
        178,
        "curses.panel.Panel.hide"
      ]
    ],
    "move() (curses.panel.panel method)": [
      [
        178,
        "curses.panel.Panel.move"
      ]
    ],
    "new_panel() (in module curses.panel)": [
      [
        178,
        "curses.panel.new_panel"
      ]
    ],
    "replace() (curses.panel.panel method)": [
      [
        178,
        "curses.panel.Panel.replace"
      ]
    ],
    "set_userptr() (curses.panel.panel method)": [
      [
        178,
        "curses.panel.Panel.set_userptr"
      ]
    ],
    "show() (curses.panel.panel method)": [
      [
        178,
        "curses.panel.Panel.show"
      ]
    ],
    "top() (curses.panel.panel method)": [
      [
        178,
        "curses.panel.Panel.top"
      ]
    ],
    "top_panel() (in module curses.panel)": [
      [
        178,
        "curses.panel.top_panel"
      ]
    ],
    "update_panels() (in module curses.panel)": [
      [
        178,
        "curses.panel.update_panels"
      ]
    ],
    "userptr() (curses.panel.panel method)": [
      [
        178,
        "curses.panel.Panel.userptr"
      ]
    ],
    "window() (curses.panel.panel method)": [
      [
        178,
        "curses.panel.Panel.window"
      ]
    ],
    "field (class in dataclasses)": [
      [
        180,
        "dataclasses.Field"
      ]
    ],
    "frozeninstanceerror": [
      [
        180,
        "dataclasses.FrozenInstanceError"
      ]
    ],
    "kw_only (in module dataclasses)": [
      [
        180,
        "dataclasses.KW_ONLY"
      ]
    ],
    "missing (in module dataclasses)": [
      [
        180,
        "dataclasses.MISSING"
      ]
    ],
    "pep 557": [
      [
        180,
        "index-0"
      ],
      [
        479,
        "index-29"
      ]
    ],
    "__post_init__() (in module dataclasses)": [
      [
        180,
        "dataclasses.__post_init__"
      ]
    ],
    "asdict() (in module dataclasses)": [
      [
        180,
        "dataclasses.asdict"
      ]
    ],
    "astuple() (in module dataclasses)": [
      [
        180,
        "dataclasses.astuple"
      ]
    ],
    "dataclass() (in module dataclasses)": [
      [
        180,
        "dataclasses.dataclass"
      ]
    ],
    "dataclasses": [
      [
        180,
        "module-dataclasses"
      ]
    ],
    "field() (in module dataclasses)": [
      [
        180,
        "dataclasses.field"
      ]
    ],
    "fields() (in module dataclasses)": [
      [
        180,
        "dataclasses.fields"
      ]
    ],
    "is_dataclass() (in module dataclasses)": [
      [
        180,
        "dataclasses.is_dataclass"
      ]
    ],
    "make_dataclass() (in module dataclasses)": [
      [
        180,
        "dataclasses.make_dataclass"
      ]
    ],
    "replace() (in module dataclasses)": [
      [
        180,
        "dataclasses.replace"
      ]
    ],
    "maxyear (in module datetime)": [
      [
        182,
        "datetime.MAXYEAR"
      ]
    ],
    "minyear (in module datetime)": [
      [
        182,
        "datetime.MINYEAR"
      ]
    ],
    "utc (in module datetime)": [
      [
        182,
        "datetime.UTC"
      ]
    ],
    "__format__() (datetime.date method)": [
      [
        182,
        "datetime.date.__format__"
      ]
    ],
    "__format__() (datetime.datetime method)": [
      [
        182,
        "datetime.datetime.__format__"
      ]
    ],
    "__format__() (datetime.time method)": [
      [
        182,
        "datetime.time.__format__"
      ]
    ],
    "__str__() (datetime.date method)": [
      [
        182,
        "datetime.date.__str__"
      ]
    ],
    "__str__() (datetime.datetime method)": [
      [
        182,
        "datetime.datetime.__str__"
      ]
    ],
    "__str__() (datetime.time method)": [
      [
        182,
        "datetime.time.__str__"
      ]
    ],
    "astimezone() (datetime.datetime method)": [
      [
        182,
        "datetime.datetime.astimezone"
      ]
    ],
    "combine() (datetime.datetime class method)": [
      [
        182,
        "datetime.datetime.combine"
      ]
    ],
    "ctime() (datetime.date method)": [
      [
        182,
        "datetime.date.ctime"
      ]
    ],
    "ctime() (datetime.datetime method)": [
      [
        182,
        "datetime.datetime.ctime"
      ]
    ],
    "date (class in datetime)": [
      [
        182,
        "datetime.date"
      ]
    ],
    "date() (datetime.datetime method)": [
      [
        182,
        "datetime.datetime.date"
      ]
    ],
    "datetime": [
      [
        182,
        "module-datetime"
      ]
    ],
    "datetime (class in datetime)": [
      [
        182,
        "datetime.datetime"
      ]
    ],
    "datetime format": [
      [
        182,
        "index-0"
      ],
      [
        365,
        "index-11"
      ],
      [
        365,
        "index-9"
      ]
    ],
    "day (datetime.date attribute)": [
      [
        182,
        "datetime.date.day"
      ]
    ],
    "day (datetime.datetime attribute)": [
      [
        182,
        "datetime.datetime.day"
      ]
    ],
    "dst() (datetime.datetime method)": [
      [
        182,
        "datetime.datetime.dst"
      ]
    ],
    "dst() (datetime.time method)": [
      [
        182,
        "datetime.time.dst"
      ]
    ],
    "dst() (datetime.timezone method)": [
      [
        182,
        "datetime.timezone.dst"
      ]
    ],
    "dst() (datetime.tzinfo method)": [
      [
        182,
        "datetime.tzinfo.dst"
      ]
    ],
    "fold (datetime.datetime attribute)": [
      [
        182,
        "datetime.datetime.fold"
      ]
    ],
    "fold (datetime.time attribute)": [
      [
        182,
        "datetime.time.fold"
      ]
    ],
    "fromisocalendar() (datetime.date class method)": [
      [
        182,
        "datetime.date.fromisocalendar"
      ]
    ],
    "fromisocalendar() (datetime.datetime class method)": [
      [
        182,
        "datetime.datetime.fromisocalendar"
      ]
    ],
    "fromisoformat() (datetime.date class method)": [
      [
        182,
        "datetime.date.fromisoformat"
      ]
    ],
    "fromisoformat() (datetime.datetime class method)": [
      [
        182,
        "datetime.datetime.fromisoformat"
      ]
    ],
    "fromisoformat() (datetime.time class method)": [
      [
        182,
        "datetime.time.fromisoformat"
      ]
    ],
    "fromordinal() (datetime.date class method)": [
      [
        182,
        "datetime.date.fromordinal"
      ]
    ],
    "fromordinal() (datetime.datetime class method)": [
      [
        182,
        "datetime.datetime.fromordinal"
      ]
    ],
    "fromtimestamp() (datetime.date class method)": [
      [
        182,
        "datetime.date.fromtimestamp"
      ]
    ],
    "fromtimestamp() (datetime.datetime class method)": [
      [
        182,
        "datetime.datetime.fromtimestamp"
      ]
    ],
    "fromutc() (datetime.timezone method)": [
      [
        182,
        "datetime.timezone.fromutc"
      ]
    ],
    "fromutc() (datetime.tzinfo method)": [
      [
        182,
        "datetime.tzinfo.fromutc"
      ]
    ],
    "hour (datetime.datetime attribute)": [
      [
        182,
        "datetime.datetime.hour"
      ]
    ],
    "hour (datetime.time attribute)": [
      [
        182,
        "datetime.time.hour"
      ]
    ],
    "isocalendar() (datetime.date method)": [
      [
        182,
        "datetime.date.isocalendar"
      ]
    ],
    "isocalendar() (datetime.datetime method)": [
      [
        182,
        "datetime.datetime.isocalendar"
      ]
    ],
    "isoformat() (datetime.date method)": [
      [
        182,
        "datetime.date.isoformat"
      ]
    ],
    "isoformat() (datetime.datetime method)": [
      [
        182,
        "datetime.datetime.isoformat"
      ]
    ],
    "isoformat() (datetime.time method)": [
      [
        182,
        "datetime.time.isoformat"
      ]
    ],
    "isoweekday() (datetime.date method)": [
      [
        182,
        "datetime.date.isoweekday"
      ]
    ],
    "isoweekday() (datetime.datetime method)": [
      [
        182,
        "datetime.datetime.isoweekday"
      ]
    ],
    "max (datetime.date attribute)": [
      [
        182,
        "datetime.date.max"
      ]
    ],
    "max (datetime.datetime attribute)": [
      [
        182,
        "datetime.datetime.max"
      ]
    ],
    "max (datetime.time attribute)": [
      [
        182,
        "datetime.time.max"
      ]
    ],
    "max (datetime.timedelta attribute)": [
      [
        182,
        "datetime.timedelta.max"
      ]
    ],
    "microsecond (datetime.datetime attribute)": [
      [
        182,
        "datetime.datetime.microsecond"
      ]
    ],
    "microsecond (datetime.time attribute)": [
      [
        182,
        "datetime.time.microsecond"
      ]
    ],
    "min (datetime.date attribute)": [
      [
        182,
        "datetime.date.min"
      ]
    ],
    "min (datetime.datetime attribute)": [
      [
        182,
        "datetime.datetime.min"
      ]
    ],
    "min (datetime.time attribute)": [
      [
        182,
        "datetime.time.min"
      ]
    ],
    "min (datetime.timedelta attribute)": [
      [
        182,
        "datetime.timedelta.min"
      ]
    ],
    "minute (datetime.datetime attribute)": [
      [
        182,
        "datetime.datetime.minute"
      ]
    ],
    "minute (datetime.time attribute)": [
      [
        182,
        "datetime.time.minute"
      ]
    ],
    "month (datetime.date attribute)": [
      [
        182,
        "datetime.date.month"
      ]
    ],
    "month (datetime.datetime attribute)": [
      [
        182,
        "datetime.datetime.month"
      ]
    ],
    "now() (datetime.datetime class method)": [
      [
        182,
        "datetime.datetime.now"
      ]
    ],
    "replace() (datetime.date method)": [
      [
        182,
        "datetime.date.replace"
      ]
    ],
    "replace() (datetime.datetime method)": [
      [
        182,
        "datetime.datetime.replace"
      ]
    ],
    "replace() (datetime.time method)": [
      [
        182,
        "datetime.time.replace"
      ]
    ],
    "resolution (datetime.date attribute)": [
      [
        182,
        "datetime.date.resolution"
      ]
    ],
    "resolution (datetime.datetime attribute)": [
      [
        182,
        "datetime.datetime.resolution"
      ]
    ],
    "resolution (datetime.time attribute)": [
      [
        182,
        "datetime.time.resolution"
      ]
    ],
    "resolution (datetime.timedelta attribute)": [
      [
        182,
        "datetime.timedelta.resolution"
      ]
    ],
    "second (datetime.datetime attribute)": [
      [
        182,
        "datetime.datetime.second"
      ]
    ],
    "second (datetime.time attribute)": [
      [
        182,
        "datetime.time.second"
      ]
    ],
    "strftime() (datetime.date method)": [
      [
        182,
        "datetime.date.strftime"
      ]
    ],
    "strftime() (datetime.datetime method)": [
      [
        182,
        "datetime.datetime.strftime"
      ]
    ],
    "strftime() (datetime.time method)": [
      [
        182,
        "datetime.time.strftime"
      ]
    ],
    "strptime() (datetime.datetime class method)": [
      [
        182,
        "datetime.datetime.strptime"
      ]
    ],
    "time (class in datetime)": [
      [
        182,
        "datetime.time"
      ]
    ],
    "time() (datetime.datetime method)": [
      [
        182,
        "datetime.datetime.time"
      ]
    ],
    "timedelta (class in datetime)": [
      [
        182,
        "datetime.timedelta"
      ]
    ],
    "timestamp() (datetime.datetime method)": [
      [
        182,
        "datetime.datetime.timestamp"
      ]
    ],
    "timetuple() (datetime.date method)": [
      [
        182,
        "datetime.date.timetuple"
      ]
    ],
    "timetuple() (datetime.datetime method)": [
      [
        182,
        "datetime.datetime.timetuple"
      ]
    ],
    "timetz() (datetime.datetime method)": [
      [
        182,
        "datetime.datetime.timetz"
      ]
    ],
    "timezone (class in datetime)": [
      [
        182,
        "datetime.timezone"
      ]
    ],
    "today() (datetime.date class method)": [
      [
        182,
        "datetime.date.today"
      ]
    ],
    "today() (datetime.datetime class method)": [
      [
        182,
        "datetime.datetime.today"
      ]
    ],
    "toordinal() (datetime.date method)": [
      [
        182,
        "datetime.date.toordinal"
      ]
    ],
    "toordinal() (datetime.datetime method)": [
      [
        182,
        "datetime.datetime.toordinal"
      ]
    ],
    "total_seconds() (datetime.timedelta method)": [
      [
        182,
        "datetime.timedelta.total_seconds"
      ]
    ],
    "tzinfo (class in datetime)": [
      [
        182,
        "datetime.tzinfo"
      ]
    ],
    "tzinfo (datetime.datetime attribute)": [
      [
        182,
        "datetime.datetime.tzinfo"
      ]
    ],
    "tzinfo (datetime.time attribute)": [
      [
        182,
        "datetime.time.tzinfo"
      ]
    ],
    "tzname() (datetime.datetime method)": [
      [
        182,
        "datetime.datetime.tzname"
      ]
    ],
    "tzname() (datetime.time method)": [
      [
        182,
        "datetime.time.tzname"
      ]
    ],
    "tzname() (datetime.timezone method)": [
      [
        182,
        "datetime.timezone.tzname"
      ]
    ],
    "tzname() (datetime.tzinfo method)": [
      [
        182,
        "datetime.tzinfo.tzname"
      ]
    ],
    "utc (datetime.timezone attribute)": [
      [
        182,
        "datetime.timezone.utc"
      ]
    ],
    "utcfromtimestamp() (datetime.datetime class method)": [
      [
        182,
        "datetime.datetime.utcfromtimestamp"
      ]
    ],
    "utcnow() (datetime.datetime class method)": [
      [
        182,
        "datetime.datetime.utcnow"
      ]
    ],
    "utcoffset() (datetime.datetime method)": [
      [
        182,
        "datetime.datetime.utcoffset"
      ]
    ],
    "utcoffset() (datetime.time method)": [
      [
        182,
        "datetime.time.utcoffset"
      ]
    ],
    "utcoffset() (datetime.timezone method)": [
      [
        182,
        "datetime.timezone.utcoffset"
      ]
    ],
    "utcoffset() (datetime.tzinfo method)": [
      [
        182,
        "datetime.tzinfo.utcoffset"
      ]
    ],
    "utctimetuple() (datetime.datetime method)": [
      [
        182,
        "datetime.datetime.utctimetuple"
      ]
    ],
    "weekday() (datetime.date method)": [
      [
        182,
        "datetime.date.weekday"
      ]
    ],
    "weekday() (datetime.datetime method)": [
      [
        182,
        "datetime.datetime.weekday"
      ]
    ],
    "year (datetime.date attribute)": [
      [
        182,
        "datetime.date.year"
      ]
    ],
    "year (datetime.datetime attribute)": [
      [
        182,
        "datetime.datetime.year"
      ]
    ],
    "close() (dbm.dumb.dumbdbm method)": [
      [
        183,
        "dbm.dumb.dumbdbm.close"
      ]
    ],
    "close() (dbm.gnu.gdbm method)": [
      [
        183,
        "dbm.gnu.gdbm.close"
      ]
    ],
    "close() (dbm.ndbm.ndbm method)": [
      [
        183,
        "dbm.ndbm.ndbm.close"
      ]
    ],
    "databases": [
      [
        183,
        "index-0"
      ]
    ],
    "dbm": [
      [
        183,
        "module-dbm"
      ]
    ],
    "dbm.dumb": [
      [
        183,
        "module-dbm.dumb"
      ]
    ],
    "dbm.gnu": [
      [
        183,
        "module-dbm.gnu"
      ],
      [
        329,
        "index-1"
      ],
      [
        427,
        "index-32"
      ]
    ],
    "dbm.ndbm": [
      [
        183,
        "module-dbm.ndbm"
      ],
      [
        329,
        "index-1"
      ],
      [
        427,
        "index-32"
      ]
    ],
    "firstkey() (dbm.gnu.gdbm method)": [
      [
        183,
        "dbm.gnu.gdbm.firstkey"
      ]
    ],
    "library (in module dbm.ndbm)": [
      [
        183,
        "dbm.ndbm.library"
      ]
    ],
    "nextkey() (dbm.gnu.gdbm method)": [
      [
        183,
        "dbm.gnu.gdbm.nextkey"
      ]
    ],
    "open() (in module dbm)": [
      [
        183,
        "dbm.open"
      ]
    ],
    "open() (in module dbm.dumb)": [
      [
        183,
        "dbm.dumb.open"
      ]
    ],
    "open() (in module dbm.gnu)": [
      [
        183,
        "dbm.gnu.open"
      ]
    ],
    "open() (in module dbm.ndbm)": [
      [
        183,
        "dbm.ndbm.open"
      ]
    ],
    "open_flags (in module dbm.gnu)": [
      [
        183,
        "dbm.gnu.open_flags"
      ]
    ],
    "reorganize() (dbm.gnu.gdbm method)": [
      [
        183,
        "dbm.gnu.gdbm.reorganize"
      ]
    ],
    "sync() (dbm.dumb.dumbdbm method)": [
      [
        183,
        "dbm.dumb.dumbdbm.sync"
      ]
    ],
    "sync() (dbm.gnu.gdbm method)": [
      [
        183,
        "dbm.gnu.gdbm.sync"
      ]
    ],
    "whichdb() (in module dbm)": [
      [
        183,
        "dbm.whichdb"
      ]
    ],
    "basiccontext (class in decimal)": [
      [
        185,
        "decimal.BasicContext"
      ]
    ],
    "clamped (class in decimal)": [
      [
        185,
        "decimal.Clamped"
      ]
    ],
    "context (class in decimal)": [
      [
        185,
        "decimal.Context"
      ]
    ],
    "decimal (class in decimal)": [
      [
        185,
        "decimal.Decimal"
      ]
    ],
    "decimalexception (class in decimal)": [
      [
        185,
        "decimal.DecimalException"
      ]
    ],
    "defaultcontext (class in decimal)": [
      [
        185,
        "decimal.DefaultContext"
      ]
    ],
    "divisionbyzero (class in decimal)": [
      [
        185,
        "decimal.DivisionByZero"
      ]
    ],
    "etiny() (decimal.context method)": [
      [
        185,
        "decimal.Context.Etiny"
      ]
    ],
    "etop() (decimal.context method)": [
      [
        185,
        "decimal.Context.Etop"
      ]
    ],
    "extendedcontext (class in decimal)": [
      [
        185,
        "decimal.ExtendedContext"
      ]
    ],
    "floatoperation (class in decimal)": [
      [
        185,
        "decimal.FloatOperation"
      ]
    ],
    "have_contextvar (in module decimal)": [
      [
        185,
        "decimal.HAVE_CONTEXTVAR"
      ]
    ],
    "have_threads (in module decimal)": [
      [
        185,
        "decimal.HAVE_THREADS"
      ]
    ],
    "inexact (class in decimal)": [
      [
        185,
        "decimal.Inexact"
      ]
    ],
    "invalidoperation (class in decimal)": [
      [
        185,
        "decimal.InvalidOperation"
      ]
    ],
    "max_emax (in module decimal)": [
      [
        185,
        "decimal.MAX_EMAX"
      ]
    ],
    "max_prec (in module decimal)": [
      [
        185,
        "decimal.MAX_PREC"
      ]
    ],
    "min_emin (in module decimal)": [
      [
        185,
        "decimal.MIN_EMIN"
      ]
    ],
    "min_etiny (in module decimal)": [
      [
        185,
        "decimal.MIN_ETINY"
      ]
    ],
    "overflow (class in decimal)": [
      [
        185,
        "decimal.Overflow"
      ]
    ],
    "round_05up (in module decimal)": [
      [
        185,
        "decimal.ROUND_05UP"
      ]
    ],
    "round_ceiling (in module decimal)": [
      [
        185,
        "decimal.ROUND_CEILING"
      ]
    ],
    "round_down (in module decimal)": [
      [
        185,
        "decimal.ROUND_DOWN"
      ]
    ],
    "round_floor (in module decimal)": [
      [
        185,
        "decimal.ROUND_FLOOR"
      ]
    ],
    "round_half_down (in module decimal)": [
      [
        185,
        "decimal.ROUND_HALF_DOWN"
      ]
    ],
    "round_half_even (in module decimal)": [
      [
        185,
        "decimal.ROUND_HALF_EVEN"
      ]
    ],
    "round_half_up (in module decimal)": [
      [
        185,
        "decimal.ROUND_HALF_UP"
      ]
    ],
    "round_up (in module decimal)": [
      [
        185,
        "decimal.ROUND_UP"
      ]
    ],
    "rounded (class in decimal)": [
      [
        185,
        "decimal.Rounded"
      ]
    ],
    "subnormal (class in decimal)": [
      [
        185,
        "decimal.Subnormal"
      ]
    ],
    "underflow (class in decimal)": [
      [
        185,
        "decimal.Underflow"
      ]
    ],
    "abs() (decimal.context method)": [
      [
        185,
        "decimal.Context.abs"
      ]
    ],
    "add() (decimal.context method)": [
      [
        185,
        "decimal.Context.add"
      ]
    ],
    "adjusted() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.adjusted"
      ]
    ],
    "as_integer_ratio() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.as_integer_ratio"
      ]
    ],
    "as_tuple() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.as_tuple"
      ]
    ],
    "canonical() (decimal.context method)": [
      [
        185,
        "decimal.Context.canonical"
      ]
    ],
    "canonical() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.canonical"
      ]
    ],
    "clear_flags() (decimal.context method)": [
      [
        185,
        "decimal.Context.clear_flags"
      ]
    ],
    "clear_traps() (decimal.context method)": [
      [
        185,
        "decimal.Context.clear_traps"
      ]
    ],
    "compare() (decimal.context method)": [
      [
        185,
        "decimal.Context.compare"
      ]
    ],
    "compare() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.compare"
      ]
    ],
    "compare_signal() (decimal.context method)": [
      [
        185,
        "decimal.Context.compare_signal"
      ]
    ],
    "compare_signal() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.compare_signal"
      ]
    ],
    "compare_total() (decimal.context method)": [
      [
        185,
        "decimal.Context.compare_total"
      ]
    ],
    "compare_total() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.compare_total"
      ]
    ],
    "compare_total_mag() (decimal.context method)": [
      [
        185,
        "decimal.Context.compare_total_mag"
      ]
    ],
    "compare_total_mag() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.compare_total_mag"
      ]
    ],
    "conjugate() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.conjugate"
      ]
    ],
    "copy() (decimal.context method)": [
      [
        185,
        "decimal.Context.copy"
      ]
    ],
    "copy_abs() (decimal.context method)": [
      [
        185,
        "decimal.Context.copy_abs"
      ]
    ],
    "copy_abs() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.copy_abs"
      ]
    ],
    "copy_decimal() (decimal.context method)": [
      [
        185,
        "decimal.Context.copy_decimal"
      ]
    ],
    "copy_negate() (decimal.context method)": [
      [
        185,
        "decimal.Context.copy_negate"
      ]
    ],
    "copy_negate() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.copy_negate"
      ]
    ],
    "copy_sign() (decimal.context method)": [
      [
        185,
        "decimal.Context.copy_sign"
      ]
    ],
    "copy_sign() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.copy_sign"
      ]
    ],
    "create_decimal() (decimal.context method)": [
      [
        185,
        "decimal.Context.create_decimal"
      ]
    ],
    "create_decimal_from_float() (decimal.context method)": [
      [
        185,
        "decimal.Context.create_decimal_from_float"
      ]
    ],
    "decimal": [
      [
        185,
        "module-decimal"
      ]
    ],
    "divide() (decimal.context method)": [
      [
        185,
        "decimal.Context.divide"
      ]
    ],
    "divide_int() (decimal.context method)": [
      [
        185,
        "decimal.Context.divide_int"
      ]
    ],
    "divmod() (decimal.context method)": [
      [
        185,
        "decimal.Context.divmod"
      ]
    ],
    "exp() (decimal.context method)": [
      [
        185,
        "decimal.Context.exp"
      ]
    ],
    "exp() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.exp"
      ]
    ],
    "fma() (decimal.context method)": [
      [
        185,
        "decimal.Context.fma"
      ]
    ],
    "fma() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.fma"
      ]
    ],
    "from_float() (decimal.decimal class method)": [
      [
        185,
        "decimal.Decimal.from_float"
      ]
    ],
    "getcontext() (in module decimal)": [
      [
        185,
        "decimal.getcontext"
      ]
    ],
    "is_canonical() (decimal.context method)": [
      [
        185,
        "decimal.Context.is_canonical"
      ]
    ],
    "is_canonical() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.is_canonical"
      ]
    ],
    "is_finite() (decimal.context method)": [
      [
        185,
        "decimal.Context.is_finite"
      ]
    ],
    "is_finite() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.is_finite"
      ]
    ],
    "is_infinite() (decimal.context method)": [
      [
        185,
        "decimal.Context.is_infinite"
      ]
    ],
    "is_infinite() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.is_infinite"
      ]
    ],
    "is_nan() (decimal.context method)": [
      [
        185,
        "decimal.Context.is_nan"
      ]
    ],
    "is_nan() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.is_nan"
      ]
    ],
    "is_normal() (decimal.context method)": [
      [
        185,
        "decimal.Context.is_normal"
      ]
    ],
    "is_normal() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.is_normal"
      ]
    ],
    "is_qnan() (decimal.context method)": [
      [
        185,
        "decimal.Context.is_qnan"
      ]
    ],
    "is_qnan() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.is_qnan"
      ]
    ],
    "is_signed() (decimal.context method)": [
      [
        185,
        "decimal.Context.is_signed"
      ]
    ],
    "is_signed() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.is_signed"
      ]
    ],
    "is_snan() (decimal.context method)": [
      [
        185,
        "decimal.Context.is_snan"
      ]
    ],
    "is_snan() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.is_snan"
      ]
    ],
    "is_subnormal() (decimal.context method)": [
      [
        185,
        "decimal.Context.is_subnormal"
      ]
    ],
    "is_subnormal() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.is_subnormal"
      ]
    ],
    "is_zero() (decimal.context method)": [
      [
        185,
        "decimal.Context.is_zero"
      ]
    ],
    "is_zero() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.is_zero"
      ]
    ],
    "ln() (decimal.context method)": [
      [
        185,
        "decimal.Context.ln"
      ]
    ],
    "ln() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.ln"
      ]
    ],
    "localcontext() (in module decimal)": [
      [
        185,
        "decimal.localcontext"
      ]
    ],
    "log10() (decimal.context method)": [
      [
        185,
        "decimal.Context.log10"
      ]
    ],
    "log10() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.log10"
      ]
    ],
    "logb() (decimal.context method)": [
      [
        185,
        "decimal.Context.logb"
      ]
    ],
    "logb() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.logb"
      ]
    ],
    "logical_and() (decimal.context method)": [
      [
        185,
        "decimal.Context.logical_and"
      ]
    ],
    "logical_and() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.logical_and"
      ]
    ],
    "logical_invert() (decimal.context method)": [
      [
        185,
        "decimal.Context.logical_invert"
      ]
    ],
    "logical_invert() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.logical_invert"
      ]
    ],
    "logical_or() (decimal.context method)": [
      [
        185,
        "decimal.Context.logical_or"
      ]
    ],
    "logical_or() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.logical_or"
      ]
    ],
    "logical_xor() (decimal.context method)": [
      [
        185,
        "decimal.Context.logical_xor"
      ]
    ],
    "logical_xor() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.logical_xor"
      ]
    ],
    "max() (decimal.context method)": [
      [
        185,
        "decimal.Context.max"
      ]
    ],
    "max() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.max"
      ]
    ],
    "max_mag() (decimal.context method)": [
      [
        185,
        "decimal.Context.max_mag"
      ]
    ],
    "max_mag() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.max_mag"
      ]
    ],
    "min() (decimal.context method)": [
      [
        185,
        "decimal.Context.min"
      ]
    ],
    "min() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.min"
      ]
    ],
    "min_mag() (decimal.context method)": [
      [
        185,
        "decimal.Context.min_mag"
      ]
    ],
    "min_mag() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.min_mag"
      ]
    ],
    "minus() (decimal.context method)": [
      [
        185,
        "decimal.Context.minus"
      ]
    ],
    "multiply() (decimal.context method)": [
      [
        185,
        "decimal.Context.multiply"
      ]
    ],
    "next_minus() (decimal.context method)": [
      [
        185,
        "decimal.Context.next_minus"
      ]
    ],
    "next_minus() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.next_minus"
      ]
    ],
    "next_plus() (decimal.context method)": [
      [
        185,
        "decimal.Context.next_plus"
      ]
    ],
    "next_plus() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.next_plus"
      ]
    ],
    "next_toward() (decimal.context method)": [
      [
        185,
        "decimal.Context.next_toward"
      ]
    ],
    "next_toward() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.next_toward"
      ]
    ],
    "normalize() (decimal.context method)": [
      [
        185,
        "decimal.Context.normalize"
      ]
    ],
    "normalize() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.normalize"
      ]
    ],
    "number_class() (decimal.context method)": [
      [
        185,
        "decimal.Context.number_class"
      ]
    ],
    "number_class() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.number_class"
      ]
    ],
    "plus() (decimal.context method)": [
      [
        185,
        "decimal.Context.plus"
      ]
    ],
    "power() (decimal.context method)": [
      [
        185,
        "decimal.Context.power"
      ]
    ],
    "quantize() (decimal.context method)": [
      [
        185,
        "decimal.Context.quantize"
      ]
    ],
    "quantize() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.quantize"
      ]
    ],
    "radix() (decimal.context method)": [
      [
        185,
        "decimal.Context.radix"
      ]
    ],
    "radix() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.radix"
      ]
    ],
    "remainder() (decimal.context method)": [
      [
        185,
        "decimal.Context.remainder"
      ]
    ],
    "remainder_near() (decimal.context method)": [
      [
        185,
        "decimal.Context.remainder_near"
      ]
    ],
    "remainder_near() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.remainder_near"
      ]
    ],
    "rotate() (decimal.context method)": [
      [
        185,
        "decimal.Context.rotate"
      ]
    ],
    "rotate() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.rotate"
      ]
    ],
    "same_quantum() (decimal.context method)": [
      [
        185,
        "decimal.Context.same_quantum"
      ]
    ],
    "same_quantum() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.same_quantum"
      ]
    ],
    "scaleb() (decimal.context method)": [
      [
        185,
        "decimal.Context.scaleb"
      ]
    ],
    "scaleb() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.scaleb"
      ]
    ],
    "setcontext() (in module decimal)": [
      [
        185,
        "decimal.setcontext"
      ]
    ],
    "shift() (decimal.context method)": [
      [
        185,
        "decimal.Context.shift"
      ]
    ],
    "shift() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.shift"
      ]
    ],
    "sqrt() (decimal.context method)": [
      [
        185,
        "decimal.Context.sqrt"
      ]
    ],
    "sqrt() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.sqrt"
      ]
    ],
    "subtract() (decimal.context method)": [
      [
        185,
        "decimal.Context.subtract"
      ]
    ],
    "to_eng_string() (decimal.context method)": [
      [
        185,
        "decimal.Context.to_eng_string"
      ]
    ],
    "to_eng_string() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.to_eng_string"
      ]
    ],
    "to_integral() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.to_integral"
      ]
    ],
    "to_integral_exact() (decimal.context method)": [
      [
        185,
        "decimal.Context.to_integral_exact"
      ]
    ],
    "to_integral_exact() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.to_integral_exact"
      ]
    ],
    "to_integral_value() (decimal.decimal method)": [
      [
        185,
        "decimal.Decimal.to_integral_value"
      ]
    ],
    "to_sci_string() (decimal.context method)": [
      [
        185,
        "decimal.Context.to_sci_string"
      ]
    ],
    "dialog (class in tkinter.commondialog)": [
      [
        188,
        "tkinter.commondialog.Dialog"
      ]
    ],
    "dialog (class in tkinter.simpledialog)": [
      [
        188,
        "tkinter.simpledialog.Dialog"
      ]
    ],
    "directory (class in tkinter.filedialog)": [
      [
        188,
        "tkinter.filedialog.Directory"
      ]
    ],
    "filedialog (class in tkinter.filedialog)": [
      [
        188,
        "tkinter.filedialog.FileDialog"
      ]
    ],
    "loadfiledialog (class in tkinter.filedialog)": [
      [
        188,
        "tkinter.filedialog.LoadFileDialog"
      ]
    ],
    "open (class in tkinter.filedialog)": [
      [
        188,
        "tkinter.filedialog.Open"
      ]
    ],
    "saveas (class in tkinter.filedialog)": [
      [
        188,
        "tkinter.filedialog.SaveAs"
      ]
    ],
    "savefiledialog (class in tkinter.filedialog)": [
      [
        188,
        "tkinter.filedialog.SaveFileDialog"
      ]
    ],
    "askdirectory() (in module tkinter.filedialog)": [
      [
        188,
        "tkinter.filedialog.askdirectory"
      ]
    ],
    "askfloat() (in module tkinter.simpledialog)": [
      [
        188,
        "tkinter.simpledialog.askfloat"
      ]
    ],
    "askinteger() (in module tkinter.simpledialog)": [
      [
        188,
        "tkinter.simpledialog.askinteger"
      ]
    ],
    "askopenfile() (in module tkinter.filedialog)": [
      [
        188,
        "tkinter.filedialog.askopenfile"
      ]
    ],
    "askopenfilename() (in module tkinter.filedialog)": [
      [
        188,
        "tkinter.filedialog.askopenfilename"
      ]
    ],
    "askopenfilenames() (in module tkinter.filedialog)": [
      [
        188,
        "tkinter.filedialog.askopenfilenames"
      ]
    ],
    "askopenfiles() (in module tkinter.filedialog)": [
      [
        188,
        "tkinter.filedialog.askopenfiles"
      ]
    ],
    "asksaveasfile() (in module tkinter.filedialog)": [
      [
        188,
        "tkinter.filedialog.asksaveasfile"
      ]
    ],
    "asksaveasfilename() (in module tkinter.filedialog)": [
      [
        188,
        "tkinter.filedialog.asksaveasfilename"
      ]
    ],
    "askstring() (in module tkinter.simpledialog)": [
      [
        188,
        "tkinter.simpledialog.askstring"
      ]
    ],
    "body() (tkinter.simpledialog.dialog method)": [
      [
        188,
        "tkinter.simpledialog.Dialog.body"
      ]
    ],
    "buttonbox() (tkinter.simpledialog.dialog method)": [
      [
        188,
        "tkinter.simpledialog.Dialog.buttonbox"
      ]
    ],
    "cancel_command() (tkinter.filedialog.filedialog method)": [
      [
        188,
        "tkinter.filedialog.FileDialog.cancel_command"
      ]
    ],
    "dirs_double_event() (tkinter.filedialog.filedialog method)": [
      [
        188,
        "tkinter.filedialog.FileDialog.dirs_double_event"
      ]
    ],
    "dirs_select_event() (tkinter.filedialog.filedialog method)": [
      [
        188,
        "tkinter.filedialog.FileDialog.dirs_select_event"
      ]
    ],
    "files_double_event() (tkinter.filedialog.filedialog method)": [
      [
        188,
        "tkinter.filedialog.FileDialog.files_double_event"
      ]
    ],
    "files_select_event() (tkinter.filedialog.filedialog method)": [
      [
        188,
        "tkinter.filedialog.FileDialog.files_select_event"
      ]
    ],
    "filter_command() (tkinter.filedialog.filedialog method)": [
      [
        188,
        "tkinter.filedialog.FileDialog.filter_command"
      ]
    ],
    "get_filter() (tkinter.filedialog.filedialog method)": [
      [
        188,
        "tkinter.filedialog.FileDialog.get_filter"
      ]
    ],
    "get_selection() (tkinter.filedialog.filedialog method)": [
      [
        188,
        "tkinter.filedialog.FileDialog.get_selection"
      ]
    ],
    "go() (tkinter.filedialog.filedialog method)": [
      [
        188,
        "tkinter.filedialog.FileDialog.go"
      ]
    ],
    "ok_command() (tkinter.filedialog.loadfiledialog method)": [
      [
        188,
        "tkinter.filedialog.LoadFileDialog.ok_command"
      ]
    ],
    "ok_command() (tkinter.filedialog.savefiledialog method)": [
      [
        188,
        "tkinter.filedialog.SaveFileDialog.ok_command"
      ]
    ],
    "ok_event() (tkinter.filedialog.filedialog method)": [
      [
        188,
        "tkinter.filedialog.FileDialog.ok_event"
      ]
    ],
    "quit() (tkinter.filedialog.filedialog method)": [
      [
        188,
        "tkinter.filedialog.FileDialog.quit"
      ]
    ],
    "set_filter() (tkinter.filedialog.filedialog method)": [
      [
        188,
        "tkinter.filedialog.FileDialog.set_filter"
      ]
    ],
    "set_selection() (tkinter.filedialog.filedialog method)": [
      [
        188,
        "tkinter.filedialog.FileDialog.set_selection"
      ]
    ],
    "show() (tkinter.commondialog.dialog method)": [
      [
        188,
        "tkinter.commondialog.Dialog.show"
      ]
    ],
    "tkinter.commondialog": [
      [
        188,
        "module-tkinter.commondialog"
      ]
    ],
    "tkinter.filedialog": [
      [
        188,
        "module-tkinter.filedialog"
      ]
    ],
    "tkinter.simpledialog": [
      [
        188,
        "module-tkinter.simpledialog"
      ]
    ],
    "differ (class in difflib)": [
      [
        189,
        "difflib.Differ"
      ]
    ],
    "htmldiff (class in difflib)": [
      [
        189,
        "difflib.HtmlDiff"
      ]
    ],
    "is_character_junk() (in module difflib)": [
      [
        189,
        "difflib.IS_CHARACTER_JUNK"
      ]
    ],
    "is_line_junk() (in module difflib)": [
      [
        189,
        "difflib.IS_LINE_JUNK"
      ]
    ],
    "sequencematcher (class in difflib)": [
      [
        189,
        "difflib.SequenceMatcher"
      ]
    ],
    "__init__() (difflib.htmldiff method)": [
      [
        189,
        "difflib.HtmlDiff.__init__"
      ]
    ],
    "compare() (difflib.differ method)": [
      [
        189,
        "difflib.Differ.compare"
      ]
    ],
    "context_diff() (in module difflib)": [
      [
        189,
        "difflib.context_diff"
      ]
    ],
    "diff_bytes() (in module difflib)": [
      [
        189,
        "difflib.diff_bytes"
      ]
    ],
    "difflib": [
      [
        189,
        "module-difflib"
      ]
    ],
    "find_longest_match() (difflib.sequencematcher method)": [
      [
        189,
        "difflib.SequenceMatcher.find_longest_match"
      ]
    ],
    "get_close_matches() (in module difflib)": [
      [
        189,
        "difflib.get_close_matches"
      ]
    ],
    "get_grouped_opcodes() (difflib.sequencematcher method)": [
      [
        189,
        "difflib.SequenceMatcher.get_grouped_opcodes"
      ]
    ],
    "get_matching_blocks() (difflib.sequencematcher method)": [
      [
        189,
        "difflib.SequenceMatcher.get_matching_blocks"
      ]
    ],
    "get_opcodes() (difflib.sequencematcher method)": [
      [
        189,
        "difflib.SequenceMatcher.get_opcodes"
      ]
    ],
    "make_file() (difflib.htmldiff method)": [
      [
        189,
        "difflib.HtmlDiff.make_file"
      ]
    ],
    "make_table() (difflib.htmldiff method)": [
      [
        189,
        "difflib.HtmlDiff.make_table"
      ]
    ],
    "ndiff() (in module difflib)": [
      [
        189,
        "difflib.ndiff"
      ]
    ],
    "quick_ratio() (difflib.sequencematcher method)": [
      [
        189,
        "difflib.SequenceMatcher.quick_ratio"
      ]
    ],
    "ratio() (difflib.sequencematcher method)": [
      [
        189,
        "difflib.SequenceMatcher.ratio"
      ]
    ],
    "real_quick_ratio() (difflib.sequencematcher method)": [
      [
        189,
        "difflib.SequenceMatcher.real_quick_ratio"
      ]
    ],
    "restore() (in module difflib)": [
      [
        189,
        "difflib.restore"
      ]
    ],
    "set_seq1() (difflib.sequencematcher method)": [
      [
        189,
        "difflib.SequenceMatcher.set_seq1"
      ]
    ],
    "set_seq2() (difflib.sequencematcher method)": [
      [
        189,
        "difflib.SequenceMatcher.set_seq2"
      ]
    ],
    "set_seqs() (difflib.sequencematcher method)": [
      [
        189,
        "difflib.SequenceMatcher.set_seqs"
      ]
    ],
    "unified_diff() (in module difflib)": [
      [
        189,
        "difflib.unified_diff"
      ]
    ],
    "before_async_with (opcode)": [
      [
        190,
        "opcode-BEFORE_ASYNC_WITH"
      ]
    ],
    "before_with (opcode)": [
      [
        190,
        "opcode-BEFORE_WITH"
      ]
    ],
    "binary_op (opcode)": [
      [
        190,
        "opcode-BINARY_OP"
      ]
    ],
    "binary_slice (opcode)": [
      [
        190,
        "opcode-BINARY_SLICE"
      ]
    ],
    "binary_subscr (opcode)": [
      [
        190,
        "opcode-BINARY_SUBSCR"
      ]
    ],
    "build_const_key_map (opcode)": [
      [
        190,
        "opcode-BUILD_CONST_KEY_MAP"
      ]
    ],
    "build_list (opcode)": [
      [
        190,
        "opcode-BUILD_LIST"
      ]
    ],
    "build_map (opcode)": [
      [
        190,
        "opcode-BUILD_MAP"
      ]
    ],
    "build_set (opcode)": [
      [
        190,
        "opcode-BUILD_SET"
      ]
    ],
    "build_slice (opcode)": [
      [
        190,
        "opcode-BUILD_SLICE"
      ]
    ],
    "build_string (opcode)": [
      [
        190,
        "opcode-BUILD_STRING"
      ]
    ],
    "build_tuple (opcode)": [
      [
        190,
        "opcode-BUILD_TUPLE"
      ]
    ],
    "bytecode (class in dis)": [
      [
        190,
        "dis.Bytecode"
      ]
    ],
    "bytecode.codeobj (in module dis)": [
      [
        190,
        "dis.Bytecode.codeobj"
      ]
    ],
    "bytecode.first_line (in module dis)": [
      [
        190,
        "dis.Bytecode.first_line"
      ]
    ],
    "cache (opcode)": [
      [
        190,
        "opcode-CACHE"
      ]
    ],
    "call (opcode)": [
      [
        190,
        "opcode-CALL"
      ]
    ],
    "call_function_ex (opcode)": [
      [
        190,
        "opcode-CALL_FUNCTION_EX"
      ]
    ],
    "call_intrinsic_1 (opcode)": [
      [
        190,
        "opcode-CALL_INTRINSIC_1"
      ]
    ],
    "call_intrinsic_2 (opcode)": [
      [
        190,
        "opcode-CALL_INTRINSIC_2"
      ]
    ],
    "check_eg_match (opcode)": [
      [
        190,
        "opcode-CHECK_EG_MATCH"
      ]
    ],
    "check_exc_match (opcode)": [
      [
        190,
        "opcode-CHECK_EXC_MATCH"
      ]
    ],
    "cleanup_throw (opcode)": [
      [
        190,
        "opcode-CLEANUP_THROW"
      ]
    ],
    "compare_op (opcode)": [
      [
        190,
        "opcode-COMPARE_OP"
      ]
    ],
    "contains_op (opcode)": [
      [
        190,
        "opcode-CONTAINS_OP"
      ]
    ],
    "copy (opcode)": [
      [
        190,
        "opcode-COPY"
      ]
    ],
    "copy_free_vars (opcode)": [
      [
        190,
        "opcode-COPY_FREE_VARS"
      ]
    ],
    "delete_attr (opcode)": [
      [
        190,
        "opcode-DELETE_ATTR"
      ]
    ],
    "delete_deref (opcode)": [
      [
        190,
        "opcode-DELETE_DEREF"
      ]
    ],
    "delete_fast (opcode)": [
      [
        190,
        "opcode-DELETE_FAST"
      ]
    ],
    "delete_global (opcode)": [
      [
        190,
        "opcode-DELETE_GLOBAL"
      ]
    ],
    "delete_name (opcode)": [
      [
        190,
        "opcode-DELETE_NAME"
      ]
    ],
    "delete_subscr (opcode)": [
      [
        190,
        "opcode-DELETE_SUBSCR"
      ]
    ],
    "dict_merge (opcode)": [
      [
        190,
        "opcode-DICT_MERGE"
      ]
    ],
    "dict_update (opcode)": [
      [
        190,
        "opcode-DICT_UPDATE"
      ]
    ],
    "end_async_for (opcode)": [
      [
        190,
        "opcode-END_ASYNC_FOR"
      ]
    ],
    "end_for (opcode)": [
      [
        190,
        "opcode-END_FOR"
      ]
    ],
    "end_send (opcode)": [
      [
        190,
        "opcode-END_SEND"
      ]
    ],
    "extended_arg (opcode)": [
      [
        190,
        "opcode-EXTENDED_ARG"
      ]
    ],
    "format_value (opcode)": [
      [
        190,
        "opcode-FORMAT_VALUE"
      ]
    ],
    "for_iter (opcode)": [
      [
        190,
        "opcode-FOR_ITER"
      ]
    ],
    "get_aiter (opcode)": [
      [
        190,
        "opcode-GET_AITER"
      ]
    ],
    "get_anext (opcode)": [
      [
        190,
        "opcode-GET_ANEXT"
      ]
    ],
    "get_awaitable (opcode)": [
      [
        190,
        "opcode-GET_AWAITABLE"
      ]
    ],
    "get_iter (opcode)": [
      [
        190,
        "opcode-GET_ITER"
      ]
    ],
    "get_len (opcode)": [
      [
        190,
        "opcode-GET_LEN"
      ]
    ],
    "get_yield_from_iter (opcode)": [
      [
        190,
        "opcode-GET_YIELD_FROM_ITER"
      ]
    ],
    "have_argument (opcode)": [
      [
        190,
        "opcode-HAVE_ARGUMENT"
      ]
    ],
    "import_from (opcode)": [
      [
        190,
        "opcode-IMPORT_FROM"
      ]
    ],
    "import_name (opcode)": [
      [
        190,
        "opcode-IMPORT_NAME"
      ]
    ],
    "is_op (opcode)": [
      [
        190,
        "opcode-IS_OP"
      ]
    ],
    "instruction (class in dis)": [
      [
        190,
        "dis.Instruction"
      ]
    ],
    "instruction.arg (in module dis)": [
      [
        190,
        "dis.Instruction.arg"
      ]
    ],
    "instruction.argrepr (in module dis)": [
      [
        190,
        "dis.Instruction.argrepr"
      ]
    ],
    "instruction.argval (in module dis)": [
      [
        190,
        "dis.Instruction.argval"
      ]
    ],
    "instruction.is_jump_target (in module dis)": [
      [
        190,
        "dis.Instruction.is_jump_target"
      ]
    ],
    "instruction.offset (in module dis)": [
      [
        190,
        "dis.Instruction.offset"
      ]
    ],
    "instruction.opcode (in module dis)": [
      [
        190,
        "dis.Instruction.opcode"
      ]
    ],
    "instruction.opname (in module dis)": [
      [
        190,
        "dis.Instruction.opname"
      ]
    ],
    "instruction.positions (in module dis)": [
      [
        190,
        "dis.Instruction.positions"
      ]
    ],
    "instruction.starts_line (in module dis)": [
      [
        190,
        "dis.Instruction.starts_line"
      ]
    ],
    "jump (opcode)": [
      [
        190,
        "opcode-JUMP"
      ]
    ],
    "jump_backward (opcode)": [
      [
        190,
        "opcode-JUMP_BACKWARD"
      ]
    ],
    "jump_backward_no_interrupt (opcode)": [
      [
        190,
        "opcode-JUMP_BACKWARD_NO_INTERRUPT"
      ]
    ],
    "jump_forward (opcode)": [
      [
        190,
        "opcode-JUMP_FORWARD"
      ]
    ],
    "jump_no_interrupt (opcode)": [
      [
        190,
        "opcode-JUMP_NO_INTERRUPT"
      ]
    ],
    "kw_names (opcode)": [
      [
        190,
        "opcode-KW_NAMES"
      ]
    ],
    "list_append (opcode)": [
      [
        190,
        "opcode-LIST_APPEND"
      ]
    ],
    "list_extend (opcode)": [
      [
        190,
        "opcode-LIST_EXTEND"
      ]
    ],
    "load_assertion_error (opcode)": [
      [
        190,
        "opcode-LOAD_ASSERTION_ERROR"
      ]
    ],
    "load_attr (opcode)": [
      [
        190,
        "opcode-LOAD_ATTR"
      ]
    ],
    "load_build_class (opcode)": [
      [
        190,
        "opcode-LOAD_BUILD_CLASS"
      ]
    ],
    "load_closure (opcode)": [
      [
        190,
        "opcode-LOAD_CLOSURE"
      ]
    ],
    "load_const (opcode)": [
      [
        190,
        "opcode-LOAD_CONST"
      ]
    ],
    "load_deref (opcode)": [
      [
        190,
        "opcode-LOAD_DEREF"
      ]
    ],
    "load_fast (opcode)": [
      [
        190,
        "opcode-LOAD_FAST"
      ]
    ],
    "load_fast_and_clear (opcode)": [
      [
        190,
        "opcode-LOAD_FAST_AND_CLEAR"
      ]
    ],
    "load_fast_check (opcode)": [
      [
        190,
        "opcode-LOAD_FAST_CHECK"
      ]
    ],
    "load_from_dict_or_deref (opcode)": [
      [
        190,
        "opcode-LOAD_FROM_DICT_OR_DEREF"
      ]
    ],
    "load_from_dict_or_globals (opcode)": [
      [
        190,
        "opcode-LOAD_FROM_DICT_OR_GLOBALS"
      ]
    ],
    "load_global (opcode)": [
      [
        190,
        "opcode-LOAD_GLOBAL"
      ]
    ],
    "load_locals (opcode)": [
      [
        190,
        "opcode-LOAD_LOCALS"
      ]
    ],
    "load_method (opcode)": [
      [
        190,
        "opcode-LOAD_METHOD"
      ]
    ],
    "load_name (opcode)": [
      [
        190,
        "opcode-LOAD_NAME"
      ]
    ],
    "load_super_attr (opcode)": [
      [
        190,
        "opcode-LOAD_SUPER_ATTR"
      ]
    ],
    "make_cell (opcode)": [
      [
        190,
        "opcode-MAKE_CELL"
      ]
    ],
    "make_function (opcode)": [
      [
        190,
        "opcode-MAKE_FUNCTION"
      ]
    ],
    "map_add (opcode)": [
      [
        190,
        "opcode-MAP_ADD"
      ]
    ],
    "match_class (opcode)": [
      [
        190,
        "opcode-MATCH_CLASS"
      ]
    ],
    "match_keys (opcode)": [
      [
        190,
        "opcode-MATCH_KEYS"
      ]
    ],
    "match_mapping (opcode)": [
      [
        190,
        "opcode-MATCH_MAPPING"
      ]
    ],
    "match_sequence (opcode)": [
      [
        190,
        "opcode-MATCH_SEQUENCE"
      ]
    ],
    "nop (opcode)": [
      [
        190,
        "opcode-NOP"
      ]
    ],
    "pep 626": [
      [
        190,
        "index-0"
      ],
      [
        427,
        "index-62"
      ],
      [
        471,
        "index-4"
      ],
      [
        473,
        "index-30"
      ],
      [
        482,
        "index-42"
      ]
    ],
    "pop_block (opcode)": [
      [
        190,
        "opcode-POP_BLOCK"
      ]
    ],
    "pop_except (opcode)": [
      [
        190,
        "opcode-POP_EXCEPT"
      ]
    ],
    "pop_jump_if_false (opcode)": [
      [
        190,
        "opcode-POP_JUMP_IF_FALSE"
      ]
    ],
    "pop_jump_if_none (opcode)": [
      [
        190,
        "opcode-POP_JUMP_IF_NONE"
      ]
    ],
    "pop_jump_if_not_none (opcode)": [
      [
        190,
        "opcode-POP_JUMP_IF_NOT_NONE"
      ]
    ],
    "pop_jump_if_true (opcode)": [
      [
        190,
        "opcode-POP_JUMP_IF_TRUE"
      ]
    ],
    "pop_top (opcode)": [
      [
        190,
        "opcode-POP_TOP"
      ]
    ],
    "push_exc_info (opcode)": [
      [
        190,
        "opcode-PUSH_EXC_INFO"
      ]
    ],
    "push_null (opcode)": [
      [
        190,
        "opcode-PUSH_NULL"
      ]
    ],
    "positions (class in dis)": [
      [
        190,
        "dis.Positions"
      ]
    ],
    "positions.col_offset (in module dis)": [
      [
        190,
        "dis.Positions.col_offset"
      ]
    ],
    "positions.end_col_offset (in module dis)": [
      [
        190,
        "dis.Positions.end_col_offset"
      ]
    ],
    "positions.end_lineno (in module dis)": [
      [
        190,
        "dis.Positions.end_lineno"
      ]
    ],
    "positions.lineno (in module dis)": [
      [
        190,
        "dis.Positions.lineno"
      ]
    ],
    "raise_varargs (opcode)": [
      [
        190,
        "opcode-RAISE_VARARGS"
      ]
    ],
    "reraise (opcode)": [
      [
        190,
        "opcode-RERAISE"
      ]
    ],
    "resume (opcode)": [
      [
        190,
        "opcode-RESUME"
      ]
    ],
    "return_const (opcode)": [
      [
        190,
        "opcode-RETURN_CONST"
      ]
    ],
    "return_generator (opcode)": [
      [
        190,
        "opcode-RETURN_GENERATOR"
      ]
    ],
    "return_value (opcode)": [
      [
        190,
        "opcode-RETURN_VALUE"
      ]
    ],
    "send (opcode)": [
      [
        190,
        "opcode-SEND"
      ]
    ],
    "setup_annotations (opcode)": [
      [
        190,
        "opcode-SETUP_ANNOTATIONS"
      ]
    ],
    "setup_cleanup (opcode)": [
      [
        190,
        "opcode-SETUP_CLEANUP"
      ]
    ],
    "setup_finally (opcode)": [
      [
        190,
        "opcode-SETUP_FINALLY"
      ]
    ],
    "setup_with (opcode)": [
      [
        190,
        "opcode-SETUP_WITH"
      ]
    ],
    "set_add (opcode)": [
      [
        190,
        "opcode-SET_ADD"
      ]
    ],
    "set_update (opcode)": [
      [
        190,
        "opcode-SET_UPDATE"
      ]
    ],
    "store_attr (opcode)": [
      [
        190,
        "opcode-STORE_ATTR"
      ]
    ],
    "store_deref (opcode)": [
      [
        190,
        "opcode-STORE_DEREF"
      ]
    ],
    "store_fast (opcode)": [
      [
        190,
        "opcode-STORE_FAST"
      ]
    ],
    "store_global (opcode)": [
      [
        190,
        "opcode-STORE_GLOBAL"
      ]
    ],
    "store_name (opcode)": [
      [
        190,
        "opcode-STORE_NAME"
      ]
    ],
    "store_slice (opcode)": [
      [
        190,
        "opcode-STORE_SLICE"
      ]
    ],
    "store_subscr (opcode)": [
      [
        190,
        "opcode-STORE_SUBSCR"
      ]
    ],
    "swap (opcode)": [
      [
        190,
        "opcode-SWAP"
      ]
    ],
    "unary_invert (opcode)": [
      [
        190,
        "opcode-UNARY_INVERT"
      ]
    ],
    "unary_negative (opcode)": [
      [
        190,
        "opcode-UNARY_NEGATIVE"
      ]
    ],
    "unary_not (opcode)": [
      [
        190,
        "opcode-UNARY_NOT"
      ]
    ],
    "unpack_ex (opcode)": [
      [
        190,
        "opcode-UNPACK_EX"
      ]
    ],
    "unpack_sequence (opcode)": [
      [
        190,
        "opcode-UNPACK_SEQUENCE"
      ]
    ],
    "with_except_start (opcode)": [
      [
        190,
        "opcode-WITH_EXCEPT_START"
      ]
    ],
    "yield_value (opcode)": [
      [
        190,
        "opcode-YIELD_VALUE"
      ]
    ],
    "cmp_op (in module dis)": [
      [
        190,
        "dis.cmp_op"
      ]
    ],
    "code_info() (in module dis)": [
      [
        190,
        "dis.code_info"
      ]
    ],
    "dis": [
      [
        190,
        "module-dis"
      ]
    ],
    "dis command line option": [
      [
        190,
        "cmdoption-dis-h"
      ]
    ],
    "dis() (dis.bytecode method)": [
      [
        190,
        "dis.Bytecode.dis"
      ]
    ],
    "dis() (in module dis)": [
      [
        190,
        "dis.dis"
      ]
    ],
    "disassemble() (in module dis)": [
      [
        190,
        "dis.disassemble"
      ]
    ],
    "disco() (in module dis)": [
      [
        190,
        "dis.disco"
      ]
    ],
    "distb() (in module dis)": [
      [
        190,
        "dis.distb"
      ]
    ],
    "findlabels() (in module dis)": [
      [
        190,
        "dis.findlabels"
      ]
    ],
    "findlinestarts() (in module dis)": [
      [
        190,
        "dis.findlinestarts"
      ]
    ],
    "from_traceback() (dis.bytecode class method)": [
      [
        190,
        "dis.Bytecode.from_traceback"
      ]
    ],
    "get_instructions() (in module dis)": [
      [
        190,
        "dis.get_instructions"
      ]
    ],
    "hasarg (in module dis)": [
      [
        190,
        "dis.hasarg"
      ]
    ],
    "hascompare (in module dis)": [
      [
        190,
        "dis.hascompare"
      ]
    ],
    "hasconst (in module dis)": [
      [
        190,
        "dis.hasconst"
      ]
    ],
    "hasexc (in module dis)": [
      [
        190,
        "dis.hasexc"
      ]
    ],
    "hasfree (in module dis)": [
      [
        190,
        "dis.hasfree"
      ]
    ],
    "hasjabs (in module dis)": [
      [
        190,
        "dis.hasjabs"
      ]
    ],
    "hasjrel (in module dis)": [
      [
        190,
        "dis.hasjrel"
      ]
    ],
    "haslocal (in module dis)": [
      [
        190,
        "dis.haslocal"
      ]
    ],
    "hasname (in module dis)": [
      [
        190,
        "dis.hasname"
      ]
    ],
    "info() (dis.bytecode method)": [
      [
        190,
        "dis.Bytecode.info"
      ]
    ],
    "opmap (in module dis)": [
      [
        190,
        "dis.opmap"
      ]
    ],
    "opname (in module dis)": [
      [
        190,
        "dis.opname"
      ]
    ],
    "show_code() (in module dis)": [
      [
        190,
        "dis.show_code"
      ]
    ],
    "stack_effect() (in module dis)": [
      [
        190,
        "dis.stack_effect"
      ]
    ],
    "# (hash)": [
      [
        192,
        "index-4"
      ],
      [
        318,
        "index-38"
      ],
      [
        333,
        "index-2"
      ],
      [
        343,
        "index-37"
      ],
      [
        343,
        "index-47"
      ],
      [
        344,
        "index-7"
      ],
      [
        434,
        "index-4"
      ],
      [
        434,
        "index-5"
      ],
      [
        448,
        "index-0"
      ]
    ],
    "- (minus)": [
      [
        192,
        "index-4"
      ],
      [
        219,
        "index-2"
      ],
      [
        230,
        "index-1"
      ],
      [
        318,
        "index-11"
      ],
      [
        343,
        "index-13"
      ],
      [
        343,
        "index-37"
      ],
      [
        343,
        "index-47"
      ],
      [
        344,
        "index-4"
      ],
      [
        429,
        "index-60"
      ],
      [
        429,
        "index-70"
      ]
    ],
    "<blankline>": [
      [
        192,
        "index-2"
      ]
    ],
    "comparison_flags (in module doctest)": [
      [
        192,
        "doctest.COMPARISON_FLAGS"
      ]
    ],
    "dont_accept_blankline (in module doctest)": [
      [
        192,
        "doctest.DONT_ACCEPT_BLANKLINE"
      ]
    ],
    "dont_accept_true_for_1 (in module doctest)": [
      [
        192,
        "doctest.DONT_ACCEPT_TRUE_FOR_1"
      ]
    ],
    "debugrunner (class in doctest)": [
      [
        192,
        "doctest.DebugRunner"
      ]
    ],
    "docfilesuite() (in module doctest)": [
      [
        192,
        "doctest.DocFileSuite"
      ]
    ],
    "doctest (class in doctest)": [
      [
        192,
        "doctest.DocTest"
      ]
    ],
    "doctestfailure": [
      [
        192,
        "doctest.DocTestFailure"
      ]
    ],
    "doctestfinder (class in doctest)": [
      [
        192,
        "doctest.DocTestFinder"
      ]
    ],
    "doctestparser (class in doctest)": [
      [
        192,
        "doctest.DocTestParser"
      ]
    ],
    "doctestrunner (class in doctest)": [
      [
        192,
        "doctest.DocTestRunner"
      ]
    ],
    "doctestsuite() (in module doctest)": [
      [
        192,
        "doctest.DocTestSuite"
      ]
    ],
    "ellipsis (in module doctest)": [
      [
        192,
        "doctest.ELLIPSIS"
      ]
    ],
    "example (class in doctest)": [
      [
        192,
        "doctest.Example"
      ]
    ],
    "fail_fast (in module doctest)": [
      [
        192,
        "doctest.FAIL_FAST"
      ]
    ],
    "ignore_exception_detail (in module doctest)": [
      [
        192,
        "doctest.IGNORE_EXCEPTION_DETAIL"
      ]
    ],
    "normalize_whitespace (in module doctest)": [
      [
        192,
        "doctest.NORMALIZE_WHITESPACE"
      ]
    ],
    "outputchecker (class in doctest)": [
      [
        192,
        "doctest.OutputChecker"
      ]
    ],
    "reporting_flags (in module doctest)": [
      [
        192,
        "doctest.REPORTING_FLAGS"
      ]
    ],
    "report_cdiff (in module doctest)": [
      [
        192,
        "doctest.REPORT_CDIFF"
      ]
    ],
    "report_ndiff (in module doctest)": [
      [
        192,
        "doctest.REPORT_NDIFF"
      ]
    ],
    "report_only_first_failure (in module doctest)": [
      [
        192,
        "doctest.REPORT_ONLY_FIRST_FAILURE"
      ]
    ],
    "report_udiff (in module doctest)": [
      [
        192,
        "doctest.REPORT_UDIFF"
      ]
    ],
    "skip (in module doctest)": [
      [
        192,
        "doctest.SKIP"
      ]
    ],
    "unexpectedexception": [
      [
        192,
        "doctest.UnexpectedException"
      ]
    ],
    "check_output() (doctest.outputchecker method)": [
      [
        192,
        "doctest.OutputChecker.check_output"
      ]
    ],
    "debug() (in module doctest)": [
      [
        192,
        "doctest.debug"
      ]
    ],
    "debug_src() (in module doctest)": [
      [
        192,
        "doctest.debug_src"
      ]
    ],
    "docstring (doctest.doctest attribute)": [
      [
        192,
        "doctest.DocTest.docstring"
      ]
    ],
    "doctest": [
      [
        192,
        "module-doctest"
      ]
    ],
    "example (doctest.doctestfailure attribute)": [
      [
        192,
        "doctest.DocTestFailure.example"
      ]
    ],
    "example (doctest.unexpectedexception attribute)": [
      [
        192,
        "doctest.UnexpectedException.example"
      ]
    ],
    "examples (doctest.doctest attribute)": [
      [
        192,
        "doctest.DocTest.examples"
      ]
    ],
    "exc_info (doctest.unexpectedexception attribute)": [
      [
        192,
        "doctest.UnexpectedException.exc_info"
      ]
    ],
    "exc_msg (doctest.example attribute)": [
      [
        192,
        "doctest.Example.exc_msg"
      ]
    ],
    "failureexception": [
      [
        192,
        "doctest.failureException"
      ]
    ],
    "filename (doctest.doctest attribute)": [
      [
        192,
        "doctest.DocTest.filename"
      ]
    ],
    "find() (doctest.doctestfinder method)": [
      [
        192,
        "doctest.DocTestFinder.find"
      ]
    ],
    "get_doctest() (doctest.doctestparser method)": [
      [
        192,
        "doctest.DocTestParser.get_doctest"
      ]
    ],
    "get_examples() (doctest.doctestparser method)": [
      [
        192,
        "doctest.DocTestParser.get_examples"
      ]
    ],
    "globs (doctest.doctest attribute)": [
      [
        192,
        "doctest.DocTest.globs"
      ]
    ],
    "got (doctest.doctestfailure attribute)": [
      [
        192,
        "doctest.DocTestFailure.got"
      ]
    ],
    "in doctests": [
      [
        192,
        "index-3"
      ],
      [
        192,
        "index-4"
      ]
    ],
    "indent (doctest.example attribute)": [
      [
        192,
        "doctest.Example.indent"
      ]
    ],
    "interpreter prompt": [
      [
        192,
        "index-0"
      ],
      [
        351,
        "index-27"
      ]
    ],
    "lineno (doctest.doctest attribute)": [
      [
        192,
        "doctest.DocTest.lineno"
      ]
    ],
    "lineno (doctest.example attribute)": [
      [
        192,
        "doctest.Example.lineno"
      ]
    ],
    "marker": [
      [
        192,
        "index-1"
      ],
      [
        380,
        "index-1"
      ]
    ],
    "name (doctest.doctest attribute)": [
      [
        192,
        "doctest.DocTest.name"
      ]
    ],
    "options (doctest.example attribute)": [
      [
        192,
        "doctest.Example.options"
      ]
    ],
    "output_difference() (doctest.outputchecker method)": [
      [
        192,
        "doctest.OutputChecker.output_difference"
      ]
    ],
    "parse() (doctest.doctestparser method)": [
      [
        192,
        "doctest.DocTestParser.parse"
      ]
    ],
    "register_optionflag() (in module doctest)": [
      [
        192,
        "doctest.register_optionflag"
      ]
    ],
    "report_failure() (doctest.doctestrunner method)": [
      [
        192,
        "doctest.DocTestRunner.report_failure"
      ]
    ],
    "report_start() (doctest.doctestrunner method)": [
      [
        192,
        "doctest.DocTestRunner.report_start"
      ]
    ],
    "report_success() (doctest.doctestrunner method)": [
      [
        192,
        "doctest.DocTestRunner.report_success"
      ]
    ],
    "report_unexpected_exception() (doctest.doctestrunner method)": [
      [
        192,
        "doctest.DocTestRunner.report_unexpected_exception"
      ]
    ],
    "run() (doctest.doctestrunner method)": [
      [
        192,
        "doctest.DocTestRunner.run"
      ]
    ],
    "run_docstring_examples() (in module doctest)": [
      [
        192,
        "doctest.run_docstring_examples"
      ]
    ],
    "script_from_examples() (in module doctest)": [
      [
        192,
        "doctest.script_from_examples"
      ]
    ],
    "set_unittest_reportflags() (in module doctest)": [
      [
        192,
        "doctest.set_unittest_reportflags"
      ]
    ],
    "source (doctest.example attribute)": [
      [
        192,
        "doctest.Example.source"
      ]
    ],
    "summarize() (doctest.doctestrunner method)": [
      [
        192,
        "doctest.DocTestRunner.summarize"
      ]
    ],
    "test (doctest.doctestfailure attribute)": [
      [
        192,
        "doctest.DocTestFailure.test"
      ]
    ],
    "test (doctest.unexpectedexception attribute)": [
      [
        192,
        "doctest.UnexpectedException.test"
      ]
    ],
    "testfile() (in module doctest)": [
      [
        192,
        "doctest.testfile"
      ]
    ],
    "testmod() (in module doctest)": [
      [
        192,
        "doctest.testmod"
      ]
    ],
    "testsource() (in module doctest)": [
      [
        192,
        "doctest.testsource"
      ]
    ],
    "want (doctest.example attribute)": [
      [
        192,
        "doctest.Example.want"
      ]
    ],
    "rfc 2046": [
      [
        193,
        "index-4"
      ],
      [
        196,
        "index-0"
      ],
      [
        201,
        "index-5"
      ]
    ],
    "rfc 2047": [
      [
        193,
        "index-5"
      ],
      [
        201,
        "index-11"
      ],
      [
        201,
        "index-13"
      ],
      [
        201,
        "index-6"
      ],
      [
        201,
        "index-8"
      ],
      [
        202,
        "index-1"
      ],
      [
        202,
        "index-4"
      ],
      [
        202,
        "index-6"
      ],
      [
        207,
        "index-3"
      ],
      [
        207,
        "index-4"
      ],
      [
        208,
        "index-1"
      ],
      [
        474,
        "index-11"
      ],
      [
        474,
        "index-8"
      ]
    ],
    "rfc 2183": [
      [
        193,
        "index-6"
      ],
      [
        195,
        "index-11"
      ],
      [
        204,
        "index-10"
      ]
    ],
    "rfc 2231": [
      [
        193,
        "index-7"
      ],
      [
        195,
        "index-10"
      ],
      [
        195,
        "index-2"
      ],
      [
        195,
        "index-3"
      ],
      [
        195,
        "index-7"
      ],
      [
        195,
        "index-8"
      ],
      [
        201,
        "index-7"
      ],
      [
        204,
        "index-4"
      ],
      [
        204,
        "index-5"
      ],
      [
        204,
        "index-9"
      ],
      [
        208,
        "index-5"
      ],
      [
        208,
        "index-6"
      ],
      [
        208,
        "index-7"
      ],
      [
        208,
        "index-8"
      ],
      [
        208,
        "index-9"
      ]
    ],
    "rfc 2821": [
      [
        193,
        "index-0"
      ]
    ],
    "rfc 5322": [
      [
        193,
        "index-1"
      ],
      [
        195,
        "index-0"
      ],
      [
        198,
        "index-0"
      ],
      [
        200,
        "index-0"
      ],
      [
        200,
        "index-1"
      ],
      [
        202,
        "index-0"
      ],
      [
        202,
        "index-11"
      ],
      [
        202,
        "index-12"
      ],
      [
        202,
        "index-14"
      ],
      [
        202,
        "index-2"
      ],
      [
        202,
        "index-3"
      ],
      [
        202,
        "index-5"
      ],
      [
        202,
        "index-7"
      ],
      [
        202,
        "index-8"
      ],
      [
        204,
        "index-0"
      ],
      [
        204,
        "index-2"
      ],
      [
        206,
        "index-0"
      ],
      [
        207,
        "index-0"
      ],
      [
        207,
        "index-1"
      ],
      [
        207,
        "index-2"
      ],
      [
        207,
        "index-5"
      ],
      [
        207,
        "index-6"
      ],
      [
        207,
        "index-9"
      ],
      [
        334,
        "index-11"
      ]
    ],
    "rfc 6532": [
      [
        193,
        "index-2"
      ],
      [
        204,
        "index-1"
      ],
      [
        206,
        "index-1"
      ],
      [
        207,
        "index-7"
      ],
      [
        477,
        "index-31"
      ]
    ],
    "email": [
      [
        193,
        "module-email"
      ]
    ],
    "charset (class in email.charset)": [
      [
        194,
        "email.charset.Charset"
      ]
    ],
    "__eq__() (email.charset.charset method)": [
      [
        194,
        "email.charset.Charset.__eq__"
      ]
    ],
    "__ne__() (email.charset.charset method)": [
      [
        194,
        "email.charset.Charset.__ne__"
      ]
    ],
    "__str__() (email.charset.charset method)": [
      [
        194,
        "email.charset.Charset.__str__"
      ]
    ],
    "add_alias() (in module email.charset)": [
      [
        194,
        "email.charset.add_alias"
      ]
    ],
    "add_charset() (in module email.charset)": [
      [
        194,
        "email.charset.add_charset"
      ]
    ],
    "add_codec() (in module email.charset)": [
      [
        194,
        "email.charset.add_codec"
      ]
    ],
    "body_encode() (email.charset.charset method)": [
      [
        194,
        "email.charset.Charset.body_encode"
      ]
    ],
    "body_encoding (email.charset.charset attribute)": [
      [
        194,
        "email.charset.Charset.body_encoding"
      ]
    ],
    "email.charset": [
      [
        194,
        "module-email.charset"
      ]
    ],
    "get_body_encoding() (email.charset.charset method)": [
      [
        194,
        "email.charset.Charset.get_body_encoding"
      ]
    ],
    "get_output_charset() (email.charset.charset method)": [
      [
        194,
        "email.charset.Charset.get_output_charset"
      ]
    ],
    "header_encode() (email.charset.charset method)": [
      [
        194,
        "email.charset.Charset.header_encode"
      ]
    ],
    "header_encode_lines() (email.charset.charset method)": [
      [
        194,
        "email.charset.Charset.header_encode_lines"
      ]
    ],
    "header_encoding (email.charset.charset attribute)": [
      [
        194,
        "email.charset.Charset.header_encoding"
      ]
    ],
    "input_charset (email.charset.charset attribute)": [
      [
        194,
        "email.charset.Charset.input_charset"
      ]
    ],
    "input_codec (email.charset.charset attribute)": [
      [
        194,
        "email.charset.Charset.input_codec"
      ]
    ],
    "output_charset (email.charset.charset attribute)": [
      [
        194,
        "email.charset.Charset.output_charset"
      ]
    ],
    "output_codec (email.charset.charset attribute)": [
      [
        194,
        "email.charset.Charset.output_codec"
      ]
    ],
    "message (class in email.message)": [
      [
        195,
        "email.message.Message"
      ]
    ],
    "rfc 2822": [
      [
        195,
        "index-1"
      ],
      [
        201,
        "index-0"
      ],
      [
        201,
        "index-10"
      ],
      [
        201,
        "index-12"
      ],
      [
        201,
        "index-2"
      ],
      [
        201,
        "index-3"
      ],
      [
        201,
        "index-9"
      ],
      [
        208,
        "index-0"
      ],
      [
        208,
        "index-10"
      ],
      [
        208,
        "index-2"
      ],
      [
        208,
        "index-3"
      ],
      [
        208,
        "index-4"
      ],
      [
        241,
        "index-2"
      ],
      [
        244,
        "index-2"
      ],
      [
        270,
        "index-0"
      ],
      [
        365,
        "index-10"
      ],
      [
        365,
        "index-22"
      ],
      [
        450,
        "index-1"
      ],
      [
        463,
        "index-20"
      ]
    ],
    "__bytes__() (email.message.message method)": [
      [
        195,
        "email.message.Message.__bytes__"
      ]
    ],
    "__contains__() (email.message.message method)": [
      [
        195,
        "email.message.Message.__contains__"
      ]
    ],
    "__delitem__() (email.message.message method)": [
      [
        195,
        "email.message.Message.__delitem__"
      ]
    ],
    "__getitem__() (email.message.message method)": [
      [
        195,
        "email.message.Message.__getitem__"
      ]
    ],
    "__len__() (email.message.message method)": [
      [
        195,
        "email.message.Message.__len__"
      ]
    ],
    "__setitem__() (email.message.message method)": [
      [
        195,
        "email.message.Message.__setitem__"
      ]
    ],
    "__str__() (email.message.message method)": [
      [
        195,
        "email.message.Message.__str__"
      ]
    ],
    "add_header() (email.message.message method)": [
      [
        195,
        "email.message.Message.add_header"
      ]
    ],
    "as_bytes() (email.message.message method)": [
      [
        195,
        "email.message.Message.as_bytes"
      ]
    ],
    "as_string() (email.message.message method)": [
      [
        195,
        "email.message.Message.as_string"
      ]
    ],
    "attach() (email.message.message method)": [
      [
        195,
        "email.message.Message.attach"
      ]
    ],
    "defects (email.message.message attribute)": [
      [
        195,
        "email.message.Message.defects"
      ]
    ],
    "del_param() (email.message.message method)": [
      [
        195,
        "email.message.Message.del_param"
      ]
    ],
    "epilogue (email.message.message attribute)": [
      [
        195,
        "email.message.Message.epilogue"
      ]
    ],
    "get() (email.message.message method)": [
      [
        195,
        "email.message.Message.get"
      ]
    ],
    "get_all() (email.message.message method)": [
      [
        195,
        "email.message.Message.get_all"
      ]
    ],
    "get_boundary() (email.message.message method)": [
      [
        195,
        "email.message.Message.get_boundary"
      ]
    ],
    "get_charset() (email.message.message method)": [
      [
        195,
        "email.message.Message.get_charset"
      ]
    ],
    "get_charsets() (email.message.message method)": [
      [
        195,
        "email.message.Message.get_charsets"
      ]
    ],
    "get_content_charset() (email.message.message method)": [
      [
        195,
        "email.message.Message.get_content_charset"
      ]
    ],
    "get_content_disposition() (email.message.message method)": [
      [
        195,
        "email.message.Message.get_content_disposition"
      ]
    ],
    "get_content_maintype() (email.message.message method)": [
      [
        195,
        "email.message.Message.get_content_maintype"
      ]
    ],
    "get_content_subtype() (email.message.message method)": [
      [
        195,
        "email.message.Message.get_content_subtype"
      ]
    ],
    "get_content_type() (email.message.message method)": [
      [
        195,
        "email.message.Message.get_content_type"
      ]
    ],
    "get_default_type() (email.message.message method)": [
      [
        195,
        "email.message.Message.get_default_type"
      ]
    ],
    "get_filename() (email.message.message method)": [
      [
        195,
        "email.message.Message.get_filename"
      ]
    ],
    "get_param() (email.message.message method)": [
      [
        195,
        "email.message.Message.get_param"
      ]
    ],
    "get_params() (email.message.message method)": [
      [
        195,
        "email.message.Message.get_params"
      ]
    ],
    "get_payload() (email.message.message method)": [
      [
        195,
        "email.message.Message.get_payload"
      ]
    ],
    "get_unixfrom() (email.message.message method)": [
      [
        195,
        "email.message.Message.get_unixfrom"
      ]
    ],
    "is_multipart() (email.message.message method)": [
      [
        195,
        "email.message.Message.is_multipart"
      ]
    ],
    "items() (email.message.message method)": [
      [
        195,
        "email.message.Message.items"
      ]
    ],
    "keys() (email.message.message method)": [
      [
        195,
        "email.message.Message.keys"
      ]
    ],
    "preamble (email.message.message attribute)": [
      [
        195,
        "email.message.Message.preamble"
      ]
    ],
    "replace_header() (email.message.message method)": [
      [
        195,
        "email.message.Message.replace_header"
      ]
    ],
    "set_boundary() (email.message.message method)": [
      [
        195,
        "email.message.Message.set_boundary"
      ]
    ],
    "set_charset() (email.message.message method)": [
      [
        195,
        "email.message.Message.set_charset"
      ]
    ],
    "set_default_type() (email.message.message method)": [
      [
        195,
        "email.message.Message.set_default_type"
      ]
    ],
    "set_param() (email.message.message method)": [
      [
        195,
        "email.message.Message.set_param"
      ]
    ],
    "set_payload() (email.message.message method)": [
      [
        195,
        "email.message.Message.set_payload"
      ]
    ],
    "set_type() (email.message.message method)": [
      [
        195,
        "email.message.Message.set_type"
      ]
    ],
    "set_unixfrom() (email.message.message method)": [
      [
        195,
        "email.message.Message.set_unixfrom"
      ]
    ],
    "values() (email.message.message method)": [
      [
        195,
        "email.message.Message.values"
      ]
    ],
    "walk() (email.message.message method)": [
      [
        195,
        "email.message.Message.walk"
      ]
    ],
    "contentmanager (class in email.contentmanager)": [
      [
        196,
        "email.contentmanager.ContentManager"
      ]
    ],
    "add_get_handler() (email.contentmanager.contentmanager method)": [
      [
        196,
        "email.contentmanager.ContentManager.add_get_handler"
      ]
    ],
    "add_set_handler() (email.contentmanager.contentmanager method)": [
      [
        196,
        "email.contentmanager.ContentManager.add_set_handler"
      ]
    ],
    "email.contentmanager": [
      [
        196,
        "module-email.contentmanager"
      ]
    ],
    "get_content() (email.contentmanager.contentmanager method)": [
      [
        196,
        "email.contentmanager.ContentManager.get_content"
      ]
    ],
    "get_content() (in module email.contentmanager)": [
      [
        196,
        "email.contentmanager.get_content"
      ]
    ],
    "raw_data_manager (in module email.contentmanager)": [
      [
        196,
        "email.contentmanager.raw_data_manager"
      ]
    ],
    "set_content() (email.contentmanager.contentmanager method)": [
      [
        196,
        "email.contentmanager.ContentManager.set_content"
      ]
    ],
    "set_content() (in module email.contentmanager)": [
      [
        196,
        "email.contentmanager.set_content"
      ]
    ],
    "email.encoders": [
      [
        197,
        "module-email.encoders"
      ]
    ],
    "encode_7or8bit() (in module email.encoders)": [
      [
        197,
        "email.encoders.encode_7or8bit"
      ]
    ],
    "encode_base64() (in module email.encoders)": [
      [
        197,
        "email.encoders.encode_base64"
      ]
    ],
    "encode_noop() (in module email.encoders)": [
      [
        197,
        "email.encoders.encode_noop"
      ]
    ],
    "encode_quopri() (in module email.encoders)": [
      [
        197,
        "email.encoders.encode_quopri"
      ]
    ],
    "boundaryerror": [
      [
        198,
        "email.errors.BoundaryError"
      ]
    ],
    "headerdefect": [
      [
        198,
        "email.errors.HeaderDefect"
      ]
    ],
    "headerparseerror": [
      [
        198,
        "email.errors.HeaderParseError"
      ]
    ],
    "messagedefect": [
      [
        198,
        "email.errors.MessageDefect"
      ]
    ],
    "messageerror": [
      [
        198,
        "email.errors.MessageError"
      ]
    ],
    "messageparseerror": [
      [
        198,
        "email.errors.MessageParseError"
      ]
    ],
    "multipartconversionerror": [
      [
        198,
        "email.errors.MultipartConversionError"
      ]
    ],
    "email.errors": [
      [
        198,
        "module-email.errors"
      ]
    ],
    "rfc 822": [
      [
        199,
        "index-0"
      ],
      [
        201,
        "index-1"
      ],
      [
        229,
        "index-9"
      ],
      [
        241,
        "index-6"
      ],
      [
        334,
        "index-10"
      ],
      [
        334,
        "index-12"
      ],
      [
        334,
        "index-6"
      ],
      [
        334,
        "index-9"
      ],
      [
        365,
        "index-19"
      ],
      [
        365,
        "index-20"
      ],
      [
        463,
        "index-21"
      ]
    ],
    "bytesgenerator (class in email.generator)": [
      [
        200,
        "email.generator.BytesGenerator"
      ]
    ],
    "decodedgenerator (class in email.generator)": [
      [
        200,
        "email.generator.DecodedGenerator"
      ]
    ],
    "generator (class in email.generator)": [
      [
        200,
        "email.generator.Generator"
      ]
    ],
    "clone() (email.generator.bytesgenerator method)": [
      [
        200,
        "email.generator.BytesGenerator.clone"
      ]
    ],
    "clone() (email.generator.generator method)": [
      [
        200,
        "email.generator.Generator.clone"
      ]
    ],
    "email.generator": [
      [
        200,
        "module-email.generator"
      ]
    ],
    "flatten() (email.generator.bytesgenerator method)": [
      [
        200,
        "email.generator.BytesGenerator.flatten"
      ]
    ],
    "flatten() (email.generator.generator method)": [
      [
        200,
        "email.generator.Generator.flatten"
      ]
    ],
    "write() (email.generator.bytesgenerator method)": [
      [
        200,
        "email.generator.BytesGenerator.write"
      ]
    ],
    "write() (email.generator.generator method)": [
      [
        200,
        "email.generator.Generator.write"
      ]
    ],
    "header (class in email.header)": [
      [
        201,
        "email.header.Header"
      ]
    ],
    "__eq__() (email.header.header method)": [
      [
        201,
        "email.header.Header.__eq__"
      ]
    ],
    "__ne__() (email.header.header method)": [
      [
        201,
        "email.header.Header.__ne__"
      ]
    ],
    "__str__() (email.header.header method)": [
      [
        201,
        "email.header.Header.__str__"
      ]
    ],
    "append() (email.header.header method)": [
      [
        201,
        "email.header.Header.append"
      ]
    ],
    "decode_header() (in module email.header)": [
      [
        201,
        "email.header.decode_header"
      ]
    ],
    "email.header": [
      [
        201,
        "module-email.header"
      ]
    ],
    "encode() (email.header.header method)": [
      [
        201,
        "email.header.Header.encode"
      ]
    ],
    "make_header() (in module email.header)": [
      [
        201,
        "email.header.make_header"
      ]
    ],
    "address (class in email.headerregistry)": [
      [
        202,
        "email.headerregistry.Address"
      ]
    ],
    "addressheader (class in email.headerregistry)": [
      [
        202,
        "email.headerregistry.AddressHeader"
      ]
    ],
    "baseheader (class in email.headerregistry)": [
      [
        202,
        "email.headerregistry.BaseHeader"
      ]
    ],
    "contentdispositionheader (class in email.headerregistry)": [
      [
        202,
        "email.headerregistry.ContentDispositionHeader"
      ]
    ],
    "contenttransferencoding (class in email.headerregistry)": [
      [
        202,
        "email.headerregistry.ContentTransferEncoding"
      ]
    ],
    "contenttypeheader (class in email.headerregistry)": [
      [
        202,
        "email.headerregistry.ContentTypeHeader"
      ]
    ],
    "dateheader (class in email.headerregistry)": [
      [
        202,
        "email.headerregistry.DateHeader"
      ]
    ],
    "group (class in email.headerregistry)": [
      [
        202,
        "email.headerregistry.Group"
      ]
    ],
    "headerregistry (class in email.headerregistry)": [
      [
        202,
        "email.headerregistry.HeaderRegistry"
      ]
    ],
    "mimeversionheader (class in email.headerregistry)": [
      [
        202,
        "email.headerregistry.MIMEVersionHeader"
      ]
    ],
    "parameterizedmimeheader (class in email.headerregistry)": [
      [
        202,
        "email.headerregistry.ParameterizedMIMEHeader"
      ]
    ],
    "rfc 5321": [
      [
        202,
        "index-13"
      ],
      [
        475,
        "index-26"
      ]
    ],
    "singleaddressheader (class in email.headerregistry)": [
      [
        202,
        "email.headerregistry.SingleAddressHeader"
      ]
    ],
    "unstructuredheader (class in email.headerregistry)": [
      [
        202,
        "email.headerregistry.UnstructuredHeader"
      ]
    ],
    "__call__() (email.headerregistry.headerregistry method)": [
      [
        202,
        "email.headerregistry.HeaderRegistry.__call__"
      ]
    ],
    "__getitem__() (email.headerregistry.headerregistry method)": [
      [
        202,
        "email.headerregistry.HeaderRegistry.__getitem__"
      ]
    ],
    "__str__() (email.headerregistry.address method)": [
      [
        202,
        "email.headerregistry.Address.__str__"
      ]
    ],
    "__str__() (email.headerregistry.group method)": [
      [
        202,
        "email.headerregistry.Group.__str__"
      ]
    ],
    "addr_spec (email.headerregistry.address attribute)": [
      [
        202,
        "email.headerregistry.Address.addr_spec"
      ]
    ],
    "address (email.headerregistry.singleaddressheader attribute)": [
      [
        202,
        "email.headerregistry.SingleAddressHeader.address"
      ]
    ],
    "addresses (email.headerregistry.addressheader attribute)": [
      [
        202,
        "email.headerregistry.AddressHeader.addresses"
      ]
    ],
    "addresses (email.headerregistry.group attribute)": [
      [
        202,
        "email.headerregistry.Group.addresses"
      ]
    ],
    "content_disposition (email.headerregistry.contentdispositionheader attribute)": [
      [
        202,
        "email.headerregistry.ContentDispositionHeader.content_disposition"
      ]
    ],
    "content_type (email.headerregistry.contenttypeheader attribute)": [
      [
        202,
        "email.headerregistry.ContentTypeHeader.content_type"
      ]
    ],
    "cte (email.headerregistry.contenttransferencoding attribute)": [
      [
        202,
        "email.headerregistry.ContentTransferEncoding.cte"
      ]
    ],
    "datetime (email.headerregistry.dateheader attribute)": [
      [
        202,
        "email.headerregistry.DateHeader.datetime"
      ]
    ],
    "defects (email.headerregistry.baseheader attribute)": [
      [
        202,
        "email.headerregistry.BaseHeader.defects"
      ]
    ],
    "display_name (email.headerregistry.address attribute)": [
      [
        202,
        "email.headerregistry.Address.display_name"
      ]
    ],
    "display_name (email.headerregistry.group attribute)": [
      [
        202,
        "email.headerregistry.Group.display_name"
      ]
    ],
    "domain (email.headerregistry.address attribute)": [
      [
        202,
        "email.headerregistry.Address.domain"
      ]
    ],
    "email.headerregistry": [
      [
        202,
        "module-email.headerregistry"
      ]
    ],
    "fold() (email.headerregistry.baseheader method)": [
      [
        202,
        "email.headerregistry.BaseHeader.fold"
      ]
    ],
    "groups (email.headerregistry.addressheader attribute)": [
      [
        202,
        "email.headerregistry.AddressHeader.groups"
      ]
    ],
    "maintype (email.headerregistry.contenttypeheader attribute)": [
      [
        202,
        "email.headerregistry.ContentTypeHeader.maintype"
      ]
    ],
    "major (email.headerregistry.mimeversionheader attribute)": [
      [
        202,
        "email.headerregistry.MIMEVersionHeader.major"
      ]
    ],
    "map_to_type() (email.headerregistry.headerregistry method)": [
      [
        202,
        "email.headerregistry.HeaderRegistry.map_to_type"
      ]
    ],
    "max_count (email.headerregistry.baseheader attribute)": [
      [
        202,
        "email.headerregistry.BaseHeader.max_count"
      ]
    ],
    "minor (email.headerregistry.mimeversionheader attribute)": [
      [
        202,
        "email.headerregistry.MIMEVersionHeader.minor"
      ]
    ],
    "name (email.headerregistry.baseheader attribute)": [
      [
        202,
        "email.headerregistry.BaseHeader.name"
      ]
    ],
    "params (email.headerregistry.parameterizedmimeheader attribute)": [
      [
        202,
        "email.headerregistry.ParameterizedMIMEHeader.params"
      ]
    ],
    "subtype (email.headerregistry.contenttypeheader attribute)": [
      [
        202,
        "email.headerregistry.ContentTypeHeader.subtype"
      ]
    ],
    "username (email.headerregistry.address attribute)": [
      [
        202,
        "email.headerregistry.Address.username"
      ]
    ],
    "version (email.headerregistry.mimeversionheader attribute)": [
      [
        202,
        "email.headerregistry.MIMEVersionHeader.version"
      ]
    ],
    "_structure() (in module email.iterators)": [
      [
        203,
        "email.iterators._structure"
      ]
    ],
    "body_line_iterator() (in module email.iterators)": [
      [
        203,
        "email.iterators.body_line_iterator"
      ]
    ],
    "email.iterators": [
      [
        203,
        "module-email.iterators"
      ]
    ],
    "typed_subpart_iterator() (in module email.iterators)": [
      [
        203,
        "email.iterators.typed_subpart_iterator"
      ]
    ],
    "emailmessage (class in email.message)": [
      [
        204,
        "email.message.EmailMessage"
      ]
    ],
    "mimepart (class in email.message)": [
      [
        204,
        "email.message.MIMEPart"
      ]
    ],
    "rfc 6531": [
      [
        204,
        "index-3"
      ],
      [
        207,
        "index-8"
      ],
      [
        334,
        "index-3"
      ],
      [
        477,
        "index-32"
      ],
      [
        477,
        "index-38"
      ],
      [
        477,
        "index-39"
      ]
    ],
    "__bytes__() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.__bytes__"
      ]
    ],
    "__contains__() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.__contains__"
      ]
    ],
    "__delitem__() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.__delitem__"
      ]
    ],
    "__getitem__() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.__getitem__"
      ]
    ],
    "__len__() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.__len__"
      ]
    ],
    "__setitem__() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.__setitem__"
      ]
    ],
    "__str__() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.__str__"
      ]
    ],
    "add_alternative() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.add_alternative"
      ]
    ],
    "add_attachment() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.add_attachment"
      ]
    ],
    "add_header() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.add_header"
      ]
    ],
    "add_related() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.add_related"
      ]
    ],
    "as_bytes() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.as_bytes"
      ]
    ],
    "as_string() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.as_string"
      ]
    ],
    "clear() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.clear"
      ]
    ],
    "clear_content() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.clear_content"
      ]
    ],
    "defects (email.message.emailmessage attribute)": [
      [
        204,
        "email.message.EmailMessage.defects"
      ]
    ],
    "del_param() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.del_param"
      ]
    ],
    "email.message": [
      [
        204,
        "module-email.message"
      ]
    ],
    "epilogue (email.message.emailmessage attribute)": [
      [
        204,
        "email.message.EmailMessage.epilogue"
      ]
    ],
    "get() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.get"
      ]
    ],
    "get_all() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.get_all"
      ]
    ],
    "get_body() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.get_body"
      ]
    ],
    "get_boundary() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.get_boundary"
      ]
    ],
    "get_charsets() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.get_charsets"
      ]
    ],
    "get_content() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.get_content"
      ]
    ],
    "get_content_charset() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.get_content_charset"
      ]
    ],
    "get_content_disposition() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.get_content_disposition"
      ]
    ],
    "get_content_maintype() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.get_content_maintype"
      ]
    ],
    "get_content_subtype() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.get_content_subtype"
      ]
    ],
    "get_content_type() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.get_content_type"
      ]
    ],
    "get_default_type() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.get_default_type"
      ]
    ],
    "get_filename() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.get_filename"
      ]
    ],
    "get_unixfrom() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.get_unixfrom"
      ]
    ],
    "is_attachment() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.is_attachment"
      ]
    ],
    "is_multipart() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.is_multipart"
      ]
    ],
    "items() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.items"
      ]
    ],
    "iter_attachments() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.iter_attachments"
      ]
    ],
    "iter_parts() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.iter_parts"
      ]
    ],
    "keys() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.keys"
      ]
    ],
    "make_alternative() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.make_alternative"
      ]
    ],
    "make_mixed() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.make_mixed"
      ]
    ],
    "make_related() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.make_related"
      ]
    ],
    "preamble (email.message.emailmessage attribute)": [
      [
        204,
        "email.message.EmailMessage.preamble"
      ]
    ],
    "replace_header() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.replace_header"
      ]
    ],
    "set_boundary() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.set_boundary"
      ]
    ],
    "set_content() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.set_content"
      ]
    ],
    "set_default_type() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.set_default_type"
      ]
    ],
    "set_param() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.set_param"
      ]
    ],
    "set_unixfrom() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.set_unixfrom"
      ]
    ],
    "values() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.values"
      ]
    ],
    "walk() (email.message.emailmessage method)": [
      [
        204,
        "email.message.EmailMessage.walk"
      ]
    ],
    "mimeapplication (class in email.mime.application)": [
      [
        205,
        "email.mime.application.MIMEApplication"
      ]
    ],
    "mimeaudio (class in email.mime.audio)": [
      [
        205,
        "email.mime.audio.MIMEAudio"
      ]
    ],
    "mimebase (class in email.mime.base)": [
      [
        205,
        "email.mime.base.MIMEBase"
      ]
    ],
    "mimeimage (class in email.mime.image)": [
      [
        205,
        "email.mime.image.MIMEImage"
      ]
    ],
    "mimemessage (class in email.mime.message)": [
      [
        205,
        "email.mime.message.MIMEMessage"
      ]
    ],
    "mimemultipart (class in email.mime.multipart)": [
      [
        205,
        "email.mime.multipart.MIMEMultipart"
      ]
    ],
    "mimenonmultipart (class in email.mime.nonmultipart)": [
      [
        205,
        "email.mime.nonmultipart.MIMENonMultipart"
      ]
    ],
    "mimetext (class in email.mime.text)": [
      [
        205,
        "email.mime.text.MIMEText"
      ]
    ],
    "email.mime": [
      [
        205,
        "module-email.mime"
      ]
    ],
    "email.mime.application": [
      [
        205,
        "module-email.mime.application"
      ]
    ],
    "email.mime.audio": [
      [
        205,
        "module-email.mime.audio"
      ]
    ],
    "email.mime.base": [
      [
        205,
        "module-email.mime.base"
      ]
    ],
    "email.mime.image": [
      [
        205,
        "module-email.mime.image"
      ]
    ],
    "email.mime.message": [
      [
        205,
        "module-email.mime.message"
      ]
    ],
    "email.mime.multipart": [
      [
        205,
        "module-email.mime.multipart"
      ]
    ],
    "email.mime.nonmultipart": [
      [
        205,
        "module-email.mime.nonmultipart"
      ]
    ],
    "email.mime.text": [
      [
        205,
        "module-email.mime.text"
      ]
    ],
    "bytesfeedparser (class in email.parser)": [
      [
        206,
        "email.parser.BytesFeedParser"
      ]
    ],
    "bytesheaderparser (class in email.parser)": [
      [
        206,
        "email.parser.BytesHeaderParser"
      ]
    ],
    "bytesparser (class in email.parser)": [
      [
        206,
        "email.parser.BytesParser"
      ]
    ],
    "feedparser (class in email.parser)": [
      [
        206,
        "email.parser.FeedParser"
      ]
    ],
    "headerparser (class in email.parser)": [
      [
        206,
        "email.parser.HeaderParser"
      ]
    ],
    "parser (class in email.parser)": [
      [
        206,
        "email.parser.Parser"
      ]
    ],
    "close() (email.parser.bytesfeedparser method)": [
      [
        206,
        "email.parser.BytesFeedParser.close"
      ]
    ],
    "email.parser": [
      [
        206,
        "module-email.parser"
      ]
    ],
    "feed() (email.parser.bytesfeedparser method)": [
      [
        206,
        "email.parser.BytesFeedParser.feed"
      ]
    ],
    "message_from_binary_file() (in module email)": [
      [
        206,
        "email.message_from_binary_file"
      ]
    ],
    "message_from_bytes() (in module email)": [
      [
        206,
        "email.message_from_bytes"
      ]
    ],
    "message_from_file() (in module email)": [
      [
        206,
        "email.message_from_file"
      ]
    ],
    "message_from_string() (in module email)": [
      [
        206,
        "email.message_from_string"
      ]
    ],
    "parse() (email.parser.bytesparser method)": [
      [
        206,
        "email.parser.BytesParser.parse"
      ]
    ],
    "parse() (email.parser.parser method)": [
      [
        206,
        "email.parser.Parser.parse"
      ]
    ],
    "parsebytes() (email.parser.bytesparser method)": [
      [
        206,
        "email.parser.BytesParser.parsebytes"
      ]
    ],
    "parsestr() (email.parser.parser method)": [
      [
        206,
        "email.parser.Parser.parsestr"
      ]
    ],
    "compat32 (class in email.policy)": [
      [
        207,
        "email.policy.Compat32"
      ]
    ],
    "emailpolicy (class in email.policy)": [
      [
        207,
        "email.policy.EmailPolicy"
      ]
    ],
    "http (in module email.policy)": [
      [
        207,
        "email.policy.HTTP"
      ]
    ],
    "policy (class in email.policy)": [
      [
        207,
        "email.policy.Policy"
      ]
    ],
    "smtp (in module email.policy)": [
      [
        207,
        "email.policy.SMTP"
      ]
    ],
    "smtputf8 (in module email.policy)": [
      [
        207,
        "email.policy.SMTPUTF8"
      ]
    ],
    "clone() (email.policy.policy method)": [
      [
        207,
        "email.policy.Policy.clone"
      ]
    ],
    "compat32 (in module email.policy)": [
      [
        207,
        "email.policy.compat32"
      ]
    ],
    "content_manager (email.policy.emailpolicy attribute)": [
      [
        207,
        "email.policy.EmailPolicy.content_manager"
      ]
    ],
    "cte_type (email.policy.policy attribute)": [
      [
        207,
        "email.policy.Policy.cte_type"
      ]
    ],
    "default (in module email.policy)": [
      [
        207,
        "email.policy.default"
      ]
    ],
    "email.policy": [
      [
        207,
        "module-email.policy"
      ]
    ],
    "fold() (email.policy.compat32 method)": [
      [
        207,
        "email.policy.Compat32.fold"
      ]
    ],
    "fold() (email.policy.emailpolicy method)": [
      [
        207,
        "email.policy.EmailPolicy.fold"
      ]
    ],
    "fold() (email.policy.policy method)": [
      [
        207,
        "email.policy.Policy.fold"
      ]
    ],
    "fold_binary() (email.policy.compat32 method)": [
      [
        207,
        "email.policy.Compat32.fold_binary"
      ]
    ],
    "fold_binary() (email.policy.emailpolicy method)": [
      [
        207,
        "email.policy.EmailPolicy.fold_binary"
      ]
    ],
    "fold_binary() (email.policy.policy method)": [
      [
        207,
        "email.policy.Policy.fold_binary"
      ]
    ],
    "handle_defect() (email.policy.policy method)": [
      [
        207,
        "email.policy.Policy.handle_defect"
      ]
    ],
    "header_factory (email.policy.emailpolicy attribute)": [
      [
        207,
        "email.policy.EmailPolicy.header_factory"
      ]
    ],
    "header_fetch_parse() (email.policy.compat32 method)": [
      [
        207,
        "email.policy.Compat32.header_fetch_parse"
      ]
    ],
    "header_fetch_parse() (email.policy.emailpolicy method)": [
      [
        207,
        "email.policy.EmailPolicy.header_fetch_parse"
      ]
    ],
    "header_fetch_parse() (email.policy.policy method)": [
      [
        207,
        "email.policy.Policy.header_fetch_parse"
      ]
    ],
    "header_max_count() (email.policy.emailpolicy method)": [
      [
        207,
        "email.policy.EmailPolicy.header_max_count"
      ]
    ],
    "header_max_count() (email.policy.policy method)": [
      [
        207,
        "email.policy.Policy.header_max_count"
      ]
    ],
    "header_source_parse() (email.policy.compat32 method)": [
      [
        207,
        "email.policy.Compat32.header_source_parse"
      ]
    ],
    "header_source_parse() (email.policy.emailpolicy method)": [
      [
        207,
        "email.policy.EmailPolicy.header_source_parse"
      ]
    ],
    "header_source_parse() (email.policy.policy method)": [
      [
        207,
        "email.policy.Policy.header_source_parse"
      ]
    ],
    "header_store_parse() (email.policy.compat32 method)": [
      [
        207,
        "email.policy.Compat32.header_store_parse"
      ]
    ],
    "header_store_parse() (email.policy.emailpolicy method)": [
      [
        207,
        "email.policy.EmailPolicy.header_store_parse"
      ]
    ],
    "header_store_parse() (email.policy.policy method)": [
      [
        207,
        "email.policy.Policy.header_store_parse"
      ]
    ],
    "linesep (email.policy.policy attribute)": [
      [
        207,
        "email.policy.Policy.linesep"
      ]
    ],
    "mangle_from_ (email.policy.compat32 attribute)": [
      [
        207,
        "email.policy.Compat32.mangle_from_"
      ]
    ],
    "mangle_from_ (email.policy.policy attribute)": [
      [
        207,
        "email.policy.Policy.mangle_from_"
      ]
    ],
    "max_line_length (email.policy.policy attribute)": [
      [
        207,
        "email.policy.Policy.max_line_length"
      ]
    ],
    "message_factory (email.policy.policy attribute)": [
      [
        207,
        "email.policy.Policy.message_factory"
      ]
    ],
    "raise_on_defect (email.policy.policy attribute)": [
      [
        207,
        "email.policy.Policy.raise_on_defect"
      ]
    ],
    "refold_source (email.policy.emailpolicy attribute)": [
      [
        207,
        "email.policy.EmailPolicy.refold_source"
      ]
    ],
    "register_defect() (email.policy.policy method)": [
      [
        207,
        "email.policy.Policy.register_defect"
      ]
    ],
    "strict (in module email.policy)": [
      [
        207,
        "email.policy.strict"
      ]
    ],
    "utf8 (email.policy.emailpolicy attribute)": [
      [
        207,
        "email.policy.EmailPolicy.utf8"
      ]
    ],
    "collapse_rfc2231_value() (in module email.utils)": [
      [
        208,
        "email.utils.collapse_rfc2231_value"
      ]
    ],
    "decode_params() (in module email.utils)": [
      [
        208,
        "email.utils.decode_params"
      ]
    ],
    "decode_rfc2231() (in module email.utils)": [
      [
        208,
        "email.utils.decode_rfc2231"
      ]
    ],
    "email.utils": [
      [
        208,
        "module-email.utils"
      ]
    ],
    "encode_rfc2231() (in module email.utils)": [
      [
        208,
        "email.utils.encode_rfc2231"
      ]
    ],
    "format_datetime() (in module email.utils)": [
      [
        208,
        "email.utils.format_datetime"
      ]
    ],
    "formataddr() (in module email.utils)": [
      [
        208,
        "email.utils.formataddr"
      ]
    ],
    "formatdate() (in module email.utils)": [
      [
        208,
        "email.utils.formatdate"
      ]
    ],
    "getaddresses() (in module email.utils)": [
      [
        208,
        "email.utils.getaddresses"
      ]
    ],
    "localtime() (in module email.utils)": [
      [
        208,
        "email.utils.localtime"
      ]
    ],
    "make_msgid() (in module email.utils)": [
      [
        208,
        "email.utils.make_msgid"
      ]
    ],
    "mktime_tz() (in module email.utils)": [
      [
        208,
        "email.utils.mktime_tz"
      ]
    ],
    "parseaddr() (in module email.utils)": [
      [
        208,
        "email.utils.parseaddr"
      ]
    ],
    "parsedate() (in module email.utils)": [
      [
        208,
        "email.utils.parsedate"
      ]
    ],
    "parsedate_to_datetime() (in module email.utils)": [
      [
        208,
        "email.utils.parsedate_to_datetime"
      ]
    ],
    "parsedate_tz() (in module email.utils)": [
      [
        208,
        "email.utils.parsedate_tz"
      ]
    ],
    "quote() (in module email.utils)": [
      [
        208,
        "email.utils.quote"
      ]
    ],
    "unquote() (in module email.utils)": [
      [
        208,
        "email.utils.unquote"
      ]
    ],
    "pep 453": [
      [
        209,
        "index-0"
      ],
      [
        468,
        "index-19"
      ],
      [
        468,
        "index-20"
      ],
      [
        468,
        "index-21"
      ],
      [
        476,
        "index-1"
      ],
      [
        476,
        "index-19"
      ],
      [
        476,
        "index-20"
      ],
      [
        476,
        "index-27"
      ],
      [
        476,
        "index-42"
      ],
      [
        476,
        "index-5"
      ],
      [
        476,
        "index-52"
      ]
    ],
    "bootstrap() (in module ensurepip)": [
      [
        209,
        "ensurepip.bootstrap"
      ]
    ],
    "ensurepip": [
      [
        209,
        "module-ensurepip"
      ]
    ],
    "version() (in module ensurepip)": [
      [
        209,
        "ensurepip.version"
      ]
    ],
    "conform (enum.flagboundary attribute)": [
      [
        210,
        "enum.FlagBoundary.CONFORM"
      ]
    ],
    "continuous (enum.enumcheck attribute)": [
      [
        210,
        "enum.EnumCheck.CONTINUOUS"
      ]
    ],
    "eject (enum.flagboundary attribute)": [
      [
        210,
        "enum.FlagBoundary.EJECT"
      ]
    ],
    "enum (class in enum)": [
      [
        210,
        "enum.Enum"
      ]
    ],
    "enumcheck (class in enum)": [
      [
        210,
        "enum.EnumCheck"
      ]
    ],
    "enumtype (class in enum)": [
      [
        210,
        "enum.EnumType"
      ]
    ],
    "flag (class in enum)": [
      [
        210,
        "enum.Flag"
      ]
    ],
    "flagboundary (class in enum)": [
      [
        210,
        "enum.FlagBoundary"
      ]
    ],
    "intenum (class in enum)": [
      [
        210,
        "enum.IntEnum"
      ]
    ],
    "intflag (class in enum)": [
      [
        210,
        "enum.IntFlag"
      ]
    ],
    "keep (enum.flagboundary attribute)": [
      [
        210,
        "enum.FlagBoundary.KEEP"
      ]
    ],
    "named_flags (enum.enumcheck attribute)": [
      [
        210,
        "enum.EnumCheck.NAMED_FLAGS"
      ]
    ],
    "reprenum (class in enum)": [
      [
        210,
        "enum.ReprEnum"
      ]
    ],
    "strict (enum.flagboundary attribute)": [
      [
        210,
        "enum.FlagBoundary.STRICT"
      ]
    ],
    "strenum (class in enum)": [
      [
        210,
        "enum.StrEnum"
      ]
    ],
    "unique (enum.enumcheck attribute)": [
      [
        210,
        "enum.EnumCheck.UNIQUE"
      ]
    ],
    "__and__() (enum.flag method)": [
      [
        210,
        "enum.Flag.__and__"
      ]
    ],
    "__call__() (enum.enumtype method)": [
      [
        210,
        "enum.EnumType.__call__"
      ]
    ],
    "__contains__() (enum.enumtype method)": [
      [
        210,
        "enum.EnumType.__contains__"
      ]
    ],
    "__contains__() (enum.flag method)": [
      [
        210,
        "enum.Flag.__contains__"
      ]
    ],
    "__dir__() (enum.enum method)": [
      [
        210,
        "enum.Enum.__dir__"
      ]
    ],
    "__dir__() (enum.enumtype method)": [
      [
        210,
        "enum.EnumType.__dir__"
      ]
    ],
    "__format__() (enum.enum method)": [
      [
        210,
        "enum.Enum.__format__"
      ]
    ],
    "__getitem__() (enum.enumtype method)": [
      [
        210,
        "enum.EnumType.__getitem__"
      ]
    ],
    "__init__() (enum.enum method)": [
      [
        210,
        "enum.Enum.__init__"
      ]
    ],
    "__init_subclass__() (enum.enum method)": [
      [
        210,
        "enum.Enum.__init_subclass__"
      ]
    ],
    "__iter__() (enum.enumtype method)": [
      [
        210,
        "enum.EnumType.__iter__"
      ]
    ],
    "__len__() (enum.enumtype method)": [
      [
        210,
        "enum.EnumType.__len__"
      ]
    ],
    "__members__ (enum.enumtype attribute)": [
      [
        210,
        "enum.EnumType.__members__"
      ]
    ],
    "__new__() (enum.enum method)": [
      [
        210,
        "enum.Enum.__new__"
      ]
    ],
    "__or__() (enum.flag method)": [
      [
        210,
        "enum.Flag.__or__"
      ]
    ],
    "__repr__() (enum.enum method)": [
      [
        210,
        "enum.Enum.__repr__"
      ]
    ],
    "__reversed__() (enum.enumtype method)": [
      [
        210,
        "enum.EnumType.__reversed__"
      ]
    ],
    "__str__() (enum.enum method)": [
      [
        210,
        "enum.Enum.__str__"
      ]
    ],
    "__xor__() (enum.flag method)": [
      [
        210,
        "enum.Flag.__xor__"
      ]
    ],
    "_generate_next_value_() (enum.enum method)": [
      [
        210,
        "enum.Enum._generate_next_value_"
      ]
    ],
    "_ignore_ (enum.enum attribute)": [
      [
        210,
        "enum.Enum._ignore_"
      ]
    ],
    "_missing_() (enum.enum method)": [
      [
        210,
        "enum.Enum._missing_"
      ]
    ],
    "_name_ (enum.enum attribute)": [
      [
        210,
        "enum.Enum._name_"
      ]
    ],
    "_numeric_repr_() (enum.flag method)": [
      [
        210,
        "enum.Flag._numeric_repr_"
      ]
    ],
    "_order_ (enum.enum attribute)": [
      [
        210,
        "enum.Enum._order_"
      ]
    ],
    "_value_ (enum.enum attribute)": [
      [
        210,
        "enum.Enum._value_"
      ]
    ],
    "auto (class in enum)": [
      [
        210,
        "enum.auto"
      ]
    ],
    "enum": [
      [
        210,
        "module-enum"
      ]
    ],
    "global_enum() (in module enum)": [
      [
        210,
        "enum.global_enum"
      ]
    ],
    "member() (in module enum)": [
      [
        210,
        "enum.member"
      ]
    ],
    "name (enum.enum attribute)": [
      [
        210,
        "enum.Enum.name"
      ]
    ],
    "nonmember() (in module enum)": [
      [
        210,
        "enum.nonmember"
      ]
    ],
    "property() (in module enum)": [
      [
        210,
        "enum.property"
      ]
    ],
    "show_flag_values() (in module enum)": [
      [
        210,
        "enum.show_flag_values"
      ]
    ],
    "unique() (in module enum)": [
      [
        210,
        "enum.unique"
      ]
    ],
    "value (enum.enum attribute)": [
      [
        210,
        "enum.Enum.value"
      ]
    ],
    "verify() (in module enum)": [
      [
        210,
        "enum.verify"
      ]
    ],
    "e2big (in module errno)": [
      [
        211,
        "errno.E2BIG"
      ]
    ],
    "eacces (in module errno)": [
      [
        211,
        "errno.EACCES"
      ]
    ],
    "eaddrinuse (in module errno)": [
      [
        211,
        "errno.EADDRINUSE"
      ]
    ],
    "eaddrnotavail (in module errno)": [
      [
        211,
        "errno.EADDRNOTAVAIL"
      ]
    ],
    "eadv (in module errno)": [
      [
        211,
        "errno.EADV"
      ]
    ],
    "eafnosupport (in module errno)": [
      [
        211,
        "errno.EAFNOSUPPORT"
      ]
    ],
    "eagain (in module errno)": [
      [
        211,
        "errno.EAGAIN"
      ]
    ],
    "ealready (in module errno)": [
      [
        211,
        "errno.EALREADY"
      ]
    ],
    "ebade (in module errno)": [
      [
        211,
        "errno.EBADE"
      ]
    ],
    "ebadf (in module errno)": [
      [
        211,
        "errno.EBADF"
      ]
    ],
    "ebadfd (in module errno)": [
      [
        211,
        "errno.EBADFD"
      ]
    ],
    "ebadmsg (in module errno)": [
      [
        211,
        "errno.EBADMSG"
      ]
    ],
    "ebadr (in module errno)": [
      [
        211,
        "errno.EBADR"
      ]
    ],
    "ebadrqc (in module errno)": [
      [
        211,
        "errno.EBADRQC"
      ]
    ],
    "ebadslt (in module errno)": [
      [
        211,
        "errno.EBADSLT"
      ]
    ],
    "ebfont (in module errno)": [
      [
        211,
        "errno.EBFONT"
      ]
    ],
    "ebusy (in module errno)": [
      [
        211,
        "errno.EBUSY"
      ]
    ],
    "ecanceled (in module errno)": [
      [
        211,
        "errno.ECANCELED"
      ]
    ],
    "echild (in module errno)": [
      [
        211,
        "errno.ECHILD"
      ]
    ],
    "echrng (in module errno)": [
      [
        211,
        "errno.ECHRNG"
      ]
    ],
    "ecomm (in module errno)": [
      [
        211,
        "errno.ECOMM"
      ]
    ],
    "econnaborted (in module errno)": [
      [
        211,
        "errno.ECONNABORTED"
      ]
    ],
    "econnrefused (in module errno)": [
      [
        211,
        "errno.ECONNREFUSED"
      ]
    ],
    "econnreset (in module errno)": [
      [
        211,
        "errno.ECONNRESET"
      ]
    ],
    "edeadlk (in module errno)": [
      [
        211,
        "errno.EDEADLK"
      ]
    ],
    "edeadlock (in module errno)": [
      [
        211,
        "errno.EDEADLOCK"
      ]
    ],
    "edestaddrreq (in module errno)": [
      [
        211,
        "errno.EDESTADDRREQ"
      ]
    ],
    "edom (in module errno)": [
      [
        211,
        "errno.EDOM"
      ]
    ],
    "edotdot (in module errno)": [
      [
        211,
        "errno.EDOTDOT"
      ]
    ],
    "edquot (in module errno)": [
      [
        211,
        "errno.EDQUOT"
      ]
    ],
    "eexist (in module errno)": [
      [
        211,
        "errno.EEXIST"
      ]
    ],
    "efault (in module errno)": [
      [
        211,
        "errno.EFAULT"
      ]
    ],
    "efbig (in module errno)": [
      [
        211,
        "errno.EFBIG"
      ]
    ],
    "ehostdown (in module errno)": [
      [
        211,
        "errno.EHOSTDOWN"
      ]
    ],
    "ehostunreach (in module errno)": [
      [
        211,
        "errno.EHOSTUNREACH"
      ]
    ],
    "eidrm (in module errno)": [
      [
        211,
        "errno.EIDRM"
      ]
    ],
    "eilseq (in module errno)": [
      [
        211,
        "errno.EILSEQ"
      ]
    ],
    "einprogress (in module errno)": [
      [
        211,
        "errno.EINPROGRESS"
      ]
    ],
    "eintr (in module errno)": [
      [
        211,
        "errno.EINTR"
      ]
    ],
    "einval (in module errno)": [
      [
        211,
        "errno.EINVAL"
      ]
    ],
    "eio (in module errno)": [
      [
        211,
        "errno.EIO"
      ]
    ],
    "eisconn (in module errno)": [
      [
        211,
        "errno.EISCONN"
      ]
    ],
    "eisdir (in module errno)": [
      [
        211,
        "errno.EISDIR"
      ]
    ],
    "eisnam (in module errno)": [
      [
        211,
        "errno.EISNAM"
      ]
    ],
    "el2hlt (in module errno)": [
      [
        211,
        "errno.EL2HLT"
      ]
    ],
    "el2nsync (in module errno)": [
      [
        211,
        "errno.EL2NSYNC"
      ]
    ],
    "el3hlt (in module errno)": [
      [
        211,
        "errno.EL3HLT"
      ]
    ],
    "el3rst (in module errno)": [
      [
        211,
        "errno.EL3RST"
      ]
    ],
    "elibacc (in module errno)": [
      [
        211,
        "errno.ELIBACC"
      ]
    ],
    "elibbad (in module errno)": [
      [
        211,
        "errno.ELIBBAD"
      ]
    ],
    "elibexec (in module errno)": [
      [
        211,
        "errno.ELIBEXEC"
      ]
    ],
    "elibmax (in module errno)": [
      [
        211,
        "errno.ELIBMAX"
      ]
    ],
    "elibscn (in module errno)": [
      [
        211,
        "errno.ELIBSCN"
      ]
    ],
    "elnrng (in module errno)": [
      [
        211,
        "errno.ELNRNG"
      ]
    ],
    "eloop (in module errno)": [
      [
        211,
        "errno.ELOOP"
      ]
    ],
    "emfile (in module errno)": [
      [
        211,
        "errno.EMFILE"
      ]
    ],
    "emlink (in module errno)": [
      [
        211,
        "errno.EMLINK"
      ]
    ],
    "emsgsize (in module errno)": [
      [
        211,
        "errno.EMSGSIZE"
      ]
    ],
    "emultihop (in module errno)": [
      [
        211,
        "errno.EMULTIHOP"
      ]
    ],
    "enametoolong (in module errno)": [
      [
        211,
        "errno.ENAMETOOLONG"
      ]
    ],
    "enavail (in module errno)": [
      [
        211,
        "errno.ENAVAIL"
      ]
    ],
    "enetdown (in module errno)": [
      [
        211,
        "errno.ENETDOWN"
      ]
    ],
    "enetreset (in module errno)": [
      [
        211,
        "errno.ENETRESET"
      ]
    ],
    "enetunreach (in module errno)": [
      [
        211,
        "errno.ENETUNREACH"
      ]
    ],
    "enfile (in module errno)": [
      [
        211,
        "errno.ENFILE"
      ]
    ],
    "enoano (in module errno)": [
      [
        211,
        "errno.ENOANO"
      ]
    ],
    "enobufs (in module errno)": [
      [
        211,
        "errno.ENOBUFS"
      ]
    ],
    "enocsi (in module errno)": [
      [
        211,
        "errno.ENOCSI"
      ]
    ],
    "enodata (in module errno)": [
      [
        211,
        "errno.ENODATA"
      ]
    ],
    "enodev (in module errno)": [
      [
        211,
        "errno.ENODEV"
      ]
    ],
    "enoent (in module errno)": [
      [
        211,
        "errno.ENOENT"
      ]
    ],
    "enoexec (in module errno)": [
      [
        211,
        "errno.ENOEXEC"
      ]
    ],
    "enolck (in module errno)": [
      [
        211,
        "errno.ENOLCK"
      ]
    ],
    "enolink (in module errno)": [
      [
        211,
        "errno.ENOLINK"
      ]
    ],
    "enomem (in module errno)": [
      [
        211,
        "errno.ENOMEM"
      ]
    ],
    "enomsg (in module errno)": [
      [
        211,
        "errno.ENOMSG"
      ]
    ],
    "enonet (in module errno)": [
      [
        211,
        "errno.ENONET"
      ]
    ],
    "enopkg (in module errno)": [
      [
        211,
        "errno.ENOPKG"
      ]
    ],
    "enoprotoopt (in module errno)": [
      [
        211,
        "errno.ENOPROTOOPT"
      ]
    ],
    "enospc (in module errno)": [
      [
        211,
        "errno.ENOSPC"
      ]
    ],
    "enosr (in module errno)": [
      [
        211,
        "errno.ENOSR"
      ]
    ],
    "enostr (in module errno)": [
      [
        211,
        "errno.ENOSTR"
      ]
    ],
    "enosys (in module errno)": [
      [
        211,
        "errno.ENOSYS"
      ]
    ],
    "enotblk (in module errno)": [
      [
        211,
        "errno.ENOTBLK"
      ]
    ],
    "enotcapable (in module errno)": [
      [
        211,
        "errno.ENOTCAPABLE"
      ]
    ],
    "enotconn (in module errno)": [
      [
        211,
        "errno.ENOTCONN"
      ]
    ],
    "enotdir (in module errno)": [
      [
        211,
        "errno.ENOTDIR"
      ]
    ],
    "enotempty (in module errno)": [
      [
        211,
        "errno.ENOTEMPTY"
      ]
    ],
    "enotnam (in module errno)": [
      [
        211,
        "errno.ENOTNAM"
      ]
    ],
    "enotrecoverable (in module errno)": [
      [
        211,
        "errno.ENOTRECOVERABLE"
      ]
    ],
    "enotsock (in module errno)": [
      [
        211,
        "errno.ENOTSOCK"
      ]
    ],
    "enotsup (in module errno)": [
      [
        211,
        "errno.ENOTSUP"
      ]
    ],
    "enotty (in module errno)": [
      [
        211,
        "errno.ENOTTY"
      ]
    ],
    "enotuniq (in module errno)": [
      [
        211,
        "errno.ENOTUNIQ"
      ]
    ],
    "enxio (in module errno)": [
      [
        211,
        "errno.ENXIO"
      ]
    ],
    "eopnotsupp (in module errno)": [
      [
        211,
        "errno.EOPNOTSUPP"
      ]
    ],
    "eoverflow (in module errno)": [
      [
        211,
        "errno.EOVERFLOW"
      ]
    ],
    "eownerdead (in module errno)": [
      [
        211,
        "errno.EOWNERDEAD"
      ]
    ],
    "eperm (in module errno)": [
      [
        211,
        "errno.EPERM"
      ]
    ],
    "epfnosupport (in module errno)": [
      [
        211,
        "errno.EPFNOSUPPORT"
      ]
    ],
    "epipe (in module errno)": [
      [
        211,
        "errno.EPIPE"
      ]
    ],
    "eproto (in module errno)": [
      [
        211,
        "errno.EPROTO"
      ]
    ],
    "eprotonosupport (in module errno)": [
      [
        211,
        "errno.EPROTONOSUPPORT"
      ]
    ],
    "eprototype (in module errno)": [
      [
        211,
        "errno.EPROTOTYPE"
      ]
    ],
    "eqfull (in module errno)": [
      [
        211,
        "errno.EQFULL"
      ]
    ],
    "erange (in module errno)": [
      [
        211,
        "errno.ERANGE"
      ]
    ],
    "eremchg (in module errno)": [
      [
        211,
        "errno.EREMCHG"
      ]
    ],
    "eremote (in module errno)": [
      [
        211,
        "errno.EREMOTE"
      ]
    ],
    "eremoteio (in module errno)": [
      [
        211,
        "errno.EREMOTEIO"
      ]
    ],
    "erestart (in module errno)": [
      [
        211,
        "errno.ERESTART"
      ]
    ],
    "erofs (in module errno)": [
      [
        211,
        "errno.EROFS"
      ]
    ],
    "eshutdown (in module errno)": [
      [
        211,
        "errno.ESHUTDOWN"
      ]
    ],
    "esocktnosupport (in module errno)": [
      [
        211,
        "errno.ESOCKTNOSUPPORT"
      ]
    ],
    "espipe (in module errno)": [
      [
        211,
        "errno.ESPIPE"
      ]
    ],
    "esrch (in module errno)": [
      [
        211,
        "errno.ESRCH"
      ]
    ],
    "esrmnt (in module errno)": [
      [
        211,
        "errno.ESRMNT"
      ]
    ],
    "estale (in module errno)": [
      [
        211,
        "errno.ESTALE"
      ]
    ],
    "estrpipe (in module errno)": [
      [
        211,
        "errno.ESTRPIPE"
      ]
    ],
    "etime (in module errno)": [
      [
        211,
        "errno.ETIME"
      ]
    ],
    "etimedout (in module errno)": [
      [
        211,
        "errno.ETIMEDOUT"
      ]
    ],
    "etoomanyrefs (in module errno)": [
      [
        211,
        "errno.ETOOMANYREFS"
      ]
    ],
    "etxtbsy (in module errno)": [
      [
        211,
        "errno.ETXTBSY"
      ]
    ],
    "euclean (in module errno)": [
      [
        211,
        "errno.EUCLEAN"
      ]
    ],
    "eunatch (in module errno)": [
      [
        211,
        "errno.EUNATCH"
      ]
    ],
    "eusers (in module errno)": [
      [
        211,
        "errno.EUSERS"
      ]
    ],
    "ewouldblock (in module errno)": [
      [
        211,
        "errno.EWOULDBLOCK"
      ]
    ],
    "exdev (in module errno)": [
      [
        211,
        "errno.EXDEV"
      ]
    ],
    "exfull (in module errno)": [
      [
        211,
        "errno.EXFULL"
      ]
    ],
    "errno": [
      [
        211,
        "module-errno"
      ],
      [
        212,
        "index-5"
      ]
    ],
    "errorcode (in module errno)": [
      [
        211,
        "errno.errorcode"
      ]
    ],
    "arithmeticerror": [
      [
        212,
        "ArithmeticError"
      ]
    ],
    "assertionerror": [
      [
        212,
        "AssertionError"
      ],
      [
        435,
        "index-19"
      ]
    ],
    "attributeerror": [
      [
        212,
        "AttributeError"
      ],
      [
        429,
        "index-40"
      ]
    ],
    "baseexception": [
      [
        212,
        "BaseException"
      ]
    ],
    "baseexceptiongroup": [
      [
        212,
        "BaseExceptionGroup"
      ]
    ],
    "blockingioerror": [
      [
        212,
        "BlockingIOError"
      ],
      [
        257,
        "io.BlockingIOError"
      ]
    ],
    "brokenpipeerror": [
      [
        212,
        "BrokenPipeError"
      ]
    ],
    "buffererror": [
      [
        212,
        "BufferError"
      ]
    ],
    "byteswarning": [
      [
        212,
        "BytesWarning"
      ]
    ],
    "childprocesserror": [
      [
        212,
        "ChildProcessError"
      ]
    ],
    "connectionabortederror": [
      [
        212,
        "ConnectionAbortedError"
      ]
    ],
    "connectionerror": [
      [
        212,
        "ConnectionError"
      ]
    ],
    "connectionrefusederror": [
      [
        212,
        "ConnectionRefusedError"
      ]
    ],
    "connectionreseterror": [
      [
        212,
        "ConnectionResetError"
      ]
    ],
    "deprecationwarning": [
      [
        212,
        "DeprecationWarning"
      ]
    ],
    "eoferror": [
      [
        212,
        "EOFError"
      ]
    ],
    "encodingwarning": [
      [
        212,
        "EncodingWarning"
      ]
    ],
    "environmenterror": [
      [
        212,
        "EnvironmentError"
      ]
    ],
    "exception": [
      [
        212,
        "Exception"
      ],
      [
        212,
        "index-2"
      ],
      [
        427,
        "index-66"
      ],
      [
        428,
        "index-14"
      ],
      [
        429,
        "index-32"
      ],
      [
        429,
        "index-33"
      ],
      [
        429,
        "index-36"
      ],
      [
        429,
        "index-37"
      ],
      [
        429,
        "index-4"
      ],
      [
        429,
        "index-40"
      ],
      [
        429,
        "index-63"
      ],
      [
        429,
        "index-67"
      ],
      [
        429,
        "index-72"
      ],
      [
        435,
        "index-19"
      ],
      [
        435,
        "index-26"
      ],
      [
        435,
        "index-27"
      ],
      [
        435,
        "index-29"
      ],
      [
        435,
        "index-34"
      ]
    ],
    "exceptiongroup": [
      [
        212,
        "ExceptionGroup"
      ]
    ],
    "fileexistserror": [
      [
        212,
        "FileExistsError"
      ]
    ],
    "filenotfounderror": [
      [
        212,
        "FileNotFoundError"
      ]
    ],
    "floatingpointerror": [
      [
        212,
        "FloatingPointError"
      ]
    ],
    "futurewarning": [
      [
        212,
        "FutureWarning"
      ]
    ],
    "generatorexit": [
      [
        212,
        "GeneratorExit"
      ],
      [
        429,
        "index-33"
      ],
      [
        429,
        "index-37"
      ]
    ],
    "ioerror": [
      [
        212,
        "IOError"
      ]
    ],
    "importerror": [
      [
        212,
        "ImportError"
      ],
      [
        435,
        "index-34"
      ]
    ],
    "importwarning": [
      [
        212,
        "ImportWarning"
      ]
    ],
    "indentationerror": [
      [
        212,
        "IndentationError"
      ]
    ],
    "indexerror": [
      [
        212,
        "IndexError"
      ]
    ],
    "interruptederror": [
      [
        212,
        "InterruptedError"
      ]
    ],
    "isadirectoryerror": [
      [
        212,
        "IsADirectoryError"
      ]
    ],
    "keyerror": [
      [
        212,
        "KeyError"
      ]
    ],
    "keyboardinterrupt": [
      [
        212,
        "KeyboardInterrupt"
      ]
    ],
    "lookuperror": [
      [
        212,
        "LookupError"
      ]
    ],
    "memoryerror": [
      [
        212,
        "MemoryError"
      ]
    ],
    "modulenotfounderror": [
      [
        212,
        "ModuleNotFoundError"
      ]
    ],
    "nameerror": [
      [
        212,
        "NameError"
      ],
      [
        429,
        "index-4"
      ]
    ],
    "notadirectoryerror": [
      [
        212,
        "NotADirectoryError"
      ]
    ],
    "notimplementederror": [
      [
        212,
        "NotImplementedError"
      ]
    ],
    "oserror": [
      [
        212,
        "OSError"
      ]
    ],
    "overflowerror": [
      [
        212,
        "OverflowError"
      ]
    ],
    "pep 3134": [
      [
        212,
        "index-3"
      ],
      [
        469,
        "index-12"
      ],
      [
        469,
        "index-28"
      ],
      [
        469,
        "index-29"
      ],
      [
        482,
        "index-65"
      ]
    ],
    "pep 475": [
      [
        212,
        "index-8"
      ],
      [
        224,
        "index-9"
      ],
      [
        292,
        "index-22"
      ],
      [
        292,
        "index-24"
      ],
      [
        292,
        "index-25"
      ],
      [
        292,
        "index-44"
      ],
      [
        327,
        "index-3"
      ],
      [
        327,
        "index-4"
      ],
      [
        327,
        "index-5"
      ],
      [
        327,
        "index-6"
      ],
      [
        327,
        "index-7"
      ],
      [
        328,
        "index-0"
      ],
      [
        332,
        "index-0"
      ],
      [
        332,
        "index-1"
      ],
      [
        336,
        "index-10"
      ],
      [
        336,
        "index-11"
      ],
      [
        336,
        "index-12"
      ],
      [
        336,
        "index-13"
      ],
      [
        336,
        "index-4"
      ],
      [
        336,
        "index-5"
      ],
      [
        336,
        "index-7"
      ],
      [
        336,
        "index-8"
      ],
      [
        336,
        "index-9"
      ],
      [
        365,
        "index-8"
      ],
      [
        477,
        "index-15"
      ],
      [
        477,
        "index-16"
      ],
      [
        477,
        "index-49"
      ],
      [
        482,
        "index-242"
      ],
      [
        482,
        "index-299"
      ]
    ],
    "pep 565": [
      [
        212,
        "index-10"
      ],
      [
        479,
        "index-19"
      ]
    ],
    "pendingdeprecationwarning": [
      [
        212,
        "PendingDeprecationWarning"
      ]
    ],
    "permissionerror": [
      [
        212,
        "PermissionError"
      ]
    ],
    "processlookuperror": [
      [
        212,
        "ProcessLookupError"
      ]
    ],
    "recursionerror": [
      [
        212,
        "RecursionError"
      ]
    ],
    "referenceerror": [
      [
        212,
        "ReferenceError"
      ]
    ],
    "resourcewarning": [
      [
        212,
        "ResourceWarning"
      ]
    ],
    "runtimeerror": [
      [
        212,
        "RuntimeError"
      ]
    ],
    "runtimewarning": [
      [
        212,
        "RuntimeWarning"
      ]
    ],
    "stopasynciteration": [
      [
        212,
        "StopAsyncIteration"
      ],
      [
        429,
        "index-36"
      ]
    ],
    "stopiteration": [
      [
        212,
        "StopIteration"
      ],
      [
        429,
        "index-32"
      ],
      [
        435,
        "index-26"
      ]
    ],
    "syntaxerror": [
      [
        212,
        "SyntaxError"
      ]
    ],
    "syntaxwarning": [
      [
        212,
        "SyntaxWarning"
      ]
    ],
    "systemerror": [
      [
        212,
        "SystemError"
      ]
    ],
    "systemexit": [
      [
        212,
        "SystemExit"
      ]
    ],
    "taberror": [
      [
        212,
        "TabError"
      ]
    ],
    "typeerror": [
      [
        212,
        "TypeError"
      ],
      [
        429,
        "index-63"
      ]
    ],
    "unboundlocalerror": [
      [
        212,
        "UnboundLocalError"
      ],
      [
        428,
        "index-9"
      ]
    ],
    "unicodedecodeerror": [
      [
        212,
        "UnicodeDecodeError"
      ]
    ],
    "unicodeencodeerror": [
      [
        212,
        "UnicodeEncodeError"
      ]
    ],
    "unicodeerror": [
      [
        212,
        "UnicodeError"
      ]
    ],
    "unicodetranslateerror": [
      [
        212,
        "UnicodeTranslateError"
      ]
    ],
    "unicodewarning": [
      [
        212,
        "UnicodeWarning"
      ]
    ],
    "userwarning": [
      [
        212,
        "UserWarning"
      ]
    ],
    "valueerror": [
      [
        212,
        "ValueError"
      ],
      [
        429,
        "index-72"
      ]
    ],
    "warning": [
      [
        212,
        "Warning"
      ],
      [
        339,
        "sqlite3.Warning"
      ]
    ],
    "windowserror": [
      [
        212,
        "WindowsError"
      ]
    ],
    "zerodivisionerror": [
      [
        212,
        "ZeroDivisionError"
      ],
      [
        429,
        "index-67"
      ]
    ],
    "__cause__ (baseexception attribute)": [
      [
        212,
        "BaseException.__cause__"
      ]
    ],
    "__cause__ (exception attribute)": [
      [
        212,
        "index-2"
      ],
      [
        435,
        "index-29"
      ]
    ],
    "__context__ (baseexception attribute)": [
      [
        212,
        "BaseException.__context__"
      ]
    ],
    "__context__ (exception attribute)": [
      [
        212,
        "index-2"
      ],
      [
        435,
        "index-29"
      ]
    ],
    "__notes__ (baseexception attribute)": [
      [
        212,
        "BaseException.__notes__"
      ]
    ],
    "__suppress_context__ (baseexception attribute)": [
      [
        212,
        "BaseException.__suppress_context__"
      ]
    ],
    "__suppress_context__ (exception attribute)": [
      [
        212,
        "index-2"
      ]
    ],
    "__traceback__ (baseexception attribute)": [
      [
        212,
        "BaseException.__traceback__"
      ]
    ],
    "add_note() (baseexception method)": [
      [
        212,
        "BaseException.add_note"
      ]
    ],
    "args (baseexception attribute)": [
      [
        212,
        "BaseException.args"
      ]
    ],
    "assert": [
      [
        212,
        "index-4"
      ],
      [
        435,
        "index-18"
      ]
    ],
    "chaining": [
      [
        212,
        "index-2"
      ],
      [
        343,
        "index-7"
      ],
      [
        429,
        "index-78"
      ],
      [
        435,
        "index-29"
      ]
    ],
    "characters_written (blockingioerror attribute)": [
      [
        212,
        "BlockingIOError.characters_written"
      ]
    ],
    "code (systemexit attribute)": [
      [
        212,
        "SystemExit.code"
      ]
    ],
    "derive() (baseexceptiongroup method)": [
      [
        212,
        "BaseExceptionGroup.derive"
      ]
    ],
    "encoding (unicodeerror attribute)": [
      [
        212,
        "UnicodeError.encoding"
      ]
    ],
    "end (unicodeerror attribute)": [
      [
        212,
        "UnicodeError.end"
      ]
    ],
    "end_lineno (syntaxerror attribute)": [
      [
        212,
        "SyntaxError.end_lineno"
      ]
    ],
    "end_offset (syntaxerror attribute)": [
      [
        212,
        "SyntaxError.end_offset"
      ]
    ],
    "errno (oserror attribute)": [
      [
        212,
        "OSError.errno"
      ]
    ],
    "except": [
      [
        212,
        "index-0"
      ],
      [
        426,
        "index-9"
      ]
    ],
    "exceptions (baseexceptiongroup attribute)": [
      [
        212,
        "BaseExceptionGroup.exceptions"
      ]
    ],
    "filename (oserror attribute)": [
      [
        212,
        "OSError.filename"
      ]
    ],
    "filename (syntaxerror attribute)": [
      [
        212,
        "SyntaxError.filename"
      ]
    ],
    "filename2 (oserror attribute)": [
      [
        212,
        "OSError.filename2"
      ]
    ],
    "lineno (syntaxerror attribute)": [
      [
        212,
        "SyntaxError.lineno"
      ]
    ],
    "message (baseexceptiongroup attribute)": [
      [
        212,
        "BaseExceptionGroup.message"
      ]
    ],
    "name (importerror attribute)": [
      [
        212,
        "ImportError.name"
      ]
    ],
    "object (unicodeerror attribute)": [
      [
        212,
        "UnicodeError.object"
      ]
    ],
    "offset (syntaxerror attribute)": [
      [
        212,
        "SyntaxError.offset"
      ]
    ],
    "path (importerror attribute)": [
      [
        212,
        "ImportError.path"
      ]
    ],
    "raise": [
      [
        212,
        "index-1"
      ],
      [
        435,
        "index-27"
      ]
    ],
    "reason (unicodeerror attribute)": [
      [
        212,
        "UnicodeError.reason"
      ]
    ],
    "split() (baseexceptiongroup method)": [
      [
        212,
        "BaseExceptionGroup.split"
      ]
    ],
    "start (unicodeerror attribute)": [
      [
        212,
        "UnicodeError.start"
      ]
    ],
    "strerror (oserror attribute)": [
      [
        212,
        "OSError.strerror"
      ]
    ],
    "subgroup() (baseexceptiongroup method)": [
      [
        212,
        "BaseExceptionGroup.subgroup"
      ]
    ],
    "text (syntaxerror attribute)": [
      [
        212,
        "SyntaxError.text"
      ]
    ],
    "try": [
      [
        212,
        "index-0"
      ],
      [
        426,
        "index-9"
      ],
      [
        427,
        "index-67"
      ]
    ],
    "value (stopiteration attribute)": [
      [
        212,
        "StopIteration.value"
      ]
    ],
    "winerror (oserror attribute)": [
      [
        212,
        "OSError.winerror"
      ]
    ],
    "with_traceback() (baseexception method)": [
      [
        212,
        "BaseException.with_traceback"
      ]
    ],
    "cancel_dump_traceback_later() (in module faulthandler)": [
      [
        213,
        "faulthandler.cancel_dump_traceback_later"
      ]
    ],
    "disable() (in module faulthandler)": [
      [
        213,
        "faulthandler.disable"
      ]
    ],
    "dump_traceback() (in module faulthandler)": [
      [
        213,
        "faulthandler.dump_traceback"
      ]
    ],
    "dump_traceback_later() (in module faulthandler)": [
      [
        213,
        "faulthandler.dump_traceback_later"
      ]
    ],
    "enable() (in module faulthandler)": [
      [
        213,
        "faulthandler.enable"
      ]
    ],
    "faulthandler": [
      [
        213,
        "module-faulthandler"
      ]
    ],
    "is_enabled() (in module faulthandler)": [
      [
        213,
        "faulthandler.is_enabled"
      ]
    ],
    "register() (in module faulthandler)": [
      [
        213,
        "faulthandler.register"
      ]
    ],
    "unregister() (in module faulthandler)": [
      [
        213,
        "faulthandler.unregister"
      ]
    ],
    "i/o control": [
      [
        214,
        "index-0"
      ],
      [
        224,
        "index-8"
      ],
      [
        336,
        "index-6"
      ],
      [
        360,
        "index-0"
      ]
    ],
    "lock_ex (in module fcntl)": [
      [
        214,
        "fcntl.LOCK_EX"
      ]
    ],
    "lock_nb (in module fcntl)": [
      [
        214,
        "fcntl.LOCK_NB"
      ]
    ],
    "lock_sh (in module fcntl)": [
      [
        214,
        "fcntl.LOCK_SH"
      ]
    ],
    "lock_un (in module fcntl)": [
      [
        214,
        "fcntl.LOCK_UN"
      ]
    ],
    "unix": [
      [
        214,
        "index-0"
      ],
      [
        436,
        "index-4"
      ]
    ],
    "fcntl": [
      [
        214,
        "module-fcntl"
      ]
    ],
    "fcntl() (in module fcntl)": [
      [
        214,
        "fcntl.fcntl"
      ]
    ],
    "file control": [
      [
        214,
        "index-0"
      ]
    ],
    "flock() (in module fcntl)": [
      [
        214,
        "fcntl.flock"
      ]
    ],
    "ioctl() (in module fcntl)": [
      [
        214,
        "fcntl.ioctl"
      ]
    ],
    "lockf() (in module fcntl)": [
      [
        214,
        "fcntl.lockf"
      ]
    ],
    "default_ignores (in module filecmp)": [
      [
        215,
        "filecmp.DEFAULT_IGNORES"
      ]
    ],
    "clear_cache() (in module filecmp)": [
      [
        215,
        "filecmp.clear_cache"
      ]
    ],
    "cmp() (in module filecmp)": [
      [
        215,
        "filecmp.cmp"
      ]
    ],
    "cmpfiles() (in module filecmp)": [
      [
        215,
        "filecmp.cmpfiles"
      ]
    ],
    "common (filecmp.dircmp attribute)": [
      [
        215,
        "filecmp.dircmp.common"
      ]
    ],
    "common_dirs (filecmp.dircmp attribute)": [
      [
        215,
        "filecmp.dircmp.common_dirs"
      ]
    ],
    "common_files (filecmp.dircmp attribute)": [
      [
        215,
        "filecmp.dircmp.common_files"
      ]
    ],
    "common_funny (filecmp.dircmp attribute)": [
      [
        215,
        "filecmp.dircmp.common_funny"
      ]
    ],
    "diff_files (filecmp.dircmp attribute)": [
      [
        215,
        "filecmp.dircmp.diff_files"
      ]
    ],
    "dircmp (class in filecmp)": [
      [
        215,
        "filecmp.dircmp"
      ]
    ],
    "filecmp": [
      [
        215,
        "module-filecmp"
      ]
    ],
    "funny_files (filecmp.dircmp attribute)": [
      [
        215,
        "filecmp.dircmp.funny_files"
      ]
    ],
    "left (filecmp.dircmp attribute)": [
      [
        215,
        "filecmp.dircmp.left"
      ]
    ],
    "left_list (filecmp.dircmp attribute)": [
      [
        215,
        "filecmp.dircmp.left_list"
      ]
    ],
    "left_only (filecmp.dircmp attribute)": [
      [
        215,
        "filecmp.dircmp.left_only"
      ]
    ],
    "report() (filecmp.dircmp method)": [
      [
        215,
        "filecmp.dircmp.report"
      ]
    ],
    "report_full_closure() (filecmp.dircmp method)": [
      [
        215,
        "filecmp.dircmp.report_full_closure"
      ]
    ],
    "report_partial_closure() (filecmp.dircmp method)": [
      [
        215,
        "filecmp.dircmp.report_partial_closure"
      ]
    ],
    "right (filecmp.dircmp attribute)": [
      [
        215,
        "filecmp.dircmp.right"
      ]
    ],
    "right_list (filecmp.dircmp attribute)": [
      [
        215,
        "filecmp.dircmp.right_list"
      ]
    ],
    "right_only (filecmp.dircmp attribute)": [
      [
        215,
        "filecmp.dircmp.right_only"
      ]
    ],
    "same_files (filecmp.dircmp attribute)": [
      [
        215,
        "filecmp.dircmp.same_files"
      ]
    ],
    "subdirs (filecmp.dircmp attribute)": [
      [
        215,
        "filecmp.dircmp.subdirs"
      ]
    ],
    "fileinput (class in fileinput)": [
      [
        217,
        "fileinput.FileInput"
      ]
    ],
    "close() (in module fileinput)": [
      [
        217,
        "fileinput.close"
      ]
    ],
    "fileinput": [
      [
        217,
        "module-fileinput"
      ]
    ],
    "filelineno() (in module fileinput)": [
      [
        217,
        "fileinput.filelineno"
      ]
    ],
    "filename() (in module fileinput)": [
      [
        217,
        "fileinput.filename"
      ]
    ],
    "fileno() (in module fileinput)": [
      [
        217,
        "fileinput.fileno"
      ]
    ],
    "hook_compressed() (in module fileinput)": [
      [
        217,
        "fileinput.hook_compressed"
      ]
    ],
    "hook_encoded() (in module fileinput)": [
      [
        217,
        "fileinput.hook_encoded"
      ]
    ],
    "input() (in module fileinput)": [
      [
        217,
        "fileinput.input"
      ]
    ],
    "isfirstline() (in module fileinput)": [
      [
        217,
        "fileinput.isfirstline"
      ]
    ],
    "isstdin() (in module fileinput)": [
      [
        217,
        "fileinput.isstdin"
      ]
    ],
    "lineno() (in module fileinput)": [
      [
        217,
        "fileinput.lineno"
      ]
    ],
    "nextfile() (in module fileinput)": [
      [
        217,
        "fileinput.nextfile"
      ]
    ],
    "[] (square brackets)": [
      [
        219,
        "index-2"
      ],
      [
        230,
        "index-1"
      ],
      [
        318,
        "index-10"
      ],
      [
        344,
        "index-2"
      ],
      [
        429,
        "index-15"
      ],
      [
        429,
        "index-41"
      ],
      [
        435,
        "index-6"
      ]
    ],
    "filenames": [
      [
        219,
        "index-0"
      ],
      [
        230,
        "index-0"
      ]
    ],
    "filter() (in module fnmatch)": [
      [
        219,
        "fnmatch.filter"
      ]
    ],
    "fnmatch": [
      [
        219,
        "module-fnmatch"
      ]
    ],
    "fnmatch() (in module fnmatch)": [
      [
        219,
        "fnmatch.fnmatch"
      ]
    ],
    "fnmatchcase() (in module fnmatch)": [
      [
        219,
        "fnmatch.fnmatchcase"
      ]
    ],
    "glob": [
      [
        219,
        "index-3"
      ],
      [
        230,
        "module-glob"
      ]
    ],
    "in glob-style wildcards": [
      [
        219,
        "index-2"
      ],
      [
        230,
        "index-1"
      ],
      [
        230,
        "index-2"
      ]
    ],
    "re": [
      [
        219,
        "index-1"
      ],
      [
        318,
        "module-re"
      ],
      [
        343,
        "index-33"
      ]
    ],
    "translate() (in module fnmatch)": [
      [
        219,
        "fnmatch.translate"
      ]
    ],
    "wildcard expansion": [
      [
        219,
        "index-0"
      ]
    ],
    "fraction (class in fractions)": [
      [
        220,
        "fractions.Fraction"
      ]
    ],
    "pep 515": [
      [
        220,
        "index-0"
      ],
      [
        344,
        "index-11"
      ],
      [
        472,
        "index-26"
      ],
      [
        478,
        "index-7"
      ],
      [
        478,
        "index-8"
      ],
      [
        482,
        "index-262"
      ],
      [
        482,
        "index-263"
      ]
    ],
    "__ceil__() (fractions.fraction method)": [
      [
        220,
        "fractions.Fraction.__ceil__"
      ]
    ],
    "__floor__() (fractions.fraction method)": [
      [
        220,
        "fractions.Fraction.__floor__"
      ]
    ],
    "__format__() (fractions.fraction method)": [
      [
        220,
        "fractions.Fraction.__format__"
      ]
    ],
    "__round__() (fractions.fraction method)": [
      [
        220,
        "fractions.Fraction.__round__"
      ]
    ],
    "as_integer_ratio() (fractions.fraction method)": [
      [
        220,
        "fractions.Fraction.as_integer_ratio"
      ]
    ],
    "denominator (fractions.fraction attribute)": [
      [
        220,
        "fractions.Fraction.denominator"
      ]
    ],
    "fractions": [
      [
        220,
        "module-fractions"
      ]
    ],
    "from_decimal() (fractions.fraction class method)": [
      [
        220,
        "fractions.Fraction.from_decimal"
      ]
    ],
    "from_float() (fractions.fraction class method)": [
      [
        220,
        "fractions.Fraction.from_float"
      ]
    ],
    "is_integer() (fractions.fraction method)": [
      [
        220,
        "fractions.Fraction.is_integer"
      ]
    ],
    "limit_denominator() (fractions.fraction method)": [
      [
        220,
        "fractions.Fraction.limit_denominator"
      ]
    ],
    "numerator (fractions.fraction attribute)": [
      [
        220,
        "fractions.Fraction.numerator"
      ]
    ],
    "ftp": [
      [
        222,
        "index-0"
      ],
      [
        394,
        "index-11"
      ],
      [
        394,
        "index-9"
      ]
    ],
    "ftp (class in ftplib)": [
      [
        222,
        "ftplib.FTP"
      ]
    ],
    "ftp_tls (class in ftplib)": [
      [
        222,
        "ftplib.FTP_TLS"
      ]
    ],
    "rfc 2640": [
      [
        222,
        "index-2"
      ],
      [
        222,
        "index-3"
      ],
      [
        222,
        "index-6"
      ],
      [
        481,
        "index-22"
      ],
      [
        482,
        "index-176"
      ]
    ],
    "rfc 3659": [
      [
        222,
        "index-4"
      ]
    ],
    "rfc 4217": [
      [
        222,
        "index-5"
      ]
    ],
    "rfc 959": [
      [
        222,
        "index-1"
      ]
    ],
    "abort() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.abort"
      ]
    ],
    "all_errors (in module ftplib)": [
      [
        222,
        "ftplib.all_errors"
      ]
    ],
    "auth() (ftplib.ftp_tls method)": [
      [
        222,
        "ftplib.FTP_TLS.auth"
      ]
    ],
    "ccc() (ftplib.ftp_tls method)": [
      [
        222,
        "ftplib.FTP_TLS.ccc"
      ]
    ],
    "close() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.close"
      ]
    ],
    "connect() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.connect"
      ]
    ],
    "cwd() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.cwd"
      ]
    ],
    "delete() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.delete"
      ]
    ],
    "dir() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.dir"
      ]
    ],
    "error_perm": [
      [
        222,
        "ftplib.error_perm"
      ]
    ],
    "error_proto": [
      [
        222,
        "ftplib.error_proto"
      ],
      [
        304,
        "poplib.error_proto"
      ]
    ],
    "error_reply": [
      [
        222,
        "ftplib.error_reply"
      ]
    ],
    "error_temp": [
      [
        222,
        "ftplib.error_temp"
      ]
    ],
    "ftplib": [
      [
        222,
        "module-ftplib"
      ]
    ],
    "ftplib (standard module)": [
      [
        222,
        "index-0"
      ]
    ],
    "getwelcome() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.getwelcome"
      ]
    ],
    "login() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.login"
      ]
    ],
    "mkd() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.mkd"
      ]
    ],
    "mlsd() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.mlsd"
      ]
    ],
    "nlst() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.nlst"
      ]
    ],
    "ntransfercmd() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.ntransfercmd"
      ]
    ],
    "prot_c() (ftplib.ftp_tls method)": [
      [
        222,
        "ftplib.FTP_TLS.prot_c"
      ]
    ],
    "prot_p() (ftplib.ftp_tls method)": [
      [
        222,
        "ftplib.FTP_TLS.prot_p"
      ]
    ],
    "pwd() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.pwd"
      ]
    ],
    "quit() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.quit"
      ]
    ],
    "rename() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.rename"
      ]
    ],
    "retrbinary() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.retrbinary"
      ]
    ],
    "retrlines() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.retrlines"
      ]
    ],
    "rmd() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.rmd"
      ]
    ],
    "sendcmd() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.sendcmd"
      ]
    ],
    "set_debuglevel() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.set_debuglevel"
      ]
    ],
    "set_pasv() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.set_pasv"
      ]
    ],
    "size() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.size"
      ]
    ],
    "ssl_version (ftplib.ftp_tls attribute)": [
      [
        222,
        "ftplib.FTP_TLS.ssl_version"
      ]
    ],
    "storbinary() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.storbinary"
      ]
    ],
    "storlines() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.storlines"
      ]
    ],
    "transfercmd() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.transfercmd"
      ]
    ],
    "voidcmd() (ftplib.ftp method)": [
      [
        222,
        "ftplib.FTP.voidcmd"
      ]
    ],
    "boolean": [
      [
        224,
        "index-0"
      ],
      [
        343,
        "index-1"
      ],
      [
        343,
        "index-11"
      ],
      [
        343,
        "index-17"
      ],
      [
        343,
        "index-5"
      ],
      [
        427,
        "index-12"
      ],
      [
        429,
        "index-82"
      ]
    ],
    "infinity": [
      [
        224,
        "index-3"
      ]
    ],
    "nan": [
      [
        224,
        "index-3"
      ]
    ],
    "pythonbreakpoint": [
      [
        224,
        "index-1"
      ],
      [
        351,
        "index-3"
      ],
      [
        351,
        "index-4"
      ],
      [
        351,
        "index-5"
      ],
      [
        454,
        "envvar-PYTHONBREAKPOINT"
      ],
      [
        479,
        "index-12"
      ]
    ],
    "pythoncaseok": [
      [
        224,
        "index-16"
      ],
      [
        454,
        "envvar-PYTHONCASEOK"
      ],
      [
        462,
        "index-11"
      ],
      [
        481,
        "index-21"
      ],
      [
        482,
        "index-191"
      ]
    ],
    "__format__": [
      [
        224,
        "index-4"
      ]
    ],
    "__import__()": [
      [
        224,
        "import__"
      ]
    ],
    "abs()": [
      [
        224,
        "abs"
      ]
    ],
    "aiter()": [
      [
        224,
        "aiter"
      ]
    ],
    "all()": [
      [
        224,
        "all"
      ]
    ],
    "anext()": [
      [
        224,
        "anext"
      ]
    ],
    "any()": [
      [
        224,
        "any"
      ]
    ],
    "ascii()": [
      [
        224,
        "ascii"
      ]
    ],
    "bin()": [
      [
        224,
        "bin"
      ]
    ],
    "binary mode": [
      [
        224,
        "index-8"
      ]
    ],
    "bool (built-in class)": [
      [
        224,
        "bool"
      ]
    ],
    "breakpoint()": [
      [
        224,
        "breakpoint"
      ]
    ],
    "buffer size, i/o": [
      [
        224,
        "index-8"
      ]
    ],
    "buffering": [
      [
        224,
        "index-8"
      ],
      [
        336,
        "index-6"
      ]
    ],
    "callable()": [
      [
        224,
        "callable"
      ]
    ],
    "chr()": [
      [
        224,
        "chr"
      ]
    ],
    "classmethod()": [
      [
        224,
        "classmethod"
      ]
    ],
    "compile()": [
      [
        224,
        "compile"
      ]
    ],
    "complex (built-in class)": [
      [
        224,
        "complex"
      ]
    ],
    "delattr()": [
      [
        224,
        "delattr"
      ]
    ],
    "dir()": [
      [
        224,
        "dir"
      ]
    ],
    "divmod()": [
      [
        224,
        "divmod"
      ]
    ],
    "enumerate()": [
      [
        224,
        "enumerate"
      ]
    ],
    "eval()": [
      [
        224,
        "eval"
      ]
    ],
    "exec": [
      [
        224,
        "index-2"
      ],
      [
        343,
        "index-64"
      ],
      [
        435,
        "index-44"
      ]
    ],
    "exec()": [
      [
        224,
        "exec"
      ]
    ],
    "filter()": [
      [
        224,
        "filter"
      ]
    ],
    "float (built-in class)": [
      [
        224,
        "float"
      ]
    ],
    "format()": [
      [
        224,
        "format"
      ]
    ],
    "format() (built-in function)": [
      [
        224,
        "index-4"
      ],
      [
        427,
        "index-76"
      ]
    ],
    "getattr()": [
      [
        224,
        "getattr"
      ]
    ],
    "globals()": [
      [
        224,
        "globals"
      ]
    ],
    "hasattr()": [
      [
        224,
        "hasattr"
      ]
    ],
    "hash()": [
      [
        224,
        "hash"
      ]
    ],
    "help()": [
      [
        224,
        "help"
      ]
    ],
    "hex()": [
      [
        224,
        "hex"
      ]
    ],
    "id()": [
      [
        224,
        "id"
      ]
    ],
    "import": [
      [
        224,
        "index-13"
      ],
      [
        333,
        "index-2"
      ],
      [
        427,
        "index-44"
      ],
      [
        431,
        "index-9"
      ],
      [
        435,
        "index-34"
      ],
      [
        435,
        "index-39"
      ]
    ],
    "input()": [
      [
        224,
        "input"
      ]
    ],
    "int (built-in class)": [
      [
        224,
        "int"
      ]
    ],
    "isinstance()": [
      [
        224,
        "isinstance"
      ]
    ],
    "issubclass()": [
      [
        224,
        "issubclass"
      ]
    ],
    "iter()": [
      [
        224,
        "iter"
      ]
    ],
    "len()": [
      [
        224,
        "len"
      ]
    ],
    "line-buffered i/o": [
      [
        224,
        "index-8"
      ]
    ],
    "locals()": [
      [
        224,
        "locals"
      ]
    ],
    "map()": [
      [
        224,
        "map"
      ]
    ],
    "max()": [
      [
        224,
        "max"
      ]
    ],
    "min()": [
      [
        224,
        "min"
      ]
    ],
    "modes": [
      [
        224,
        "index-6"
      ]
    ],
    "next()": [
      [
        224,
        "next"
      ]
    ],
    "object (built-in class)": [
      [
        224,
        "object"
      ]
    ],
    "oct()": [
      [
        224,
        "oct"
      ]
    ],
    "open()": [
      [
        224,
        "open"
      ]
    ],
    "open() built-in function": [
      [
        224,
        "index-5"
      ],
      [
        224,
        "index-7"
      ]
    ],
    "ord()": [
      [
        224,
        "ord"
      ]
    ],
    "pow()": [
      [
        224,
        "pow"
      ]
    ],
    "print()": [
      [
        224,
        "print"
      ]
    ],
    "property (built-in class)": [
      [
        224,
        "property"
      ]
    ],
    "property.deleter()": [
      [
        224,
        "property.deleter"
      ]
    ],
    "property.getter()": [
      [
        224,
        "property.getter"
      ]
    ],
    "property.setter()": [
      [
        224,
        "property.setter"
      ]
    ],
    "repr()": [
      [
        224,
        "repr"
      ]
    ],
    "reversed()": [
      [
        224,
        "reversed"
      ]
    ],
    "round()": [
      [
        224,
        "round"
      ]
    ],
    "setattr()": [
      [
        224,
        "setattr"
      ]
    ],
    "slice (built-in class)": [
      [
        224,
        "slice"
      ]
    ],
    "sorted()": [
      [
        224,
        "sorted"
      ]
    ],
    "start (slice attribute)": [
      [
        224,
        "slice.start"
      ]
    ],
    "staticmethod()": [
      [
        224,
        "staticmethod"
      ]
    ],
    "step (slice attribute)": [
      [
        224,
        "slice.step"
      ]
    ],
    "stop (slice attribute)": [
      [
        224,
        "slice.stop"
      ]
    ],
    "str() (built-in function)": [
      [
        224,
        "index-11"
      ]
    ],
    "sum()": [
      [
        224,
        "sum"
      ]
    ],
    "super (built-in class)": [
      [
        224,
        "super"
      ]
    ],
    "text mode": [
      [
        224,
        "index-8"
      ]
    ],
    "type (built-in class)": [
      [
        224,
        "type"
      ]
    ],
    "unbuffered i/o": [
      [
        224,
        "index-8"
      ]
    ],
    "vars()": [
      [
        224,
        "vars"
      ]
    ],
    "zip()": [
      [
        224,
        "zip"
      ]
    ],
    "pep 412": [
      [
        225,
        "index-0"
      ],
      [
        475,
        "index-16"
      ]
    ],
    "args (functools.partial attribute)": [
      [
        225,
        "functools.partial.args"
      ]
    ],
    "cache() (in module functools)": [
      [
        225,
        "functools.cache"
      ]
    ],
    "cached_property() (in module functools)": [
      [
        225,
        "functools.cached_property"
      ]
    ],
    "cmp_to_key() (in module functools)": [
      [
        225,
        "functools.cmp_to_key"
      ]
    ],
    "func (functools.partial attribute)": [
      [
        225,
        "functools.partial.func"
      ]
    ],
    "functools": [
      [
        225,
        "module-functools"
      ]
    ],
    "keywords (functools.partial attribute)": [
      [
        225,
        "functools.partial.keywords"
      ]
    ],
    "lru_cache() (in module functools)": [
      [
        225,
        "functools.lru_cache"
      ]
    ],
    "partial() (in module functools)": [
      [
        225,
        "functools.partial"
      ]
    ],
    "partialmethod (class in functools)": [
      [
        225,
        "functools.partialmethod"
      ]
    ],
    "reduce() (in module functools)": [
      [
        225,
        "functools.reduce"
      ]
    ],
    "singledispatch() (in module functools)": [
      [
        225,
        "functools.singledispatch"
      ]
    ],
    "singledispatchmethod (class in functools)": [
      [
        225,
        "functools.singledispatchmethod"
      ]
    ],
    "total_ordering() (in module functools)": [
      [
        225,
        "functools.total_ordering"
      ]
    ],
    "update_wrapper() (in module functools)": [
      [
        225,
        "functools.update_wrapper"
      ]
    ],
    "wraps() (in module functools)": [
      [
        225,
        "functools.wraps"
      ]
    ],
    "debug_collectable (in module gc)": [
      [
        226,
        "gc.DEBUG_COLLECTABLE"
      ]
    ],
    "debug_leak (in module gc)": [
      [
        226,
        "gc.DEBUG_LEAK"
      ]
    ],
    "debug_saveall (in module gc)": [
      [
        226,
        "gc.DEBUG_SAVEALL"
      ]
    ],
    "debug_stats (in module gc)": [
      [
        226,
        "gc.DEBUG_STATS"
      ]
    ],
    "debug_uncollectable (in module gc)": [
      [
        226,
        "gc.DEBUG_UNCOLLECTABLE"
      ]
    ],
    "callbacks (in module gc)": [
      [
        226,
        "gc.callbacks"
      ]
    ],
    "collect() (in module gc)": [
      [
        226,
        "gc.collect"
      ]
    ],
    "disable() (in module gc)": [
      [
        226,
        "gc.disable"
      ]
    ],
    "enable() (in module gc)": [
      [
        226,
        "gc.enable"
      ]
    ],
    "freeze() (in module gc)": [
      [
        226,
        "gc.freeze"
      ]
    ],
    "garbage (in module gc)": [
      [
        226,
        "gc.garbage"
      ]
    ],
    "gc": [
      [
        226,
        "module-gc"
      ]
    ],
    "get_count() (in module gc)": [
      [
        226,
        "gc.get_count"
      ]
    ],
    "get_debug() (in module gc)": [
      [
        226,
        "gc.get_debug"
      ]
    ],
    "get_freeze_count() (in module gc)": [
      [
        226,
        "gc.get_freeze_count"
      ]
    ],
    "get_objects() (in module gc)": [
      [
        226,
        "gc.get_objects"
      ]
    ],
    "get_referents() (in module gc)": [
      [
        226,
        "gc.get_referents"
      ]
    ],
    "get_referrers() (in module gc)": [
      [
        226,
        "gc.get_referrers"
      ]
    ],
    "get_stats() (in module gc)": [
      [
        226,
        "gc.get_stats"
      ]
    ],
    "get_threshold() (in module gc)": [
      [
        226,
        "gc.get_threshold"
      ]
    ],
    "is_finalized() (in module gc)": [
      [
        226,
        "gc.is_finalized"
      ]
    ],
    "is_tracked() (in module gc)": [
      [
        226,
        "gc.is_tracked"
      ]
    ],
    "isenabled() (in module gc)": [
      [
        226,
        "gc.isenabled"
      ]
    ],
    "set_debug() (in module gc)": [
      [
        226,
        "gc.set_debug"
      ]
    ],
    "set_threshold() (in module gc)": [
      [
        226,
        "gc.set_threshold"
      ]
    ],
    "unfreeze() (in module gc)": [
      [
        226,
        "gc.unfreeze"
      ]
    ],
    "getopterror": [
      [
        227,
        "getopt.GetoptError"
      ]
    ],
    "posixly_correct": [
      [
        227,
        "index-0"
      ]
    ],
    "getopt": [
      [
        227,
        "module-getopt"
      ]
    ],
    "getopt() (in module getopt)": [
      [
        227,
        "getopt.getopt"
      ]
    ],
    "gnu_getopt() (in module getopt)": [
      [
        227,
        "getopt.gnu_getopt"
      ]
    ],
    "getpasswarning": [
      [
        228,
        "getpass.GetPassWarning"
      ]
    ],
    "logname": [
      [
        228,
        "index-0"
      ],
      [
        292,
        "index-10"
      ]
    ],
    "user": [
      [
        228,
        "index-1"
      ],
      [
        292,
        "index-16"
      ],
      [
        292,
        "index-19"
      ],
      [
        292,
        "index-8"
      ]
    ],
    "username": [
      [
        228,
        "index-2"
      ],
      [
        292,
        "index-11"
      ],
      [
        293,
        "index-7"
      ]
    ],
    "getpass": [
      [
        228,
        "module-getpass"
      ]
    ],
    "getpass() (in module getpass)": [
      [
        228,
        "getpass.getpass"
      ]
    ],
    "getuser() (in module getpass)": [
      [
        228,
        "getpass.getuser"
      ]
    ],
    "gnome": [
      [
        229,
        "index-10"
      ]
    ],
    "gnutranslations (class in gettext)": [
      [
        229,
        "gettext.GNUTranslations"
      ]
    ],
    "lang": [
      [
        229,
        "index-3"
      ],
      [
        229,
        "index-8"
      ],
      [
        265,
        "index-1"
      ],
      [
        265,
        "index-2"
      ],
      [
        265,
        "index-3"
      ]
    ],
    "language": [
      [
        229,
        "index-0"
      ],
      [
        229,
        "index-5"
      ],
      [
        343,
        "index-11"
      ],
      [
        427,
        "index-13"
      ],
      [
        427,
        "index-4"
      ],
      [
        427,
        "index-42"
      ],
      [
        429,
        "index-77"
      ]
    ],
    "lc_all": [
      [
        229,
        "index-1"
      ],
      [
        229,
        "index-6"
      ]
    ],
    "lc_messages": [
      [
        229,
        "index-2"
      ],
      [
        229,
        "index-7"
      ]
    ],
    "nulltranslations (class in gettext)": [
      [
        229,
        "gettext.NullTranslations"
      ]
    ],
    "_ (underscore)": [
      [
        229,
        "index-4"
      ],
      [
        344,
        "index-10"
      ],
      [
        434,
        "index-28"
      ],
      [
        434,
        "index-29"
      ]
    ],
    "_parse() (gettext.nulltranslations method)": [
      [
        229,
        "gettext.NullTranslations._parse"
      ]
    ],
    "add_fallback() (gettext.nulltranslations method)": [
      [
        229,
        "gettext.NullTranslations.add_fallback"
      ]
    ],
    "bindtextdomain() (in module gettext)": [
      [
        229,
        "gettext.bindtextdomain"
      ]
    ],
    "charset() (gettext.nulltranslations method)": [
      [
        229,
        "gettext.NullTranslations.charset"
      ]
    ],
    "dgettext() (in module gettext)": [
      [
        229,
        "gettext.dgettext"
      ]
    ],
    "dngettext() (in module gettext)": [
      [
        229,
        "gettext.dngettext"
      ]
    ],
    "dnpgettext() (in module gettext)": [
      [
        229,
        "gettext.dnpgettext"
      ]
    ],
    "dpgettext() (in module gettext)": [
      [
        229,
        "gettext.dpgettext"
      ]
    ],
    "find() (in module gettext)": [
      [
        229,
        "gettext.find"
      ]
    ],
    "gettext": [
      [
        229,
        "index-4"
      ],
      [
        229,
        "module-gettext"
      ]
    ],
    "gettext() (gettext.gnutranslations method)": [
      [
        229,
        "gettext.GNUTranslations.gettext"
      ]
    ],
    "gettext() (gettext.nulltranslations method)": [
      [
        229,
        "gettext.NullTranslations.gettext"
      ]
    ],
    "gettext() (in module gettext)": [
      [
        229,
        "gettext.gettext"
      ]
    ],
    "info() (gettext.nulltranslations method)": [
      [
        229,
        "gettext.NullTranslations.info"
      ]
    ],
    "install() (gettext.nulltranslations method)": [
      [
        229,
        "gettext.NullTranslations.install"
      ]
    ],
    "install() (in module gettext)": [
      [
        229,
        "gettext.install"
      ]
    ],
    "ngettext() (gettext.gnutranslations method)": [
      [
        229,
        "gettext.GNUTranslations.ngettext"
      ]
    ],
    "ngettext() (gettext.nulltranslations method)": [
      [
        229,
        "gettext.NullTranslations.ngettext"
      ]
    ],
    "ngettext() (in module gettext)": [
      [
        229,
        "gettext.ngettext"
      ]
    ],
    "npgettext() (gettext.gnutranslations method)": [
      [
        229,
        "gettext.GNUTranslations.npgettext"
      ]
    ],
    "npgettext() (gettext.nulltranslations method)": [
      [
        229,
        "gettext.NullTranslations.npgettext"
      ]
    ],
    "npgettext() (in module gettext)": [
      [
        229,
        "gettext.npgettext"
      ]
    ],
    "pgettext() (gettext.gnutranslations method)": [
      [
        229,
        "gettext.GNUTranslations.pgettext"
      ]
    ],
    "pgettext() (gettext.nulltranslations method)": [
      [
        229,
        "gettext.NullTranslations.pgettext"
      ]
    ],
    "pgettext() (in module gettext)": [
      [
        229,
        "gettext.pgettext"
      ]
    ],
    "textdomain() (in module gettext)": [
      [
        229,
        "gettext.textdomain"
      ]
    ],
    "translation() (in module gettext)": [
      [
        229,
        "gettext.translation"
      ]
    ],
    "**": [
      [
        230,
        "index-2"
      ],
      [
        343,
        "index-13"
      ],
      [
        426,
        "index-32"
      ],
      [
        429,
        "index-18"
      ],
      [
        429,
        "index-50"
      ],
      [
        429,
        "index-58"
      ],
      [
        440,
        "index-4"
      ]
    ],
    ". (dot)": [
      [
        230,
        "index-1"
      ],
      [
        292,
        "index-45"
      ],
      [
        292,
        "index-50"
      ],
      [
        318,
        "index-0"
      ],
      [
        343,
        "index-36"
      ],
      [
        343,
        "index-46"
      ],
      [
        344,
        "index-2"
      ],
      [
        429,
        "index-39"
      ],
      [
        434,
        "index-29"
      ]
    ],
    "escape() (in module glob)": [
      [
        230,
        "glob.escape"
      ]
    ],
    "glob() (in module glob)": [
      [
        230,
        "glob.glob"
      ]
    ],
    "iglob() (in module glob)": [
      [
        230,
        "glob.iglob"
      ]
    ],
    "pathname expansion": [
      [
        230,
        "index-0"
      ]
    ],
    "cycleerror": [
      [
        231,
        "graphlib.CycleError"
      ]
    ],
    "topologicalsorter (class in graphlib)": [
      [
        231,
        "graphlib.TopologicalSorter"
      ]
    ],
    "add() (graphlib.topologicalsorter method)": [
      [
        231,
        "graphlib.TopologicalSorter.add"
      ]
    ],
    "done() (graphlib.topologicalsorter method)": [
      [
        231,
        "graphlib.TopologicalSorter.done"
      ]
    ],
    "get_ready() (graphlib.topologicalsorter method)": [
      [
        231,
        "graphlib.TopologicalSorter.get_ready"
      ]
    ],
    "graphlib": [
      [
        231,
        "module-graphlib"
      ]
    ],
    "is_active() (graphlib.topologicalsorter method)": [
      [
        231,
        "graphlib.TopologicalSorter.is_active"
      ]
    ],
    "prepare() (graphlib.topologicalsorter method)": [
      [
        231,
        "graphlib.TopologicalSorter.prepare"
      ]
    ],
    "static_order() (graphlib.topologicalsorter method)": [
      [
        231,
        "graphlib.TopologicalSorter.static_order"
      ]
    ],
    "getgrall() (in module grp)": [
      [
        232,
        "grp.getgrall"
      ]
    ],
    "getgrgid() (in module grp)": [
      [
        232,
        "grp.getgrgid"
      ]
    ],
    "getgrnam() (in module grp)": [
      [
        232,
        "grp.getgrnam"
      ]
    ],
    "grp": [
      [
        232,
        "module-grp"
      ]
    ],
    "--best": [
      [
        233,
        "cmdoption-gzip-best"
      ]
    ],
    "--decompress": [
      [
        233,
        "cmdoption-gzip-d"
      ]
    ],
    "--fast": [
      [
        233,
        "cmdoption-gzip-fast"
      ]
    ],
    "badgzipfile": [
      [
        233,
        "gzip.BadGzipFile"
      ]
    ],
    "gzipfile (class in gzip)": [
      [
        233,
        "gzip.GzipFile"
      ]
    ],
    "compress() (in module gzip)": [
      [
        233,
        "gzip.compress"
      ]
    ],
    "decompress() (in module gzip)": [
      [
        233,
        "gzip.decompress"
      ]
    ],
    "gzip": [
      [
        233,
        "module-gzip"
      ]
    ],
    "gzip command line option": [
      [
        233,
        "cmdoption-gzip-arg-file"
      ],
      [
        233,
        "cmdoption-gzip-best"
      ],
      [
        233,
        "cmdoption-gzip-d"
      ],
      [
        233,
        "cmdoption-gzip-fast"
      ],
      [
        233,
        "cmdoption-gzip-h"
      ]
    ],
    "mtime (gzip.gzipfile attribute)": [
      [
        233,
        "gzip.GzipFile.mtime"
      ]
    ],
    "name (gzip.gzipfile attribute)": [
      [
        233,
        "gzip.GzipFile.name"
      ]
    ],
    "open() (in module gzip)": [
      [
        233,
        "gzip.open"
      ]
    ],
    "peek() (gzip.gzipfile method)": [
      [
        233,
        "gzip.GzipFile.peek"
      ]
    ],
    "(use in module hashlib)": [
      [
        234,
        "index-2"
      ]
    ],
    "openssl": [
      [
        234,
        "index-2"
      ],
      [
        340,
        "index-0"
      ]
    ],
    "rfc 1321": [
      [
        234,
        "index-1"
      ]
    ],
    "rfc 7693": [
      [
        234,
        "index-5"
      ]
    ],
    "rfc 7914": [
      [
        234,
        "index-3"
      ]
    ],
    "algorithms_available (in module hashlib)": [
      [
        234,
        "hashlib.algorithms_available"
      ]
    ],
    "algorithms_guaranteed (in module hashlib)": [
      [
        234,
        "hashlib.algorithms_guaranteed"
      ]
    ],
    "blake2b() (in module hashlib)": [
      [
        234,
        "hashlib.blake2b"
      ]
    ],
    "blake2b, blake2s": [
      [
        234,
        "index-4"
      ]
    ],
    "blake2b.max_digest_size (in module hashlib)": [
      [
        234,
        "hashlib.blake2b.MAX_DIGEST_SIZE"
      ]
    ],
    "blake2b.max_key_size (in module hashlib)": [
      [
        234,
        "hashlib.blake2b.MAX_KEY_SIZE"
      ]
    ],
    "blake2b.person_size (in module hashlib)": [
      [
        234,
        "hashlib.blake2b.PERSON_SIZE"
      ]
    ],
    "blake2b.salt_size (in module hashlib)": [
      [
        234,
        "hashlib.blake2b.SALT_SIZE"
      ]
    ],
    "blake2s() (in module hashlib)": [
      [
        234,
        "hashlib.blake2s"
      ]
    ],
    "blake2s.max_digest_size (in module hashlib)": [
      [
        234,
        "hashlib.blake2s.MAX_DIGEST_SIZE"
      ]
    ],
    "blake2s.max_key_size (in module hashlib)": [
      [
        234,
        "hashlib.blake2s.MAX_KEY_SIZE"
      ]
    ],
    "blake2s.person_size (in module hashlib)": [
      [
        234,
        "hashlib.blake2s.PERSON_SIZE"
      ]
    ],
    "blake2s.salt_size (in module hashlib)": [
      [
        234,
        "hashlib.blake2s.SALT_SIZE"
      ]
    ],
    "copy() (hashlib.hash method)": [
      [
        234,
        "hashlib.hash.copy"
      ]
    ],
    "digest() (hashlib.hash method)": [
      [
        234,
        "hashlib.hash.digest"
      ]
    ],
    "digest() (hashlib.shake method)": [
      [
        234,
        "hashlib.shake.digest"
      ]
    ],
    "file_digest() (in module hashlib)": [
      [
        234,
        "hashlib.file_digest"
      ]
    ],
    "hash.block_size (in module hashlib)": [
      [
        234,
        "hashlib.hash.block_size"
      ]
    ],
    "hash.digest_size (in module hashlib)": [
      [
        234,
        "hashlib.hash.digest_size"
      ]
    ],
    "hashlib": [
      [
        234,
        "module-hashlib"
      ]
    ],
    "hexdigest() (hashlib.hash method)": [
      [
        234,
        "hashlib.hash.hexdigest"
      ]
    ],
    "hexdigest() (hashlib.shake method)": [
      [
        234,
        "hashlib.shake.hexdigest"
      ]
    ],
    "md5() (in module hashlib)": [
      [
        234,
        "hashlib.md5"
      ]
    ],
    "message digest, md5": [
      [
        234,
        "index-0"
      ]
    ],
    "name (hashlib.hash attribute)": [
      [
        234,
        "hashlib.hash.name"
      ]
    ],
    "new() (in module hashlib)": [
      [
        234,
        "hashlib.new"
      ]
    ],
    "pbkdf2_hmac() (in module hashlib)": [
      [
        234,
        "hashlib.pbkdf2_hmac"
      ]
    ],
    "scrypt() (in module hashlib)": [
      [
        234,
        "hashlib.scrypt"
      ]
    ],
    "secure hash algorithm, sha1, sha2, sha224, sha256, sha384, sha512, sha3, shake, blake2": [
      [
        234,
        "index-0"
      ]
    ],
    "sha1() (in module hashlib)": [
      [
        234,
        "hashlib.sha1"
      ]
    ],
    "sha224() (in module hashlib)": [
      [
        234,
        "hashlib.sha224"
      ]
    ],
    "sha256() (in module hashlib)": [
      [
        234,
        "hashlib.sha256"
      ]
    ],
    "sha384() (in module hashlib)": [
      [
        234,
        "hashlib.sha384"
      ]
    ],
    "sha3_224() (in module hashlib)": [
      [
        234,
        "hashlib.sha3_224"
      ]
    ],
    "sha3_256() (in module hashlib)": [
      [
        234,
        "hashlib.sha3_256"
      ]
    ],
    "sha3_384() (in module hashlib)": [
      [
        234,
        "hashlib.sha3_384"
      ]
    ],
    "sha3_512() (in module hashlib)": [
      [
        234,
        "hashlib.sha3_512"
      ]
    ],
    "sha512() (in module hashlib)": [
      [
        234,
        "hashlib.sha512"
      ]
    ],
    "shake_128() (in module hashlib)": [
      [
        234,
        "hashlib.shake_128"
      ]
    ],
    "shake_256() (in module hashlib)": [
      [
        234,
        "hashlib.shake_256"
      ]
    ],
    "update() (hashlib.hash method)": [
      [
        234,
        "hashlib.hash.update"
      ]
    ],
    "heapify() (in module heapq)": [
      [
        235,
        "heapq.heapify"
      ]
    ],
    "heappop() (in module heapq)": [
      [
        235,
        "heapq.heappop"
      ]
    ],
    "heappush() (in module heapq)": [
      [
        235,
        "heapq.heappush"
      ]
    ],
    "heappushpop() (in module heapq)": [
      [
        235,
        "heapq.heappushpop"
      ]
    ],
    "heapq": [
      [
        235,
        "module-heapq"
      ]
    ],
    "heapreplace() (in module heapq)": [
      [
        235,
        "heapq.heapreplace"
      ]
    ],
    "merge() (in module heapq)": [
      [
        235,
        "heapq.merge"
      ]
    ],
    "nlargest() (in module heapq)": [
      [
        235,
        "heapq.nlargest"
      ]
    ],
    "nsmallest() (in module heapq)": [
      [
        235,
        "heapq.nsmallest"
      ]
    ],
    "rfc 2104": [
      [
        236,
        "index-0"
      ],
      [
        463,
        "index-17"
      ]
    ],
    "block_size (hmac.hmac attribute)": [
      [
        236,
        "hmac.HMAC.block_size"
      ]
    ],
    "compare_digest() (in module hmac)": [
      [
        236,
        "hmac.compare_digest"
      ]
    ],
    "copy() (hmac.hmac method)": [
      [
        236,
        "hmac.HMAC.copy"
      ]
    ],
    "digest() (hmac.hmac method)": [
      [
        236,
        "hmac.HMAC.digest"
      ]
    ],
    "digest() (in module hmac)": [
      [
        236,
        "hmac.digest"
      ]
    ],
    "digest_size (hmac.hmac attribute)": [
      [
        236,
        "hmac.HMAC.digest_size"
      ]
    ],
    "hexdigest() (hmac.hmac method)": [
      [
        236,
        "hmac.HMAC.hexdigest"
      ]
    ],
    "hmac": [
      [
        236,
        "module-hmac"
      ]
    ],
    "name (hmac.hmac attribute)": [
      [
        236,
        "hmac.HMAC.name"
      ]
    ],
    "new() (in module hmac)": [
      [
        236,
        "hmac.new"
      ]
    ],
    "update() (hmac.hmac method)": [
      [
        236,
        "hmac.HMAC.update"
      ]
    ],
    "escape() (in module html)": [
      [
        237,
        "html.escape"
      ]
    ],
    "html": [
      [
        237,
        "module-html"
      ],
      [
        239,
        "index-0"
      ],
      [
        394,
        "index-10"
      ]
    ],
    "unescape() (in module html)": [
      [
        237,
        "html.unescape"
      ]
    ],
    "codepoint2name (in module html.entities)": [
      [
        238,
        "html.entities.codepoint2name"
      ]
    ],
    "entitydefs (in module html.entities)": [
      [
        238,
        "html.entities.entitydefs"
      ]
    ],
    "html.entities": [
      [
        238,
        "module-html.entities"
      ]
    ],
    "html5 (in module html.entities)": [
      [
        238,
        "html.entities.html5"
      ]
    ],
    "name2codepoint (in module html.entities)": [
      [
        238,
        "html.entities.name2codepoint"
      ]
    ],
    "htmlparser (class in html.parser)": [
      [
        239,
        "html.parser.HTMLParser"
      ]
    ],
    "xhtml": [
      [
        239,
        "index-0"
      ]
    ],
    "close() (html.parser.htmlparser method)": [
      [
        239,
        "html.parser.HTMLParser.close"
      ]
    ],
    "feed() (html.parser.htmlparser method)": [
      [
        239,
        "html.parser.HTMLParser.feed"
      ]
    ],
    "get_starttag_text() (html.parser.htmlparser method)": [
      [
        239,
        "html.parser.HTMLParser.get_starttag_text"
      ]
    ],
    "getpos() (html.parser.htmlparser method)": [
      [
        239,
        "html.parser.HTMLParser.getpos"
      ]
    ],
    "handle_charref() (html.parser.htmlparser method)": [
      [
        239,
        "html.parser.HTMLParser.handle_charref"
      ]
    ],
    "handle_comment() (html.parser.htmlparser method)": [
      [
        239,
        "html.parser.HTMLParser.handle_comment"
      ]
    ],
    "handle_data() (html.parser.htmlparser method)": [
      [
        239,
        "html.parser.HTMLParser.handle_data"
      ]
    ],
    "handle_decl() (html.parser.htmlparser method)": [
      [
        239,
        "html.parser.HTMLParser.handle_decl"
      ]
    ],
    "handle_endtag() (html.parser.htmlparser method)": [
      [
        239,
        "html.parser.HTMLParser.handle_endtag"
      ]
    ],
    "handle_entityref() (html.parser.htmlparser method)": [
      [
        239,
        "html.parser.HTMLParser.handle_entityref"
      ]
    ],
    "handle_pi() (html.parser.htmlparser method)": [
      [
        239,
        "html.parser.HTMLParser.handle_pi"
      ]
    ],
    "handle_startendtag() (html.parser.htmlparser method)": [
      [
        239,
        "html.parser.HTMLParser.handle_startendtag"
      ]
    ],
    "handle_starttag() (html.parser.htmlparser method)": [
      [
        239,
        "html.parser.HTMLParser.handle_starttag"
      ]
    ],
    "html.parser": [
      [
        239,
        "module-html.parser"
      ]
    ],
    "reset() (html.parser.htmlparser method)": [
      [
        239,
        "html.parser.HTMLParser.reset"
      ]
    ],
    "unknown_decl() (html.parser.htmlparser method)": [
      [
        239,
        "html.parser.HTMLParser.unknown_decl"
      ]
    ],
    "httpmethod (class in http)": [
      [
        240,
        "http.HTTPMethod"
      ]
    ],
    "httpstatus (class in http)": [
      [
        240,
        "http.HTTPStatus"
      ]
    ],
    "rfc 2295": [
      [
        240,
        "index-58"
      ]
    ],
    "rfc 2324": [
      [
        240,
        "index-41"
      ]
    ],
    "rfc 2518": [
      [
        240,
        "index-3"
      ]
    ],
    "rfc 2774": [
      [
        240,
        "index-61"
      ]
    ],
    "rfc 3229": [
      [
        240,
        "index-14"
      ]
    ],
    "rfc 4918": [
      [
        240,
        "index-12"
      ],
      [
        240,
        "index-43"
      ],
      [
        240,
        "index-44"
      ],
      [
        240,
        "index-45"
      ],
      [
        240,
        "index-59"
      ]
    ],
    "rfc 5789": [
      [
        240,
        "index-76"
      ]
    ],
    "rfc 5842": [
      [
        240,
        "index-13"
      ],
      [
        240,
        "index-60"
      ]
    ],
    "rfc 6585": [
      [
        240,
        "index-48"
      ],
      [
        240,
        "index-49"
      ],
      [
        240,
        "index-50"
      ],
      [
        240,
        "index-62"
      ]
    ],
    "rfc 7231": [
      [
        240,
        "index-1"
      ],
      [
        240,
        "index-10"
      ],
      [
        240,
        "index-15"
      ],
      [
        240,
        "index-16"
      ],
      [
        240,
        "index-17"
      ],
      [
        240,
        "index-18"
      ],
      [
        240,
        "index-2"
      ],
      [
        240,
        "index-20"
      ],
      [
        240,
        "index-21"
      ],
      [
        240,
        "index-23"
      ],
      [
        240,
        "index-25"
      ],
      [
        240,
        "index-26"
      ],
      [
        240,
        "index-27"
      ],
      [
        240,
        "index-28"
      ],
      [
        240,
        "index-29"
      ],
      [
        240,
        "index-31"
      ],
      [
        240,
        "index-32"
      ],
      [
        240,
        "index-33"
      ],
      [
        240,
        "index-34"
      ],
      [
        240,
        "index-36"
      ],
      [
        240,
        "index-37"
      ],
      [
        240,
        "index-38"
      ],
      [
        240,
        "index-40"
      ],
      [
        240,
        "index-47"
      ],
      [
        240,
        "index-5"
      ],
      [
        240,
        "index-52"
      ],
      [
        240,
        "index-53"
      ],
      [
        240,
        "index-54"
      ],
      [
        240,
        "index-55"
      ],
      [
        240,
        "index-56"
      ],
      [
        240,
        "index-57"
      ],
      [
        240,
        "index-6"
      ],
      [
        240,
        "index-63"
      ],
      [
        240,
        "index-64"
      ],
      [
        240,
        "index-65"
      ],
      [
        240,
        "index-66"
      ],
      [
        240,
        "index-67"
      ],
      [
        240,
        "index-68"
      ],
      [
        240,
        "index-69"
      ],
      [
        240,
        "index-7"
      ],
      [
        240,
        "index-70"
      ],
      [
        240,
        "index-71"
      ],
      [
        240,
        "index-72"
      ],
      [
        240,
        "index-73"
      ],
      [
        240,
        "index-74"
      ],
      [
        240,
        "index-75"
      ],
      [
        240,
        "index-8"
      ],
      [
        240,
        "index-9"
      ]
    ],
    "rfc 7232": [
      [
        240,
        "index-19"
      ],
      [
        240,
        "index-35"
      ]
    ],
    "rfc 7233": [
      [
        240,
        "index-11"
      ],
      [
        240,
        "index-39"
      ]
    ],
    "rfc 7235": [
      [
        240,
        "index-24"
      ],
      [
        240,
        "index-30"
      ]
    ],
    "rfc 7238": [
      [
        240,
        "index-22"
      ]
    ],
    "rfc 7540": [
      [
        240,
        "index-42"
      ]
    ],
    "rfc 7725": [
      [
        240,
        "index-51"
      ]
    ],
    "rfc 8297": [
      [
        240,
        "index-4"
      ]
    ],
    "rfc 8470": [
      [
        240,
        "index-46"
      ]
    ],
    "http (standard module)": [
      [
        240,
        "index-0"
      ]
    ],
    "badstatusline": [
      [
        241,
        "http.client.BadStatusLine"
      ]
    ],
    "cannotsendheader": [
      [
        241,
        "http.client.CannotSendHeader"
      ]
    ],
    "cannotsendrequest": [
      [
        241,
        "http.client.CannotSendRequest"
      ]
    ],
    "httpconnection (class in http.client)": [
      [
        241,
        "http.client.HTTPConnection"
      ]
    ],
    "httpexception": [
      [
        241,
        "http.client.HTTPException"
      ]
    ],
    "httpmessage (class in http.client)": [
      [
        241,
        "http.client.HTTPMessage"
      ]
    ],
    "httpresponse (class in http.client)": [
      [
        241,
        "http.client.HTTPResponse"
      ]
    ],
    "httpsconnection (class in http.client)": [
      [
        241,
        "http.client.HTTPSConnection"
      ]
    ],
    "https_port (in module http.client)": [
      [
        241,
        "http.client.HTTPS_PORT"
      ]
    ],
    "http_port (in module http.client)": [
      [
        241,
        "http.client.HTTP_PORT"
      ]
    ],
    "improperconnectionstate": [
      [
        241,
        "http.client.ImproperConnectionState"
      ]
    ],
    "incompleteread": [
      [
        241,
        "http.client.IncompleteRead"
      ]
    ],
    "invalidurl": [
      [
        241,
        "http.client.InvalidURL"
      ]
    ],
    "linetoolong": [
      [
        241,
        "http.client.LineTooLong"
      ]
    ],
    "notconnected": [
      [
        241,
        "http.client.NotConnected"
      ]
    ],
    "rfc 2616#section-14.23": [
      [
        241,
        "index-4"
      ]
    ],
    "rfc 2616#section-5.1.2": [
      [
        241,
        "index-3"
      ],
      [
        241,
        "index-5"
      ]
    ],
    "rfc 7230": [
      [
        241,
        "index-7"
      ],
      [
        394,
        "index-0"
      ]
    ],
    "remotedisconnected": [
      [
        241,
        "http.client.RemoteDisconnected"
      ]
    ],
    "responsenotready": [
      [
        241,
        "http.client.ResponseNotReady"
      ]
    ],
    "unimplementedfilemode": [
      [
        241,
        "http.client.UnimplementedFileMode"
      ]
    ],
    "unknownprotocol": [
      [
        241,
        "http.client.UnknownProtocol"
      ]
    ],
    "unknowntransferencoding": [
      [
        241,
        "http.client.UnknownTransferEncoding"
      ]
    ],
    "blocksize (http.client.httpconnection attribute)": [
      [
        241,
        "http.client.HTTPConnection.blocksize"
      ]
    ],
    "close() (http.client.httpconnection method)": [
      [
        241,
        "http.client.HTTPConnection.close"
      ]
    ],
    "closed (http.client.httpresponse attribute)": [
      [
        241,
        "http.client.HTTPResponse.closed"
      ]
    ],
    "connect() (http.client.httpconnection method)": [
      [
        241,
        "http.client.HTTPConnection.connect"
      ]
    ],
    "debuglevel (http.client.httpresponse attribute)": [
      [
        241,
        "http.client.HTTPResponse.debuglevel"
      ]
    ],
    "endheaders() (http.client.httpconnection method)": [
      [
        241,
        "http.client.HTTPConnection.endheaders"
      ]
    ],
    "fileno() (http.client.httpresponse method)": [
      [
        241,
        "http.client.HTTPResponse.fileno"
      ]
    ],
    "get_proxy_response_headers() (http.client.httpconnection method)": [
      [
        241,
        "http.client.HTTPConnection.get_proxy_response_headers"
      ]
    ],
    "getcode() (http.client.httpresponse method)": [
      [
        241,
        "http.client.HTTPResponse.getcode"
      ]
    ],
    "getheader() (http.client.httpresponse method)": [
      [
        241,
        "http.client.HTTPResponse.getheader"
      ]
    ],
    "getheaders() (http.client.httpresponse method)": [
      [
        241,
        "http.client.HTTPResponse.getheaders"
      ]
    ],
    "getresponse() (http.client.httpconnection method)": [
      [
        241,
        "http.client.HTTPConnection.getresponse"
      ]
    ],
    "geturl() (http.client.httpresponse method)": [
      [
        241,
        "http.client.HTTPResponse.geturl"
      ]
    ],
    "headers (http.client.httpresponse attribute)": [
      [
        241,
        "http.client.HTTPResponse.headers"
      ]
    ],
    "http.client": [
      [
        241,
        "module-http.client"
      ]
    ],
    "http.client (standard module)": [
      [
        241,
        "index-0"
      ]
    ],
    "info() (http.client.httpresponse method)": [
      [
        241,
        "http.client.HTTPResponse.info"
      ]
    ],
    "msg (http.client.httpresponse attribute)": [
      [
        241,
        "http.client.HTTPResponse.msg"
      ]
    ],
    "parse_headers() (in module http.client)": [
      [
        241,
        "http.client.parse_headers"
      ]
    ],
    "putheader() (http.client.httpconnection method)": [
      [
        241,
        "http.client.HTTPConnection.putheader"
      ]
    ],
    "putrequest() (http.client.httpconnection method)": [
      [
        241,
        "http.client.HTTPConnection.putrequest"
      ]
    ],
    "read() (http.client.httpresponse method)": [
      [
        241,
        "http.client.HTTPResponse.read"
      ]
    ],
    "readinto() (http.client.httpresponse method)": [
      [
        241,
        "http.client.HTTPResponse.readinto"
      ]
    ],
    "reason (http.client.httpresponse attribute)": [
      [
        241,
        "http.client.HTTPResponse.reason"
      ]
    ],
    "request() (http.client.httpconnection method)": [
      [
        241,
        "http.client.HTTPConnection.request"
      ]
    ],
    "responses (in module http.client)": [
      [
        241,
        "http.client.responses"
      ]
    ],
    "send() (http.client.httpconnection method)": [
      [
        241,
        "http.client.HTTPConnection.send"
      ]
    ],
    "set_debuglevel() (http.client.httpconnection method)": [
      [
        241,
        "http.client.HTTPConnection.set_debuglevel"
      ]
    ],
    "set_tunnel() (http.client.httpconnection method)": [
      [
        241,
        "http.client.HTTPConnection.set_tunnel"
      ]
    ],
    "status (http.client.httpresponse attribute)": [
      [
        241,
        "http.client.HTTPResponse.status"
      ]
    ],
    "url (http.client.httpresponse attribute)": [
      [
        241,
        "http.client.HTTPResponse.url"
      ]
    ],
    "urllib.request": [
      [
        241,
        "index-1"
      ],
      [
        394,
        "module-urllib.request"
      ]
    ],
    "version (http.client.httpresponse attribute)": [
      [
        241,
        "http.client.HTTPResponse.version"
      ]
    ],
    "cookie (class in http.cookiejar)": [
      [
        242,
        "http.cookiejar.Cookie"
      ]
    ],
    "cookiejar (class in http.cookiejar)": [
      [
        242,
        "http.cookiejar.CookieJar"
      ]
    ],
    "cookiepolicy (class in http.cookiejar)": [
      [
        242,
        "http.cookiejar.CookiePolicy"
      ]
    ],
    "defaultcookiepolicy (class in http.cookiejar)": [
      [
        242,
        "http.cookiejar.DefaultCookiePolicy"
      ]
    ],
    "domainliberal (http.cookiejar.defaultcookiepolicy attribute)": [
      [
        242,
        "http.cookiejar.DefaultCookiePolicy.DomainLiberal"
      ]
    ],
    "domainrfc2965match (http.cookiejar.defaultcookiepolicy attribute)": [
      [
        242,
        "http.cookiejar.DefaultCookiePolicy.DomainRFC2965Match"
      ]
    ],
    "domainstrict (http.cookiejar.defaultcookiepolicy attribute)": [
      [
        242,
        "http.cookiejar.DefaultCookiePolicy.DomainStrict"
      ]
    ],
    "domainstrictnodots (http.cookiejar.defaultcookiepolicy attribute)": [
      [
        242,
        "http.cookiejar.DefaultCookiePolicy.DomainStrictNoDots"
      ]
    ],
    "domainstrictnondomain (http.cookiejar.defaultcookiepolicy attribute)": [
      [
        242,
        "http.cookiejar.DefaultCookiePolicy.DomainStrictNonDomain"
      ]
    ],
    "filecookiejar (class in http.cookiejar)": [
      [
        242,
        "http.cookiejar.FileCookieJar"
      ]
    ],
    "lwpcookiejar (class in http.cookiejar)": [
      [
        242,
        "http.cookiejar.LWPCookieJar"
      ]
    ],
    "loaderror": [
      [
        242,
        "http.cookiejar.LoadError"
      ]
    ],
    "mozillacookiejar (class in http.cookiejar)": [
      [
        242,
        "http.cookiejar.MozillaCookieJar"
      ]
    ],
    "rfc 2109": [
      [
        242,
        "index-1"
      ],
      [
        242,
        "index-15"
      ],
      [
        242,
        "index-21"
      ],
      [
        242,
        "index-23"
      ],
      [
        242,
        "index-24"
      ],
      [
        242,
        "index-3"
      ],
      [
        242,
        "index-4"
      ],
      [
        242,
        "index-6"
      ],
      [
        243,
        "index-0"
      ],
      [
        243,
        "index-2"
      ],
      [
        243,
        "index-3"
      ],
      [
        243,
        "index-4"
      ],
      [
        243,
        "index-5"
      ],
      [
        243,
        "index-6"
      ],
      [
        243,
        "index-7"
      ]
    ],
    "rfc 2964": [
      [
        242,
        "index-10"
      ]
    ],
    "rfc 2965": [
      [
        242,
        "index-0"
      ],
      [
        242,
        "index-11"
      ],
      [
        242,
        "index-12"
      ],
      [
        242,
        "index-13"
      ],
      [
        242,
        "index-14"
      ],
      [
        242,
        "index-16"
      ],
      [
        242,
        "index-17"
      ],
      [
        242,
        "index-18"
      ],
      [
        242,
        "index-19"
      ],
      [
        242,
        "index-2"
      ],
      [
        242,
        "index-20"
      ],
      [
        242,
        "index-22"
      ],
      [
        242,
        "index-25"
      ],
      [
        242,
        "index-5"
      ],
      [
        242,
        "index-7"
      ],
      [
        242,
        "index-8"
      ],
      [
        242,
        "index-9"
      ],
      [
        394,
        "index-1"
      ],
      [
        394,
        "index-2"
      ],
      [
        394,
        "index-4"
      ]
    ],
    "add_cookie_header() (http.cookiejar.cookiejar method)": [
      [
        242,
        "http.cookiejar.CookieJar.add_cookie_header"
      ]
    ],
    "allowed_domains() (http.cookiejar.defaultcookiepolicy method)": [
      [
        242,
        "http.cookiejar.DefaultCookiePolicy.allowed_domains"
      ]
    ],
    "blocked_domains() (http.cookiejar.defaultcookiepolicy method)": [
      [
        242,
        "http.cookiejar.DefaultCookiePolicy.blocked_domains"
      ]
    ],
    "clear() (http.cookiejar.cookiejar method)": [
      [
        242,
        "http.cookiejar.CookieJar.clear"
      ]
    ],
    "clear_session_cookies() (http.cookiejar.cookiejar method)": [
      [
        242,
        "http.cookiejar.CookieJar.clear_session_cookies"
      ]
    ],
    "comment (http.cookiejar.cookie attribute)": [
      [
        242,
        "http.cookiejar.Cookie.comment"
      ]
    ],
    "comment_url (http.cookiejar.cookie attribute)": [
      [
        242,
        "http.cookiejar.Cookie.comment_url"
      ]
    ],
    "delayload (http.cookiejar.filecookiejar attribute)": [
      [
        242,
        "http.cookiejar.FileCookieJar.delayload"
      ]
    ],
    "discard (http.cookiejar.cookie attribute)": [
      [
        242,
        "http.cookiejar.Cookie.discard"
      ]
    ],
    "domain (http.cookiejar.cookie attribute)": [
      [
        242,
        "http.cookiejar.Cookie.domain"
      ]
    ],
    "domain_initial_dot (http.cookiejar.cookie attribute)": [
      [
        242,
        "http.cookiejar.Cookie.domain_initial_dot"
      ]
    ],
    "domain_return_ok() (http.cookiejar.cookiepolicy method)": [
      [
        242,
        "http.cookiejar.CookiePolicy.domain_return_ok"
      ]
    ],
    "domain_specified (http.cookiejar.cookie attribute)": [
      [
        242,
        "http.cookiejar.Cookie.domain_specified"
      ]
    ],
    "expires (http.cookiejar.cookie attribute)": [
      [
        242,
        "http.cookiejar.Cookie.expires"
      ]
    ],
    "extract_cookies() (http.cookiejar.cookiejar method)": [
      [
        242,
        "http.cookiejar.CookieJar.extract_cookies"
      ]
    ],
    "filename (http.cookiejar.filecookiejar attribute)": [
      [
        242,
        "http.cookiejar.FileCookieJar.filename"
      ]
    ],
    "get_nonstandard_attr() (http.cookiejar.cookie method)": [
      [
        242,
        "http.cookiejar.Cookie.get_nonstandard_attr"
      ]
    ],
    "has_nonstandard_attr() (http.cookiejar.cookie method)": [
      [
        242,
        "http.cookiejar.Cookie.has_nonstandard_attr"
      ]
    ],
    "hide_cookie2 (http.cookiejar.cookiepolicy attribute)": [
      [
        242,
        "http.cookiejar.CookiePolicy.hide_cookie2"
      ]
    ],
    "http.cookiejar": [
      [
        242,
        "module-http.cookiejar"
      ]
    ],
    "is_blocked() (http.cookiejar.defaultcookiepolicy method)": [
      [
        242,
        "http.cookiejar.DefaultCookiePolicy.is_blocked"
      ]
    ],
    "is_expired() (http.cookiejar.cookie method)": [
      [
        242,
        "http.cookiejar.Cookie.is_expired"
      ]
    ],
    "is_not_allowed() (http.cookiejar.defaultcookiepolicy method)": [
      [
        242,
        "http.cookiejar.DefaultCookiePolicy.is_not_allowed"
      ]
    ],
    "load() (http.cookiejar.filecookiejar method)": [
      [
        242,
        "http.cookiejar.FileCookieJar.load"
      ]
    ],
    "make_cookies() (http.cookiejar.cookiejar method)": [
      [
        242,
        "http.cookiejar.CookieJar.make_cookies"
      ]
    ],
    "name (http.cookiejar.cookie attribute)": [
      [
        242,
        "http.cookiejar.Cookie.name"
      ]
    ],
    "netscape (http.cookiejar.cookiepolicy attribute)": [
      [
        242,
        "http.cookiejar.CookiePolicy.netscape"
      ]
    ],
    "path (http.cookiejar.cookie attribute)": [
      [
        242,
        "http.cookiejar.Cookie.path"
      ]
    ],
    "path_return_ok() (http.cookiejar.cookiepolicy method)": [
      [
        242,
        "http.cookiejar.CookiePolicy.path_return_ok"
      ]
    ],
    "port (http.cookiejar.cookie attribute)": [
      [
        242,
        "http.cookiejar.Cookie.port"
      ]
    ],
    "port_specified (http.cookiejar.cookie attribute)": [
      [
        242,
        "http.cookiejar.Cookie.port_specified"
      ]
    ],
    "return_ok() (http.cookiejar.cookiepolicy method)": [
      [
        242,
        "http.cookiejar.CookiePolicy.return_ok"
      ]
    ],
    "revert() (http.cookiejar.filecookiejar method)": [
      [
        242,
        "http.cookiejar.FileCookieJar.revert"
      ]
    ],
    "rfc2109 (http.cookiejar.cookie attribute)": [
      [
        242,
        "http.cookiejar.Cookie.rfc2109"
      ]
    ],
    "rfc2109_as_netscape (http.cookiejar.defaultcookiepolicy attribute)": [
      [
        242,
        "http.cookiejar.DefaultCookiePolicy.rfc2109_as_netscape"
      ]
    ],
    "rfc2965 (http.cookiejar.cookiepolicy attribute)": [
      [
        242,
        "http.cookiejar.CookiePolicy.rfc2965"
      ]
    ],
    "save() (http.cookiejar.filecookiejar method)": [
      [
        242,
        "http.cookiejar.FileCookieJar.save"
      ]
    ],
    "secure (http.cookiejar.cookie attribute)": [
      [
        242,
        "http.cookiejar.Cookie.secure"
      ]
    ],
    "set_allowed_domains() (http.cookiejar.defaultcookiepolicy method)": [
      [
        242,
        "http.cookiejar.DefaultCookiePolicy.set_allowed_domains"
      ]
    ],
    "set_blocked_domains() (http.cookiejar.defaultcookiepolicy method)": [
      [
        242,
        "http.cookiejar.DefaultCookiePolicy.set_blocked_domains"
      ]
    ],
    "set_cookie() (http.cookiejar.cookiejar method)": [
      [
        242,
        "http.cookiejar.CookieJar.set_cookie"
      ]
    ],
    "set_cookie_if_ok() (http.cookiejar.cookiejar method)": [
      [
        242,
        "http.cookiejar.CookieJar.set_cookie_if_ok"
      ]
    ],
    "set_nonstandard_attr() (http.cookiejar.cookie method)": [
      [
        242,
        "http.cookiejar.Cookie.set_nonstandard_attr"
      ]
    ],
    "set_ok() (http.cookiejar.cookiepolicy method)": [
      [
        242,
        "http.cookiejar.CookiePolicy.set_ok"
      ]
    ],
    "set_policy() (http.cookiejar.cookiejar method)": [
      [
        242,
        "http.cookiejar.CookieJar.set_policy"
      ]
    ],
    "strict_domain (http.cookiejar.defaultcookiepolicy attribute)": [
      [
        242,
        "http.cookiejar.DefaultCookiePolicy.strict_domain"
      ]
    ],
    "strict_ns_domain (http.cookiejar.defaultcookiepolicy attribute)": [
      [
        242,
        "http.cookiejar.DefaultCookiePolicy.strict_ns_domain"
      ]
    ],
    "strict_ns_set_initial_dollar (http.cookiejar.defaultcookiepolicy attribute)": [
      [
        242,
        "http.cookiejar.DefaultCookiePolicy.strict_ns_set_initial_dollar"
      ]
    ],
    "strict_ns_set_path (http.cookiejar.defaultcookiepolicy attribute)": [
      [
        242,
        "http.cookiejar.DefaultCookiePolicy.strict_ns_set_path"
      ]
    ],
    "strict_ns_unverifiable (http.cookiejar.defaultcookiepolicy attribute)": [
      [
        242,
        "http.cookiejar.DefaultCookiePolicy.strict_ns_unverifiable"
      ]
    ],
    "strict_rfc2965_unverifiable (http.cookiejar.defaultcookiepolicy attribute)": [
      [
        242,
        "http.cookiejar.DefaultCookiePolicy.strict_rfc2965_unverifiable"
      ]
    ],
    "value (http.cookiejar.cookie attribute)": [
      [
        242,
        "http.cookiejar.Cookie.value"
      ]
    ],
    "version (http.cookiejar.cookie attribute)": [
      [
        242,
        "http.cookiejar.Cookie.version"
      ]
    ],
    "basecookie (class in http.cookies)": [
      [
        243,
        "http.cookies.BaseCookie"
      ]
    ],
    "cookieerror": [
      [
        243,
        "http.cookies.CookieError"
      ]
    ],
    "morsel (class in http.cookies)": [
      [
        243,
        "http.cookies.Morsel"
      ]
    ],
    "outputstring() (http.cookies.morsel method)": [
      [
        243,
        "http.cookies.Morsel.OutputString"
      ]
    ],
    "rfc 2068": [
      [
        243,
        "index-1"
      ]
    ],
    "simplecookie (class in http.cookies)": [
      [
        243,
        "http.cookies.SimpleCookie"
      ]
    ],
    "coded_value (http.cookies.morsel attribute)": [
      [
        243,
        "http.cookies.Morsel.coded_value"
      ]
    ],
    "comment (http.cookies.morsel attribute)": [
      [
        243,
        "http.cookies.Morsel.comment"
      ]
    ],
    "copy() (http.cookies.morsel method)": [
      [
        243,
        "http.cookies.Morsel.copy"
      ]
    ],
    "domain (http.cookies.morsel attribute)": [
      [
        243,
        "http.cookies.Morsel.domain"
      ]
    ],
    "expires (http.cookies.morsel attribute)": [
      [
        243,
        "http.cookies.Morsel.expires"
      ]
    ],
    "http.cookies": [
      [
        243,
        "module-http.cookies"
      ]
    ],
    "httponly (http.cookies.morsel attribute)": [
      [
        243,
        "http.cookies.Morsel.httponly"
      ]
    ],
    "isreservedkey() (http.cookies.morsel method)": [
      [
        243,
        "http.cookies.Morsel.isReservedKey"
      ]
    ],
    "js_output() (http.cookies.basecookie method)": [
      [
        243,
        "http.cookies.BaseCookie.js_output"
      ]
    ],
    "js_output() (http.cookies.morsel method)": [
      [
        243,
        "http.cookies.Morsel.js_output"
      ]
    ],
    "key (http.cookies.morsel attribute)": [
      [
        243,
        "http.cookies.Morsel.key"
      ]
    ],
    "load() (http.cookies.basecookie method)": [
      [
        243,
        "http.cookies.BaseCookie.load"
      ]
    ],
    "output() (http.cookies.basecookie method)": [
      [
        243,
        "http.cookies.BaseCookie.output"
      ]
    ],
    "output() (http.cookies.morsel method)": [
      [
        243,
        "http.cookies.Morsel.output"
      ]
    ],
    "path (http.cookies.morsel attribute)": [
      [
        243,
        "http.cookies.Morsel.path"
      ]
    ],
    "samesite (http.cookies.morsel attribute)": [
      [
        243,
        "http.cookies.Morsel.samesite"
      ]
    ],
    "secure (http.cookies.morsel attribute)": [
      [
        243,
        "http.cookies.Morsel.secure"
      ]
    ],
    "set() (http.cookies.morsel method)": [
      [
        243,
        "http.cookies.Morsel.set"
      ]
    ],
    "setdefault() (http.cookies.morsel method)": [
      [
        243,
        "http.cookies.Morsel.setdefault"
      ]
    ],
    "update() (http.cookies.morsel method)": [
      [
        243,
        "http.cookies.Morsel.update"
      ]
    ],
    "value (http.cookies.morsel attribute)": [
      [
        243,
        "http.cookies.Morsel.value"
      ]
    ],
    "value_decode() (http.cookies.basecookie method)": [
      [
        243,
        "http.cookies.BaseCookie.value_decode"
      ]
    ],
    "value_encode() (http.cookies.basecookie method)": [
      [
        243,
        "http.cookies.BaseCookie.value_encode"
      ]
    ],
    "version (http.cookies.morsel attribute)": [
      [
        243,
        "http.cookies.Morsel.version"
      ]
    ],
    "basehttprequesthandler (class in http.server)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler"
      ]
    ],
    "cgihttprequesthandler (class in http.server)": [
      [
        244,
        "http.server.CGIHTTPRequestHandler"
      ]
    ],
    "httpserver (class in http.server)": [
      [
        244,
        "http.server.HTTPServer"
      ]
    ],
    "messageclass (http.server.basehttprequesthandler attribute)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.MessageClass"
      ]
    ],
    "rfc 3986": [
      [
        244,
        "index-1"
      ],
      [
        393,
        "index-2"
      ],
      [
        393,
        "index-4"
      ],
      [
        393,
        "index-5"
      ],
      [
        393,
        "index-7"
      ],
      [
        393,
        "index-8"
      ],
      [
        468,
        "index-12"
      ],
      [
        468,
        "index-9"
      ],
      [
        471,
        "index-32"
      ],
      [
        477,
        "index-42"
      ],
      [
        479,
        "index-35"
      ],
      [
        480,
        "index-25"
      ],
      [
        481,
        "index-28"
      ]
    ],
    "simplehttprequesthandler (class in http.server)": [
      [
        244,
        "http.server.SimpleHTTPRequestHandler"
      ]
    ],
    "threadinghttpserver (class in http.server)": [
      [
        244,
        "http.server.ThreadingHTTPServer"
      ]
    ],
    "address_string() (http.server.basehttprequesthandler method)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.address_string"
      ]
    ],
    "cgi_directories (http.server.cgihttprequesthandler attribute)": [
      [
        244,
        "http.server.CGIHTTPRequestHandler.cgi_directories"
      ]
    ],
    "client_address (http.server.basehttprequesthandler attribute)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.client_address"
      ]
    ],
    "close_connection (http.server.basehttprequesthandler attribute)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.close_connection"
      ]
    ],
    "command (http.server.basehttprequesthandler attribute)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.command"
      ]
    ],
    "date_time_string() (http.server.basehttprequesthandler method)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.date_time_string"
      ]
    ],
    "do_get() (http.server.simplehttprequesthandler method)": [
      [
        244,
        "http.server.SimpleHTTPRequestHandler.do_GET"
      ]
    ],
    "do_head() (http.server.simplehttprequesthandler method)": [
      [
        244,
        "http.server.SimpleHTTPRequestHandler.do_HEAD"
      ]
    ],
    "do_post() (http.server.cgihttprequesthandler method)": [
      [
        244,
        "http.server.CGIHTTPRequestHandler.do_POST"
      ]
    ],
    "end_headers() (http.server.basehttprequesthandler method)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.end_headers"
      ]
    ],
    "error_content_type (http.server.basehttprequesthandler attribute)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.error_content_type"
      ]
    ],
    "error_message_format (http.server.basehttprequesthandler attribute)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.error_message_format"
      ]
    ],
    "extensions_map (http.server.simplehttprequesthandler attribute)": [
      [
        244,
        "http.server.SimpleHTTPRequestHandler.extensions_map"
      ]
    ],
    "flush_headers() (http.server.basehttprequesthandler method)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.flush_headers"
      ]
    ],
    "handle() (http.server.basehttprequesthandler method)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.handle"
      ]
    ],
    "handle_expect_100() (http.server.basehttprequesthandler method)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.handle_expect_100"
      ]
    ],
    "handle_one_request() (http.server.basehttprequesthandler method)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.handle_one_request"
      ]
    ],
    "headers (http.server.basehttprequesthandler attribute)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.headers"
      ]
    ],
    "http.server": [
      [
        244,
        "index-3"
      ],
      [
        244,
        "module-http.server"
      ]
    ],
    "httpd": [
      [
        244,
        "index-0"
      ]
    ],
    "log_date_time_string() (http.server.basehttprequesthandler method)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.log_date_time_string"
      ]
    ],
    "log_error() (http.server.basehttprequesthandler method)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.log_error"
      ]
    ],
    "log_message() (http.server.basehttprequesthandler method)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.log_message"
      ]
    ],
    "log_request() (http.server.basehttprequesthandler method)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.log_request"
      ]
    ],
    "path (http.server.basehttprequesthandler attribute)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.path"
      ]
    ],
    "protocol_version (http.server.basehttprequesthandler attribute)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.protocol_version"
      ]
    ],
    "request_version (http.server.basehttprequesthandler attribute)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.request_version"
      ]
    ],
    "requestline (http.server.basehttprequesthandler attribute)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.requestline"
      ]
    ],
    "responses (http.server.basehttprequesthandler attribute)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.responses"
      ]
    ],
    "rfile (http.server.basehttprequesthandler attribute)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.rfile"
      ]
    ],
    "send_error() (http.server.basehttprequesthandler method)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.send_error"
      ]
    ],
    "send_header() (http.server.basehttprequesthandler method)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.send_header"
      ]
    ],
    "send_response() (http.server.basehttprequesthandler method)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.send_response"
      ]
    ],
    "send_response_only() (http.server.basehttprequesthandler method)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.send_response_only"
      ]
    ],
    "server (http.server.basehttprequesthandler attribute)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.server"
      ]
    ],
    "server_version (http.server.basehttprequesthandler attribute)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.server_version"
      ]
    ],
    "server_version (http.server.simplehttprequesthandler attribute)": [
      [
        244,
        "http.server.SimpleHTTPRequestHandler.server_version"
      ]
    ],
    "sys_version (http.server.basehttprequesthandler attribute)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.sys_version"
      ]
    ],
    "version_string() (http.server.basehttprequesthandler method)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.version_string"
      ]
    ],
    "wfile (http.server.basehttprequesthandler attribute)": [
      [
        244,
        "http.server.BaseHTTPRequestHandler.wfile"
      ]
    ],
    "clear breakpoint": [
      [
        246,
        "index-4"
      ]
    ],
    "cut": [
      [
        246,
        "index-4"
      ]
    ],
    "idlestartup": [
      [
        246,
        "index-5"
      ],
      [
        482,
        "index-225"
      ],
      [
        482,
        "index-230"
      ],
      [
        482,
        "index-255"
      ]
    ],
    "integrated development environment": [
      [
        246,
        "index-0"
      ]
    ],
    "module browser": [
      [
        246,
        "index-1"
      ]
    ],
    "pep 434": [
      [
        246,
        "index-7"
      ],
      [
        468,
        "index-13"
      ]
    ],
    "pythonstartup": [
      [
        246,
        "index-6"
      ],
      [
        319,
        "index-0"
      ],
      [
        333,
        "index-5"
      ],
      [
        351,
        "index-18"
      ],
      [
        437,
        "index-1"
      ],
      [
        454,
        "envvar-PYTHONSTARTUP"
      ],
      [
        454,
        "index-5"
      ],
      [
        476,
        "index-40"
      ],
      [
        476,
        "index-41"
      ],
      [
        482,
        "index-226"
      ],
      [
        482,
        "index-231"
      ],
      [
        482,
        "index-256"
      ]
    ],
    "paste": [
      [
        246,
        "index-4"
      ]
    ],
    "path browser": [
      [
        246,
        "index-1"
      ]
    ],
    "python editor": [
      [
        246,
        "index-0"
      ]
    ],
    "run script": [
      [
        246,
        "index-2"
      ]
    ],
    "set breakpoint": [
      [
        246,
        "index-4"
      ]
    ],
    "breakpoints": [
      [
        246,
        "index-4"
      ]
    ],
    "debugger": [
      [
        246,
        "index-3"
      ],
      [
        296,
        "index-2"
      ],
      [
        351,
        "index-11"
      ],
      [
        351,
        "index-29"
      ],
      [
        364,
        "index-1"
      ]
    ],
    "idlelib": [
      [
        246,
        "module-idlelib"
      ]
    ],
    "stack viewer": [
      [
        246,
        "index-3"
      ]
    ],
    "imap4": [
      [
        247,
        "index-0"
      ]
    ],
    "imap4 (class in imaplib)": [
      [
        247,
        "imaplib.IMAP4"
      ]
    ],
    "imap4.abort": [
      [
        247,
        "imaplib.IMAP4.abort"
      ]
    ],
    "imap4.error": [
      [
        247,
        "imaplib.IMAP4.error"
      ]
    ],
    "imap4.readonly": [
      [
        247,
        "imaplib.IMAP4.readonly"
      ]
    ],
    "imap4_ssl": [
      [
        247,
        "index-0"
      ]
    ],
    "imap4_ssl (class in imaplib)": [
      [
        247,
        "imaplib.IMAP4_SSL"
      ]
    ],
    "imap4_stream": [
      [
        247,
        "index-0"
      ]
    ],
    "imap4_stream (class in imaplib)": [
      [
        247,
        "imaplib.IMAP4_stream"
      ]
    ],
    "int2ap() (in module imaplib)": [
      [
        247,
        "imaplib.Int2AP"
      ]
    ],
    "internaldate2tuple() (in module imaplib)": [
      [
        247,
        "imaplib.Internaldate2tuple"
      ]
    ],
    "protocol_version (imaplib.imap4 attribute)": [
      [
        247,
        "imaplib.IMAP4.PROTOCOL_VERSION"
      ]
    ],
    "parseflags() (in module imaplib)": [
      [
        247,
        "imaplib.ParseFlags"
      ]
    ],
    "rfc 1730": [
      [
        247,
        "index-2"
      ]
    ],
    "rfc 2060": [
      [
        247,
        "index-1"
      ],
      [
        247,
        "index-7"
      ]
    ],
    "rfc 2342": [
      [
        247,
        "index-6"
      ],
      [
        463,
        "index-19"
      ]
    ],
    "rfc 3501": [
      [
        247,
        "index-8"
      ]
    ],
    "rfc 5161": [
      [
        247,
        "index-3"
      ],
      [
        477,
        "index-33"
      ]
    ],
    "rfc 6855": [
      [
        247,
        "index-4"
      ],
      [
        247,
        "index-5"
      ],
      [
        477,
        "index-34"
      ],
      [
        477,
        "index-35"
      ]
    ],
    "time2internaldate() (in module imaplib)": [
      [
        247,
        "imaplib.Time2Internaldate"
      ]
    ],
    "append() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.append"
      ]
    ],
    "authenticate() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.authenticate"
      ]
    ],
    "check() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.check"
      ]
    ],
    "close() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.close"
      ]
    ],
    "copy() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.copy"
      ]
    ],
    "create() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.create"
      ]
    ],
    "debug (imaplib.imap4 attribute)": [
      [
        247,
        "imaplib.IMAP4.debug"
      ]
    ],
    "delete() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.delete"
      ]
    ],
    "deleteacl() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.deleteacl"
      ]
    ],
    "enable() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.enable"
      ]
    ],
    "expunge() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.expunge"
      ]
    ],
    "fetch() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.fetch"
      ]
    ],
    "getacl() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.getacl"
      ]
    ],
    "getannotation() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.getannotation"
      ]
    ],
    "getquota() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.getquota"
      ]
    ],
    "getquotaroot() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.getquotaroot"
      ]
    ],
    "imaplib": [
      [
        247,
        "module-imaplib"
      ]
    ],
    "list() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.list"
      ]
    ],
    "login() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.login"
      ]
    ],
    "login_cram_md5() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.login_cram_md5"
      ]
    ],
    "logout() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.logout"
      ]
    ],
    "lsub() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.lsub"
      ]
    ],
    "myrights() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.myrights"
      ]
    ],
    "namespace() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.namespace"
      ]
    ],
    "noop() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.noop"
      ]
    ],
    "open() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.open"
      ]
    ],
    "partial() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.partial"
      ]
    ],
    "proxyauth() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.proxyauth"
      ]
    ],
    "read() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.read"
      ]
    ],
    "readline() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.readline"
      ]
    ],
    "recent() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.recent"
      ]
    ],
    "rename() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.rename"
      ]
    ],
    "response() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.response"
      ]
    ],
    "search() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.search"
      ]
    ],
    "select() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.select"
      ]
    ],
    "send() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.send"
      ]
    ],
    "setacl() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.setacl"
      ]
    ],
    "setannotation() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.setannotation"
      ]
    ],
    "setquota() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.setquota"
      ]
    ],
    "shutdown() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.shutdown"
      ]
    ],
    "socket() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.socket"
      ]
    ],
    "sort() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.sort"
      ]
    ],
    "starttls() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.starttls"
      ]
    ],
    "status() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.status"
      ]
    ],
    "store() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.store"
      ]
    ],
    "subscribe() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.subscribe"
      ]
    ],
    "thread() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.thread"
      ]
    ],
    "uid() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.uid"
      ]
    ],
    "unselect() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.unselect"
      ]
    ],
    "unsubscribe() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.unsubscribe"
      ]
    ],
    "utf8_enabled (imaplib.imap4 attribute)": [
      [
        247,
        "imaplib.IMAP4.utf8_enabled"
      ]
    ],
    "xatom() (imaplib.imap4 method)": [
      [
        247,
        "imaplib.IMAP4.xatom"
      ]
    ],
    "pep 594#imghdr": [
      [
        248,
        "index-0"
      ]
    ],
    "imghdr": [
      [
        248,
        "module-imghdr"
      ]
    ],
    "tests (in module imghdr)": [
      [
        248,
        "imghdr.tests"
      ]
    ],
    "what() (in module imghdr)": [
      [
        248,
        "imghdr.what"
      ]
    ],
    "bytecode_suffixes (in module importlib.machinery)": [
      [
        249,
        "importlib.machinery.BYTECODE_SUFFIXES"
      ]
    ],
    "builtinimporter (class in importlib.machinery)": [
      [
        249,
        "importlib.machinery.BuiltinImporter"
      ]
    ],
    "debug_bytecode_suffixes (in module importlib.machinery)": [
      [
        249,
        "importlib.machinery.DEBUG_BYTECODE_SUFFIXES"
      ]
    ],
    "extension_suffixes (in module importlib.machinery)": [
      [
        249,
        "importlib.machinery.EXTENSION_SUFFIXES"
      ]
    ],
    "executionloader (class in importlib.abc)": [
      [
        249,
        "importlib.abc.ExecutionLoader"
      ]
    ],
    "extensionfileloader (class in importlib.machinery)": [
      [
        249,
        "importlib.machinery.ExtensionFileLoader"
      ]
    ],
    "filefinder (class in importlib.machinery)": [
      [
        249,
        "importlib.machinery.FileFinder"
      ]
    ],
    "fileloader (class in importlib.abc)": [
      [
        249,
        "importlib.abc.FileLoader"
      ]
    ],
    "frozenimporter (class in importlib.machinery)": [
      [
        249,
        "importlib.machinery.FrozenImporter"
      ]
    ],
    "inspectloader (class in importlib.abc)": [
      [
        249,
        "importlib.abc.InspectLoader"
      ]
    ],
    "lazyloader (class in importlib.util)": [
      [
        249,
        "importlib.util.LazyLoader"
      ]
    ],
    "loader (class in importlib.abc)": [
      [
        249,
        "importlib.abc.Loader"
      ]
    ],
    "magic_number (in module importlib.util)": [
      [
        249,
        "importlib.util.MAGIC_NUMBER"
      ]
    ],
    "metapathfinder (class in importlib.abc)": [
      [
        249,
        "importlib.abc.MetaPathFinder"
      ]
    ],
    "modulespec (class in importlib.machinery)": [
      [
        249,
        "importlib.machinery.ModuleSpec"
      ]
    ],
    "namespaceloader (class in importlib.machinery)": [
      [
        249,
        "importlib.machinery.NamespaceLoader"
      ]
    ],
    "optimized_bytecode_suffixes (in module importlib.machinery)": [
      [
        249,
        "importlib.machinery.OPTIMIZED_BYTECODE_SUFFIXES"
      ]
    ],
    "pep 235": [
      [
        249,
        "index-0"
      ]
    ],
    "pep 3120": [
      [
        249,
        "index-10"
      ],
      [
        434,
        "index-1"
      ],
      [
        469,
        "index-4"
      ]
    ],
    "pep 366": [
      [
        249,
        "index-4"
      ],
      [
        323,
        "index-7"
      ],
      [
        431,
        "index-11"
      ],
      [
        431,
        "index-12"
      ],
      [
        431,
        "index-23"
      ],
      [
        431,
        "index-25"
      ],
      [
        475,
        "index-22"
      ]
    ],
    "pep 488": [
      [
        249,
        "index-22"
      ],
      [
        249,
        "index-25"
      ],
      [
        249,
        "index-7"
      ],
      [
        310,
        "index-2"
      ],
      [
        361,
        "index-4"
      ],
      [
        454,
        "index-10"
      ],
      [
        454,
        "index-11"
      ],
      [
        454,
        "index-7"
      ],
      [
        454,
        "index-9"
      ],
      [
        477,
        "index-24"
      ],
      [
        477,
        "index-25"
      ],
      [
        477,
        "index-50"
      ],
      [
        482,
        "index-298"
      ]
    ],
    "pathentryfinder (class in importlib.abc)": [
      [
        249,
        "importlib.abc.PathEntryFinder"
      ]
    ],
    "pathfinder (class in importlib.machinery)": [
      [
        249,
        "importlib.machinery.PathFinder"
      ]
    ],
    "resourceloader (class in importlib.abc)": [
      [
        249,
        "importlib.abc.ResourceLoader"
      ]
    ],
    "resourcereader (class in importlib.abc)": [
      [
        249,
        "importlib.abc.ResourceReader"
      ]
    ],
    "source_suffixes (in module importlib.machinery)": [
      [
        249,
        "importlib.machinery.SOURCE_SUFFIXES"
      ]
    ],
    "sourcefileloader (class in importlib.machinery)": [
      [
        249,
        "importlib.machinery.SourceFileLoader"
      ]
    ],
    "sourceloader (class in importlib.abc)": [
      [
        249,
        "importlib.abc.SourceLoader"
      ]
    ],
    "sourcelessfileloader (class in importlib.machinery)": [
      [
        249,
        "importlib.machinery.SourcelessFileLoader"
      ]
    ],
    "traversable (class in importlib.abc)": [
      [
        249,
        "importlib.abc.Traversable"
      ]
    ],
    "traversableresources (class in importlib.abc)": [
      [
        249,
        "importlib.abc.TraversableResources"
      ]
    ],
    "windowsregistryfinder (class in importlib.machinery)": [
      [
        249,
        "importlib.machinery.WindowsRegistryFinder"
      ]
    ],
    "__import__() (in module importlib)": [
      [
        249,
        "importlib.__import__"
      ]
    ],
    "__truediv__() (importlib.abc.traversable method)": [
      [
        249,
        "importlib.abc.Traversable.__truediv__"
      ]
    ],
    "_incompatible_extension_module_restrictions() (in module importlib.util)": [
      [
        249,
        "importlib.util._incompatible_extension_module_restrictions"
      ]
    ],
    "all_suffixes() (in module importlib.machinery)": [
      [
        249,
        "importlib.machinery.all_suffixes"
      ]
    ],
    "cache_from_source() (in module importlib.util)": [
      [
        249,
        "importlib.util.cache_from_source"
      ]
    ],
    "cached (importlib.machinery.modulespec attribute)": [
      [
        249,
        "importlib.machinery.ModuleSpec.cached"
      ]
    ],
    "contents() (importlib.abc.resourcereader method)": [
      [
        249,
        "importlib.abc.ResourceReader.contents"
      ]
    ],
    "create_module() (importlib.abc.loader method)": [
      [
        249,
        "importlib.abc.Loader.create_module"
      ]
    ],
    "create_module() (importlib.machinery.extensionfileloader method)": [
      [
        249,
        "importlib.machinery.ExtensionFileLoader.create_module"
      ]
    ],
    "decode_source() (in module importlib.util)": [
      [
        249,
        "importlib.util.decode_source"
      ]
    ],
    "exec_module() (importlib.abc.inspectloader method)": [
      [
        249,
        "importlib.abc.InspectLoader.exec_module"
      ]
    ],
    "exec_module() (importlib.abc.loader method)": [
      [
        249,
        "importlib.abc.Loader.exec_module"
      ]
    ],
    "exec_module() (importlib.abc.sourceloader method)": [
      [
        249,
        "importlib.abc.SourceLoader.exec_module"
      ]
    ],
    "exec_module() (importlib.machinery.extensionfileloader method)": [
      [
        249,
        "importlib.machinery.ExtensionFileLoader.exec_module"
      ]
    ],
    "factory() (importlib.util.lazyloader class method)": [
      [
        249,
        "importlib.util.LazyLoader.factory"
      ]
    ],
    "files() (importlib.abc.traversableresources method)": [
      [
        249,
        "importlib.abc.TraversableResources.files"
      ]
    ],
    "find_spec() (importlib.abc.metapathfinder method)": [
      [
        249,
        "importlib.abc.MetaPathFinder.find_spec"
      ]
    ],
    "find_spec() (importlib.abc.pathentryfinder method)": [
      [
        249,
        "importlib.abc.PathEntryFinder.find_spec"
      ]
    ],
    "find_spec() (importlib.machinery.filefinder method)": [
      [
        249,
        "importlib.machinery.FileFinder.find_spec"
      ]
    ],
    "find_spec() (importlib.machinery.pathfinder class method)": [
      [
        249,
        "importlib.machinery.PathFinder.find_spec"
      ]
    ],
    "find_spec() (in module importlib.util)": [
      [
        249,
        "importlib.util.find_spec"
      ]
    ],
    "get_code() (importlib.abc.inspectloader method)": [
      [
        249,
        "importlib.abc.InspectLoader.get_code"
      ]
    ],
    "get_code() (importlib.abc.sourceloader method)": [
      [
        249,
        "importlib.abc.SourceLoader.get_code"
      ]
    ],
    "get_code() (importlib.machinery.extensionfileloader method)": [
      [
        249,
        "importlib.machinery.ExtensionFileLoader.get_code"
      ]
    ],
    "get_code() (importlib.machinery.sourcelessfileloader method)": [
      [
        249,
        "importlib.machinery.SourcelessFileLoader.get_code"
      ]
    ],
    "get_data() (importlib.abc.fileloader method)": [
      [
        249,
        "importlib.abc.FileLoader.get_data"
      ]
    ],
    "get_data() (importlib.abc.resourceloader method)": [
      [
        249,
        "importlib.abc.ResourceLoader.get_data"
      ]
    ],
    "get_filename() (importlib.abc.executionloader method)": [
      [
        249,
        "importlib.abc.ExecutionLoader.get_filename"
      ]
    ],
    "get_filename() (importlib.abc.fileloader method)": [
      [
        249,
        "importlib.abc.FileLoader.get_filename"
      ]
    ],
    "get_filename() (importlib.machinery.extensionfileloader method)": [
      [
        249,
        "importlib.machinery.ExtensionFileLoader.get_filename"
      ]
    ],
    "get_source() (importlib.abc.inspectloader method)": [
      [
        249,
        "importlib.abc.InspectLoader.get_source"
      ]
    ],
    "get_source() (importlib.abc.sourceloader method)": [
      [
        249,
        "importlib.abc.SourceLoader.get_source"
      ]
    ],
    "get_source() (importlib.machinery.extensionfileloader method)": [
      [
        249,
        "importlib.machinery.ExtensionFileLoader.get_source"
      ]
    ],
    "get_source() (importlib.machinery.sourcelessfileloader method)": [
      [
        249,
        "importlib.machinery.SourcelessFileLoader.get_source"
      ]
    ],
    "has_location (importlib.machinery.modulespec attribute)": [
      [
        249,
        "importlib.machinery.ModuleSpec.has_location"
      ]
    ],
    "import_module() (in module importlib)": [
      [
        249,
        "importlib.import_module"
      ]
    ],
    "importlib": [
      [
        249,
        "module-importlib"
      ]
    ],
    "importlib.abc": [
      [
        249,
        "module-importlib.abc"
      ]
    ],
    "importlib.abc.inspectloader.get_source method": [
      [
        249,
        "index-15"
      ]
    ],
    "importlib.machinery": [
      [
        249,
        "module-importlib.machinery"
      ]
    ],
    "importlib.util": [
      [
        249,
        "module-importlib.util"
      ]
    ],
    "invalidate_caches() (importlib.abc.metapathfinder method)": [
      [
        249,
        "importlib.abc.MetaPathFinder.invalidate_caches"
      ]
    ],
    "invalidate_caches() (importlib.abc.pathentryfinder method)": [
      [
        249,
        "importlib.abc.PathEntryFinder.invalidate_caches"
      ]
    ],
    "invalidate_caches() (importlib.machinery.filefinder method)": [
      [
        249,
        "importlib.machinery.FileFinder.invalidate_caches"
      ]
    ],
    "invalidate_caches() (importlib.machinery.pathfinder class method)": [
      [
        249,
        "importlib.machinery.PathFinder.invalidate_caches"
      ]
    ],
    "invalidate_caches() (in module importlib)": [
      [
        249,
        "importlib.invalidate_caches"
      ]
    ],
    "is_dir() (importlib.abc.traversable method)": [
      [
        249,
        "importlib.abc.Traversable.is_dir"
      ]
    ],
    "is_file() (importlib.abc.traversable method)": [
      [
        249,
        "importlib.abc.Traversable.is_file"
      ]
    ],
    "is_package() (importlib.abc.inspectloader method)": [
      [
        249,
        "importlib.abc.InspectLoader.is_package"
      ]
    ],
    "is_package() (importlib.abc.sourceloader method)": [
      [
        249,
        "importlib.abc.SourceLoader.is_package"
      ]
    ],
    "is_package() (importlib.machinery.extensionfileloader method)": [
      [
        249,
        "importlib.machinery.ExtensionFileLoader.is_package"
      ]
    ],
    "is_package() (importlib.machinery.sourcefileloader method)": [
      [
        249,
        "importlib.machinery.SourceFileLoader.is_package"
      ]
    ],
    "is_package() (importlib.machinery.sourcelessfileloader method)": [
      [
        249,
        "importlib.machinery.SourcelessFileLoader.is_package"
      ]
    ],
    "is_resource() (importlib.abc.resourcereader method)": [
      [
        249,
        "importlib.abc.ResourceReader.is_resource"
      ]
    ],
    "iterdir() (importlib.abc.traversable method)": [
      [
        249,
        "importlib.abc.Traversable.iterdir"
      ]
    ],
    "joinpath() (importlib.abc.traversable method)": [
      [
        249,
        "importlib.abc.Traversable.joinpath"
      ]
    ],
    "load_module() (importlib.abc.fileloader method)": [
      [
        249,
        "importlib.abc.FileLoader.load_module"
      ]
    ],
    "load_module() (importlib.abc.inspectloader method)": [
      [
        249,
        "importlib.abc.InspectLoader.load_module"
      ]
    ],
    "load_module() (importlib.abc.loader method)": [
      [
        249,
        "importlib.abc.Loader.load_module"
      ]
    ],
    "load_module() (importlib.abc.sourceloader method)": [
      [
        249,
        "importlib.abc.SourceLoader.load_module"
      ]
    ],
    "load_module() (importlib.machinery.sourcefileloader method)": [
      [
        249,
        "importlib.machinery.SourceFileLoader.load_module"
      ]
    ],
    "load_module() (importlib.machinery.sourcelessfileloader method)": [
      [
        249,
        "importlib.machinery.SourcelessFileLoader.load_module"
      ]
    ],
    "loader (importlib.machinery.modulespec attribute)": [
      [
        249,
        "importlib.machinery.ModuleSpec.loader"
      ]
    ],
    "loader_state (importlib.machinery.modulespec attribute)": [
      [
        249,
        "importlib.machinery.ModuleSpec.loader_state"
      ]
    ],
    "module_from_spec() (in module importlib.util)": [
      [
        249,
        "importlib.util.module_from_spec"
      ]
    ],
    "name (importlib.abc.fileloader attribute)": [
      [
        249,
        "importlib.abc.FileLoader.name"
      ]
    ],
    "name (importlib.abc.traversable attribute)": [
      [
        249,
        "importlib.abc.Traversable.name"
      ]
    ],
    "name (importlib.machinery.extensionfileloader attribute)": [
      [
        249,
        "importlib.machinery.ExtensionFileLoader.name"
      ]
    ],
    "name (importlib.machinery.modulespec attribute)": [
      [
        249,
        "importlib.machinery.ModuleSpec.name"
      ]
    ],
    "name (importlib.machinery.sourcefileloader attribute)": [
      [
        249,
        "importlib.machinery.SourceFileLoader.name"
      ]
    ],
    "name (importlib.machinery.sourcelessfileloader attribute)": [
      [
        249,
        "importlib.machinery.SourcelessFileLoader.name"
      ]
    ],
    "open() (importlib.abc.traversable method)": [
      [
        249,
        "importlib.abc.Traversable.open"
      ]
    ],
    "open_resource() (importlib.abc.resourcereader method)": [
      [
        249,
        "importlib.abc.ResourceReader.open_resource"
      ]
    ],
    "origin (importlib.machinery.modulespec attribute)": [
      [
        249,
        "importlib.machinery.ModuleSpec.origin"
      ]
    ],
    "parent (importlib.machinery.modulespec attribute)": [
      [
        249,
        "importlib.machinery.ModuleSpec.parent"
      ]
    ],
    "path (importlib.abc.fileloader attribute)": [
      [
        249,
        "importlib.abc.FileLoader.path"
      ]
    ],
    "path (importlib.machinery.extensionfileloader attribute)": [
      [
        249,
        "importlib.machinery.ExtensionFileLoader.path"
      ]
    ],
    "path (importlib.machinery.filefinder attribute)": [
      [
        249,
        "importlib.machinery.FileFinder.path"
      ]
    ],
    "path (importlib.machinery.sourcefileloader attribute)": [
      [
        249,
        "importlib.machinery.SourceFileLoader.path"
      ]
    ],
    "path (importlib.machinery.sourcelessfileloader attribute)": [
      [
        249,
        "importlib.machinery.SourcelessFileLoader.path"
      ]
    ],
    "path_hook() (importlib.machinery.filefinder class method)": [
      [
        249,
        "importlib.machinery.FileFinder.path_hook"
      ]
    ],
    "path_mtime() (importlib.abc.sourceloader method)": [
      [
        249,
        "importlib.abc.SourceLoader.path_mtime"
      ]
    ],
    "path_stats() (importlib.abc.sourceloader method)": [
      [
        249,
        "importlib.abc.SourceLoader.path_stats"
      ]
    ],
    "path_stats() (importlib.machinery.sourcefileloader method)": [
      [
        249,
        "importlib.machinery.SourceFileLoader.path_stats"
      ]
    ],
    "read_bytes() (importlib.abc.traversable method)": [
      [
        249,
        "importlib.abc.Traversable.read_bytes"
      ]
    ],
    "read_text() (importlib.abc.traversable method)": [
      [
        249,
        "importlib.abc.Traversable.read_text"
      ]
    ],
    "reload() (in module importlib)": [
      [
        249,
        "importlib.reload"
      ]
    ],
    "resolve_name() (in module importlib.util)": [
      [
        249,
        "importlib.util.resolve_name"
      ]
    ],
    "resource_path() (importlib.abc.resourcereader method)": [
      [
        249,
        "importlib.abc.ResourceReader.resource_path"
      ]
    ],
    "set_data() (importlib.abc.sourceloader method)": [
      [
        249,
        "importlib.abc.SourceLoader.set_data"
      ]
    ],
    "set_data() (importlib.machinery.sourcefileloader method)": [
      [
        249,
        "importlib.machinery.SourceFileLoader.set_data"
      ]
    ],
    "source_from_cache() (in module importlib.util)": [
      [
        249,
        "importlib.util.source_from_cache"
      ]
    ],
    "source_hash() (in module importlib.util)": [
      [
        249,
        "importlib.util.source_hash"
      ]
    ],
    "source_to_code() (importlib.abc.inspectloader static method)": [
      [
        249,
        "importlib.abc.InspectLoader.source_to_code"
      ]
    ],
    "spec_from_file_location() (in module importlib.util)": [
      [
        249,
        "importlib.util.spec_from_file_location"
      ]
    ],
    "spec_from_loader() (in module importlib.util)": [
      [
        249,
        "importlib.util.spec_from_loader"
      ]
    ],
    "submodule_search_locations (importlib.machinery.modulespec attribute)": [
      [
        249,
        "importlib.machinery.ModuleSpec.submodule_search_locations"
      ]
    ],
    "pep 566": [
      [
        250,
        "index-0"
      ]
    ],
    "importlib.metadata": [
      [
        250,
        "module-importlib.metadata"
      ]
    ],
    "anchor (class in importlib.resources)": [
      [
        251,
        "importlib.resources.Anchor"
      ]
    ],
    "package (in module importlib.resources)": [
      [
        251,
        "importlib.resources.Package"
      ]
    ],
    "resource (in module importlib.resources)": [
      [
        251,
        "importlib.resources.Resource"
      ]
    ],
    "as_file() (in module importlib.resources)": [
      [
        251,
        "importlib.resources.as_file"
      ]
    ],
    "contents() (in module importlib.resources)": [
      [
        251,
        "importlib.resources.contents"
      ]
    ],
    "files() (in module importlib.resources)": [
      [
        251,
        "importlib.resources.files"
      ]
    ],
    "importlib.resources": [
      [
        251,
        "module-importlib.resources"
      ]
    ],
    "is_resource() (in module importlib.resources)": [
      [
        251,
        "importlib.resources.is_resource"
      ]
    ],
    "open_binary() (in module importlib.resources)": [
      [
        251,
        "importlib.resources.open_binary"
      ]
    ],
    "open_text() (in module importlib.resources)": [
      [
        251,
        "importlib.resources.open_text"
      ]
    ],
    "path() (in module importlib.resources)": [
      [
        251,
        "importlib.resources.path"
      ]
    ],
    "read_binary() (in module importlib.resources)": [
      [
        251,
        "importlib.resources.read_binary"
      ]
    ],
    "read_text() (in module importlib.resources)": [
      [
        251,
        "importlib.resources.read_text"
      ]
    ],
    "resourcereader (class in importlib.resources.abc)": [
      [
        252,
        "importlib.resources.abc.ResourceReader"
      ]
    ],
    "traversable (class in importlib.resources.abc)": [
      [
        252,
        "importlib.resources.abc.Traversable"
      ]
    ],
    "traversableresources (class in importlib.resources.abc)": [
      [
        252,
        "importlib.resources.abc.TraversableResources"
      ]
    ],
    "__truediv__() (importlib.resources.abc.traversable method)": [
      [
        252,
        "importlib.resources.abc.Traversable.__truediv__"
      ]
    ],
    "contents() (importlib.resources.abc.resourcereader method)": [
      [
        252,
        "importlib.resources.abc.ResourceReader.contents"
      ]
    ],
    "files() (importlib.resources.abc.traversableresources method)": [
      [
        252,
        "importlib.resources.abc.TraversableResources.files"
      ]
    ],
    "importlib.resources.abc": [
      [
        252,
        "module-importlib.resources.abc"
      ]
    ],
    "is_dir() (importlib.resources.abc.traversable method)": [
      [
        252,
        "importlib.resources.abc.Traversable.is_dir"
      ]
    ],
    "is_file() (importlib.resources.abc.traversable method)": [
      [
        252,
        "importlib.resources.abc.Traversable.is_file"
      ]
    ],
    "is_resource() (importlib.resources.abc.resourcereader method)": [
      [
        252,
        "importlib.resources.abc.ResourceReader.is_resource"
      ]
    ],
    "iterdir() (importlib.resources.abc.traversable method)": [
      [
        252,
        "importlib.resources.abc.Traversable.iterdir"
      ]
    ],
    "joinpath() (importlib.resources.abc.traversable method)": [
      [
        252,
        "importlib.resources.abc.Traversable.joinpath"
      ]
    ],
    "name (importlib.resources.abc.traversable attribute)": [
      [
        252,
        "importlib.resources.abc.Traversable.name"
      ]
    ],
    "open() (importlib.resources.abc.traversable method)": [
      [
        252,
        "importlib.resources.abc.Traversable.open"
      ]
    ],
    "open_resource() (importlib.resources.abc.resourcereader method)": [
      [
        252,
        "importlib.resources.abc.ResourceReader.open_resource"
      ]
    ],
    "read_bytes() (importlib.resources.abc.traversable method)": [
      [
        252,
        "importlib.resources.abc.Traversable.read_bytes"
      ]
    ],
    "read_text() (importlib.resources.abc.traversable method)": [
      [
        252,
        "importlib.resources.abc.Traversable.read_text"
      ]
    ],
    "resource_path() (importlib.resources.abc.resourcereader method)": [
      [
        252,
        "importlib.resources.abc.ResourceReader.resource_path"
      ]
    ],
    "--details": [
      [
        254,
        "cmdoption-inspect-details"
      ]
    ],
    "any_contiguous (inspect.bufferflags attribute)": [
      [
        254,
        "inspect.BufferFlags.ANY_CONTIGUOUS"
      ]
    ],
    "boundarguments (class in inspect)": [
      [
        254,
        "inspect.BoundArguments"
      ]
    ],
    "bufferflags (class in inspect)": [
      [
        254,
        "inspect.BufferFlags"
      ]
    ],
    "contig (inspect.bufferflags attribute)": [
      [
        254,
        "inspect.BufferFlags.CONTIG"
      ]
    ],
    "contig_ro (inspect.bufferflags attribute)": [
      [
        254,
        "inspect.BufferFlags.CONTIG_RO"
      ]
    ],
    "co_async_generator (in module inspect)": [
      [
        254,
        "inspect.CO_ASYNC_GENERATOR"
      ]
    ],
    "co_coroutine (in module inspect)": [
      [
        254,
        "inspect.CO_COROUTINE"
      ]
    ],
    "co_generator (in module inspect)": [
      [
        254,
        "inspect.CO_GENERATOR"
      ]
    ],
    "co_iterable_coroutine (in module inspect)": [
      [
        254,
        "inspect.CO_ITERABLE_COROUTINE"
      ]
    ],
    "co_nested (in module inspect)": [
      [
        254,
        "inspect.CO_NESTED"
      ]
    ],
    "co_newlocals (in module inspect)": [
      [
        254,
        "inspect.CO_NEWLOCALS"
      ]
    ],
    "co_optimized (in module inspect)": [
      [
        254,
        "inspect.CO_OPTIMIZED"
      ]
    ],
    "co_varargs (in module inspect)": [
      [
        254,
        "inspect.CO_VARARGS"
      ]
    ],
    "co_varkeywords (in module inspect)": [
      [
        254,
        "inspect.CO_VARKEYWORDS"
      ]
    ],
    "c_contiguous (inspect.bufferflags attribute)": [
      [
        254,
        "inspect.BufferFlags.C_CONTIGUOUS"
      ]
    ],
    "format (inspect.bufferflags attribute)": [
      [
        254,
        "inspect.BufferFlags.FORMAT"
      ]
    ],
    "full (inspect.bufferflags attribute)": [
      [
        254,
        "inspect.BufferFlags.FULL"
      ]
    ],
    "full_ro (inspect.bufferflags attribute)": [
      [
        254,
        "inspect.BufferFlags.FULL_RO"
      ]
    ],
    "f_contiguous (inspect.bufferflags attribute)": [
      [
        254,
        "inspect.BufferFlags.F_CONTIGUOUS"
      ]
    ],
    "frameinfo (class in inspect)": [
      [
        254,
        "inspect.FrameInfo"
      ]
    ],
    "indirect (inspect.bufferflags attribute)": [
      [
        254,
        "inspect.BufferFlags.INDIRECT"
      ]
    ],
    "nd (inspect.bufferflags attribute)": [
      [
        254,
        "inspect.BufferFlags.ND"
      ]
    ],
    "parameter (class in inspect)": [
      [
        254,
        "inspect.Parameter"
      ]
    ],
    "read (inspect.bufferflags attribute)": [
      [
        254,
        "inspect.BufferFlags.READ"
      ]
    ],
    "records (inspect.bufferflags attribute)": [
      [
        254,
        "inspect.BufferFlags.RECORDS"
      ]
    ],
    "records_ro (inspect.bufferflags attribute)": [
      [
        254,
        "inspect.BufferFlags.RECORDS_RO"
      ]
    ],
    "simple (inspect.bufferflags attribute)": [
      [
        254,
        "inspect.BufferFlags.SIMPLE"
      ]
    ],
    "strided (inspect.bufferflags attribute)": [
      [
        254,
        "inspect.BufferFlags.STRIDED"
      ]
    ],
    "strided_ro (inspect.bufferflags attribute)": [
      [
        254,
        "inspect.BufferFlags.STRIDED_RO"
      ]
    ],
    "strides (inspect.bufferflags attribute)": [
      [
        254,
        "inspect.BufferFlags.STRIDES"
      ]
    ],
    "signature (class in inspect)": [
      [
        254,
        "inspect.Signature"
      ]
    ],
    "traceback (class in inspect)": [
      [
        254,
        "inspect.Traceback"
      ]
    ],
    "writable (inspect.bufferflags attribute)": [
      [
        254,
        "inspect.BufferFlags.WRITABLE"
      ]
    ],
    "write (inspect.bufferflags attribute)": [
      [
        254,
        "inspect.BufferFlags.WRITE"
      ]
    ],
    "annotation (inspect.parameter attribute)": [
      [
        254,
        "inspect.Parameter.annotation"
      ]
    ],
    "apply_defaults() (inspect.boundarguments method)": [
      [
        254,
        "inspect.BoundArguments.apply_defaults"
      ]
    ],
    "args (inspect.boundarguments attribute)": [
      [
        254,
        "inspect.BoundArguments.args"
      ]
    ],
    "arguments (inspect.boundarguments attribute)": [
      [
        254,
        "inspect.BoundArguments.arguments"
      ]
    ],
    "bind() (inspect.signature method)": [
      [
        254,
        "inspect.Signature.bind"
      ]
    ],
    "bind_partial() (inspect.signature method)": [
      [
        254,
        "inspect.Signature.bind_partial"
      ]
    ],
    "cleandoc() (in module inspect)": [
      [
        254,
        "inspect.cleandoc"
      ]
    ],
    "code_context (inspect.frameinfo attribute)": [
      [
        254,
        "inspect.FrameInfo.code_context"
      ]
    ],
    "code_context (inspect.traceback attribute)": [
      [
        254,
        "inspect.Traceback.code_context"
      ]
    ],
    "currentframe() (in module inspect)": [
      [
        254,
        "inspect.currentframe"
      ]
    ],
    "default (inspect.parameter attribute)": [
      [
        254,
        "inspect.Parameter.default"
      ]
    ],
    "description (inspect.parameter.kind attribute)": [
      [
        254,
        "inspect.Parameter.kind.description"
      ]
    ],
    "empty (inspect.parameter attribute)": [
      [
        254,
        "inspect.Parameter.empty"
      ]
    ],
    "empty (inspect.signature attribute)": [
      [
        254,
        "inspect.Signature.empty"
      ]
    ],
    "filename (inspect.frameinfo attribute)": [
      [
        254,
        "inspect.FrameInfo.filename"
      ]
    ],
    "filename (inspect.traceback attribute)": [
      [
        254,
        "inspect.Traceback.filename"
      ]
    ],
    "formatargvalues() (in module inspect)": [
      [
        254,
        "inspect.formatargvalues"
      ]
    ],
    "frame (inspect.frameinfo attribute)": [
      [
        254,
        "inspect.FrameInfo.frame"
      ]
    ],
    "from_callable() (inspect.signature class method)": [
      [
        254,
        "inspect.Signature.from_callable"
      ]
    ],
    "function (inspect.frameinfo attribute)": [
      [
        254,
        "inspect.FrameInfo.function"
      ]
    ],
    "function (inspect.traceback attribute)": [
      [
        254,
        "inspect.Traceback.function"
      ]
    ],
    "get_annotations() (in module inspect)": [
      [
        254,
        "inspect.get_annotations"
      ]
    ],
    "getargvalues() (in module inspect)": [
      [
        254,
        "inspect.getargvalues"
      ]
    ],
    "getasyncgenlocals() (in module inspect)": [
      [
        254,
        "inspect.getasyncgenlocals"
      ]
    ],
    "getasyncgenstate() (in module inspect)": [
      [
        254,
        "inspect.getasyncgenstate"
      ]
    ],
    "getattr_static() (in module inspect)": [
      [
        254,
        "inspect.getattr_static"
      ]
    ],
    "getcallargs() (in module inspect)": [
      [
        254,
        "inspect.getcallargs"
      ]
    ],
    "getclasstree() (in module inspect)": [
      [
        254,
        "inspect.getclasstree"
      ]
    ],
    "getclosurevars() (in module inspect)": [
      [
        254,
        "inspect.getclosurevars"
      ]
    ],
    "getcomments() (in module inspect)": [
      [
        254,
        "inspect.getcomments"
      ]
    ],
    "getcoroutinelocals() (in module inspect)": [
      [
        254,
        "inspect.getcoroutinelocals"
      ]
    ],
    "getcoroutinestate() (in module inspect)": [
      [
        254,
        "inspect.getcoroutinestate"
      ]
    ],
    "getdoc() (in module inspect)": [
      [
        254,
        "inspect.getdoc"
      ]
    ],
    "getfile() (in module inspect)": [
      [
        254,
        "inspect.getfile"
      ]
    ],
    "getframeinfo() (in module inspect)": [
      [
        254,
        "inspect.getframeinfo"
      ]
    ],
    "getfullargspec() (in module inspect)": [
      [
        254,
        "inspect.getfullargspec"
      ]
    ],
    "getgeneratorlocals() (in module inspect)": [
      [
        254,
        "inspect.getgeneratorlocals"
      ]
    ],
    "getgeneratorstate() (in module inspect)": [
      [
        254,
        "inspect.getgeneratorstate"
      ]
    ],
    "getinnerframes() (in module inspect)": [
      [
        254,
        "inspect.getinnerframes"
      ]
    ],
    "getmembers() (in module inspect)": [
      [
        254,
        "inspect.getmembers"
      ]
    ],
    "getmembers_static() (in module inspect)": [
      [
        254,
        "inspect.getmembers_static"
      ]
    ],
    "getmodule() (in module inspect)": [
      [
        254,
        "inspect.getmodule"
      ]
    ],
    "getmodulename() (in module inspect)": [
      [
        254,
        "inspect.getmodulename"
      ]
    ],
    "getmro() (in module inspect)": [
      [
        254,
        "inspect.getmro"
      ]
    ],
    "getouterframes() (in module inspect)": [
      [
        254,
        "inspect.getouterframes"
      ]
    ],
    "getsource() (in module inspect)": [
      [
        254,
        "inspect.getsource"
      ]
    ],
    "getsourcefile() (in module inspect)": [
      [
        254,
        "inspect.getsourcefile"
      ]
    ],
    "getsourcelines() (in module inspect)": [
      [
        254,
        "inspect.getsourcelines"
      ]
    ],
    "index (inspect.frameinfo attribute)": [
      [
        254,
        "inspect.FrameInfo.index"
      ]
    ],
    "index (inspect.traceback attribute)": [
      [
        254,
        "inspect.Traceback.index"
      ]
    ],
    "inspect": [
      [
        254,
        "module-inspect"
      ]
    ],
    "inspect command line option": [
      [
        254,
        "cmdoption-inspect-details"
      ]
    ],
    "isabstract() (in module inspect)": [
      [
        254,
        "inspect.isabstract"
      ]
    ],
    "isasyncgen() (in module inspect)": [
      [
        254,
        "inspect.isasyncgen"
      ]
    ],
    "isasyncgenfunction() (in module inspect)": [
      [
        254,
        "inspect.isasyncgenfunction"
      ]
    ],
    "isawaitable() (in module inspect)": [
      [
        254,
        "inspect.isawaitable"
      ]
    ],
    "isbuiltin() (in module inspect)": [
      [
        254,
        "inspect.isbuiltin"
      ]
    ],
    "isclass() (in module inspect)": [
      [
        254,
        "inspect.isclass"
      ]
    ],
    "iscode() (in module inspect)": [
      [
        254,
        "inspect.iscode"
      ]
    ],
    "iscoroutine() (in module inspect)": [
      [
        254,
        "inspect.iscoroutine"
      ]
    ],
    "iscoroutinefunction() (in module inspect)": [
      [
        254,
        "inspect.iscoroutinefunction"
      ]
    ],
    "isdatadescriptor() (in module inspect)": [
      [
        254,
        "inspect.isdatadescriptor"
      ]
    ],
    "isframe() (in module inspect)": [
      [
        254,
        "inspect.isframe"
      ]
    ],
    "isfunction() (in module inspect)": [
      [
        254,
        "inspect.isfunction"
      ]
    ],
    "isgenerator() (in module inspect)": [
      [
        254,
        "inspect.isgenerator"
      ]
    ],
    "isgeneratorfunction() (in module inspect)": [
      [
        254,
        "inspect.isgeneratorfunction"
      ]
    ],
    "isgetsetdescriptor() (in module inspect)": [
      [
        254,
        "inspect.isgetsetdescriptor"
      ]
    ],
    "ismemberdescriptor() (in module inspect)": [
      [
        254,
        "inspect.ismemberdescriptor"
      ]
    ],
    "ismethod() (in module inspect)": [
      [
        254,
        "inspect.ismethod"
      ]
    ],
    "ismethoddescriptor() (in module inspect)": [
      [
        254,
        "inspect.ismethoddescriptor"
      ]
    ],
    "ismethodwrapper() (in module inspect)": [
      [
        254,
        "inspect.ismethodwrapper"
      ]
    ],
    "ismodule() (in module inspect)": [
      [
        254,
        "inspect.ismodule"
      ]
    ],
    "isroutine() (in module inspect)": [
      [
        254,
        "inspect.isroutine"
      ]
    ],
    "istraceback() (in module inspect)": [
      [
        254,
        "inspect.istraceback"
      ]
    ],
    "kind (inspect.parameter attribute)": [
      [
        254,
        "inspect.Parameter.kind"
      ]
    ],
    "kwargs (inspect.boundarguments attribute)": [
      [
        254,
        "inspect.BoundArguments.kwargs"
      ]
    ],
    "lineno (inspect.frameinfo attribute)": [
      [
        254,
        "inspect.FrameInfo.lineno"
      ]
    ],
    "lineno (inspect.traceback attribute)": [
      [
        254,
        "inspect.Traceback.lineno"
      ]
    ],
    "markcoroutinefunction() (in module inspect)": [
      [
        254,
        "inspect.markcoroutinefunction"
      ]
    ],
    "name (inspect.parameter attribute)": [
      [
        254,
        "inspect.Parameter.name"
      ]
    ],
    "parameters (inspect.signature attribute)": [
      [
        254,
        "inspect.Signature.parameters"
      ]
    ],
    "positions (inspect.frameinfo attribute)": [
      [
        254,
        "inspect.FrameInfo.positions"
      ]
    ],
    "positions (inspect.traceback attribute)": [
      [
        254,
        "inspect.Traceback.positions"
      ]
    ],
    "replace() (inspect.parameter method)": [
      [
        254,
        "inspect.Parameter.replace"
      ]
    ],
    "replace() (inspect.signature method)": [
      [
        254,
        "inspect.Signature.replace"
      ]
    ],
    "return_annotation (inspect.signature attribute)": [
      [
        254,
        "inspect.Signature.return_annotation"
      ]
    ],
    "signature (inspect.boundarguments attribute)": [
      [
        254,
        "inspect.BoundArguments.signature"
      ]
    ],
    "signature() (in module inspect)": [
      [
        254,
        "inspect.signature"
      ]
    ],
    "stack() (in module inspect)": [
      [
        254,
        "inspect.stack"
      ]
    ],
    "trace() (in module inspect)": [
      [
        254,
        "inspect.trace"
      ]
    ],
    "unwrap() (in module inspect)": [
      [
        254,
        "inspect.unwrap"
      ]
    ],
    "internet": [
      [
        255,
        "index-0"
      ]
    ],
    "world wide web": [
      [
        255,
        "index-0"
      ],
      [
        393,
        "index-0"
      ],
      [
        395,
        "index-0"
      ]
    ],
    "socket": [
      [
        255,
        "index-1"
      ],
      [
        336,
        "index-0"
      ],
      [
        336,
        "module-socket"
      ]
    ],
    "bufferediobase (class in io)": [
      [
        257,
        "io.BufferedIOBase"
      ]
    ],
    "bufferedrwpair (class in io)": [
      [
        257,
        "io.BufferedRWPair"
      ]
    ],
    "bufferedrandom (class in io)": [
      [
        257,
        "io.BufferedRandom"
      ]
    ],
    "bufferedreader (class in io)": [
      [
        257,
        "io.BufferedReader"
      ]
    ],
    "bufferedwriter (class in io)": [
      [
        257,
        "io.BufferedWriter"
      ]
    ],
    "bytesio (class in io)": [
      [
        257,
        "io.BytesIO"
      ]
    ],
    "default_buffer_size (in module io)": [
      [
        257,
        "io.DEFAULT_BUFFER_SIZE"
      ]
    ],
    "fileio (class in io)": [
      [
        257,
        "io.FileIO"
      ]
    ],
    "iobase (class in io)": [
      [
        257,
        "io.IOBase"
      ]
    ],
    "incrementalnewlinedecoder (class in io)": [
      [
        257,
        "io.IncrementalNewlineDecoder"
      ]
    ],
    "pep 597": [
      [
        257,
        "index-2"
      ],
      [
        471,
        "index-13"
      ],
      [
        482,
        "index-105"
      ]
    ],
    "pep 686": [
      [
        257,
        "index-1"
      ],
      [
        292,
        "index-5"
      ]
    ],
    "pythonwarndefaultencoding": [
      [
        257,
        "index-3"
      ],
      [
        454,
        "envvar-PYTHONWARNDEFAULTENCODING"
      ],
      [
        454,
        "index-25"
      ],
      [
        471,
        "index-18"
      ],
      [
        482,
        "index-106"
      ]
    ],
    "rawiobase (class in io)": [
      [
        257,
        "io.RawIOBase"
      ]
    ],
    "stringio (class in io)": [
      [
        257,
        "io.StringIO"
      ]
    ],
    "textiobase (class in io)": [
      [
        257,
        "io.TextIOBase"
      ]
    ],
    "textiowrapper (class in io)": [
      [
        257,
        "io.TextIOWrapper"
      ]
    ],
    "unsupportedoperation": [
      [
        257,
        "io.UnsupportedOperation"
      ]
    ],
    "__del__() (io.iobase method)": [
      [
        257,
        "io.IOBase.__del__"
      ]
    ],
    "buffer (io.textiobase attribute)": [
      [
        257,
        "io.TextIOBase.buffer"
      ]
    ],
    "close() (io.iobase method)": [
      [
        257,
        "io.IOBase.close"
      ]
    ],
    "closed (io.iobase attribute)": [
      [
        257,
        "io.IOBase.closed"
      ]
    ],
    "detach() (io.bufferediobase method)": [
      [
        257,
        "io.BufferedIOBase.detach"
      ]
    ],
    "detach() (io.textiobase method)": [
      [
        257,
        "io.TextIOBase.detach"
      ]
    ],
    "encoding (io.textiobase attribute)": [
      [
        257,
        "io.TextIOBase.encoding"
      ]
    ],
    "errors (io.textiobase attribute)": [
      [
        257,
        "io.TextIOBase.errors"
      ]
    ],
    "fileno() (io.iobase method)": [
      [
        257,
        "io.IOBase.fileno"
      ]
    ],
    "flush() (io.bufferedwriter method)": [
      [
        257,
        "io.BufferedWriter.flush"
      ]
    ],
    "flush() (io.iobase method)": [
      [
        257,
        "io.IOBase.flush"
      ]
    ],
    "getbuffer() (io.bytesio method)": [
      [
        257,
        "io.BytesIO.getbuffer"
      ]
    ],
    "getvalue() (io.bytesio method)": [
      [
        257,
        "io.BytesIO.getvalue"
      ]
    ],
    "getvalue() (io.stringio method)": [
      [
        257,
        "io.StringIO.getvalue"
      ]
    ],
    "io": [
      [
        257,
        "module-io"
      ],
      [
        427,
        "index-55"
      ]
    ],
    "io module": [
      [
        257,
        "index-0"
      ]
    ],
    "io.incrementalnewlinedecoder class": [
      [
        257,
        "index-5"
      ]
    ],
    "io.textiowrapper class": [
      [
        257,
        "index-4"
      ]
    ],
    "isatty() (io.iobase method)": [
      [
        257,
        "io.IOBase.isatty"
      ]
    ],
    "line_buffering (io.textiowrapper attribute)": [
      [
        257,
        "io.TextIOWrapper.line_buffering"
      ]
    ],
    "mode (io.fileio attribute)": [
      [
        257,
        "io.FileIO.mode"
      ]
    ],
    "name (io.fileio attribute)": [
      [
        257,
        "io.FileIO.name"
      ]
    ],
    "newlines (io.textiobase attribute)": [
      [
        257,
        "io.TextIOBase.newlines"
      ]
    ],
    "open() (in module io)": [
      [
        257,
        "io.open"
      ]
    ],
    "open_code() (in module io)": [
      [
        257,
        "io.open_code"
      ]
    ],
    "peek() (io.bufferedreader method)": [
      [
        257,
        "io.BufferedReader.peek"
      ]
    ],
    "raw (io.bufferediobase attribute)": [
      [
        257,
        "io.BufferedIOBase.raw"
      ]
    ],
    "read() (io.bufferediobase method)": [
      [
        257,
        "io.BufferedIOBase.read"
      ]
    ],
    "read() (io.bufferedreader method)": [
      [
        257,
        "io.BufferedReader.read"
      ]
    ],
    "read() (io.rawiobase method)": [
      [
        257,
        "io.RawIOBase.read"
      ]
    ],
    "read() (io.textiobase method)": [
      [
        257,
        "io.TextIOBase.read"
      ]
    ],
    "read1() (io.bufferediobase method)": [
      [
        257,
        "io.BufferedIOBase.read1"
      ]
    ],
    "read1() (io.bufferedreader method)": [
      [
        257,
        "io.BufferedReader.read1"
      ]
    ],
    "read1() (io.bytesio method)": [
      [
        257,
        "io.BytesIO.read1"
      ]
    ],
    "readable() (io.iobase method)": [
      [
        257,
        "io.IOBase.readable"
      ]
    ],
    "readall() (io.rawiobase method)": [
      [
        257,
        "io.RawIOBase.readall"
      ]
    ],
    "readinto() (io.bufferediobase method)": [
      [
        257,
        "io.BufferedIOBase.readinto"
      ]
    ],
    "readinto() (io.rawiobase method)": [
      [
        257,
        "io.RawIOBase.readinto"
      ]
    ],
    "readinto1() (io.bufferediobase method)": [
      [
        257,
        "io.BufferedIOBase.readinto1"
      ]
    ],
    "readinto1() (io.bytesio method)": [
      [
        257,
        "io.BytesIO.readinto1"
      ]
    ],
    "readline() (io.iobase method)": [
      [
        257,
        "io.IOBase.readline"
      ]
    ],
    "readline() (io.textiobase method)": [
      [
        257,
        "io.TextIOBase.readline"
      ]
    ],
    "readlines() (io.iobase method)": [
      [
        257,
        "io.IOBase.readlines"
      ]
    ],
    "reconfigure() (io.textiowrapper method)": [
      [
        257,
        "io.TextIOWrapper.reconfigure"
      ]
    ],
    "seek() (io.iobase method)": [
      [
        257,
        "io.IOBase.seek"
      ]
    ],
    "seek() (io.textiobase method)": [
      [
        257,
        "io.TextIOBase.seek"
      ]
    ],
    "seek() (io.textiowrapper method)": [
      [
        257,
        "io.TextIOWrapper.seek"
      ]
    ],
    "seekable() (io.iobase method)": [
      [
        257,
        "io.IOBase.seekable"
      ]
    ],
    "tell() (io.iobase method)": [
      [
        257,
        "io.IOBase.tell"
      ]
    ],
    "tell() (io.textiobase method)": [
      [
        257,
        "io.TextIOBase.tell"
      ]
    ],
    "tell() (io.textiowrapper method)": [
      [
        257,
        "io.TextIOWrapper.tell"
      ]
    ],
    "text_encoding() (in module io)": [
      [
        257,
        "io.text_encoding"
      ]
    ],
    "truncate() (io.iobase method)": [
      [
        257,
        "io.IOBase.truncate"
      ]
    ],
    "writable() (io.iobase method)": [
      [
        257,
        "io.IOBase.writable"
      ]
    ],
    "write() (io.bufferediobase method)": [
      [
        257,
        "io.BufferedIOBase.write"
      ]
    ],
    "write() (io.bufferedwriter method)": [
      [
        257,
        "io.BufferedWriter.write"
      ]
    ],
    "write() (io.rawiobase method)": [
      [
        257,
        "io.RawIOBase.write"
      ]
    ],
    "write() (io.textiobase method)": [
      [
        257,
        "io.TextIOBase.write"
      ]
    ],
    "write_through (io.textiowrapper attribute)": [
      [
        257,
        "io.TextIOWrapper.write_through"
      ]
    ],
    "writelines() (io.iobase method)": [
      [
        257,
        "io.IOBase.writelines"
      ]
    ],
    "addressvalueerror": [
      [
        258,
        "ipaddress.AddressValueError"
      ]
    ],
    "ipv4address (class in ipaddress)": [
      [
        258,
        "ipaddress.IPv4Address"
      ]
    ],
    "ipv4interface (class in ipaddress)": [
      [
        258,
        "ipaddress.IPv4Interface"
      ]
    ],
    "ipv4network (class in ipaddress)": [
      [
        258,
        "ipaddress.IPv4Network"
      ]
    ],
    "ipv6address (class in ipaddress)": [
      [
        258,
        "ipaddress.IPv6Address"
      ]
    ],
    "ipv6interface (class in ipaddress)": [
      [
        258,
        "ipaddress.IPv6Interface"
      ]
    ],
    "ipv6network (class in ipaddress)": [
      [
        258,
        "ipaddress.IPv6Network"
      ]
    ],
    "netmaskvalueerror": [
      [
        258,
        "ipaddress.NetmaskValueError"
      ]
    ],
    "rfc 2373": [
      [
        258,
        "index-1"
      ],
      [
        258,
        "index-3"
      ],
      [
        258,
        "index-5"
      ]
    ],
    "rfc 3056": [
      [
        258,
        "index-12"
      ]
    ],
    "rfc 3171": [
      [
        258,
        "index-0"
      ]
    ],
    "rfc 3330": [
      [
        258,
        "index-4"
      ]
    ],
    "rfc 3879": [
      [
        258,
        "index-9"
      ]
    ],
    "rfc 3927": [
      [
        258,
        "index-6"
      ]
    ],
    "rfc 4007": [
      [
        258,
        "index-11"
      ],
      [
        258,
        "index-8"
      ]
    ],
    "rfc 4193": [
      [
        258,
        "index-10"
      ]
    ],
    "rfc 4291": [
      [
        258,
        "index-7"
      ],
      [
        482,
        "index-90"
      ]
    ],
    "rfc 4380": [
      [
        258,
        "index-13"
      ]
    ],
    "rfc 5735": [
      [
        258,
        "index-2"
      ]
    ],
    "__format__() (ipaddress.ipv4address method)": [
      [
        258,
        "ipaddress.IPv4Address.__format__"
      ]
    ],
    "__format__() (ipaddress.ipv6address method)": [
      [
        258,
        "ipaddress.IPv6Address.__format__"
      ]
    ],
    "address_exclude() (ipaddress.ipv4network method)": [
      [
        258,
        "ipaddress.IPv4Network.address_exclude"
      ]
    ],
    "address_exclude() (ipaddress.ipv6network method)": [
      [
        258,
        "ipaddress.IPv6Network.address_exclude"
      ]
    ],
    "broadcast_address (ipaddress.ipv4network attribute)": [
      [
        258,
        "ipaddress.IPv4Network.broadcast_address"
      ]
    ],
    "broadcast_address (ipaddress.ipv6network attribute)": [
      [
        258,
        "ipaddress.IPv6Network.broadcast_address"
      ]
    ],
    "collapse_addresses() (in module ipaddress)": [
      [
        258,
        "ipaddress.collapse_addresses"
      ]
    ],
    "compare_networks() (ipaddress.ipv4network method)": [
      [
        258,
        "ipaddress.IPv4Network.compare_networks"
      ]
    ],
    "compare_networks() (ipaddress.ipv6network method)": [
      [
        258,
        "ipaddress.IPv6Network.compare_networks"
      ]
    ],
    "compressed (ipaddress.ipv4address attribute)": [
      [
        258,
        "ipaddress.IPv4Address.compressed"
      ]
    ],
    "compressed (ipaddress.ipv4network attribute)": [
      [
        258,
        "ipaddress.IPv4Network.compressed"
      ]
    ],
    "compressed (ipaddress.ipv6address attribute)": [
      [
        258,
        "ipaddress.IPv6Address.compressed"
      ]
    ],
    "compressed (ipaddress.ipv6network attribute)": [
      [
        258,
        "ipaddress.IPv6Network.compressed"
      ]
    ],
    "exploded (ipaddress.ipv4address attribute)": [
      [
        258,
        "ipaddress.IPv4Address.exploded"
      ]
    ],
    "exploded (ipaddress.ipv4network attribute)": [
      [
        258,
        "ipaddress.IPv4Network.exploded"
      ]
    ],
    "exploded (ipaddress.ipv6address attribute)": [
      [
        258,
        "ipaddress.IPv6Address.exploded"
      ]
    ],
    "exploded (ipaddress.ipv6network attribute)": [
      [
        258,
        "ipaddress.IPv6Network.exploded"
      ]
    ],
    "get_mixed_type_key() (in module ipaddress)": [
      [
        258,
        "ipaddress.get_mixed_type_key"
      ]
    ],
    "hostmask (ipaddress.ipv4network attribute)": [
      [
        258,
        "ipaddress.IPv4Network.hostmask"
      ]
    ],
    "hostmask (ipaddress.ipv6network attribute)": [
      [
        258,
        "ipaddress.IPv6Network.hostmask"
      ]
    ],
    "hosts() (ipaddress.ipv4network method)": [
      [
        258,
        "ipaddress.IPv4Network.hosts"
      ]
    ],
    "hosts() (ipaddress.ipv6network method)": [
      [
        258,
        "ipaddress.IPv6Network.hosts"
      ]
    ],
    "ip (ipaddress.ipv4interface attribute)": [
      [
        258,
        "ipaddress.IPv4Interface.ip"
      ]
    ],
    "ip (ipaddress.ipv6interface attribute)": [
      [
        258,
        "ipaddress.IPv6Interface.ip"
      ]
    ],
    "ip_address() (in module ipaddress)": [
      [
        258,
        "ipaddress.ip_address"
      ]
    ],
    "ip_interface() (in module ipaddress)": [
      [
        258,
        "ipaddress.ip_interface"
      ]
    ],
    "ip_network() (in module ipaddress)": [
      [
        258,
        "ipaddress.ip_network"
      ]
    ],
    "ipaddress": [
      [
        258,
        "module-ipaddress"
      ]
    ],
    "ipv4_mapped (ipaddress.ipv6address attribute)": [
      [
        258,
        "ipaddress.IPv6Address.ipv4_mapped"
      ]
    ],
    "is_global (ipaddress.ipv4address attribute)": [
      [
        258,
        "ipaddress.IPv4Address.is_global"
      ]
    ],
    "is_global (ipaddress.ipv6address attribute)": [
      [
        258,
        "ipaddress.IPv6Address.is_global"
      ]
    ],
    "is_link_local (ipaddress.ipv4address attribute)": [
      [
        258,
        "ipaddress.IPv4Address.is_link_local"
      ]
    ],
    "is_link_local (ipaddress.ipv4network attribute)": [
      [
        258,
        "ipaddress.IPv4Network.is_link_local"
      ]
    ],
    "is_link_local (ipaddress.ipv6address attribute)": [
      [
        258,
        "ipaddress.IPv6Address.is_link_local"
      ]
    ],
    "is_link_local (ipaddress.ipv6network attribute)": [
      [
        258,
        "ipaddress.IPv6Network.is_link_local"
      ]
    ],
    "is_loopback (ipaddress.ipv4address attribute)": [
      [
        258,
        "ipaddress.IPv4Address.is_loopback"
      ]
    ],
    "is_loopback (ipaddress.ipv4network attribute)": [
      [
        258,
        "ipaddress.IPv4Network.is_loopback"
      ]
    ],
    "is_loopback (ipaddress.ipv6address attribute)": [
      [
        258,
        "ipaddress.IPv6Address.is_loopback"
      ]
    ],
    "is_loopback (ipaddress.ipv6network attribute)": [
      [
        258,
        "ipaddress.IPv6Network.is_loopback"
      ]
    ],
    "is_multicast (ipaddress.ipv4address attribute)": [
      [
        258,
        "ipaddress.IPv4Address.is_multicast"
      ]
    ],
    "is_multicast (ipaddress.ipv4network attribute)": [
      [
        258,
        "ipaddress.IPv4Network.is_multicast"
      ]
    ],
    "is_multicast (ipaddress.ipv6address attribute)": [
      [
        258,
        "ipaddress.IPv6Address.is_multicast"
      ]
    ],
    "is_multicast (ipaddress.ipv6network attribute)": [
      [
        258,
        "ipaddress.IPv6Network.is_multicast"
      ]
    ],
    "is_private (ipaddress.ipv4address attribute)": [
      [
        258,
        "ipaddress.IPv4Address.is_private"
      ]
    ],
    "is_private (ipaddress.ipv4network attribute)": [
      [
        258,
        "ipaddress.IPv4Network.is_private"
      ]
    ],
    "is_private (ipaddress.ipv6address attribute)": [
      [
        258,
        "ipaddress.IPv6Address.is_private"
      ]
    ],
    "is_private (ipaddress.ipv6network attribute)": [
      [
        258,
        "ipaddress.IPv6Network.is_private"
      ]
    ],
    "is_reserved (ipaddress.ipv4address attribute)": [
      [
        258,
        "ipaddress.IPv4Address.is_reserved"
      ]
    ],
    "is_reserved (ipaddress.ipv4network attribute)": [
      [
        258,
        "ipaddress.IPv4Network.is_reserved"
      ]
    ],
    "is_reserved (ipaddress.ipv6address attribute)": [
      [
        258,
        "ipaddress.IPv6Address.is_reserved"
      ]
    ],
    "is_reserved (ipaddress.ipv6network attribute)": [
      [
        258,
        "ipaddress.IPv6Network.is_reserved"
      ]
    ],
    "is_site_local (ipaddress.ipv6address attribute)": [
      [
        258,
        "ipaddress.IPv6Address.is_site_local"
      ]
    ],
    "is_site_local (ipaddress.ipv6network attribute)": [
      [
        258,
        "ipaddress.IPv6Network.is_site_local"
      ]
    ],
    "is_unspecified (ipaddress.ipv4address attribute)": [
      [
        258,
        "ipaddress.IPv4Address.is_unspecified"
      ]
    ],
    "is_unspecified (ipaddress.ipv4network attribute)": [
      [
        258,
        "ipaddress.IPv4Network.is_unspecified"
      ]
    ],
    "is_unspecified (ipaddress.ipv6address attribute)": [
      [
        258,
        "ipaddress.IPv6Address.is_unspecified"
      ]
    ],
    "is_unspecified (ipaddress.ipv6network attribute)": [
      [
        258,
        "ipaddress.IPv6Network.is_unspecified"
      ]
    ],
    "max_prefixlen (ipaddress.ipv4address attribute)": [
      [
        258,
        "ipaddress.IPv4Address.max_prefixlen"
      ]
    ],
    "max_prefixlen (ipaddress.ipv4network attribute)": [
      [
        258,
        "ipaddress.IPv4Network.max_prefixlen"
      ]
    ],
    "max_prefixlen (ipaddress.ipv6address attribute)": [
      [
        258,
        "ipaddress.IPv6Address.max_prefixlen"
      ]
    ],
    "max_prefixlen (ipaddress.ipv6network attribute)": [
      [
        258,
        "ipaddress.IPv6Network.max_prefixlen"
      ]
    ],
    "netmask (ipaddress.ipv4network attribute)": [
      [
        258,
        "ipaddress.IPv4Network.netmask"
      ]
    ],
    "netmask (ipaddress.ipv6network attribute)": [
      [
        258,
        "ipaddress.IPv6Network.netmask"
      ]
    ],
    "network (ipaddress.ipv4interface attribute)": [
      [
        258,
        "ipaddress.IPv4Interface.network"
      ]
    ],
    "network (ipaddress.ipv6interface attribute)": [
      [
        258,
        "ipaddress.IPv6Interface.network"
      ]
    ],
    "network_address (ipaddress.ipv4network attribute)": [
      [
        258,
        "ipaddress.IPv4Network.network_address"
      ]
    ],
    "network_address (ipaddress.ipv6network attribute)": [
      [
        258,
        "ipaddress.IPv6Network.network_address"
      ]
    ],
    "num_addresses (ipaddress.ipv4network attribute)": [
      [
        258,
        "ipaddress.IPv4Network.num_addresses"
      ]
    ],
    "num_addresses (ipaddress.ipv6network attribute)": [
      [
        258,
        "ipaddress.IPv6Network.num_addresses"
      ]
    ],
    "overlaps() (ipaddress.ipv4network method)": [
      [
        258,
        "ipaddress.IPv4Network.overlaps"
      ]
    ],
    "overlaps() (ipaddress.ipv6network method)": [
      [
        258,
        "ipaddress.IPv6Network.overlaps"
      ]
    ],
    "packed (ipaddress.ipv4address attribute)": [
      [
        258,
        "ipaddress.IPv4Address.packed"
      ]
    ],
    "packed (ipaddress.ipv6address attribute)": [
      [
        258,
        "ipaddress.IPv6Address.packed"
      ]
    ],
    "prefixlen (ipaddress.ipv4network attribute)": [
      [
        258,
        "ipaddress.IPv4Network.prefixlen"
      ]
    ],
    "prefixlen (ipaddress.ipv6network attribute)": [
      [
        258,
        "ipaddress.IPv6Network.prefixlen"
      ]
    ],
    "reverse_pointer (ipaddress.ipv4address attribute)": [
      [
        258,
        "ipaddress.IPv4Address.reverse_pointer"
      ]
    ],
    "reverse_pointer (ipaddress.ipv6address attribute)": [
      [
        258,
        "ipaddress.IPv6Address.reverse_pointer"
      ]
    ],
    "scope_id (ipaddress.ipv6address attribute)": [
      [
        258,
        "ipaddress.IPv6Address.scope_id"
      ]
    ],
    "sixtofour (ipaddress.ipv6address attribute)": [
      [
        258,
        "ipaddress.IPv6Address.sixtofour"
      ]
    ],
    "subnet_of() (ipaddress.ipv4network method)": [
      [
        258,
        "ipaddress.IPv4Network.subnet_of"
      ]
    ],
    "subnet_of() (ipaddress.ipv6network method)": [
      [
        258,
        "ipaddress.IPv6Network.subnet_of"
      ]
    ],
    "subnets() (ipaddress.ipv4network method)": [
      [
        258,
        "ipaddress.IPv4Network.subnets"
      ]
    ],
    "subnets() (ipaddress.ipv6network method)": [
      [
        258,
        "ipaddress.IPv6Network.subnets"
      ]
    ],
    "summarize_address_range() (in module ipaddress)": [
      [
        258,
        "ipaddress.summarize_address_range"
      ]
    ],
    "supernet() (ipaddress.ipv4network method)": [
      [
        258,
        "ipaddress.IPv4Network.supernet"
      ]
    ],
    "supernet() (ipaddress.ipv6network method)": [
      [
        258,
        "ipaddress.IPv6Network.supernet"
      ]
    ],
    "supernet_of() (ipaddress.ipv4network method)": [
      [
        258,
        "ipaddress.IPv4Network.supernet_of"
      ]
    ],
    "supernet_of() (ipaddress.ipv6network method)": [
      [
        258,
        "ipaddress.IPv6Network.supernet_of"
      ]
    ],
    "teredo (ipaddress.ipv6address attribute)": [
      [
        258,
        "ipaddress.IPv6Address.teredo"
      ]
    ],
    "v4_int_to_packed() (in module ipaddress)": [
      [
        258,
        "ipaddress.v4_int_to_packed"
      ]
    ],
    "v6_int_to_packed() (in module ipaddress)": [
      [
        258,
        "ipaddress.v6_int_to_packed"
      ]
    ],
    "version (ipaddress.ipv4address attribute)": [
      [
        258,
        "ipaddress.IPv4Address.version"
      ]
    ],
    "version (ipaddress.ipv4network attribute)": [
      [
        258,
        "ipaddress.IPv4Network.version"
      ]
    ],
    "version (ipaddress.ipv6address attribute)": [
      [
        258,
        "ipaddress.IPv6Address.version"
      ]
    ],
    "version (ipaddress.ipv6network attribute)": [
      [
        258,
        "ipaddress.IPv6Network.version"
      ]
    ],
    "with_hostmask (ipaddress.ipv4interface attribute)": [
      [
        258,
        "ipaddress.IPv4Interface.with_hostmask"
      ]
    ],
    "with_hostmask (ipaddress.ipv4network attribute)": [
      [
        258,
        "ipaddress.IPv4Network.with_hostmask"
      ]
    ],
    "with_hostmask (ipaddress.ipv6interface attribute)": [
      [
        258,
        "ipaddress.IPv6Interface.with_hostmask"
      ]
    ],
    "with_hostmask (ipaddress.ipv6network attribute)": [
      [
        258,
        "ipaddress.IPv6Network.with_hostmask"
      ]
    ],
    "with_netmask (ipaddress.ipv4interface attribute)": [
      [
        258,
        "ipaddress.IPv4Interface.with_netmask"
      ]
    ],
    "with_netmask (ipaddress.ipv4network attribute)": [
      [
        258,
        "ipaddress.IPv4Network.with_netmask"
      ]
    ],
    "with_netmask (ipaddress.ipv6interface attribute)": [
      [
        258,
        "ipaddress.IPv6Interface.with_netmask"
      ]
    ],
    "with_netmask (ipaddress.ipv6network attribute)": [
      [
        258,
        "ipaddress.IPv6Network.with_netmask"
      ]
    ],
    "with_prefixlen (ipaddress.ipv4interface attribute)": [
      [
        258,
        "ipaddress.IPv4Interface.with_prefixlen"
      ]
    ],
    "with_prefixlen (ipaddress.ipv4network attribute)": [
      [
        258,
        "ipaddress.IPv4Network.with_prefixlen"
      ]
    ],
    "with_prefixlen (ipaddress.ipv6interface attribute)": [
      [
        258,
        "ipaddress.IPv6Interface.with_prefixlen"
      ]
    ],
    "with_prefixlen (ipaddress.ipv6network attribute)": [
      [
        258,
        "ipaddress.IPv6Network.with_prefixlen"
      ]
    ],
    "accumulate() (in module itertools)": [
      [
        260,
        "itertools.accumulate"
      ]
    ],
    "batched() (in module itertools)": [
      [
        260,
        "itertools.batched"
      ]
    ],
    "chain() (in module itertools)": [
      [
        260,
        "itertools.chain"
      ]
    ],
    "combinations() (in module itertools)": [
      [
        260,
        "itertools.combinations"
      ]
    ],
    "combinations_with_replacement() (in module itertools)": [
      [
        260,
        "itertools.combinations_with_replacement"
      ]
    ],
    "compress() (in module itertools)": [
      [
        260,
        "itertools.compress"
      ]
    ],
    "count() (in module itertools)": [
      [
        260,
        "itertools.count"
      ]
    ],
    "cycle() (in module itertools)": [
      [
        260,
        "itertools.cycle"
      ]
    ],
    "dropwhile() (in module itertools)": [
      [
        260,
        "itertools.dropwhile"
      ]
    ],
    "filterfalse() (in module itertools)": [
      [
        260,
        "itertools.filterfalse"
      ]
    ],
    "from_iterable() (itertools.chain class method)": [
      [
        260,
        "itertools.chain.from_iterable"
      ]
    ],
    "groupby() (in module itertools)": [
      [
        260,
        "itertools.groupby"
      ]
    ],
    "islice() (in module itertools)": [
      [
        260,
        "itertools.islice"
      ]
    ],
    "itertools": [
      [
        260,
        "module-itertools"
      ]
    ],
    "pairwise() (in module itertools)": [
      [
        260,
        "itertools.pairwise"
      ]
    ],
    "permutations() (in module itertools)": [
      [
        260,
        "itertools.permutations"
      ]
    ],
    "product() (in module itertools)": [
      [
        260,
        "itertools.product"
      ]
    ],
    "repeat() (in module itertools)": [
      [
        260,
        "itertools.repeat"
      ]
    ],
    "starmap() (in module itertools)": [
      [
        260,
        "itertools.starmap"
      ]
    ],
    "takewhile() (in module itertools)": [
      [
        260,
        "itertools.takewhile"
      ]
    ],
    "tee() (in module itertools)": [
      [
        260,
        "itertools.tee"
      ]
    ],
    "zip_longest() (in module itertools)": [
      [
        260,
        "itertools.zip_longest"
      ]
    ],
    "--compact": [
      [
        261,
        "cmdoption-json.tool-indent"
      ]
    ],
    "--json-lines": [
      [
        261,
        "cmdoption-json.tool-json-lines"
      ]
    ],
    "--no-ensure-ascii": [
      [
        261,
        "cmdoption-json.tool-no-ensure-ascii"
      ]
    ],
    "--no-indent": [
      [
        261,
        "cmdoption-json.tool-indent"
      ]
    ],
    "--sort-keys": [
      [
        261,
        "cmdoption-json.tool-sort-keys"
      ]
    ],
    "--tab": [
      [
        261,
        "cmdoption-json.tool-indent"
      ]
    ],
    "jsondecodeerror": [
      [
        261,
        "json.JSONDecodeError"
      ]
    ],
    "jsondecoder (class in json)": [
      [
        261,
        "json.JSONDecoder"
      ]
    ],
    "jsonencoder (class in json)": [
      [
        261,
        "json.JSONEncoder"
      ]
    ],
    "rfc 4627": [
      [
        261,
        "index-1"
      ],
      [
        261,
        "index-3"
      ]
    ],
    "rfc 7159": [
      [
        261,
        "index-0"
      ],
      [
        261,
        "index-2"
      ],
      [
        261,
        "index-4"
      ]
    ],
    "colno (json.jsondecodeerror attribute)": [
      [
        261,
        "json.JSONDecodeError.colno"
      ]
    ],
    "decode() (json.jsondecoder method)": [
      [
        261,
        "json.JSONDecoder.decode"
      ]
    ],
    "default() (json.jsonencoder method)": [
      [
        261,
        "json.JSONEncoder.default"
      ]
    ],
    "doc (json.jsondecodeerror attribute)": [
      [
        261,
        "json.JSONDecodeError.doc"
      ]
    ],
    "dump() (in module json)": [
      [
        261,
        "json.dump"
      ]
    ],
    "dumps() (in module json)": [
      [
        261,
        "json.dumps"
      ]
    ],
    "encode() (json.jsonencoder method)": [
      [
        261,
        "json.JSONEncoder.encode"
      ]
    ],
    "infile": [
      [
        261,
        "cmdoption-json.tool-arg-infile"
      ]
    ],
    "iterencode() (json.jsonencoder method)": [
      [
        261,
        "json.JSONEncoder.iterencode"
      ]
    ],
    "json": [
      [
        261,
        "module-json"
      ],
      [
        445,
        "index-1"
      ]
    ],
    "json.tool": [
      [
        261,
        "module-json.tool"
      ]
    ],
    "json.tool command line option": [
      [
        261,
        "cmdoption-json.tool-arg-infile"
      ],
      [
        261,
        "cmdoption-json.tool-arg-outfile"
      ],
      [
        261,
        "cmdoption-json.tool-h"
      ],
      [
        261,
        "cmdoption-json.tool-indent"
      ],
      [
        261,
        "cmdoption-json.tool-json-lines"
      ],
      [
        261,
        "cmdoption-json.tool-no-ensure-ascii"
      ],
      [
        261,
        "cmdoption-json.tool-sort-keys"
      ]
    ],
    "lineno (json.jsondecodeerror attribute)": [
      [
        261,
        "json.JSONDecodeError.lineno"
      ]
    ],
    "load() (in module json)": [
      [
        261,
        "json.load"
      ]
    ],
    "loads() (in module json)": [
      [
        261,
        "json.loads"
      ]
    ],
    "msg (json.jsondecodeerror attribute)": [
      [
        261,
        "json.JSONDecodeError.msg"
      ]
    ],
    "outfile": [
      [
        261,
        "cmdoption-json.tool-arg-outfile"
      ]
    ],
    "pos (json.jsondecodeerror attribute)": [
      [
        261,
        "json.JSONDecodeError.pos"
      ]
    ],
    "raw_decode() (json.jsondecoder method)": [
      [
        261,
        "json.JSONDecoder.raw_decode"
      ]
    ],
    "iskeyword() (in module keyword)": [
      [
        262,
        "keyword.iskeyword"
      ]
    ],
    "issoftkeyword() (in module keyword)": [
      [
        262,
        "keyword.issoftkeyword"
      ]
    ],
    "keyword": [
      [
        262,
        "module-keyword"
      ],
      [
        426,
        "index-12"
      ],
      [
        426,
        "index-13"
      ],
      [
        426,
        "index-14"
      ],
      [
        426,
        "index-16"
      ],
      [
        426,
        "index-18"
      ],
      [
        426,
        "index-18"
      ],
      [
        426,
        "index-3"
      ],
      [
        426,
        "index-4"
      ],
      [
        426,
        "index-49"
      ],
      [
        426,
        "index-6"
      ],
      [
        426,
        "index-9"
      ],
      [
        429,
        "index-23"
      ],
      [
        429,
        "index-57"
      ],
      [
        434,
        "index-13"
      ],
      [
        434,
        "index-14"
      ],
      [
        435,
        "index-25"
      ],
      [
        435,
        "index-31"
      ],
      [
        435,
        "index-32"
      ],
      [
        435,
        "index-33"
      ],
      [
        435,
        "index-34"
      ]
    ],
    "kwlist (in module keyword)": [
      [
        262,
        "keyword.kwlist"
      ]
    ],
    "softkwlist (in module keyword)": [
      [
        262,
        "keyword.softkwlist"
      ]
    ],
    "checkcache() (in module linecache)": [
      [
        264,
        "linecache.checkcache"
      ]
    ],
    "clearcache() (in module linecache)": [
      [
        264,
        "linecache.clearcache"
      ]
    ],
    "getline() (in module linecache)": [
      [
        264,
        "linecache.getline"
      ]
    ],
    "lazycache() (in module linecache)": [
      [
        264,
        "linecache.lazycache"
      ]
    ],
    "linecache": [
      [
        264,
        "module-linecache"
      ]
    ],
    "abday_1 (in module locale)": [
      [
        265,
        "locale.ABDAY_1"
      ]
    ],
    "abday_2 (in module locale)": [
      [
        265,
        "locale.ABDAY_2"
      ]
    ],
    "abday_3 (in module locale)": [
      [
        265,
        "locale.ABDAY_3"
      ]
    ],
    "abday_4 (in module locale)": [
      [
        265,
        "locale.ABDAY_4"
      ]
    ],
    "abday_5 (in module locale)": [
      [
        265,
        "locale.ABDAY_5"
      ]
    ],
    "abday_6 (in module locale)": [
      [
        265,
        "locale.ABDAY_6"
      ]
    ],
    "abday_7 (in module locale)": [
      [
        265,
        "locale.ABDAY_7"
      ]
    ],
    "abmon_1 (in module locale)": [
      [
        265,
        "locale.ABMON_1"
      ]
    ],
    "abmon_10 (in module locale)": [
      [
        265,
        "locale.ABMON_10"
      ]
    ],
    "abmon_11 (in module locale)": [
      [
        265,
        "locale.ABMON_11"
      ]
    ],
    "abmon_12 (in module locale)": [
      [
        265,
        "locale.ABMON_12"
      ]
    ],
    "abmon_2 (in module locale)": [
      [
        265,
        "locale.ABMON_2"
      ]
    ],
    "abmon_3 (in module locale)": [
      [
        265,
        "locale.ABMON_3"
      ]
    ],
    "abmon_4 (in module locale)": [
      [
        265,
        "locale.ABMON_4"
      ]
    ],
    "abmon_5 (in module locale)": [
      [
        265,
        "locale.ABMON_5"
      ]
    ],
    "abmon_6 (in module locale)": [
      [
        265,
        "locale.ABMON_6"
      ]
    ],
    "abmon_7 (in module locale)": [
      [
        265,
        "locale.ABMON_7"
      ]
    ],
    "abmon_8 (in module locale)": [
      [
        265,
        "locale.ABMON_8"
      ]
    ],
    "abmon_9 (in module locale)": [
      [
        265,
        "locale.ABMON_9"
      ]
    ],
    "alt_digits (in module locale)": [
      [
        265,
        "locale.ALT_DIGITS"
      ]
    ],
    "char_max (in module locale)": [
      [
        265,
        "locale.CHAR_MAX"
      ]
    ],
    "codeset (in module locale)": [
      [
        265,
        "locale.CODESET"
      ]
    ],
    "crncystr (in module locale)": [
      [
        265,
        "locale.CRNCYSTR"
      ]
    ],
    "day_1 (in module locale)": [
      [
        265,
        "locale.DAY_1"
      ]
    ],
    "day_2 (in module locale)": [
      [
        265,
        "locale.DAY_2"
      ]
    ],
    "day_3 (in module locale)": [
      [
        265,
        "locale.DAY_3"
      ]
    ],
    "day_4 (in module locale)": [
      [
        265,
        "locale.DAY_4"
      ]
    ],
    "day_5 (in module locale)": [
      [
        265,
        "locale.DAY_5"
      ]
    ],
    "day_6 (in module locale)": [
      [
        265,
        "locale.DAY_6"
      ]
    ],
    "day_7 (in module locale)": [
      [
        265,
        "locale.DAY_7"
      ]
    ],
    "d_fmt (in module locale)": [
      [
        265,
        "locale.D_FMT"
      ]
    ],
    "d_t_fmt (in module locale)": [
      [
        265,
        "locale.D_T_FMT"
      ]
    ],
    "era (in module locale)": [
      [
        265,
        "locale.ERA"
      ]
    ],
    "era_d_fmt (in module locale)": [
      [
        265,
        "locale.ERA_D_FMT"
      ]
    ],
    "era_d_t_fmt (in module locale)": [
      [
        265,
        "locale.ERA_D_T_FMT"
      ]
    ],
    "era_t_fmt (in module locale)": [
      [
        265,
        "locale.ERA_T_FMT"
      ]
    ],
    "lc_all (in module locale)": [
      [
        265,
        "locale.LC_ALL"
      ]
    ],
    "lc_collate (in module locale)": [
      [
        265,
        "locale.LC_COLLATE"
      ]
    ],
    "lc_ctype (in module locale)": [
      [
        265,
        "locale.LC_CTYPE"
      ]
    ],
    "lc_messages (in module locale)": [
      [
        265,
        "locale.LC_MESSAGES"
      ]
    ],
    "lc_monetary (in module locale)": [
      [
        265,
        "locale.LC_MONETARY"
      ]
    ],
    "lc_numeric (in module locale)": [
      [
        265,
        "locale.LC_NUMERIC"
      ]
    ],
    "lc_time (in module locale)": [
      [
        265,
        "locale.LC_TIME"
      ]
    ],
    "mon_1 (in module locale)": [
      [
        265,
        "locale.MON_1"
      ]
    ],
    "mon_10 (in module locale)": [
      [
        265,
        "locale.MON_10"
      ]
    ],
    "mon_11 (in module locale)": [
      [
        265,
        "locale.MON_11"
      ]
    ],
    "mon_12 (in module locale)": [
      [
        265,
        "locale.MON_12"
      ]
    ],
    "mon_2 (in module locale)": [
      [
        265,
        "locale.MON_2"
      ]
    ],
    "mon_3 (in module locale)": [
      [
        265,
        "locale.MON_3"
      ]
    ],
    "mon_4 (in module locale)": [
      [
        265,
        "locale.MON_4"
      ]
    ],
    "mon_5 (in module locale)": [
      [
        265,
        "locale.MON_5"
      ]
    ],
    "mon_6 (in module locale)": [
      [
        265,
        "locale.MON_6"
      ]
    ],
    "mon_7 (in module locale)": [
      [
        265,
        "locale.MON_7"
      ]
    ],
    "mon_8 (in module locale)": [
      [
        265,
        "locale.MON_8"
      ]
    ],
    "mon_9 (in module locale)": [
      [
        265,
        "locale.MON_9"
      ]
    ],
    "noexpr (in module locale)": [
      [
        265,
        "locale.NOEXPR"
      ]
    ],
    "radixchar (in module locale)": [
      [
        265,
        "locale.RADIXCHAR"
      ]
    ],
    "rfc 1766": [
      [
        265,
        "index-4"
      ],
      [
        265,
        "index-5"
      ]
    ],
    "thousep (in module locale)": [
      [
        265,
        "locale.THOUSEP"
      ]
    ],
    "t_fmt (in module locale)": [
      [
        265,
        "locale.T_FMT"
      ]
    ],
    "t_fmt_ampm (in module locale)": [
      [
        265,
        "locale.T_FMT_AMPM"
      ]
    ],
    "yesexpr (in module locale)": [
      [
        265,
        "locale.YESEXPR"
      ]
    ],
    "_locale": [
      [
        265,
        "index-0"
      ]
    ],
    "atof() (in module locale)": [
      [
        265,
        "locale.atof"
      ]
    ],
    "atoi() (in module locale)": [
      [
        265,
        "locale.atoi"
      ]
    ],
    "bind_textdomain_codeset() (in module locale)": [
      [
        265,
        "locale.bind_textdomain_codeset"
      ]
    ],
    "bindtextdomain() (in module locale)": [
      [
        265,
        "locale.bindtextdomain"
      ]
    ],
    "currency() (in module locale)": [
      [
        265,
        "locale.currency"
      ]
    ],
    "dcgettext() (in module locale)": [
      [
        265,
        "locale.dcgettext"
      ]
    ],
    "delocalize() (in module locale)": [
      [
        265,
        "locale.delocalize"
      ]
    ],
    "dgettext() (in module locale)": [
      [
        265,
        "locale.dgettext"
      ]
    ],
    "format_string() (in module locale)": [
      [
        265,
        "locale.format_string"
      ]
    ],
    "getdefaultlocale() (in module locale)": [
      [
        265,
        "locale.getdefaultlocale"
      ]
    ],
    "getencoding() (in module locale)": [
      [
        265,
        "locale.getencoding"
      ]
    ],
    "getlocale() (in module locale)": [
      [
        265,
        "locale.getlocale"
      ]
    ],
    "getpreferredencoding() (in module locale)": [
      [
        265,
        "locale.getpreferredencoding"
      ]
    ],
    "gettext() (in module locale)": [
      [
        265,
        "locale.gettext"
      ]
    ],
    "locale": [
      [
        265,
        "module-locale"
      ]
    ],
    "localeconv() (in module locale)": [
      [
        265,
        "locale.localeconv"
      ]
    ],
    "localize() (in module locale)": [
      [
        265,
        "locale.localize"
      ]
    ],
    "nl_langinfo() (in module locale)": [
      [
        265,
        "locale.nl_langinfo"
      ]
    ],
    "normalize() (in module locale)": [
      [
        265,
        "locale.normalize"
      ]
    ],
    "resetlocale() (in module locale)": [
      [
        265,
        "locale.resetlocale"
      ]
    ],
    "setlocale() (in module locale)": [
      [
        265,
        "locale.setlocale"
      ]
    ],
    "str() (in module locale)": [
      [
        265,
        "locale.str"
      ]
    ],
    "strcoll() (in module locale)": [
      [
        265,
        "locale.strcoll"
      ]
    ],
    "strxfrm() (in module locale)": [
      [
        265,
        "locale.strxfrm"
      ]
    ],
    "textdomain() (in module locale)": [
      [
        265,
        "locale.textdomain"
      ]
    ],
    "bufferingformatter (class in logging)": [
      [
        266,
        "logging.BufferingFormatter"
      ]
    ],
    "critical (in module logging)": [
      [
        266,
        "logging.CRITICAL"
      ]
    ],
    "debug (in module logging)": [
      [
        266,
        "logging.DEBUG"
      ]
    ],
    "error (in module logging)": [
      [
        266,
        "logging.ERROR"
      ]
    ],
    "errors": [
      [
        266,
        "index-0"
      ],
      [
        428,
        "index-15"
      ]
    ],
    "filter (class in logging)": [
      [
        266,
        "logging.Filter"
      ]
    ],
    "formatter (class in logging)": [
      [
        266,
        "logging.Formatter"
      ]
    ],
    "handler (class in logging)": [
      [
        266,
        "logging.Handler"
      ]
    ],
    "info (in module logging)": [
      [
        266,
        "logging.INFO"
      ]
    ],
    "logrecord (class in logging)": [
      [
        266,
        "logging.LogRecord"
      ]
    ],
    "logger (class in logging)": [
      [
        266,
        "logging.Logger"
      ]
    ],
    "loggeradapter (class in logging)": [
      [
        266,
        "logging.LoggerAdapter"
      ]
    ],
    "notset (in module logging)": [
      [
        266,
        "logging.NOTSET"
      ]
    ],
    "pep 282": [
      [
        266,
        "index-1"
      ],
      [
        331,
        "index-2"
      ],
      [
        464,
        "index-11"
      ],
      [
        464,
        "index-12"
      ]
    ],
    "warning (in module logging)": [
      [
        266,
        "logging.WARNING"
      ]
    ],
    "__init__() (logging.handler method)": [
      [
        266,
        "logging.Handler.__init__"
      ]
    ],
    "_log (logging.loggeradapter attribute)": [
      [
        266,
        "logging.LoggerAdapter._log"
      ]
    ],
    "acquire() (logging.handler method)": [
      [
        266,
        "logging.Handler.acquire"
      ]
    ],
    "addfilter() (logging.handler method)": [
      [
        266,
        "logging.Handler.addFilter"
      ]
    ],
    "addfilter() (logging.logger method)": [
      [
        266,
        "logging.Logger.addFilter"
      ]
    ],
    "addhandler() (logging.logger method)": [
      [
        266,
        "logging.Logger.addHandler"
      ]
    ],
    "addlevelname() (in module logging)": [
      [
        266,
        "logging.addLevelName"
      ]
    ],
    "basicconfig() (in module logging)": [
      [
        266,
        "logging.basicConfig"
      ]
    ],
    "capturewarnings() (in module logging)": [
      [
        266,
        "logging.captureWarnings"
      ]
    ],
    "close() (logging.handler method)": [
      [
        266,
        "logging.Handler.close"
      ]
    ],
    "createlock() (logging.handler method)": [
      [
        266,
        "logging.Handler.createLock"
      ]
    ],
    "critical() (in module logging)": [
      [
        266,
        "logging.critical"
      ]
    ],
    "critical() (logging.logger method)": [
      [
        266,
        "logging.Logger.critical"
      ]
    ],
    "debug() (in module logging)": [
      [
        266,
        "logging.debug"
      ]
    ],
    "debug() (logging.logger method)": [
      [
        266,
        "logging.Logger.debug"
      ]
    ],
    "disable() (in module logging)": [
      [
        266,
        "logging.disable"
      ]
    ],
    "disabled (logging.logger attribute)": [
      [
        266,
        "logging.Logger.disabled"
      ]
    ],
    "emit() (logging.handler method)": [
      [
        266,
        "logging.Handler.emit"
      ]
    ],
    "error() (in module logging)": [
      [
        266,
        "logging.error"
      ]
    ],
    "error() (logging.logger method)": [
      [
        266,
        "logging.Logger.error"
      ]
    ],
    "exception() (in module logging)": [
      [
        266,
        "logging.exception"
      ]
    ],
    "exception() (logging.logger method)": [
      [
        266,
        "logging.Logger.exception"
      ]
    ],
    "filter() (logging.filter method)": [
      [
        266,
        "logging.Filter.filter"
      ]
    ],
    "filter() (logging.handler method)": [
      [
        266,
        "logging.Handler.filter"
      ]
    ],
    "filter() (logging.logger method)": [
      [
        266,
        "logging.Logger.filter"
      ]
    ],
    "findcaller() (logging.logger method)": [
      [
        266,
        "logging.Logger.findCaller"
      ]
    ],
    "flush() (logging.handler method)": [
      [
        266,
        "logging.Handler.flush"
      ]
    ],
    "format() (logging.bufferingformatter method)": [
      [
        266,
        "logging.BufferingFormatter.format"
      ]
    ],
    "format() (logging.formatter method)": [
      [
        266,
        "logging.Formatter.format"
      ]
    ],
    "format() (logging.handler method)": [
      [
        266,
        "logging.Handler.format"
      ]
    ],
    "formatexception() (logging.formatter method)": [
      [
        266,
        "logging.Formatter.formatException"
      ]
    ],
    "formatfooter() (logging.bufferingformatter method)": [
      [
        266,
        "logging.BufferingFormatter.formatFooter"
      ]
    ],
    "formatheader() (logging.bufferingformatter method)": [
      [
        266,
        "logging.BufferingFormatter.formatHeader"
      ]
    ],
    "formatstack() (logging.formatter method)": [
      [
        266,
        "logging.Formatter.formatStack"
      ]
    ],
    "formattime() (logging.formatter method)": [
      [
        266,
        "logging.Formatter.formatTime"
      ]
    ],
    "getchild() (logging.logger method)": [
      [
        266,
        "logging.Logger.getChild"
      ]
    ],
    "getchildren() (logging.logger method)": [
      [
        266,
        "logging.Logger.getChildren"
      ]
    ],
    "geteffectivelevel() (logging.logger method)": [
      [
        266,
        "logging.Logger.getEffectiveLevel"
      ]
    ],
    "gethandlerbyname() (in module logging)": [
      [
        266,
        "logging.getHandlerByName"
      ]
    ],
    "gethandlernames() (in module logging)": [
      [
        266,
        "logging.getHandlerNames"
      ]
    ],
    "getlevelname() (in module logging)": [
      [
        266,
        "logging.getLevelName"
      ]
    ],
    "getlevelnamesmapping() (in module logging)": [
      [
        266,
        "logging.getLevelNamesMapping"
      ]
    ],
    "getlogrecordfactory() (in module logging)": [
      [
        266,
        "logging.getLogRecordFactory"
      ]
    ],
    "getlogger() (in module logging)": [
      [
        266,
        "logging.getLogger"
      ]
    ],
    "getloggerclass() (in module logging)": [
      [
        266,
        "logging.getLoggerClass"
      ]
    ],
    "getmessage() (logging.logrecord method)": [
      [
        266,
        "logging.LogRecord.getMessage"
      ]
    ],
    "handle() (logging.handler method)": [
      [
        266,
        "logging.Handler.handle"
      ]
    ],
    "handle() (logging.logger method)": [
      [
        266,
        "logging.Logger.handle"
      ]
    ],
    "handleerror() (logging.handler method)": [
      [
        266,
        "logging.Handler.handleError"
      ]
    ],
    "handlers (logging.logger attribute)": [
      [
        266,
        "logging.Logger.handlers"
      ]
    ],
    "hashandlers() (logging.logger method)": [
      [
        266,
        "logging.Logger.hasHandlers"
      ]
    ],
    "info() (in module logging)": [
      [
        266,
        "logging.info"
      ]
    ],
    "info() (logging.logger method)": [
      [
        266,
        "logging.Logger.info"
      ]
    ],
    "isenabledfor() (logging.logger method)": [
      [
        266,
        "logging.Logger.isEnabledFor"
      ]
    ],
    "lastresort (in module logging)": [
      [
        266,
        "logging.lastResort"
      ]
    ],
    "level (logging.logger attribute)": [
      [
        266,
        "logging.Logger.level"
      ]
    ],
    "log() (in module logging)": [
      [
        266,
        "logging.log"
      ]
    ],
    "log() (logging.logger method)": [
      [
        266,
        "logging.Logger.log"
      ]
    ],
    "logging": [
      [
        266,
        "index-0"
      ],
      [
        266,
        "module-logging"
      ]
    ],
    "makelogrecord() (in module logging)": [
      [
        266,
        "logging.makeLogRecord"
      ]
    ],
    "makerecord() (logging.logger method)": [
      [
        266,
        "logging.Logger.makeRecord"
      ]
    ],
    "manager (logging.loggeradapter attribute)": [
      [
        266,
        "logging.LoggerAdapter.manager"
      ]
    ],
    "name (logging.logger attribute)": [
      [
        266,
        "logging.Logger.name"
      ]
    ],
    "parent (logging.logger attribute)": [
      [
        266,
        "logging.Logger.parent"
      ]
    ],
    "process() (logging.loggeradapter method)": [
      [
        266,
        "logging.LoggerAdapter.process"
      ]
    ],
    "propagate (logging.logger attribute)": [
      [
        266,
        "logging.Logger.propagate"
      ]
    ],
    "raiseexceptions (in module logging)": [
      [
        266,
        "logging.raiseExceptions"
      ]
    ],
    "release() (logging.handler method)": [
      [
        266,
        "logging.Handler.release"
      ]
    ],
    "removefilter() (logging.handler method)": [
      [
        266,
        "logging.Handler.removeFilter"
      ]
    ],
    "removefilter() (logging.logger method)": [
      [
        266,
        "logging.Logger.removeFilter"
      ]
    ],
    "removehandler() (logging.logger method)": [
      [
        266,
        "logging.Logger.removeHandler"
      ]
    ],
    "setformatter() (logging.handler method)": [
      [
        266,
        "logging.Handler.setFormatter"
      ]
    ],
    "setlevel() (logging.handler method)": [
      [
        266,
        "logging.Handler.setLevel"
      ]
    ],
    "setlevel() (logging.logger method)": [
      [
        266,
        "logging.Logger.setLevel"
      ]
    ],
    "setlogrecordfactory() (in module logging)": [
      [
        266,
        "logging.setLogRecordFactory"
      ]
    ],
    "setloggerclass() (in module logging)": [
      [
        266,
        "logging.setLoggerClass"
      ]
    ],
    "shutdown() (in module logging)": [
      [
        266,
        "logging.shutdown"
      ]
    ],
    "warning() (in module logging)": [
      [
        266,
        "logging.warning"
      ]
    ],
    "warning() (logging.logger method)": [
      [
        266,
        "logging.Logger.warning"
      ]
    ],
    "dictconfig() (in module logging.config)": [
      [
        267,
        "logging.config.dictConfig"
      ]
    ],
    "fileconfig() (in module logging.config)": [
      [
        267,
        "logging.config.fileConfig"
      ]
    ],
    "listen() (in module logging.config)": [
      [
        267,
        "logging.config.listen"
      ]
    ],
    "logging.config": [
      [
        267,
        "module-logging.config"
      ]
    ],
    "stoplistening() (in module logging.config)": [
      [
        267,
        "logging.config.stopListening"
      ]
    ],
    "baserotatinghandler (class in logging.handlers)": [
      [
        268,
        "logging.handlers.BaseRotatingHandler"
      ]
    ],
    "bufferinghandler (class in logging.handlers)": [
      [
        268,
        "logging.handlers.BufferingHandler"
      ]
    ],
    "datagramhandler (class in logging.handlers)": [
      [
        268,
        "logging.handlers.DatagramHandler"
      ]
    ],
    "filehandler (class in logging)": [
      [
        268,
        "logging.FileHandler"
      ]
    ],
    "httphandler (class in logging.handlers)": [
      [
        268,
        "logging.handlers.HTTPHandler"
      ]
    ],
    "memoryhandler (class in logging.handlers)": [
      [
        268,
        "logging.handlers.MemoryHandler"
      ]
    ],
    "nteventloghandler (class in logging.handlers)": [
      [
        268,
        "logging.handlers.NTEventLogHandler"
      ]
    ],
    "nullhandler (class in logging)": [
      [
        268,
        "logging.NullHandler"
      ]
    ],
    "queuehandler (class in logging.handlers)": [
      [
        268,
        "logging.handlers.QueueHandler"
      ]
    ],
    "queuelistener (class in logging.handlers)": [
      [
        268,
        "logging.handlers.QueueListener"
      ]
    ],
    "rotatingfilehandler (class in logging.handlers)": [
      [
        268,
        "logging.handlers.RotatingFileHandler"
      ]
    ],
    "smtphandler (class in logging.handlers)": [
      [
        268,
        "logging.handlers.SMTPHandler"
      ]
    ],
    "sockethandler (class in logging.handlers)": [
      [
        268,
        "logging.handlers.SocketHandler"
      ]
    ],
    "streamhandler (class in logging)": [
      [
        268,
        "logging.StreamHandler"
      ]
    ],
    "sysloghandler (class in logging.handlers)": [
      [
        268,
        "logging.handlers.SysLogHandler"
      ]
    ],
    "timedrotatingfilehandler (class in logging.handlers)": [
      [
        268,
        "logging.handlers.TimedRotatingFileHandler"
      ]
    ],
    "watchedfilehandler (class in logging.handlers)": [
      [
        268,
        "logging.handlers.WatchedFileHandler"
      ]
    ],
    "close() (logging.filehandler method)": [
      [
        268,
        "logging.FileHandler.close"
      ]
    ],
    "close() (logging.handlers.memoryhandler method)": [
      [
        268,
        "logging.handlers.MemoryHandler.close"
      ]
    ],
    "close() (logging.handlers.nteventloghandler method)": [
      [
        268,
        "logging.handlers.NTEventLogHandler.close"
      ]
    ],
    "close() (logging.handlers.sockethandler method)": [
      [
        268,
        "logging.handlers.SocketHandler.close"
      ]
    ],
    "close() (logging.handlers.sysloghandler method)": [
      [
        268,
        "logging.handlers.SysLogHandler.close"
      ]
    ],
    "createlock() (logging.nullhandler method)": [
      [
        268,
        "logging.NullHandler.createLock"
      ]
    ],
    "createsocket() (logging.handlers.sockethandler method)": [
      [
        268,
        "logging.handlers.SocketHandler.createSocket"
      ]
    ],
    "createsocket() (logging.handlers.sysloghandler method)": [
      [
        268,
        "logging.handlers.SysLogHandler.createSocket"
      ]
    ],
    "dequeue() (logging.handlers.queuelistener method)": [
      [
        268,
        "logging.handlers.QueueListener.dequeue"
      ]
    ],
    "dorollover() (logging.handlers.rotatingfilehandler method)": [
      [
        268,
        "logging.handlers.RotatingFileHandler.doRollover"
      ]
    ],
    "dorollover() (logging.handlers.timedrotatingfilehandler method)": [
      [
        268,
        "logging.handlers.TimedRotatingFileHandler.doRollover"
      ]
    ],
    "emit() (logging.filehandler method)": [
      [
        268,
        "logging.FileHandler.emit"
      ]
    ],
    "emit() (logging.nullhandler method)": [
      [
        268,
        "logging.NullHandler.emit"
      ]
    ],
    "emit() (logging.streamhandler method)": [
      [
        268,
        "logging.StreamHandler.emit"
      ]
    ],
    "emit() (logging.handlers.bufferinghandler method)": [
      [
        268,
        "logging.handlers.BufferingHandler.emit"
      ]
    ],
    "emit() (logging.handlers.datagramhandler method)": [
      [
        268,
        "logging.handlers.DatagramHandler.emit"
      ]
    ],
    "emit() (logging.handlers.httphandler method)": [
      [
        268,
        "logging.handlers.HTTPHandler.emit"
      ]
    ],
    "emit() (logging.handlers.nteventloghandler method)": [
      [
        268,
        "logging.handlers.NTEventLogHandler.emit"
      ]
    ],
    "emit() (logging.handlers.queuehandler method)": [
      [
        268,
        "logging.handlers.QueueHandler.emit"
      ]
    ],
    "emit() (logging.handlers.rotatingfilehandler method)": [
      [
        268,
        "logging.handlers.RotatingFileHandler.emit"
      ]
    ],
    "emit() (logging.handlers.smtphandler method)": [
      [
        268,
        "logging.handlers.SMTPHandler.emit"
      ]
    ],
    "emit() (logging.handlers.sockethandler method)": [
      [
        268,
        "logging.handlers.SocketHandler.emit"
      ]
    ],
    "emit() (logging.handlers.sysloghandler method)": [
      [
        268,
        "logging.handlers.SysLogHandler.emit"
      ]
    ],
    "emit() (logging.handlers.timedrotatingfilehandler method)": [
      [
        268,
        "logging.handlers.TimedRotatingFileHandler.emit"
      ]
    ],
    "emit() (logging.handlers.watchedfilehandler method)": [
      [
        268,
        "logging.handlers.WatchedFileHandler.emit"
      ]
    ],
    "encodepriority() (logging.handlers.sysloghandler method)": [
      [
        268,
        "logging.handlers.SysLogHandler.encodePriority"
      ]
    ],
    "enqueue() (logging.handlers.queuehandler method)": [
      [
        268,
        "logging.handlers.QueueHandler.enqueue"
      ]
    ],
    "enqueue_sentinel() (logging.handlers.queuelistener method)": [
      [
        268,
        "logging.handlers.QueueListener.enqueue_sentinel"
      ]
    ],
    "flush() (logging.streamhandler method)": [
      [
        268,
        "logging.StreamHandler.flush"
      ]
    ],
    "flush() (logging.handlers.bufferinghandler method)": [
      [
        268,
        "logging.handlers.BufferingHandler.flush"
      ]
    ],
    "flush() (logging.handlers.memoryhandler method)": [
      [
        268,
        "logging.handlers.MemoryHandler.flush"
      ]
    ],
    "geteventcategory() (logging.handlers.nteventloghandler method)": [
      [
        268,
        "logging.handlers.NTEventLogHandler.getEventCategory"
      ]
    ],
    "geteventtype() (logging.handlers.nteventloghandler method)": [
      [
        268,
        "logging.handlers.NTEventLogHandler.getEventType"
      ]
    ],
    "getfilestodelete() (logging.handlers.timedrotatingfilehandler method)": [
      [
        268,
        "logging.handlers.TimedRotatingFileHandler.getFilesToDelete"
      ]
    ],
    "getmessageid() (logging.handlers.nteventloghandler method)": [
      [
        268,
        "logging.handlers.NTEventLogHandler.getMessageID"
      ]
    ],
    "getsubject() (logging.handlers.smtphandler method)": [
      [
        268,
        "logging.handlers.SMTPHandler.getSubject"
      ]
    ],
    "handle() (logging.nullhandler method)": [
      [
        268,
        "logging.NullHandler.handle"
      ]
    ],
    "handle() (logging.handlers.queuelistener method)": [
      [
        268,
        "logging.handlers.QueueListener.handle"
      ]
    ],
    "handleerror() (logging.handlers.sockethandler method)": [
      [
        268,
        "logging.handlers.SocketHandler.handleError"
      ]
    ],
    "listener (logging.handlers.queuehandler attribute)": [
      [
        268,
        "logging.handlers.QueueHandler.listener"
      ]
    ],
    "logging.handlers": [
      [
        268,
        "module-logging.handlers"
      ]
    ],
    "makepickle() (logging.handlers.sockethandler method)": [
      [
        268,
        "logging.handlers.SocketHandler.makePickle"
      ]
    ],
    "makesocket() (logging.handlers.datagramhandler method)": [
      [
        268,
        "logging.handlers.DatagramHandler.makeSocket"
      ]
    ],
    "makesocket() (logging.handlers.sockethandler method)": [
      [
        268,
        "logging.handlers.SocketHandler.makeSocket"
      ]
    ],
    "maplogrecord() (logging.handlers.httphandler method)": [
      [
        268,
        "logging.handlers.HTTPHandler.mapLogRecord"
      ]
    ],
    "mappriority() (logging.handlers.sysloghandler method)": [
      [
        268,
        "logging.handlers.SysLogHandler.mapPriority"
      ]
    ],
    "namer (logging.handlers.baserotatinghandler attribute)": [
      [
        268,
        "logging.handlers.BaseRotatingHandler.namer"
      ]
    ],
    "prepare() (logging.handlers.queuehandler method)": [
      [
        268,
        "logging.handlers.QueueHandler.prepare"
      ]
    ],
    "prepare() (logging.handlers.queuelistener method)": [
      [
        268,
        "logging.handlers.QueueListener.prepare"
      ]
    ],
    "reopenifneeded() (logging.handlers.watchedfilehandler method)": [
      [
        268,
        "logging.handlers.WatchedFileHandler.reopenIfNeeded"
      ]
    ],
    "rotate() (logging.handlers.baserotatinghandler method)": [
      [
        268,
        "logging.handlers.BaseRotatingHandler.rotate"
      ]
    ],
    "rotation_filename() (logging.handlers.baserotatinghandler method)": [
      [
        268,
        "logging.handlers.BaseRotatingHandler.rotation_filename"
      ]
    ],
    "rotator (logging.handlers.baserotatinghandler attribute)": [
      [
        268,
        "logging.handlers.BaseRotatingHandler.rotator"
      ]
    ],
    "send() (logging.handlers.datagramhandler method)": [
      [
        268,
        "logging.handlers.DatagramHandler.send"
      ]
    ],
    "send() (logging.handlers.sockethandler method)": [
      [
        268,
        "logging.handlers.SocketHandler.send"
      ]
    ],
    "setstream() (logging.streamhandler method)": [
      [
        268,
        "logging.StreamHandler.setStream"
      ]
    ],
    "settarget() (logging.handlers.memoryhandler method)": [
      [
        268,
        "logging.handlers.MemoryHandler.setTarget"
      ]
    ],
    "shouldflush() (logging.handlers.bufferinghandler method)": [
      [
        268,
        "logging.handlers.BufferingHandler.shouldFlush"
      ]
    ],
    "shouldflush() (logging.handlers.memoryhandler method)": [
      [
        268,
        "logging.handlers.MemoryHandler.shouldFlush"
      ]
    ],
    "start() (logging.handlers.queuelistener method)": [
      [
        268,
        "logging.handlers.QueueListener.start"
      ]
    ],
    "stop() (logging.handlers.queuelistener method)": [
      [
        268,
        "logging.handlers.QueueListener.stop"
      ]
    ],
    "terminator (logging.streamhandler attribute)": [
      [
        268,
        "logging.StreamHandler.terminator"
      ]
    ],
    "lzmacompressor (class in lzma)": [
      [
        269,
        "lzma.LZMACompressor"
      ]
    ],
    "lzmadecompressor (class in lzma)": [
      [
        269,
        "lzma.LZMADecompressor"
      ]
    ],
    "lzmaerror": [
      [
        269,
        "lzma.LZMAError"
      ]
    ],
    "lzmafile (class in lzma)": [
      [
        269,
        "lzma.LZMAFile"
      ]
    ],
    "check (lzma.lzmadecompressor attribute)": [
      [
        269,
        "lzma.LZMADecompressor.check"
      ]
    ],
    "compress() (in module lzma)": [
      [
        269,
        "lzma.compress"
      ]
    ],
    "compress() (lzma.lzmacompressor method)": [
      [
        269,
        "lzma.LZMACompressor.compress"
      ]
    ],
    "decompress() (in module lzma)": [
      [
        269,
        "lzma.decompress"
      ]
    ],
    "decompress() (lzma.lzmadecompressor method)": [
      [
        269,
        "lzma.LZMADecompressor.decompress"
      ]
    ],
    "eof (lzma.lzmadecompressor attribute)": [
      [
        269,
        "lzma.LZMADecompressor.eof"
      ]
    ],
    "flush() (lzma.lzmacompressor method)": [
      [
        269,
        "lzma.LZMACompressor.flush"
      ]
    ],
    "is_check_supported() (in module lzma)": [
      [
        269,
        "lzma.is_check_supported"
      ]
    ],
    "lzma": [
      [
        269,
        "module-lzma"
      ]
    ],
    "needs_input (lzma.lzmadecompressor attribute)": [
      [
        269,
        "lzma.LZMADecompressor.needs_input"
      ]
    ],
    "open() (in module lzma)": [
      [
        269,
        "lzma.open"
      ]
    ],
    "peek() (lzma.lzmafile method)": [
      [
        269,
        "lzma.LZMAFile.peek"
      ]
    ],
    "unused_data (lzma.lzmadecompressor attribute)": [
      [
        269,
        "lzma.LZMADecompressor.unused_data"
      ]
    ],
    "babyl (class in mailbox)": [
      [
        270,
        "mailbox.Babyl"
      ]
    ],
    "babylmessage (class in mailbox)": [
      [
        270,
        "mailbox.BabylMessage"
      ]
    ],
    "externalclasherror": [
      [
        270,
        "mailbox.ExternalClashError"
      ]
    ],
    "formaterror": [
      [
        270,
        "mailbox.FormatError"
      ]
    ],
    "mh (class in mailbox)": [
      [
        270,
        "mailbox.MH"
      ]
    ],
    "mhmessage (class in mailbox)": [
      [
        270,
        "mailbox.MHMessage"
      ]
    ],
    "mmdf (class in mailbox)": [
      [
        270,
        "mailbox.MMDF"
      ]
    ],
    "mmdfmessage (class in mailbox)": [
      [
        270,
        "mailbox.MMDFMessage"
      ]
    ],
    "mailbox (class in mailbox)": [
      [
        270,
        "mailbox.Mailbox"
      ]
    ],
    "maildir (class in mailbox)": [
      [
        270,
        "mailbox.Maildir"
      ]
    ],
    "maildirmessage (class in mailbox)": [
      [
        270,
        "mailbox.MaildirMessage"
      ]
    ],
    "message (class in mailbox)": [
      [
        270,
        "mailbox.Message"
      ]
    ],
    "nosuchmailboxerror": [
      [
        270,
        "mailbox.NoSuchMailboxError"
      ]
    ],
    "notemptyerror": [
      [
        270,
        "mailbox.NotEmptyError"
      ]
    ],
    "__contains__() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.__contains__"
      ]
    ],
    "__delitem__() (mailbox.mh method)": [
      [
        270,
        "mailbox.MH.__delitem__"
      ]
    ],
    "__delitem__() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.__delitem__"
      ]
    ],
    "__getitem__() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.__getitem__"
      ]
    ],
    "__iter__() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.__iter__"
      ]
    ],
    "__len__() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.__len__"
      ]
    ],
    "__setitem__() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.__setitem__"
      ]
    ],
    "__setitem__() (mailbox.maildir method)": [
      [
        270,
        "mailbox.Maildir.__setitem__"
      ]
    ],
    "add() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.add"
      ]
    ],
    "add() (mailbox.maildir method)": [
      [
        270,
        "mailbox.Maildir.add"
      ]
    ],
    "add_flag() (mailbox.mmdfmessage method)": [
      [
        270,
        "mailbox.MMDFMessage.add_flag"
      ]
    ],
    "add_flag() (mailbox.maildirmessage method)": [
      [
        270,
        "mailbox.MaildirMessage.add_flag"
      ]
    ],
    "add_flag() (mailbox.mboxmessage method)": [
      [
        270,
        "mailbox.mboxMessage.add_flag"
      ]
    ],
    "add_folder() (mailbox.mh method)": [
      [
        270,
        "mailbox.MH.add_folder"
      ]
    ],
    "add_folder() (mailbox.maildir method)": [
      [
        270,
        "mailbox.Maildir.add_folder"
      ]
    ],
    "add_label() (mailbox.babylmessage method)": [
      [
        270,
        "mailbox.BabylMessage.add_label"
      ]
    ],
    "add_sequence() (mailbox.mhmessage method)": [
      [
        270,
        "mailbox.MHMessage.add_sequence"
      ]
    ],
    "clean() (mailbox.maildir method)": [
      [
        270,
        "mailbox.Maildir.clean"
      ]
    ],
    "clear() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.clear"
      ]
    ],
    "close() (mailbox.mh method)": [
      [
        270,
        "mailbox.MH.close"
      ]
    ],
    "close() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.close"
      ]
    ],
    "close() (mailbox.maildir method)": [
      [
        270,
        "mailbox.Maildir.close"
      ]
    ],
    "colon (mailbox.maildir attribute)": [
      [
        270,
        "mailbox.Maildir.colon"
      ]
    ],
    "discard() (mailbox.mh method)": [
      [
        270,
        "mailbox.MH.discard"
      ]
    ],
    "discard() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.discard"
      ]
    ],
    "flush() (mailbox.mh method)": [
      [
        270,
        "mailbox.MH.flush"
      ]
    ],
    "flush() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.flush"
      ]
    ],
    "flush() (mailbox.maildir method)": [
      [
        270,
        "mailbox.Maildir.flush"
      ]
    ],
    "get() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.get"
      ]
    ],
    "get_bytes() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.get_bytes"
      ]
    ],
    "get_date() (mailbox.maildirmessage method)": [
      [
        270,
        "mailbox.MaildirMessage.get_date"
      ]
    ],
    "get_file() (mailbox.babyl method)": [
      [
        270,
        "mailbox.Babyl.get_file"
      ]
    ],
    "get_file() (mailbox.mh method)": [
      [
        270,
        "mailbox.MH.get_file"
      ]
    ],
    "get_file() (mailbox.mmdf method)": [
      [
        270,
        "mailbox.MMDF.get_file"
      ]
    ],
    "get_file() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.get_file"
      ]
    ],
    "get_file() (mailbox.maildir method)": [
      [
        270,
        "mailbox.Maildir.get_file"
      ]
    ],
    "get_file() (mailbox.mbox method)": [
      [
        270,
        "mailbox.mbox.get_file"
      ]
    ],
    "get_flags() (mailbox.mmdfmessage method)": [
      [
        270,
        "mailbox.MMDFMessage.get_flags"
      ]
    ],
    "get_flags() (mailbox.maildirmessage method)": [
      [
        270,
        "mailbox.MaildirMessage.get_flags"
      ]
    ],
    "get_flags() (mailbox.mboxmessage method)": [
      [
        270,
        "mailbox.mboxMessage.get_flags"
      ]
    ],
    "get_folder() (mailbox.mh method)": [
      [
        270,
        "mailbox.MH.get_folder"
      ]
    ],
    "get_folder() (mailbox.maildir method)": [
      [
        270,
        "mailbox.Maildir.get_folder"
      ]
    ],
    "get_from() (mailbox.mmdfmessage method)": [
      [
        270,
        "mailbox.MMDFMessage.get_from"
      ]
    ],
    "get_from() (mailbox.mboxmessage method)": [
      [
        270,
        "mailbox.mboxMessage.get_from"
      ]
    ],
    "get_info() (mailbox.maildirmessage method)": [
      [
        270,
        "mailbox.MaildirMessage.get_info"
      ]
    ],
    "get_labels() (mailbox.babyl method)": [
      [
        270,
        "mailbox.Babyl.get_labels"
      ]
    ],
    "get_labels() (mailbox.babylmessage method)": [
      [
        270,
        "mailbox.BabylMessage.get_labels"
      ]
    ],
    "get_message() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.get_message"
      ]
    ],
    "get_sequences() (mailbox.mh method)": [
      [
        270,
        "mailbox.MH.get_sequences"
      ]
    ],
    "get_sequences() (mailbox.mhmessage method)": [
      [
        270,
        "mailbox.MHMessage.get_sequences"
      ]
    ],
    "get_string() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.get_string"
      ]
    ],
    "get_subdir() (mailbox.maildirmessage method)": [
      [
        270,
        "mailbox.MaildirMessage.get_subdir"
      ]
    ],
    "get_visible() (mailbox.babylmessage method)": [
      [
        270,
        "mailbox.BabylMessage.get_visible"
      ]
    ],
    "items() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.items"
      ]
    ],
    "iteritems() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.iteritems"
      ]
    ],
    "iterkeys() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.iterkeys"
      ]
    ],
    "itervalues() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.itervalues"
      ]
    ],
    "keys() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.keys"
      ]
    ],
    "list_folders() (mailbox.mh method)": [
      [
        270,
        "mailbox.MH.list_folders"
      ]
    ],
    "list_folders() (mailbox.maildir method)": [
      [
        270,
        "mailbox.Maildir.list_folders"
      ]
    ],
    "lock() (mailbox.babyl method)": [
      [
        270,
        "mailbox.Babyl.lock"
      ]
    ],
    "lock() (mailbox.mh method)": [
      [
        270,
        "mailbox.MH.lock"
      ]
    ],
    "lock() (mailbox.mmdf method)": [
      [
        270,
        "mailbox.MMDF.lock"
      ]
    ],
    "lock() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.lock"
      ]
    ],
    "lock() (mailbox.maildir method)": [
      [
        270,
        "mailbox.Maildir.lock"
      ]
    ],
    "lock() (mailbox.mbox method)": [
      [
        270,
        "mailbox.mbox.lock"
      ]
    ],
    "mailbox": [
      [
        270,
        "module-mailbox"
      ]
    ],
    "mbox (class in mailbox)": [
      [
        270,
        "mailbox.mbox"
      ]
    ],
    "mboxmessage (class in mailbox)": [
      [
        270,
        "mailbox.mboxMessage"
      ]
    ],
    "pack() (mailbox.mh method)": [
      [
        270,
        "mailbox.MH.pack"
      ]
    ],
    "pop() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.pop"
      ]
    ],
    "popitem() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.popitem"
      ]
    ],
    "remove() (mailbox.mh method)": [
      [
        270,
        "mailbox.MH.remove"
      ]
    ],
    "remove() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.remove"
      ]
    ],
    "remove_flag() (mailbox.mmdfmessage method)": [
      [
        270,
        "mailbox.MMDFMessage.remove_flag"
      ]
    ],
    "remove_flag() (mailbox.maildirmessage method)": [
      [
        270,
        "mailbox.MaildirMessage.remove_flag"
      ]
    ],
    "remove_flag() (mailbox.mboxmessage method)": [
      [
        270,
        "mailbox.mboxMessage.remove_flag"
      ]
    ],
    "remove_folder() (mailbox.mh method)": [
      [
        270,
        "mailbox.MH.remove_folder"
      ]
    ],
    "remove_folder() (mailbox.maildir method)": [
      [
        270,
        "mailbox.Maildir.remove_folder"
      ]
    ],
    "remove_label() (mailbox.babylmessage method)": [
      [
        270,
        "mailbox.BabylMessage.remove_label"
      ]
    ],
    "remove_sequence() (mailbox.mhmessage method)": [
      [
        270,
        "mailbox.MHMessage.remove_sequence"
      ]
    ],
    "set_date() (mailbox.maildirmessage method)": [
      [
        270,
        "mailbox.MaildirMessage.set_date"
      ]
    ],
    "set_flags() (mailbox.mmdfmessage method)": [
      [
        270,
        "mailbox.MMDFMessage.set_flags"
      ]
    ],
    "set_flags() (mailbox.maildirmessage method)": [
      [
        270,
        "mailbox.MaildirMessage.set_flags"
      ]
    ],
    "set_flags() (mailbox.mboxmessage method)": [
      [
        270,
        "mailbox.mboxMessage.set_flags"
      ]
    ],
    "set_from() (mailbox.mmdfmessage method)": [
      [
        270,
        "mailbox.MMDFMessage.set_from"
      ]
    ],
    "set_from() (mailbox.mboxmessage method)": [
      [
        270,
        "mailbox.mboxMessage.set_from"
      ]
    ],
    "set_info() (mailbox.maildirmessage method)": [
      [
        270,
        "mailbox.MaildirMessage.set_info"
      ]
    ],
    "set_labels() (mailbox.babylmessage method)": [
      [
        270,
        "mailbox.BabylMessage.set_labels"
      ]
    ],
    "set_sequences() (mailbox.mh method)": [
      [
        270,
        "mailbox.MH.set_sequences"
      ]
    ],
    "set_sequences() (mailbox.mhmessage method)": [
      [
        270,
        "mailbox.MHMessage.set_sequences"
      ]
    ],
    "set_subdir() (mailbox.maildirmessage method)": [
      [
        270,
        "mailbox.MaildirMessage.set_subdir"
      ]
    ],
    "set_visible() (mailbox.babylmessage method)": [
      [
        270,
        "mailbox.BabylMessage.set_visible"
      ]
    ],
    "unlock() (mailbox.babyl method)": [
      [
        270,
        "mailbox.Babyl.unlock"
      ]
    ],
    "unlock() (mailbox.mh method)": [
      [
        270,
        "mailbox.MH.unlock"
      ]
    ],
    "unlock() (mailbox.mmdf method)": [
      [
        270,
        "mailbox.MMDF.unlock"
      ]
    ],
    "unlock() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.unlock"
      ]
    ],
    "unlock() (mailbox.maildir method)": [
      [
        270,
        "mailbox.Maildir.unlock"
      ]
    ],
    "unlock() (mailbox.mbox method)": [
      [
        270,
        "mailbox.mbox.unlock"
      ]
    ],
    "update() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.update"
      ]
    ],
    "update() (mailbox.maildir method)": [
      [
        270,
        "mailbox.Maildir.update"
      ]
    ],
    "update_visible() (mailbox.babylmessage method)": [
      [
        270,
        "mailbox.BabylMessage.update_visible"
      ]
    ],
    "values() (mailbox.mailbox method)": [
      [
        270,
        "mailbox.Mailbox.values"
      ]
    ],
    "pep 594#mailcap": [
      [
        271,
        "index-0"
      ]
    ],
    "rfc 1524": [
      [
        271,
        "index-1"
      ],
      [
        271,
        "index-2"
      ]
    ],
    "findmatch() (in module mailcap)": [
      [
        271,
        "mailcap.findmatch"
      ]
    ],
    "getcaps() (in module mailcap)": [
      [
        271,
        "mailcap.getcaps"
      ]
    ],
    "mailcap": [
      [
        271,
        "module-mailcap"
      ]
    ],
    "dump() (in module marshal)": [
      [
        273,
        "marshal.dump"
      ]
    ],
    "dumps() (in module marshal)": [
      [
        273,
        "marshal.dumps"
      ]
    ],
    "load() (in module marshal)": [
      [
        273,
        "marshal.load"
      ]
    ],
    "loads() (in module marshal)": [
      [
        273,
        "marshal.loads"
      ]
    ],
    "marshal": [
      [
        273,
        "module-marshal"
      ]
    ],
    "shelve": [
      [
        273,
        "index-0"
      ],
      [
        329,
        "module-shelve"
      ]
    ],
    "version (in module marshal)": [
      [
        273,
        "marshal.version"
      ]
    ],
    "acos() (in module math)": [
      [
        274,
        "math.acos"
      ]
    ],
    "acosh() (in module math)": [
      [
        274,
        "math.acosh"
      ]
    ],
    "asin() (in module math)": [
      [
        274,
        "math.asin"
      ]
    ],
    "asinh() (in module math)": [
      [
        274,
        "math.asinh"
      ]
    ],
    "atan() (in module math)": [
      [
        274,
        "math.atan"
      ]
    ],
    "atan2() (in module math)": [
      [
        274,
        "math.atan2"
      ]
    ],
    "atanh() (in module math)": [
      [
        274,
        "math.atanh"
      ]
    ],
    "cbrt() (in module math)": [
      [
        274,
        "math.cbrt"
      ]
    ],
    "ceil() (in module math)": [
      [
        274,
        "math.ceil"
      ],
      [
        343,
        "index-15"
      ]
    ],
    "comb() (in module math)": [
      [
        274,
        "math.comb"
      ]
    ],
    "copysign() (in module math)": [
      [
        274,
        "math.copysign"
      ]
    ],
    "cos() (in module math)": [
      [
        274,
        "math.cos"
      ]
    ],
    "cosh() (in module math)": [
      [
        274,
        "math.cosh"
      ]
    ],
    "degrees() (in module math)": [
      [
        274,
        "math.degrees"
      ]
    ],
    "dist() (in module math)": [
      [
        274,
        "math.dist"
      ]
    ],
    "e (in module math)": [
      [
        274,
        "math.e"
      ]
    ],
    "erf() (in module math)": [
      [
        274,
        "math.erf"
      ]
    ],
    "erfc() (in module math)": [
      [
        274,
        "math.erfc"
      ]
    ],
    "exp() (in module math)": [
      [
        274,
        "math.exp"
      ]
    ],
    "exp2() (in module math)": [
      [
        274,
        "math.exp2"
      ]
    ],
    "expm1() (in module math)": [
      [
        274,
        "math.expm1"
      ]
    ],
    "fabs() (in module math)": [
      [
        274,
        "math.fabs"
      ]
    ],
    "factorial() (in module math)": [
      [
        274,
        "math.factorial"
      ]
    ],
    "floor() (in module math)": [
      [
        274,
        "math.floor"
      ],
      [
        343,
        "index-15"
      ]
    ],
    "fmod() (in module math)": [
      [
        274,
        "math.fmod"
      ]
    ],
    "frexp() (in module math)": [
      [
        274,
        "math.frexp"
      ]
    ],
    "fsum() (in module math)": [
      [
        274,
        "math.fsum"
      ]
    ],
    "gamma() (in module math)": [
      [
        274,
        "math.gamma"
      ]
    ],
    "gcd() (in module math)": [
      [
        274,
        "math.gcd"
      ]
    ],
    "hypot() (in module math)": [
      [
        274,
        "math.hypot"
      ]
    ],
    "inf (in module math)": [
      [
        274,
        "math.inf"
      ]
    ],
    "isclose() (in module math)": [
      [
        274,
        "math.isclose"
      ]
    ],
    "isfinite() (in module math)": [
      [
        274,
        "math.isfinite"
      ]
    ],
    "isinf() (in module math)": [
      [
        274,
        "math.isinf"
      ]
    ],
    "isnan() (in module math)": [
      [
        274,
        "math.isnan"
      ]
    ],
    "isqrt() (in module math)": [
      [
        274,
        "math.isqrt"
      ]
    ],
    "lcm() (in module math)": [
      [
        274,
        "math.lcm"
      ]
    ],
    "ldexp() (in module math)": [
      [
        274,
        "math.ldexp"
      ]
    ],
    "lgamma() (in module math)": [
      [
        274,
        "math.lgamma"
      ]
    ],
    "log() (in module math)": [
      [
        274,
        "math.log"
      ]
    ],
    "log10() (in module math)": [
      [
        274,
        "math.log10"
      ]
    ],
    "log1p() (in module math)": [
      [
        274,
        "math.log1p"
      ]
    ],
    "log2() (in module math)": [
      [
        274,
        "math.log2"
      ]
    ],
    "modf() (in module math)": [
      [
        274,
        "math.modf"
      ]
    ],
    "nan (in module math)": [
      [
        274,
        "math.nan"
      ]
    ],
    "nextafter() (in module math)": [
      [
        274,
        "math.nextafter"
      ]
    ],
    "perm() (in module math)": [
      [
        274,
        "math.perm"
      ]
    ],
    "pi (in module math)": [
      [
        274,
        "math.pi"
      ]
    ],
    "pow() (in module math)": [
      [
        274,
        "math.pow"
      ]
    ],
    "prod() (in module math)": [
      [
        274,
        "math.prod"
      ]
    ],
    "radians() (in module math)": [
      [
        274,
        "math.radians"
      ]
    ],
    "remainder() (in module math)": [
      [
        274,
        "math.remainder"
      ]
    ],
    "sin() (in module math)": [
      [
        274,
        "math.sin"
      ]
    ],
    "sinh() (in module math)": [
      [
        274,
        "math.sinh"
      ]
    ],
    "sqrt() (in module math)": [
      [
        274,
        "math.sqrt"
      ]
    ],
    "sumprod() (in module math)": [
      [
        274,
        "math.sumprod"
      ]
    ],
    "tan() (in module math)": [
      [
        274,
        "math.tan"
      ]
    ],
    "tanh() (in module math)": [
      [
        274,
        "math.tanh"
      ]
    ],
    "tau (in module math)": [
      [
        274,
        "math.tau"
      ]
    ],
    "trunc() (in module math)": [
      [
        274,
        "math.trunc"
      ],
      [
        343,
        "index-15"
      ]
    ],
    "ulp() (in module math)": [
      [
        274,
        "math.ulp"
      ]
    ],
    "mimetypes (class in mimetypes)": [
      [
        275,
        "mimetypes.MimeTypes"
      ]
    ],
    "add_type() (in module mimetypes)": [
      [
        275,
        "mimetypes.add_type"
      ]
    ],
    "common_types (in module mimetypes)": [
      [
        275,
        "mimetypes.common_types"
      ]
    ],
    "content type": [
      [
        275,
        "index-0"
      ]
    ],
    "encodings_map (in module mimetypes)": [
      [
        275,
        "mimetypes.encodings_map"
      ]
    ],
    "encodings_map (mimetypes.mimetypes attribute)": [
      [
        275,
        "mimetypes.MimeTypes.encodings_map"
      ]
    ],
    "guess_all_extensions() (in module mimetypes)": [
      [
        275,
        "mimetypes.guess_all_extensions"
      ]
    ],
    "guess_all_extensions() (mimetypes.mimetypes method)": [
      [
        275,
        "mimetypes.MimeTypes.guess_all_extensions"
      ]
    ],
    "guess_extension() (in module mimetypes)": [
      [
        275,
        "mimetypes.guess_extension"
      ]
    ],
    "guess_extension() (mimetypes.mimetypes method)": [
      [
        275,
        "mimetypes.MimeTypes.guess_extension"
      ]
    ],
    "guess_type() (in module mimetypes)": [
      [
        275,
        "mimetypes.guess_type"
      ]
    ],
    "guess_type() (mimetypes.mimetypes method)": [
      [
        275,
        "mimetypes.MimeTypes.guess_type"
      ]
    ],
    "init() (in module mimetypes)": [
      [
        275,
        "mimetypes.init"
      ]
    ],
    "inited (in module mimetypes)": [
      [
        275,
        "mimetypes.inited"
      ]
    ],
    "knownfiles (in module mimetypes)": [
      [
        275,
        "mimetypes.knownfiles"
      ]
    ],
    "mime.types": [
      [
        275,
        "index-2"
      ]
    ],
    "mimetypes": [
      [
        275,
        "module-mimetypes"
      ]
    ],
    "read() (mimetypes.mimetypes method)": [
      [
        275,
        "mimetypes.MimeTypes.read"
      ]
    ],
    "read_mime_types() (in module mimetypes)": [
      [
        275,
        "mimetypes.read_mime_types"
      ]
    ],
    "read_windows_registry() (mimetypes.mimetypes method)": [
      [
        275,
        "mimetypes.MimeTypes.read_windows_registry"
      ]
    ],
    "readfp() (mimetypes.mimetypes method)": [
      [
        275,
        "mimetypes.MimeTypes.readfp"
      ]
    ],
    "suffix_map (in module mimetypes)": [
      [
        275,
        "mimetypes.suffix_map"
      ]
    ],
    "suffix_map (mimetypes.mimetypes attribute)": [
      [
        275,
        "mimetypes.MimeTypes.suffix_map"
      ]
    ],
    "types_map (in module mimetypes)": [
      [
        275,
        "mimetypes.types_map"
      ]
    ],
    "types_map (mimetypes.mimetypes attribute)": [
      [
        275,
        "mimetypes.MimeTypes.types_map"
      ]
    ],
    "types_map_inv (mimetypes.mimetypes attribute)": [
      [
        275,
        "mimetypes.MimeTypes.types_map_inv"
      ]
    ],
    "madv_autosync (in module mmap)": [
      [
        277,
        "mmap.MADV_AUTOSYNC"
      ]
    ],
    "madv_core (in module mmap)": [
      [
        277,
        "mmap.MADV_CORE"
      ]
    ],
    "madv_dodump (in module mmap)": [
      [
        277,
        "mmap.MADV_DODUMP"
      ]
    ],
    "madv_dofork (in module mmap)": [
      [
        277,
        "mmap.MADV_DOFORK"
      ]
    ],
    "madv_dontdump (in module mmap)": [
      [
        277,
        "mmap.MADV_DONTDUMP"
      ]
    ],
    "madv_dontfork (in module mmap)": [
      [
        277,
        "mmap.MADV_DONTFORK"
      ]
    ],
    "madv_dontneed (in module mmap)": [
      [
        277,
        "mmap.MADV_DONTNEED"
      ]
    ],
    "madv_free (in module mmap)": [
      [
        277,
        "mmap.MADV_FREE"
      ]
    ],
    "madv_free_reusable (in module mmap)": [
      [
        277,
        "mmap.MADV_FREE_REUSABLE"
      ]
    ],
    "madv_free_reuse (in module mmap)": [
      [
        277,
        "mmap.MADV_FREE_REUSE"
      ]
    ],
    "madv_hugepage (in module mmap)": [
      [
        277,
        "mmap.MADV_HUGEPAGE"
      ]
    ],
    "madv_hwpoison (in module mmap)": [
      [
        277,
        "mmap.MADV_HWPOISON"
      ]
    ],
    "madv_mergeable (in module mmap)": [
      [
        277,
        "mmap.MADV_MERGEABLE"
      ]
    ],
    "madv_nocore (in module mmap)": [
      [
        277,
        "mmap.MADV_NOCORE"
      ]
    ],
    "madv_nohugepage (in module mmap)": [
      [
        277,
        "mmap.MADV_NOHUGEPAGE"
      ]
    ],
    "madv_normal (in module mmap)": [
      [
        277,
        "mmap.MADV_NORMAL"
      ]
    ],
    "madv_nosync (in module mmap)": [
      [
        277,
        "mmap.MADV_NOSYNC"
      ]
    ],
    "madv_protect (in module mmap)": [
      [
        277,
        "mmap.MADV_PROTECT"
      ]
    ],
    "madv_random (in module mmap)": [
      [
        277,
        "mmap.MADV_RANDOM"
      ]
    ],
    "madv_remove (in module mmap)": [
      [
        277,
        "mmap.MADV_REMOVE"
      ]
    ],
    "madv_sequential (in module mmap)": [
      [
        277,
        "mmap.MADV_SEQUENTIAL"
      ]
    ],
    "madv_soft_offline (in module mmap)": [
      [
        277,
        "mmap.MADV_SOFT_OFFLINE"
      ]
    ],
    "madv_unmergeable (in module mmap)": [
      [
        277,
        "mmap.MADV_UNMERGEABLE"
      ]
    ],
    "madv_willneed (in module mmap)": [
      [
        277,
        "mmap.MADV_WILLNEED"
      ]
    ],
    "map_aligned_super (in module mmap)": [
      [
        277,
        "mmap.MAP_ALIGNED_SUPER"
      ]
    ],
    "map_anon (in module mmap)": [
      [
        277,
        "mmap.MAP_ANON"
      ]
    ],
    "map_anonymous (in module mmap)": [
      [
        277,
        "mmap.MAP_ANONYMOUS"
      ]
    ],
    "map_conceal (in module mmap)": [
      [
        277,
        "mmap.MAP_CONCEAL"
      ]
    ],
    "map_denywrite (in module mmap)": [
      [
        277,
        "mmap.MAP_DENYWRITE"
      ]
    ],
    "map_executable (in module mmap)": [
      [
        277,
        "mmap.MAP_EXECUTABLE"
      ]
    ],
    "map_populate (in module mmap)": [
      [
        277,
        "mmap.MAP_POPULATE"
      ]
    ],
    "map_private (in module mmap)": [
      [
        277,
        "mmap.MAP_PRIVATE"
      ]
    ],
    "map_shared (in module mmap)": [
      [
        277,
        "mmap.MAP_SHARED"
      ]
    ],
    "map_stack (in module mmap)": [
      [
        277,
        "mmap.MAP_STACK"
      ]
    ],
    "close() (mmap.mmap method)": [
      [
        277,
        "mmap.mmap.close"
      ]
    ],
    "closed (mmap.mmap attribute)": [
      [
        277,
        "mmap.mmap.closed"
      ]
    ],
    "find() (mmap.mmap method)": [
      [
        277,
        "mmap.mmap.find"
      ]
    ],
    "flush() (mmap.mmap method)": [
      [
        277,
        "mmap.mmap.flush"
      ]
    ],
    "madvise() (mmap.mmap method)": [
      [
        277,
        "mmap.mmap.madvise"
      ]
    ],
    "mmap": [
      [
        277,
        "module-mmap"
      ]
    ],
    "mmap (class in mmap)": [
      [
        277,
        "mmap.mmap"
      ]
    ],
    "move() (mmap.mmap method)": [
      [
        277,
        "mmap.mmap.move"
      ]
    ],
    "read() (mmap.mmap method)": [
      [
        277,
        "mmap.mmap.read"
      ]
    ],
    "read_byte() (mmap.mmap method)": [
      [
        277,
        "mmap.mmap.read_byte"
      ]
    ],
    "readline() (mmap.mmap method)": [
      [
        277,
        "mmap.mmap.readline"
      ]
    ],
    "resize() (mmap.mmap method)": [
      [
        277,
        "mmap.mmap.resize"
      ]
    ],
    "rfind() (mmap.mmap method)": [
      [
        277,
        "mmap.mmap.rfind"
      ]
    ],
    "seek() (mmap.mmap method)": [
      [
        277,
        "mmap.mmap.seek"
      ]
    ],
    "size() (mmap.mmap method)": [
      [
        277,
        "mmap.mmap.size"
      ]
    ],
    "tell() (mmap.mmap method)": [
      [
        277,
        "mmap.mmap.tell"
      ]
    ],
    "write() (mmap.mmap method)": [
      [
        277,
        "mmap.mmap.write"
      ]
    ],
    "write_byte() (mmap.mmap method)": [
      [
        277,
        "mmap.mmap.write_byte"
      ]
    ],
    "addpackagepath() (in module modulefinder)": [
      [
        278,
        "modulefinder.AddPackagePath"
      ]
    ],
    "modulefinder (class in modulefinder)": [
      [
        278,
        "modulefinder.ModuleFinder"
      ]
    ],
    "replacepackage() (in module modulefinder)": [
      [
        278,
        "modulefinder.ReplacePackage"
      ]
    ],
    "modulefinder": [
      [
        278,
        "module-modulefinder"
      ]
    ],
    "modules (modulefinder.modulefinder attribute)": [
      [
        278,
        "modulefinder.ModuleFinder.modules"
      ]
    ],
    "report() (modulefinder.modulefinder method)": [
      [
        278,
        "modulefinder.ModuleFinder.report"
      ]
    ],
    "run_script() (modulefinder.modulefinder method)": [
      [
        278,
        "modulefinder.ModuleFinder.run_script"
      ]
    ],
    "binary (class in msilib)": [
      [
        280,
        "msilib.Binary"
      ]
    ],
    "cab (class in msilib)": [
      [
        280,
        "msilib.CAB"
      ]
    ],
    "cleardata() (msilib.record method)": [
      [
        280,
        "msilib.Record.ClearData"
      ]
    ],
    "close() (msilib.database method)": [
      [
        280,
        "msilib.Database.Close"
      ]
    ],
    "close() (msilib.view method)": [
      [
        280,
        "msilib.View.Close"
      ]
    ],
    "commit() (msilib.database method)": [
      [
        280,
        "msilib.Database.Commit"
      ]
    ],
    "control (class in msilib)": [
      [
        280,
        "msilib.Control"
      ]
    ],
    "createrecord() (in module msilib)": [
      [
        280,
        "msilib.CreateRecord"
      ]
    ],
    "dialog (class in msilib)": [
      [
        280,
        "msilib.Dialog"
      ]
    ],
    "directory (class in msilib)": [
      [
        280,
        "msilib.Directory"
      ]
    ],
    "execute() (msilib.view method)": [
      [
        280,
        "msilib.View.Execute"
      ]
    ],
    "fcicreate() (in module msilib)": [
      [
        280,
        "msilib.FCICreate"
      ]
    ],
    "feature (class in msilib)": [
      [
        280,
        "msilib.Feature"
      ]
    ],
    "fetch() (msilib.view method)": [
      [
        280,
        "msilib.View.Fetch"
      ]
    ],
    "getcolumninfo() (msilib.view method)": [
      [
        280,
        "msilib.View.GetColumnInfo"
      ]
    ],
    "getfieldcount() (msilib.record method)": [
      [
        280,
        "msilib.Record.GetFieldCount"
      ]
    ],
    "getinteger() (msilib.record method)": [
      [
        280,
        "msilib.Record.GetInteger"
      ]
    ],
    "getproperty() (msilib.summaryinformation method)": [
      [
        280,
        "msilib.SummaryInformation.GetProperty"
      ]
    ],
    "getpropertycount() (msilib.summaryinformation method)": [
      [
        280,
        "msilib.SummaryInformation.GetPropertyCount"
      ]
    ],
    "getstring() (msilib.record method)": [
      [
        280,
        "msilib.Record.GetString"
      ]
    ],
    "getsummaryinformation() (msilib.database method)": [
      [
        280,
        "msilib.Database.GetSummaryInformation"
      ]
    ],
    "modify() (msilib.view method)": [
      [
        280,
        "msilib.View.Modify"
      ]
    ],
    "opendatabase() (in module msilib)": [
      [
        280,
        "msilib.OpenDatabase"
      ]
    ],
    "openview() (msilib.database method)": [
      [
        280,
        "msilib.Database.OpenView"
      ]
    ],
    "pep 594#msilib": [
      [
        280,
        "index-1"
      ]
    ],
    "persist() (msilib.summaryinformation method)": [
      [
        280,
        "msilib.SummaryInformation.Persist"
      ]
    ],
    "radiobuttongroup (class in msilib)": [
      [
        280,
        "msilib.RadioButtonGroup"
      ]
    ],
    "setinteger() (msilib.record method)": [
      [
        280,
        "msilib.Record.SetInteger"
      ]
    ],
    "setproperty() (msilib.summaryinformation method)": [
      [
        280,
        "msilib.SummaryInformation.SetProperty"
      ]
    ],
    "setstream() (msilib.record method)": [
      [
        280,
        "msilib.Record.SetStream"
      ]
    ],
    "setstring() (msilib.record method)": [
      [
        280,
        "msilib.Record.SetString"
      ]
    ],
    "uuidcreate() (in module msilib)": [
      [
        280,
        "msilib.UuidCreate"
      ]
    ],
    "add() (msilib.radiobuttongroup method)": [
      [
        280,
        "msilib.RadioButtonGroup.add"
      ]
    ],
    "add_data() (in module msilib)": [
      [
        280,
        "msilib.add_data"
      ]
    ],
    "add_file() (msilib.directory method)": [
      [
        280,
        "msilib.Directory.add_file"
      ]
    ],
    "add_stream() (in module msilib)": [
      [
        280,
        "msilib.add_stream"
      ]
    ],
    "add_tables() (in module msilib)": [
      [
        280,
        "msilib.add_tables"
      ]
    ],
    "append() (msilib.cab method)": [
      [
        280,
        "msilib.CAB.append"
      ]
    ],
    "bitmap() (msilib.dialog method)": [
      [
        280,
        "msilib.Dialog.bitmap"
      ]
    ],
    "checkbox() (msilib.dialog method)": [
      [
        280,
        "msilib.Dialog.checkbox"
      ]
    ],
    "commit() (msilib.cab method)": [
      [
        280,
        "msilib.CAB.commit"
      ]
    ],
    "condition() (msilib.control method)": [
      [
        280,
        "msilib.Control.condition"
      ]
    ],
    "control() (msilib.dialog method)": [
      [
        280,
        "msilib.Dialog.control"
      ]
    ],
    "event() (msilib.control method)": [
      [
        280,
        "msilib.Control.event"
      ]
    ],
    "gen_uuid() (in module msilib)": [
      [
        280,
        "msilib.gen_uuid"
      ]
    ],
    "glob() (msilib.directory method)": [
      [
        280,
        "msilib.Directory.glob"
      ]
    ],
    "init_database() (in module msilib)": [
      [
        280,
        "msilib.init_database"
      ]
    ],
    "line() (msilib.dialog method)": [
      [
        280,
        "msilib.Dialog.line"
      ]
    ],
    "mapping() (msilib.control method)": [
      [
        280,
        "msilib.Control.mapping"
      ]
    ],
    "msi": [
      [
        280,
        "index-0"
      ]
    ],
    "msilib": [
      [
        280,
        "module-msilib"
      ]
    ],
    "pushbutton() (msilib.dialog method)": [
      [
        280,
        "msilib.Dialog.pushbutton"
      ]
    ],
    "radiogroup() (msilib.dialog method)": [
      [
        280,
        "msilib.Dialog.radiogroup"
      ]
    ],
    "remove_pyc() (msilib.directory method)": [
      [
        280,
        "msilib.Directory.remove_pyc"
      ]
    ],
    "schema (in module msilib)": [
      [
        280,
        "msilib.schema"
      ]
    ],
    "sequence (in module msilib)": [
      [
        280,
        "msilib.sequence"
      ]
    ],
    "set_current() (msilib.feature method)": [
      [
        280,
        "msilib.Feature.set_current"
      ]
    ],
    "start_component() (msilib.directory method)": [
      [
        280,
        "msilib.Directory.start_component"
      ]
    ],
    "text (in module msilib)": [
      [
        280,
        "msilib.text"
      ]
    ],
    "text() (msilib.dialog method)": [
      [
        280,
        "msilib.Dialog.text"
      ]
    ],
    "crt_assembly_version (in module msvcrt)": [
      [
        281,
        "msvcrt.CRT_ASSEMBLY_VERSION"
      ]
    ],
    "libraries_assembly_name_prefix (in module msvcrt)": [
      [
        281,
        "msvcrt.LIBRARIES_ASSEMBLY_NAME_PREFIX"
      ]
    ],
    "lk_lock (in module msvcrt)": [
      [
        281,
        "msvcrt.LK_LOCK"
      ]
    ],
    "lk_nblck (in module msvcrt)": [
      [
        281,
        "msvcrt.LK_NBLCK"
      ]
    ],
    "lk_nbrlck (in module msvcrt)": [
      [
        281,
        "msvcrt.LK_NBRLCK"
      ]
    ],
    "lk_rlck (in module msvcrt)": [
      [
        281,
        "msvcrt.LK_RLCK"
      ]
    ],
    "lk_unlck (in module msvcrt)": [
      [
        281,
        "msvcrt.LK_UNLCK"
      ]
    ],
    "vc_assembly_publickeytoken (in module msvcrt)": [
      [
        281,
        "msvcrt.VC_ASSEMBLY_PUBLICKEYTOKEN"
      ]
    ],
    "get_osfhandle() (in module msvcrt)": [
      [
        281,
        "msvcrt.get_osfhandle"
      ]
    ],
    "getch() (in module msvcrt)": [
      [
        281,
        "msvcrt.getch"
      ]
    ],
    "getche() (in module msvcrt)": [
      [
        281,
        "msvcrt.getche"
      ]
    ],
    "getwch() (in module msvcrt)": [
      [
        281,
        "msvcrt.getwch"
      ]
    ],
    "getwche() (in module msvcrt)": [
      [
        281,
        "msvcrt.getwche"
      ]
    ],
    "heapmin() (in module msvcrt)": [
      [
        281,
        "msvcrt.heapmin"
      ]
    ],
    "kbhit() (in module msvcrt)": [
      [
        281,
        "msvcrt.kbhit"
      ]
    ],
    "locking() (in module msvcrt)": [
      [
        281,
        "msvcrt.locking"
      ]
    ],
    "msvcrt": [
      [
        281,
        "module-msvcrt"
      ]
    ],
    "open_osfhandle() (in module msvcrt)": [
      [
        281,
        "msvcrt.open_osfhandle"
      ]
    ],
    "putch() (in module msvcrt)": [
      [
        281,
        "msvcrt.putch"
      ]
    ],
    "putwch() (in module msvcrt)": [
      [
        281,
        "msvcrt.putwch"
      ]
    ],
    "setmode() (in module msvcrt)": [
      [
        281,
        "msvcrt.setmode"
      ]
    ],
    "ungetch() (in module msvcrt)": [
      [
        281,
        "msvcrt.ungetch"
      ]
    ],
    "ungetwch() (in module msvcrt)": [
      [
        281,
        "msvcrt.ungetwch"
      ]
    ],
    "array() (in module multiprocessing)": [
      [
        282,
        "multiprocessing.Array"
      ]
    ],
    "array() (in module multiprocessing.sharedctypes)": [
      [
        282,
        "multiprocessing.sharedctypes.Array"
      ]
    ],
    "array() (multiprocessing.managers.syncmanager method)": [
      [
        282,
        "multiprocessing.managers.SyncManager.Array"
      ]
    ],
    "asyncresult (class in multiprocessing.pool)": [
      [
        282,
        "multiprocessing.pool.AsyncResult"
      ]
    ],
    "authenticationerror": [
      [
        282,
        "multiprocessing.AuthenticationError"
      ]
    ],
    "barrier (class in multiprocessing)": [
      [
        282,
        "multiprocessing.Barrier"
      ]
    ],
    "barrier() (multiprocessing.managers.syncmanager method)": [
      [
        282,
        "multiprocessing.managers.SyncManager.Barrier"
      ]
    ],
    "basemanager (class in multiprocessing.managers)": [
      [
        282,
        "multiprocessing.managers.BaseManager"
      ]
    ],
    "baseproxy (class in multiprocessing.managers)": [
      [
        282,
        "multiprocessing.managers.BaseProxy"
      ]
    ],
    "boundedsemaphore (class in multiprocessing)": [
      [
        282,
        "multiprocessing.BoundedSemaphore"
      ]
    ],
    "boundedsemaphore() (multiprocessing.managers.syncmanager method)": [
      [
        282,
        "multiprocessing.managers.SyncManager.BoundedSemaphore"
      ]
    ],
    "buffertooshort": [
      [
        282,
        "multiprocessing.BufferTooShort"
      ]
    ],
    "client() (in module multiprocessing.connection)": [
      [
        282,
        "multiprocessing.connection.Client"
      ]
    ],
    "condition (class in multiprocessing)": [
      [
        282,
        "multiprocessing.Condition"
      ]
    ],
    "condition() (multiprocessing.managers.syncmanager method)": [
      [
        282,
        "multiprocessing.managers.SyncManager.Condition"
      ]
    ],
    "connection (class in multiprocessing.connection)": [
      [
        282,
        "multiprocessing.connection.Connection"
      ]
    ],
    "event (class in multiprocessing)": [
      [
        282,
        "multiprocessing.Event"
      ]
    ],
    "event() (multiprocessing.managers.syncmanager method)": [
      [
        282,
        "multiprocessing.managers.SyncManager.Event"
      ]
    ],
    "joinablequeue (class in multiprocessing)": [
      [
        282,
        "multiprocessing.JoinableQueue"
      ]
    ],
    "listener (class in multiprocessing.connection)": [
      [
        282,
        "multiprocessing.connection.Listener"
      ]
    ],
    "lock (class in multiprocessing)": [
      [
        282,
        "multiprocessing.Lock"
      ]
    ],
    "lock() (multiprocessing.managers.syncmanager method)": [
      [
        282,
        "multiprocessing.managers.SyncManager.Lock"
      ]
    ],
    "namespace (class in multiprocessing.managers)": [
      [
        282,
        "multiprocessing.managers.Namespace"
      ]
    ],
    "namespace() (multiprocessing.managers.syncmanager method)": [
      [
        282,
        "multiprocessing.managers.SyncManager.Namespace"
      ]
    ],
    "pipe() (in module multiprocessing)": [
      [
        282,
        "multiprocessing.Pipe"
      ]
    ],
    "pool (class in multiprocessing.pool)": [
      [
        282,
        "multiprocessing.pool.Pool"
      ]
    ],
    "process (class in multiprocessing)": [
      [
        282,
        "multiprocessing.Process"
      ]
    ],
    "processerror": [
      [
        282,
        "multiprocessing.ProcessError"
      ]
    ],
    "queue (class in multiprocessing)": [
      [
        282,
        "multiprocessing.Queue"
      ]
    ],
    "queue() (multiprocessing.managers.syncmanager method)": [
      [
        282,
        "multiprocessing.managers.SyncManager.Queue"
      ]
    ],
    "rlock (class in multiprocessing)": [
      [
        282,
        "multiprocessing.RLock"
      ]
    ],
    "rlock() (multiprocessing.managers.syncmanager method)": [
      [
        282,
        "multiprocessing.managers.SyncManager.RLock"
      ]
    ],
    "rawarray() (in module multiprocessing.sharedctypes)": [
      [
        282,
        "multiprocessing.sharedctypes.RawArray"
      ]
    ],
    "rawvalue() (in module multiprocessing.sharedctypes)": [
      [
        282,
        "multiprocessing.sharedctypes.RawValue"
      ]
    ],
    "semaphore (class in multiprocessing)": [
      [
        282,
        "multiprocessing.Semaphore"
      ]
    ],
    "semaphore() (multiprocessing.managers.syncmanager method)": [
      [
        282,
        "multiprocessing.managers.SyncManager.Semaphore"
      ]
    ],
    "simplequeue (class in multiprocessing)": [
      [
        282,
        "multiprocessing.SimpleQueue"
      ]
    ],
    "syncmanager (class in multiprocessing.managers)": [
      [
        282,
        "multiprocessing.managers.SyncManager"
      ]
    ],
    "threadpool (class in multiprocessing.pool)": [
      [
        282,
        "multiprocessing.pool.ThreadPool"
      ]
    ],
    "value() (in module multiprocessing)": [
      [
        282,
        "multiprocessing.Value"
      ]
    ],
    "value() (in module multiprocessing.sharedctypes)": [
      [
        282,
        "multiprocessing.sharedctypes.Value"
      ]
    ],
    "value() (multiprocessing.managers.syncmanager method)": [
      [
        282,
        "multiprocessing.managers.SyncManager.Value"
      ]
    ],
    "__repr__() (multiprocessing.managers.baseproxy method)": [
      [
        282,
        "multiprocessing.managers.BaseProxy.__repr__"
      ]
    ],
    "__str__() (multiprocessing.managers.baseproxy method)": [
      [
        282,
        "multiprocessing.managers.BaseProxy.__str__"
      ]
    ],
    "_callmethod() (multiprocessing.managers.baseproxy method)": [
      [
        282,
        "multiprocessing.managers.BaseProxy._callmethod"
      ]
    ],
    "_getvalue() (multiprocessing.managers.baseproxy method)": [
      [
        282,
        "multiprocessing.managers.BaseProxy._getvalue"
      ]
    ],
    "accept() (multiprocessing.connection.listener method)": [
      [
        282,
        "multiprocessing.connection.Listener.accept"
      ]
    ],
    "acquire() (multiprocessing.lock method)": [
      [
        282,
        "multiprocessing.Lock.acquire"
      ]
    ],
    "acquire() (multiprocessing.rlock method)": [
      [
        282,
        "multiprocessing.RLock.acquire"
      ]
    ],
    "active_children() (in module multiprocessing)": [
      [
        282,
        "multiprocessing.active_children"
      ]
    ],
    "address (multiprocessing.connection.listener attribute)": [
      [
        282,
        "multiprocessing.connection.Listener.address"
      ]
    ],
    "address (multiprocessing.managers.basemanager attribute)": [
      [
        282,
        "multiprocessing.managers.BaseManager.address"
      ]
    ],
    "answer_challenge() (in module multiprocessing.connection)": [
      [
        282,
        "multiprocessing.connection.answer_challenge"
      ]
    ],
    "apply() (multiprocessing.pool.pool method)": [
      [
        282,
        "multiprocessing.pool.Pool.apply"
      ]
    ],
    "apply_async() (multiprocessing.pool.pool method)": [
      [
        282,
        "multiprocessing.pool.Pool.apply_async"
      ]
    ],
    "authkey (multiprocessing.process attribute)": [
      [
        282,
        "multiprocessing.Process.authkey"
      ]
    ],
    "cancel_join_thread() (multiprocessing.queue method)": [
      [
        282,
        "multiprocessing.Queue.cancel_join_thread"
      ]
    ],
    "close() (multiprocessing.process method)": [
      [
        282,
        "multiprocessing.Process.close"
      ]
    ],
    "close() (multiprocessing.queue method)": [
      [
        282,
        "multiprocessing.Queue.close"
      ]
    ],
    "close() (multiprocessing.simplequeue method)": [
      [
        282,
        "multiprocessing.SimpleQueue.close"
      ]
    ],
    "close() (multiprocessing.connection.connection method)": [
      [
        282,
        "multiprocessing.connection.Connection.close"
      ]
    ],
    "close() (multiprocessing.connection.listener method)": [
      [
        282,
        "multiprocessing.connection.Listener.close"
      ]
    ],
    "close() (multiprocessing.pool.pool method)": [
      [
        282,
        "multiprocessing.pool.Pool.close"
      ]
    ],
    "connect() (multiprocessing.managers.basemanager method)": [
      [
        282,
        "multiprocessing.managers.BaseManager.connect"
      ]
    ],
    "copy() (in module multiprocessing.sharedctypes)": [
      [
        282,
        "multiprocessing.sharedctypes.copy"
      ]
    ],
    "cpu_count() (in module multiprocessing)": [
      [
        282,
        "multiprocessing.cpu_count"
      ]
    ],
    "current_process() (in module multiprocessing)": [
      [
        282,
        "multiprocessing.current_process"
      ]
    ],
    "daemon (multiprocessing.process attribute)": [
      [
        282,
        "multiprocessing.Process.daemon"
      ]
    ],
    "deliver_challenge() (in module multiprocessing.connection)": [
      [
        282,
        "multiprocessing.connection.deliver_challenge"
      ]
    ],
    "dict() (multiprocessing.managers.syncmanager method)": [
      [
        282,
        "multiprocessing.managers.SyncManager.dict"
      ]
    ],
    "empty() (multiprocessing.queue method)": [
      [
        282,
        "multiprocessing.Queue.empty"
      ]
    ],
    "empty() (multiprocessing.simplequeue method)": [
      [
        282,
        "multiprocessing.SimpleQueue.empty"
      ]
    ],
    "exitcode (multiprocessing.process attribute)": [
      [
        282,
        "multiprocessing.Process.exitcode"
      ]
    ],
    "fileno() (multiprocessing.connection.connection method)": [
      [
        282,
        "multiprocessing.connection.Connection.fileno"
      ]
    ],
    "freeze_support() (in module multiprocessing)": [
      [
        282,
        "multiprocessing.freeze_support"
      ]
    ],
    "full() (multiprocessing.queue method)": [
      [
        282,
        "multiprocessing.Queue.full"
      ]
    ],
    "get() (multiprocessing.queue method)": [
      [
        282,
        "multiprocessing.Queue.get"
      ]
    ],
    "get() (multiprocessing.simplequeue method)": [
      [
        282,
        "multiprocessing.SimpleQueue.get"
      ]
    ],
    "get() (multiprocessing.pool.asyncresult method)": [
      [
        282,
        "multiprocessing.pool.AsyncResult.get"
      ]
    ],
    "get_all_start_methods() (in module multiprocessing)": [
      [
        282,
        "multiprocessing.get_all_start_methods"
      ]
    ],
    "get_context() (in module multiprocessing)": [
      [
        282,
        "multiprocessing.get_context"
      ]
    ],
    "get_logger() (in module multiprocessing)": [
      [
        282,
        "multiprocessing.get_logger"
      ]
    ],
    "get_nowait() (multiprocessing.queue method)": [
      [
        282,
        "multiprocessing.Queue.get_nowait"
      ]
    ],
    "get_server() (multiprocessing.managers.basemanager method)": [
      [
        282,
        "multiprocessing.managers.BaseManager.get_server"
      ]
    ],
    "get_start_method() (in module multiprocessing)": [
      [
        282,
        "multiprocessing.get_start_method"
      ]
    ],
    "imap() (multiprocessing.pool.pool method)": [
      [
        282,
        "multiprocessing.pool.Pool.imap"
      ]
    ],
    "imap_unordered() (multiprocessing.pool.pool method)": [
      [
        282,
        "multiprocessing.pool.Pool.imap_unordered"
      ]
    ],
    "is_alive() (multiprocessing.process method)": [
      [
        282,
        "multiprocessing.Process.is_alive"
      ]
    ],
    "join() (multiprocessing.joinablequeue method)": [
      [
        282,
        "multiprocessing.JoinableQueue.join"
      ]
    ],
    "join() (multiprocessing.process method)": [
      [
        282,
        "multiprocessing.Process.join"
      ]
    ],
    "join() (multiprocessing.pool.pool method)": [
      [
        282,
        "multiprocessing.pool.Pool.join"
      ]
    ],
    "join_thread() (multiprocessing.queue method)": [
      [
        282,
        "multiprocessing.Queue.join_thread"
      ]
    ],
    "kill() (multiprocessing.process method)": [
      [
        282,
        "multiprocessing.Process.kill"
      ]
    ],
    "last_accepted (multiprocessing.connection.listener attribute)": [
      [
        282,
        "multiprocessing.connection.Listener.last_accepted"
      ]
    ],
    "list() (multiprocessing.managers.syncmanager method)": [
      [
        282,
        "multiprocessing.managers.SyncManager.list"
      ]
    ],
    "log_to_stderr() (in module multiprocessing)": [
      [
        282,
        "multiprocessing.log_to_stderr"
      ]
    ],
    "map() (multiprocessing.pool.pool method)": [
      [
        282,
        "multiprocessing.pool.Pool.map"
      ]
    ],
    "map_async() (multiprocessing.pool.pool method)": [
      [
        282,
        "multiprocessing.pool.Pool.map_async"
      ]
    ],
    "multiprocessing": [
      [
        282,
        "module-multiprocessing"
      ]
    ],
    "multiprocessing.manager()": [
      [
        282,
        "multiprocessing.Manager"
      ]
    ],
    "multiprocessing.connection": [
      [
        282,
        "module-multiprocessing.connection"
      ]
    ],
    "multiprocessing.dummy": [
      [
        282,
        "module-multiprocessing.dummy"
      ]
    ],
    "multiprocessing.managers": [
      [
        282,
        "module-multiprocessing.managers"
      ]
    ],
    "multiprocessing.pool": [
      [
        282,
        "module-multiprocessing.pool"
      ]
    ],
    "multiprocessing.sharedctypes": [
      [
        282,
        "module-multiprocessing.sharedctypes"
      ]
    ],
    "name (multiprocessing.process attribute)": [
      [
        282,
        "multiprocessing.Process.name"
      ]
    ],
    "parent_process() (in module multiprocessing)": [
      [
        282,
        "multiprocessing.parent_process"
      ]
    ],
    "pid (multiprocessing.process attribute)": [
      [
        282,
        "multiprocessing.Process.pid"
      ]
    ],
    "poll() (multiprocessing.connection.connection method)": [
      [
        282,
        "multiprocessing.connection.Connection.poll"
      ]
    ],
    "put() (multiprocessing.queue method)": [
      [
        282,
        "multiprocessing.Queue.put"
      ]
    ],
    "put() (multiprocessing.simplequeue method)": [
      [
        282,
        "multiprocessing.SimpleQueue.put"
      ]
    ],
    "put_nowait() (multiprocessing.queue method)": [
      [
        282,
        "multiprocessing.Queue.put_nowait"
      ]
    ],
    "qsize() (multiprocessing.queue method)": [
      [
        282,
        "multiprocessing.Queue.qsize"
      ]
    ],
    "ready() (multiprocessing.pool.asyncresult method)": [
      [
        282,
        "multiprocessing.pool.AsyncResult.ready"
      ]
    ],
    "recv() (multiprocessing.connection.connection method)": [
      [
        282,
        "multiprocessing.connection.Connection.recv"
      ]
    ],
    "recv_bytes() (multiprocessing.connection.connection method)": [
      [
        282,
        "multiprocessing.connection.Connection.recv_bytes"
      ]
    ],
    "recv_bytes_into() (multiprocessing.connection.connection method)": [
      [
        282,
        "multiprocessing.connection.Connection.recv_bytes_into"
      ]
    ],
    "register() (multiprocessing.managers.basemanager method)": [
      [
        282,
        "multiprocessing.managers.BaseManager.register"
      ]
    ],
    "release() (multiprocessing.lock method)": [
      [
        282,
        "multiprocessing.Lock.release"
      ]
    ],
    "release() (multiprocessing.rlock method)": [
      [
        282,
        "multiprocessing.RLock.release"
      ]
    ],
    "run() (multiprocessing.process method)": [
      [
        282,
        "multiprocessing.Process.run"
      ]
    ],
    "send() (multiprocessing.connection.connection method)": [
      [
        282,
        "multiprocessing.connection.Connection.send"
      ]
    ],
    "send_bytes() (multiprocessing.connection.connection method)": [
      [
        282,
        "multiprocessing.connection.Connection.send_bytes"
      ]
    ],
    "sentinel (multiprocessing.process attribute)": [
      [
        282,
        "multiprocessing.Process.sentinel"
      ]
    ],
    "set_executable() (in module multiprocessing)": [
      [
        282,
        "multiprocessing.set_executable"
      ]
    ],
    "set_forkserver_preload() (in module multiprocessing)": [
      [
        282,
        "multiprocessing.set_forkserver_preload"
      ]
    ],
    "set_start_method() (in module multiprocessing)": [
      [
        282,
        "multiprocessing.set_start_method"
      ]
    ],
    "shutdown() (multiprocessing.managers.basemanager method)": [
      [
        282,
        "multiprocessing.managers.BaseManager.shutdown"
      ]
    ],
    "starmap() (multiprocessing.pool.pool method)": [
      [
        282,
        "multiprocessing.pool.Pool.starmap"
      ]
    ],
    "starmap_async() (multiprocessing.pool.pool method)": [
      [
        282,
        "multiprocessing.pool.Pool.starmap_async"
      ]
    ],
    "start() (multiprocessing.process method)": [
      [
        282,
        "multiprocessing.Process.start"
      ]
    ],
    "start() (multiprocessing.managers.basemanager method)": [
      [
        282,
        "multiprocessing.managers.BaseManager.start"
      ]
    ],
    "successful() (multiprocessing.pool.asyncresult method)": [
      [
        282,
        "multiprocessing.pool.AsyncResult.successful"
      ]
    ],
    "synchronized() (in module multiprocessing.sharedctypes)": [
      [
        282,
        "multiprocessing.sharedctypes.synchronized"
      ]
    ],
    "task_done() (multiprocessing.joinablequeue method)": [
      [
        282,
        "multiprocessing.JoinableQueue.task_done"
      ]
    ],
    "terminate() (multiprocessing.process method)": [
      [
        282,
        "multiprocessing.Process.terminate"
      ]
    ],
    "terminate() (multiprocessing.pool.pool method)": [
      [
        282,
        "multiprocessing.pool.Pool.terminate"
      ]
    ],
    "wait() (in module multiprocessing.connection)": [
      [
        282,
        "multiprocessing.connection.wait"
      ]
    ],
    "wait() (multiprocessing.pool.asyncresult method)": [
      [
        282,
        "multiprocessing.pool.AsyncResult.wait"
      ]
    ],
    "named shared memory": [
      [
        283,
        "index-0"
      ]
    ],
    "posix shared memory": [
      [
        283,
        "index-0"
      ]
    ],
    "shareablelist (class in multiprocessing.shared_memory)": [
      [
        283,
        "multiprocessing.shared_memory.ShareableList"
      ]
    ],
    "shareablelist() (multiprocessing.managers.sharedmemorymanager method)": [
      [
        283,
        "multiprocessing.managers.SharedMemoryManager.ShareableList"
      ]
    ],
    "shared memory": [
      [
        283,
        "index-0"
      ]
    ],
    "sharedmemory (class in multiprocessing.shared_memory)": [
      [
        283,
        "multiprocessing.shared_memory.SharedMemory"
      ]
    ],
    "sharedmemory() (multiprocessing.managers.sharedmemorymanager method)": [
      [
        283,
        "multiprocessing.managers.SharedMemoryManager.SharedMemory"
      ]
    ],
    "sharedmemorymanager (class in multiprocessing.managers)": [
      [
        283,
        "multiprocessing.managers.SharedMemoryManager"
      ]
    ],
    "buf (multiprocessing.shared_memory.sharedmemory attribute)": [
      [
        283,
        "multiprocessing.shared_memory.SharedMemory.buf"
      ]
    ],
    "close() (multiprocessing.shared_memory.sharedmemory method)": [
      [
        283,
        "multiprocessing.shared_memory.SharedMemory.close"
      ]
    ],
    "count() (multiprocessing.shared_memory.shareablelist method)": [
      [
        283,
        "multiprocessing.shared_memory.ShareableList.count"
      ]
    ],
    "format (multiprocessing.shared_memory.shareablelist attribute)": [
      [
        283,
        "multiprocessing.shared_memory.ShareableList.format"
      ]
    ],
    "index() (multiprocessing.shared_memory.shareablelist method)": [
      [
        283,
        "multiprocessing.shared_memory.ShareableList.index"
      ]
    ],
    "multiprocessing.shared_memory": [
      [
        283,
        "module-multiprocessing.shared_memory"
      ]
    ],
    "name (multiprocessing.shared_memory.sharedmemory attribute)": [
      [
        283,
        "multiprocessing.shared_memory.SharedMemory.name"
      ]
    ],
    "shm (multiprocessing.shared_memory.shareablelist attribute)": [
      [
        283,
        "multiprocessing.shared_memory.ShareableList.shm"
      ]
    ],
    "size (multiprocessing.shared_memory.sharedmemory attribute)": [
      [
        283,
        "multiprocessing.shared_memory.SharedMemory.size"
      ]
    ],
    "unlink() (multiprocessing.shared_memory.sharedmemory method)": [
      [
        283,
        "multiprocessing.shared_memory.SharedMemory.unlink"
      ]
    ],
    "netrcparseerror": [
      [
        285,
        "netrc.NetrcParseError"
      ]
    ],
    "__repr__() (netrc.netrc method)": [
      [
        285,
        "netrc.netrc.__repr__"
      ]
    ],
    "authenticators() (netrc.netrc method)": [
      [
        285,
        "netrc.netrc.authenticators"
      ]
    ],
    "filename (netrc.netrcparseerror attribute)": [
      [
        285,
        "netrc.NetrcParseError.filename"
      ]
    ],
    "hosts (netrc.netrc attribute)": [
      [
        285,
        "netrc.netrc.hosts"
      ]
    ],
    "lineno (netrc.netrcparseerror attribute)": [
      [
        285,
        "netrc.NetrcParseError.lineno"
      ]
    ],
    "macros (netrc.netrc attribute)": [
      [
        285,
        "netrc.netrc.macros"
      ]
    ],
    "msg (netrc.netrcparseerror attribute)": [
      [
        285,
        "netrc.NetrcParseError.msg"
      ]
    ],
    "netrc": [
      [
        285,
        "module-netrc"
      ]
    ],
    "netrc (class in netrc)": [
      [
        285,
        "netrc.netrc"
      ]
    ],
    "pep 594#nis": [
      [
        286,
        "index-0"
      ]
    ],
    "cat() (in module nis)": [
      [
        286,
        "nis.cat"
      ]
    ],
    "get_default_domain() (in module nis)": [
      [
        286,
        "nis.get_default_domain"
      ]
    ],
    "maps() (in module nis)": [
      [
        286,
        "nis.maps"
      ]
    ],
    "match() (in module nis)": [
      [
        286,
        "nis.match"
      ]
    ],
    "nis": [
      [
        286,
        "module-nis"
      ]
    ],
    "nntp": [
      [
        287,
        "index-0"
      ]
    ],
    "nntp (class in nntplib)": [
      [
        287,
        "nntplib.NNTP"
      ]
    ],
    "nntpdataerror": [
      [
        287,
        "nntplib.NNTPDataError"
      ]
    ],
    "nntperror": [
      [
        287,
        "nntplib.NNTPError"
      ]
    ],
    "nntppermanenterror": [
      [
        287,
        "nntplib.NNTPPermanentError"
      ]
    ],
    "nntpprotocolerror": [
      [
        287,
        "nntplib.NNTPProtocolError"
      ]
    ],
    "nntpreplyerror": [
      [
        287,
        "nntplib.NNTPReplyError"
      ]
    ],
    "nntptemporaryerror": [
      [
        287,
        "nntplib.NNTPTemporaryError"
      ]
    ],
    "nntp_ssl (class in nntplib)": [
      [
        287,
        "nntplib.NNTP_SSL"
      ]
    ],
    "network news transfer protocol": [
      [
        287,
        "index-0"
      ]
    ],
    "pep 594": [
      [
        287,
        "index-1"
      ],
      [
        472,
        "index-2"
      ],
      [
        472,
        "index-31"
      ],
      [
        473,
        "index-31"
      ],
      [
        473,
        "index-32"
      ],
      [
        473,
        "index-35"
      ],
      [
        482,
        "index-38"
      ],
      [
        482,
        "index-47"
      ],
      [
        482,
        "index-57"
      ],
      [
        482,
        "index-68"
      ],
      [
        482,
        "index-69"
      ],
      [
        482,
        "index-73"
      ]
    ],
    "rfc 2980": [
      [
        287,
        "index-4"
      ],
      [
        287,
        "index-9"
      ]
    ],
    "rfc 3977": [
      [
        287,
        "index-10"
      ],
      [
        287,
        "index-2"
      ],
      [
        287,
        "index-6"
      ],
      [
        287,
        "index-7"
      ],
      [
        287,
        "index-8"
      ]
    ],
    "rfc 4642": [
      [
        287,
        "index-5"
      ]
    ],
    "rfc 977": [
      [
        287,
        "index-3"
      ]
    ],
    "article() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.article"
      ]
    ],
    "body() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.body"
      ]
    ],
    "date() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.date"
      ]
    ],
    "decode_header() (in module nntplib)": [
      [
        287,
        "nntplib.decode_header"
      ]
    ],
    "description() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.description"
      ]
    ],
    "descriptions() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.descriptions"
      ]
    ],
    "getcapabilities() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.getcapabilities"
      ]
    ],
    "getwelcome() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.getwelcome"
      ]
    ],
    "group() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.group"
      ]
    ],
    "head() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.head"
      ]
    ],
    "help() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.help"
      ]
    ],
    "ihave() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.ihave"
      ]
    ],
    "last() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.last"
      ]
    ],
    "list() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.list"
      ]
    ],
    "login() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.login"
      ]
    ],
    "newgroups() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.newgroups"
      ]
    ],
    "newnews() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.newnews"
      ]
    ],
    "next() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.next"
      ]
    ],
    "nntp_implementation (nntplib.nntp attribute)": [
      [
        287,
        "nntplib.NNTP.nntp_implementation"
      ]
    ],
    "nntp_version (nntplib.nntp attribute)": [
      [
        287,
        "nntplib.NNTP.nntp_version"
      ]
    ],
    "nntplib": [
      [
        287,
        "module-nntplib"
      ]
    ],
    "over() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.over"
      ]
    ],
    "post() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.post"
      ]
    ],
    "quit() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.quit"
      ]
    ],
    "response (nntplib.nntperror attribute)": [
      [
        287,
        "nntplib.NNTPError.response"
      ]
    ],
    "set_debuglevel() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.set_debuglevel"
      ]
    ],
    "slave() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.slave"
      ]
    ],
    "starttls() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.starttls"
      ]
    ],
    "stat() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.stat"
      ]
    ],
    "xhdr() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.xhdr"
      ]
    ],
    "xover() (nntplib.nntp method)": [
      [
        287,
        "nntplib.NNTP.xover"
      ]
    ],
    "complex (class in numbers)": [
      [
        288,
        "numbers.Complex"
      ]
    ],
    "integral (class in numbers)": [
      [
        288,
        "numbers.Integral"
      ]
    ],
    "number (class in numbers)": [
      [
        288,
        "numbers.Number"
      ]
    ],
    "rational (class in numbers)": [
      [
        288,
        "numbers.Rational"
      ]
    ],
    "real (class in numbers)": [
      [
        288,
        "numbers.Real"
      ]
    ],
    "conjugate() (numbers.complex method)": [
      [
        288,
        "numbers.Complex.conjugate"
      ]
    ],
    "denominator (numbers.rational attribute)": [
      [
        288,
        "numbers.Rational.denominator"
      ]
    ],
    "imag (numbers.complex attribute)": [
      [
        288,
        "numbers.Complex.imag"
      ]
    ],
    "numbers": [
      [
        288,
        "module-numbers"
      ]
    ],
    "numerator (numbers.rational attribute)": [
      [
        288,
        "numbers.Rational.numerator"
      ]
    ],
    "real (numbers.complex attribute)": [
      [
        288,
        "numbers.Complex.real"
      ]
    ],
    "__abs__() (in module operator)": [
      [
        290,
        "operator.__abs__"
      ]
    ],
    "__add__() (in module operator)": [
      [
        290,
        "operator.__add__"
      ]
    ],
    "__and__() (in module operator)": [
      [
        290,
        "operator.__and__"
      ]
    ],
    "__call__() (in module operator)": [
      [
        290,
        "operator.__call__"
      ]
    ],
    "__concat__() (in module operator)": [
      [
        290,
        "operator.__concat__"
      ]
    ],
    "__contains__() (in module operator)": [
      [
        290,
        "operator.__contains__"
      ]
    ],
    "__delitem__() (in module operator)": [
      [
        290,
        "operator.__delitem__"
      ]
    ],
    "__eq__() (in module operator)": [
      [
        290,
        "operator.__eq__"
      ]
    ],
    "__floordiv__() (in module operator)": [
      [
        290,
        "operator.__floordiv__"
      ]
    ],
    "__ge__() (in module operator)": [
      [
        290,
        "operator.__ge__"
      ]
    ],
    "__getitem__() (in module operator)": [
      [
        290,
        "operator.__getitem__"
      ]
    ],
    "__gt__() (in module operator)": [
      [
        290,
        "operator.__gt__"
      ]
    ],
    "__iadd__() (in module operator)": [
      [
        290,
        "operator.__iadd__"
      ]
    ],
    "__iand__() (in module operator)": [
      [
        290,
        "operator.__iand__"
      ]
    ],
    "__iconcat__() (in module operator)": [
      [
        290,
        "operator.__iconcat__"
      ]
    ],
    "__ifloordiv__() (in module operator)": [
      [
        290,
        "operator.__ifloordiv__"
      ]
    ],
    "__ilshift__() (in module operator)": [
      [
        290,
        "operator.__ilshift__"
      ]
    ],
    "__imatmul__() (in module operator)": [
      [
        290,
        "operator.__imatmul__"
      ]
    ],
    "__imod__() (in module operator)": [
      [
        290,
        "operator.__imod__"
      ]
    ],
    "__imul__() (in module operator)": [
      [
        290,
        "operator.__imul__"
      ]
    ],
    "__index__() (in module operator)": [
      [
        290,
        "operator.__index__"
      ]
    ],
    "__inv__() (in module operator)": [
      [
        290,
        "operator.__inv__"
      ]
    ],
    "__invert__() (in module operator)": [
      [
        290,
        "operator.__invert__"
      ]
    ],
    "__ior__() (in module operator)": [
      [
        290,
        "operator.__ior__"
      ]
    ],
    "__ipow__() (in module operator)": [
      [
        290,
        "operator.__ipow__"
      ]
    ],
    "__irshift__() (in module operator)": [
      [
        290,
        "operator.__irshift__"
      ]
    ],
    "__isub__() (in module operator)": [
      [
        290,
        "operator.__isub__"
      ]
    ],
    "__itruediv__() (in module operator)": [
      [
        290,
        "operator.__itruediv__"
      ]
    ],
    "__ixor__() (in module operator)": [
      [
        290,
        "operator.__ixor__"
      ]
    ],
    "__le__() (in module operator)": [
      [
        290,
        "operator.__le__"
      ]
    ],
    "__lshift__() (in module operator)": [
      [
        290,
        "operator.__lshift__"
      ]
    ],
    "__lt__() (in module operator)": [
      [
        290,
        "operator.__lt__"
      ]
    ],
    "__matmul__() (in module operator)": [
      [
        290,
        "operator.__matmul__"
      ]
    ],
    "__mod__() (in module operator)": [
      [
        290,
        "operator.__mod__"
      ]
    ],
    "__mul__() (in module operator)": [
      [
        290,
        "operator.__mul__"
      ]
    ],
    "__ne__() (in module operator)": [
      [
        290,
        "operator.__ne__"
      ]
    ],
    "__neg__() (in module operator)": [
      [
        290,
        "operator.__neg__"
      ]
    ],
    "__not__() (in module operator)": [
      [
        290,
        "operator.__not__"
      ]
    ],
    "__or__() (in module operator)": [
      [
        290,
        "operator.__or__"
      ]
    ],
    "__pos__() (in module operator)": [
      [
        290,
        "operator.__pos__"
      ]
    ],
    "__pow__() (in module operator)": [
      [
        290,
        "operator.__pow__"
      ]
    ],
    "__rshift__() (in module operator)": [
      [
        290,
        "operator.__rshift__"
      ]
    ],
    "__setitem__() (in module operator)": [
      [
        290,
        "operator.__setitem__"
      ]
    ],
    "__sub__() (in module operator)": [
      [
        290,
        "operator.__sub__"
      ]
    ],
    "__truediv__() (in module operator)": [
      [
        290,
        "operator.__truediv__"
      ]
    ],
    "__xor__() (in module operator)": [
      [
        290,
        "operator.__xor__"
      ]
    ],
    "abs() (in module operator)": [
      [
        290,
        "operator.abs"
      ]
    ],
    "add() (in module operator)": [
      [
        290,
        "operator.add"
      ]
    ],
    "and_() (in module operator)": [
      [
        290,
        "operator.and_"
      ]
    ],
    "attrgetter() (in module operator)": [
      [
        290,
        "operator.attrgetter"
      ]
    ],
    "call() (in module operator)": [
      [
        290,
        "operator.call"
      ]
    ],
    "concat() (in module operator)": [
      [
        290,
        "operator.concat"
      ]
    ],
    "contains() (in module operator)": [
      [
        290,
        "operator.contains"
      ]
    ],
    "countof() (in module operator)": [
      [
        290,
        "operator.countOf"
      ]
    ],
    "delitem() (in module operator)": [
      [
        290,
        "operator.delitem"
      ]
    ],
    "eq() (in module operator)": [
      [
        290,
        "operator.eq"
      ]
    ],
    "floordiv() (in module operator)": [
      [
        290,
        "operator.floordiv"
      ]
    ],
    "ge() (in module operator)": [
      [
        290,
        "operator.ge"
      ]
    ],
    "getitem() (in module operator)": [
      [
        290,
        "operator.getitem"
      ]
    ],
    "gt() (in module operator)": [
      [
        290,
        "operator.gt"
      ]
    ],
    "iadd() (in module operator)": [
      [
        290,
        "operator.iadd"
      ]
    ],
    "iand() (in module operator)": [
      [
        290,
        "operator.iand"
      ]
    ],
    "iconcat() (in module operator)": [
      [
        290,
        "operator.iconcat"
      ]
    ],
    "ifloordiv() (in module operator)": [
      [
        290,
        "operator.ifloordiv"
      ]
    ],
    "ilshift() (in module operator)": [
      [
        290,
        "operator.ilshift"
      ]
    ],
    "imatmul() (in module operator)": [
      [
        290,
        "operator.imatmul"
      ]
    ],
    "imod() (in module operator)": [
      [
        290,
        "operator.imod"
      ]
    ],
    "imul() (in module operator)": [
      [
        290,
        "operator.imul"
      ]
    ],
    "index() (in module operator)": [
      [
        290,
        "operator.index"
      ]
    ],
    "indexof() (in module operator)": [
      [
        290,
        "operator.indexOf"
      ]
    ],
    "inv() (in module operator)": [
      [
        290,
        "operator.inv"
      ]
    ],
    "invert() (in module operator)": [
      [
        290,
        "operator.invert"
      ]
    ],
    "ior() (in module operator)": [
      [
        290,
        "operator.ior"
      ]
    ],
    "ipow() (in module operator)": [
      [
        290,
        "operator.ipow"
      ]
    ],
    "irshift() (in module operator)": [
      [
        290,
        "operator.irshift"
      ]
    ],
    "is_() (in module operator)": [
      [
        290,
        "operator.is_"
      ]
    ],
    "is_not() (in module operator)": [
      [
        290,
        "operator.is_not"
      ]
    ],
    "isub() (in module operator)": [
      [
        290,
        "operator.isub"
      ]
    ],
    "itemgetter() (in module operator)": [
      [
        290,
        "operator.itemgetter"
      ]
    ],
    "itruediv() (in module operator)": [
      [
        290,
        "operator.itruediv"
      ]
    ],
    "ixor() (in module operator)": [
      [
        290,
        "operator.ixor"
      ]
    ],
    "le() (in module operator)": [
      [
        290,
        "operator.le"
      ]
    ],
    "length_hint() (in module operator)": [
      [
        290,
        "operator.length_hint"
      ]
    ],
    "lshift() (in module operator)": [
      [
        290,
        "operator.lshift"
      ]
    ],
    "lt() (in module operator)": [
      [
        290,
        "operator.lt"
      ]
    ],
    "matmul() (in module operator)": [
      [
        290,
        "operator.matmul"
      ]
    ],
    "methodcaller() (in module operator)": [
      [
        290,
        "operator.methodcaller"
      ]
    ],
    "mod() (in module operator)": [
      [
        290,
        "operator.mod"
      ]
    ],
    "mul() (in module operator)": [
      [
        290,
        "operator.mul"
      ]
    ],
    "ne() (in module operator)": [
      [
        290,
        "operator.ne"
      ]
    ],
    "neg() (in module operator)": [
      [
        290,
        "operator.neg"
      ]
    ],
    "not_() (in module operator)": [
      [
        290,
        "operator.not_"
      ]
    ],
    "operator": [
      [
        290,
        "module-operator"
      ],
      [
        343,
        "index-10"
      ],
      [
        343,
        "index-13"
      ],
      [
        343,
        "index-16"
      ],
      [
        343,
        "index-20"
      ],
      [
        343,
        "index-4"
      ],
      [
        343,
        "index-6"
      ],
      [
        343,
        "index-7"
      ],
      [
        427,
        "index-71"
      ],
      [
        429,
        "index-58"
      ],
      [
        429,
        "index-60"
      ],
      [
        429,
        "index-61"
      ],
      [
        429,
        "index-62"
      ],
      [
        429,
        "index-65"
      ],
      [
        429,
        "index-66"
      ],
      [
        429,
        "index-67"
      ],
      [
        429,
        "index-68"
      ],
      [
        429,
        "index-69"
      ],
      [
        429,
        "index-70"
      ],
      [
        429,
        "index-71"
      ],
      [
        429,
        "index-74"
      ],
      [
        429,
        "index-75"
      ],
      [
        429,
        "index-76"
      ],
      [
        429,
        "index-77"
      ],
      [
        429,
        "index-80"
      ],
      [
        429,
        "index-81"
      ],
      [
        429,
        "index-83"
      ],
      [
        429,
        "index-84"
      ],
      [
        429,
        "index-85"
      ],
      [
        429,
        "index-88"
      ],
      [
        429,
        "index-97"
      ]
    ],
    "or_() (in module operator)": [
      [
        290,
        "operator.or_"
      ]
    ],
    "pos() (in module operator)": [
      [
        290,
        "operator.pos"
      ]
    ],
    "pow() (in module operator)": [
      [
        290,
        "operator.pow"
      ]
    ],
    "rshift() (in module operator)": [
      [
        290,
        "operator.rshift"
      ]
    ],
    "setitem() (in module operator)": [
      [
        290,
        "operator.setitem"
      ]
    ],
    "sub() (in module operator)": [
      [
        290,
        "operator.sub"
      ]
    ],
    "truediv() (in module operator)": [
      [
        290,
        "operator.truediv"
      ]
    ],
    "truth() (in module operator)": [
      [
        290,
        "operator.truth"
      ]
    ],
    "xor() (in module operator)": [
      [
        290,
        "operator.xor"
      ]
    ],
    "actions (optparse.option attribute)": [
      [
        291,
        "optparse.Option.ACTIONS"
      ]
    ],
    "always_typed_actions (optparse.option attribute)": [
      [
        291,
        "optparse.Option.ALWAYS_TYPED_ACTIONS"
      ]
    ],
    "ambiguousoptionerror": [
      [
        291,
        "optparse.AmbiguousOptionError"
      ]
    ],
    "badoptionerror": [
      [
        291,
        "optparse.BadOptionError"
      ]
    ],
    "option (class in optparse)": [
      [
        291,
        "optparse.Option"
      ]
    ],
    "optionconflicterror": [
      [
        291,
        "optparse.OptionConflictError"
      ]
    ],
    "optionerror": [
      [
        291,
        "optparse.OptionError"
      ]
    ],
    "optiongroup (class in optparse)": [
      [
        291,
        "optparse.OptionGroup"
      ]
    ],
    "optionparser (class in optparse)": [
      [
        291,
        "optparse.OptionParser"
      ]
    ],
    "optionvalueerror": [
      [
        291,
        "optparse.OptionValueError"
      ]
    ],
    "store_actions (optparse.option attribute)": [
      [
        291,
        "optparse.Option.STORE_ACTIONS"
      ]
    ],
    "typed_actions (optparse.option attribute)": [
      [
        291,
        "optparse.Option.TYPED_ACTIONS"
      ]
    ],
    "types (optparse.option attribute)": [
      [
        291,
        "optparse.Option.TYPES"
      ]
    ],
    "type_checker (optparse.option attribute)": [
      [
        291,
        "optparse.Option.TYPE_CHECKER"
      ]
    ],
    "values (class in optparse)": [
      [
        291,
        "optparse.Values"
      ]
    ],
    "action (optparse.option attribute)": [
      [
        291,
        "optparse.Option.action"
      ]
    ],
    "add_option() (optparse.optionparser method)": [
      [
        291,
        "optparse.OptionParser.add_option"
      ]
    ],
    "callback (optparse.option attribute)": [
      [
        291,
        "optparse.Option.callback"
      ]
    ],
    "callback_args (optparse.option attribute)": [
      [
        291,
        "optparse.Option.callback_args"
      ]
    ],
    "callback_kwargs (optparse.option attribute)": [
      [
        291,
        "optparse.Option.callback_kwargs"
      ]
    ],
    "choices (optparse.option attribute)": [
      [
        291,
        "optparse.Option.choices"
      ]
    ],
    "const (optparse.option attribute)": [
      [
        291,
        "optparse.Option.const"
      ]
    ],
    "default (optparse.option attribute)": [
      [
        291,
        "optparse.Option.default"
      ]
    ],
    "dest (optparse.option attribute)": [
      [
        291,
        "optparse.Option.dest"
      ]
    ],
    "disable_interspersed_args() (optparse.optionparser method)": [
      [
        291,
        "optparse.OptionParser.disable_interspersed_args"
      ]
    ],
    "enable_interspersed_args() (optparse.optionparser method)": [
      [
        291,
        "optparse.OptionParser.enable_interspersed_args"
      ]
    ],
    "get_option() (optparse.optionparser method)": [
      [
        291,
        "optparse.OptionParser.get_option"
      ]
    ],
    "get_option_group() (optparse.optionparser method)": [
      [
        291,
        "optparse.OptionParser.get_option_group"
      ]
    ],
    "get_usage() (optparse.optionparser method)": [
      [
        291,
        "optparse.OptionParser.get_usage"
      ]
    ],
    "get_version() (optparse.optionparser method)": [
      [
        291,
        "optparse.OptionParser.get_version"
      ]
    ],
    "has_option() (optparse.optionparser method)": [
      [
        291,
        "optparse.OptionParser.has_option"
      ]
    ],
    "help (optparse.option attribute)": [
      [
        291,
        "optparse.Option.help"
      ]
    ],
    "metavar (optparse.option attribute)": [
      [
        291,
        "optparse.Option.metavar"
      ]
    ],
    "nargs (optparse.option attribute)": [
      [
        291,
        "optparse.Option.nargs"
      ]
    ],
    "optparse": [
      [
        291,
        "module-optparse"
      ]
    ],
    "parse_args() (optparse.optionparser method)": [
      [
        291,
        "optparse.OptionParser.parse_args"
      ]
    ],
    "print_usage() (optparse.optionparser method)": [
      [
        291,
        "optparse.OptionParser.print_usage"
      ]
    ],
    "print_version() (optparse.optionparser method)": [
      [
        291,
        "optparse.OptionParser.print_version"
      ]
    ],
    "remove_option() (optparse.optionparser method)": [
      [
        291,
        "optparse.OptionParser.remove_option"
      ]
    ],
    "set_defaults() (optparse.optionparser method)": [
      [
        291,
        "optparse.OptionParser.set_defaults"
      ]
    ],
    "set_usage() (optparse.optionparser method)": [
      [
        291,
        "optparse.OptionParser.set_usage"
      ]
    ],
    "type (optparse.option attribute)": [
      [
        291,
        "optparse.Option.type"
      ]
    ],
    "..": [
      [
        292,
        "index-46"
      ]
    ],
    "/ (slash)": [
      [
        292,
        "index-47"
      ],
      [
        292,
        "index-49"
      ],
      [
        343,
        "index-13"
      ],
      [
        426,
        "index-32"
      ],
      [
        429,
        "index-67"
      ]
    ],
    ": (colon)": [
      [
        292,
        "index-51"
      ],
      [
        339,
        "index-7"
      ],
      [
        344,
        "index-2"
      ],
      [
        426,
        "index-16"
      ],
      [
        426,
        "index-18"
      ],
      [
        426,
        "index-28"
      ],
      [
        426,
        "index-3"
      ],
      [
        426,
        "index-34"
      ],
      [
        426,
        "index-4"
      ],
      [
        426,
        "index-42"
      ],
      [
        426,
        "index-6"
      ],
      [
        426,
        "index-9"
      ],
      [
        429,
        "index-17"
      ],
      [
        429,
        "index-44"
      ],
      [
        429,
        "index-90"
      ],
      [
        434,
        "index-25"
      ],
      [
        435,
        "index-15"
      ],
      [
        440,
        "index-6"
      ]
    ],
    "; (semicolon)": [
      [
        292,
        "index-51"
      ],
      [
        426,
        "index-1"
      ]
    ],
    "cld_continued (in module os)": [
      [
        292,
        "os.CLD_CONTINUED"
      ]
    ],
    "cld_dumped (in module os)": [
      [
        292,
        "os.CLD_DUMPED"
      ]
    ],
    "cld_exited (in module os)": [
      [
        292,
        "os.CLD_EXITED"
      ]
    ],
    "cld_killed (in module os)": [
      [
        292,
        "os.CLD_KILLED"
      ]
    ],
    "cld_stopped (in module os)": [
      [
        292,
        "os.CLD_STOPPED"
      ]
    ],
    "cld_trapped (in module os)": [
      [
        292,
        "os.CLD_TRAPPED"
      ]
    ],
    "clone_files (in module os)": [
      [
        292,
        "os.CLONE_FILES"
      ]
    ],
    "clone_fs (in module os)": [
      [
        292,
        "os.CLONE_FS"
      ]
    ],
    "clone_newcgroup (in module os)": [
      [
        292,
        "os.CLONE_NEWCGROUP"
      ]
    ],
    "clone_newipc (in module os)": [
      [
        292,
        "os.CLONE_NEWIPC"
      ]
    ],
    "clone_newnet (in module os)": [
      [
        292,
        "os.CLONE_NEWNET"
      ]
    ],
    "clone_newns (in module os)": [
      [
        292,
        "os.CLONE_NEWNS"
      ]
    ],
    "clone_newpid (in module os)": [
      [
        292,
        "os.CLONE_NEWPID"
      ]
    ],
    "clone_newtime (in module os)": [
      [
        292,
        "os.CLONE_NEWTIME"
      ]
    ],
    "clone_newuser (in module os)": [
      [
        292,
        "os.CLONE_NEWUSER"
      ]
    ],
    "clone_newuts (in module os)": [
      [
        292,
        "os.CLONE_NEWUTS"
      ]
    ],
    "clone_sighand (in module os)": [
      [
        292,
        "os.CLONE_SIGHAND"
      ]
    ],
    "clone_sysvsem (in module os)": [
      [
        292,
        "os.CLONE_SYSVSEM"
      ]
    ],
    "clone_thread (in module os)": [
      [
        292,
        "os.CLONE_THREAD"
      ]
    ],
    "clone_vm (in module os)": [
      [
        292,
        "os.CLONE_VM"
      ]
    ],
    "comspec": [
      [
        292,
        "index-43"
      ],
      [
        347,
        "index-3"
      ]
    ],
    "direntry (class in os)": [
      [
        292,
        "os.DirEntry"
      ]
    ],
    "efd_cloexec (in module os)": [
      [
        292,
        "os.EFD_CLOEXEC"
      ]
    ],
    "efd_nonblock (in module os)": [
      [
        292,
        "os.EFD_NONBLOCK"
      ]
    ],
    "efd_semaphore (in module os)": [
      [
        292,
        "os.EFD_SEMAPHORE"
      ]
    ],
    "ex_cantcreat (in module os)": [
      [
        292,
        "os.EX_CANTCREAT"
      ]
    ],
    "ex_config (in module os)": [
      [
        292,
        "os.EX_CONFIG"
      ]
    ],
    "ex_dataerr (in module os)": [
      [
        292,
        "os.EX_DATAERR"
      ]
    ],
    "ex_ioerr (in module os)": [
      [
        292,
        "os.EX_IOERR"
      ]
    ],
    "ex_nohost (in module os)": [
      [
        292,
        "os.EX_NOHOST"
      ]
    ],
    "ex_noinput (in module os)": [
      [
        292,
        "os.EX_NOINPUT"
      ]
    ],
    "ex_noperm (in module os)": [
      [
        292,
        "os.EX_NOPERM"
      ]
    ],
    "ex_notfound (in module os)": [
      [
        292,
        "os.EX_NOTFOUND"
      ]
    ],
    "ex_nouser (in module os)": [
      [
        292,
        "os.EX_NOUSER"
      ]
    ],
    "ex_ok (in module os)": [
      [
        292,
        "os.EX_OK"
      ]
    ],
    "ex_oserr (in module os)": [
      [
        292,
        "os.EX_OSERR"
      ]
    ],
    "ex_osfile (in module os)": [
      [
        292,
        "os.EX_OSFILE"
      ]
    ],
    "ex_protocol (in module os)": [
      [
        292,
        "os.EX_PROTOCOL"
      ]
    ],
    "ex_software (in module os)": [
      [
        292,
        "os.EX_SOFTWARE"
      ]
    ],
    "ex_tempfail (in module os)": [
      [
        292,
        "os.EX_TEMPFAIL"
      ]
    ],
    "ex_unavailable (in module os)": [
      [
        292,
        "os.EX_UNAVAILABLE"
      ]
    ],
    "ex_usage (in module os)": [
      [
        292,
        "os.EX_USAGE"
      ]
    ],
    "f_lock (in module os)": [
      [
        292,
        "os.F_LOCK"
      ]
    ],
    "f_ok (in module os)": [
      [
        292,
        "os.F_OK"
      ]
    ],
    "f_test (in module os)": [
      [
        292,
        "os.F_TEST"
      ]
    ],
    "f_tlock (in module os)": [
      [
        292,
        "os.F_TLOCK"
      ]
    ],
    "f_ulock (in module os)": [
      [
        292,
        "os.F_ULOCK"
      ]
    ],
    "grnd_nonblock (in module os)": [
      [
        292,
        "os.GRND_NONBLOCK"
      ]
    ],
    "grnd_random (in module os)": [
      [
        292,
        "os.GRND_RANDOM"
      ]
    ],
    "mfd_allow_sealing (in module os)": [
      [
        292,
        "os.MFD_ALLOW_SEALING"
      ]
    ],
    "mfd_cloexec (in module os)": [
      [
        292,
        "os.MFD_CLOEXEC"
      ]
    ],
    "mfd_hugetlb (in module os)": [
      [
        292,
        "os.MFD_HUGETLB"
      ]
    ],
    "mfd_huge_16gb (in module os)": [
      [
        292,
        "os.MFD_HUGE_16GB"
      ]
    ],
    "mfd_huge_16mb (in module os)": [
      [
        292,
        "os.MFD_HUGE_16MB"
      ]
    ],
    "mfd_huge_1gb (in module os)": [
      [
        292,
        "os.MFD_HUGE_1GB"
      ]
    ],
    "mfd_huge_1mb (in module os)": [
      [
        292,
        "os.MFD_HUGE_1MB"
      ]
    ],
    "mfd_huge_256mb (in module os)": [
      [
        292,
        "os.MFD_HUGE_256MB"
      ]
    ],
    "mfd_huge_2gb (in module os)": [
      [
        292,
        "os.MFD_HUGE_2GB"
      ]
    ],
    "mfd_huge_2mb (in module os)": [
      [
        292,
        "os.MFD_HUGE_2MB"
      ]
    ],
    "mfd_huge_32mb (in module os)": [
      [
        292,
        "os.MFD_HUGE_32MB"
      ]
    ],
    "mfd_huge_512kb (in module os)": [
      [
        292,
        "os.MFD_HUGE_512KB"
      ]
    ],
    "mfd_huge_512mb (in module os)": [
      [
        292,
        "os.MFD_HUGE_512MB"
      ]
    ],
    "mfd_huge_64kb (in module os)": [
      [
        292,
        "os.MFD_HUGE_64KB"
      ]
    ],
    "mfd_huge_8mb (in module os)": [
      [
        292,
        "os.MFD_HUGE_8MB"
      ]
    ],
    "mfd_huge_mask (in module os)": [
      [
        292,
        "os.MFD_HUGE_MASK"
      ]
    ],
    "mfd_huge_shift (in module os)": [
      [
        292,
        "os.MFD_HUGE_SHIFT"
      ]
    ],
    "o_append (in module os)": [
      [
        292,
        "os.O_APPEND"
      ]
    ],
    "o_async (in module os)": [
      [
        292,
        "os.O_ASYNC"
      ]
    ],
    "o_binary (in module os)": [
      [
        292,
        "os.O_BINARY"
      ]
    ],
    "o_cloexec (in module os)": [
      [
        292,
        "os.O_CLOEXEC"
      ]
    ],
    "o_creat (in module os)": [
      [
        292,
        "os.O_CREAT"
      ]
    ],
    "o_direct (in module os)": [
      [
        292,
        "os.O_DIRECT"
      ]
    ],
    "o_directory (in module os)": [
      [
        292,
        "os.O_DIRECTORY"
      ]
    ],
    "o_dsync (in module os)": [
      [
        292,
        "os.O_DSYNC"
      ]
    ],
    "o_evtonly (in module os)": [
      [
        292,
        "os.O_EVTONLY"
      ]
    ],
    "o_excl (in module os)": [
      [
        292,
        "os.O_EXCL"
      ]
    ],
    "o_exlock (in module os)": [
      [
        292,
        "os.O_EXLOCK"
      ]
    ],
    "o_fsync (in module os)": [
      [
        292,
        "os.O_FSYNC"
      ]
    ],
    "o_ndelay (in module os)": [
      [
        292,
        "os.O_NDELAY"
      ]
    ],
    "o_noatime (in module os)": [
      [
        292,
        "os.O_NOATIME"
      ]
    ],
    "o_noctty (in module os)": [
      [
        292,
        "os.O_NOCTTY"
      ]
    ],
    "o_nofollow (in module os)": [
      [
        292,
        "os.O_NOFOLLOW"
      ]
    ],
    "o_nofollow_any (in module os)": [
      [
        292,
        "os.O_NOFOLLOW_ANY"
      ]
    ],
    "o_noinherit (in module os)": [
      [
        292,
        "os.O_NOINHERIT"
      ]
    ],
    "o_nonblock (in module os)": [
      [
        292,
        "os.O_NONBLOCK"
      ]
    ],
    "o_path (in module os)": [
      [
        292,
        "os.O_PATH"
      ]
    ],
    "o_random (in module os)": [
      [
        292,
        "os.O_RANDOM"
      ]
    ],
    "o_rdonly (in module os)": [
      [
        292,
        "os.O_RDONLY"
      ]
    ],
    "o_rdwr (in module os)": [
      [
        292,
        "os.O_RDWR"
      ]
    ],
    "o_rsync (in module os)": [
      [
        292,
        "os.O_RSYNC"
      ]
    ],
    "o_sequential (in module os)": [
      [
        292,
        "os.O_SEQUENTIAL"
      ]
    ],
    "o_shlock (in module os)": [
      [
        292,
        "os.O_SHLOCK"
      ]
    ],
    "o_short_lived (in module os)": [
      [
        292,
        "os.O_SHORT_LIVED"
      ]
    ],
    "o_symlink (in module os)": [
      [
        292,
        "os.O_SYMLINK"
      ]
    ],
    "o_sync (in module os)": [
      [
        292,
        "os.O_SYNC"
      ]
    ],
    "o_temporary (in module os)": [
      [
        292,
        "os.O_TEMPORARY"
      ]
    ],
    "o_text (in module os)": [
      [
        292,
        "os.O_TEXT"
      ]
    ],
    "o_tmpfile (in module os)": [
      [
        292,
        "os.O_TMPFILE"
      ]
    ],
    "o_trunc (in module os)": [
      [
        292,
        "os.O_TRUNC"
      ]
    ],
    "o_wronly (in module os)": [
      [
        292,
        "os.O_WRONLY"
      ]
    ],
    "pep 524": [
      [
        292,
        "index-53"
      ],
      [
        478,
        "index-1"
      ],
      [
        478,
        "index-31"
      ],
      [
        478,
        "index-32"
      ],
      [
        482,
        "index-268"
      ],
      [
        482,
        "index-269"
      ]
    ],
    "pidfd_nonblock (in module os)": [
      [
        292,
        "os.PIDFD_NONBLOCK"
      ]
    ],
    "posix_fadv_dontneed (in module os)": [
      [
        292,
        "os.POSIX_FADV_DONTNEED"
      ]
    ],
    "posix_fadv_noreuse (in module os)": [
      [
        292,
        "os.POSIX_FADV_NOREUSE"
      ]
    ],
    "posix_fadv_normal (in module os)": [
      [
        292,
        "os.POSIX_FADV_NORMAL"
      ]
    ],
    "posix_fadv_random (in module os)": [
      [
        292,
        "os.POSIX_FADV_RANDOM"
      ]
    ],
    "posix_fadv_sequential (in module os)": [
      [
        292,
        "os.POSIX_FADV_SEQUENTIAL"
      ]
    ],
    "posix_fadv_willneed (in module os)": [
      [
        292,
        "os.POSIX_FADV_WILLNEED"
      ]
    ],
    "posix_spawn_close (in module os)": [
      [
        292,
        "os.POSIX_SPAWN_CLOSE"
      ]
    ],
    "posix_spawn_dup2 (in module os)": [
      [
        292,
        "os.POSIX_SPAWN_DUP2"
      ]
    ],
    "posix_spawn_open (in module os)": [
      [
        292,
        "os.POSIX_SPAWN_OPEN"
      ]
    ],
    "prio_darwin_bg (in module os)": [
      [
        292,
        "os.PRIO_DARWIN_BG"
      ]
    ],
    "prio_darwin_nonui (in module os)": [
      [
        292,
        "os.PRIO_DARWIN_NONUI"
      ]
    ],
    "prio_darwin_process (in module os)": [
      [
        292,
        "os.PRIO_DARWIN_PROCESS"
      ]
    ],
    "prio_darwin_thread (in module os)": [
      [
        292,
        "os.PRIO_DARWIN_THREAD"
      ]
    ],
    "prio_pgrp (in module os)": [
      [
        292,
        "os.PRIO_PGRP"
      ]
    ],
    "prio_process (in module os)": [
      [
        292,
        "os.PRIO_PROCESS"
      ]
    ],
    "prio_user (in module os)": [
      [
        292,
        "os.PRIO_USER"
      ]
    ],
    "p_all (in module os)": [
      [
        292,
        "os.P_ALL"
      ]
    ],
    "p_detach (in module os)": [
      [
        292,
        "os.P_DETACH"
      ]
    ],
    "p_nowait (in module os)": [
      [
        292,
        "os.P_NOWAIT"
      ]
    ],
    "p_nowaito (in module os)": [
      [
        292,
        "os.P_NOWAITO"
      ]
    ],
    "p_overlay (in module os)": [
      [
        292,
        "os.P_OVERLAY"
      ]
    ],
    "p_pgid (in module os)": [
      [
        292,
        "os.P_PGID"
      ]
    ],
    "p_pid (in module os)": [
      [
        292,
        "os.P_PID"
      ]
    ],
    "p_pidfd (in module os)": [
      [
        292,
        "os.P_PIDFD"
      ]
    ],
    "p_wait (in module os)": [
      [
        292,
        "os.P_WAIT"
      ]
    ],
    "pathlike (class in os)": [
      [
        292,
        "os.PathLike"
      ]
    ],
    "rtld_deepbind (in module os)": [
      [
        292,
        "os.RTLD_DEEPBIND"
      ]
    ],
    "rtld_global (in module os)": [
      [
        292,
        "os.RTLD_GLOBAL"
      ]
    ],
    "rtld_lazy (in module os)": [
      [
        292,
        "os.RTLD_LAZY"
      ]
    ],
    "rtld_local (in module os)": [
      [
        292,
        "os.RTLD_LOCAL"
      ]
    ],
    "rtld_nodelete (in module os)": [
      [
        292,
        "os.RTLD_NODELETE"
      ]
    ],
    "rtld_noload (in module os)": [
      [
        292,
        "os.RTLD_NOLOAD"
      ]
    ],
    "rtld_now (in module os)": [
      [
        292,
        "os.RTLD_NOW"
      ]
    ],
    "rwf_append (in module os)": [
      [
        292,
        "os.RWF_APPEND"
      ]
    ],
    "rwf_dsync (in module os)": [
      [
        292,
        "os.RWF_DSYNC"
      ]
    ],
    "rwf_hipri (in module os)": [
      [
        292,
        "os.RWF_HIPRI"
      ]
    ],
    "rwf_nowait (in module os)": [
      [
        292,
        "os.RWF_NOWAIT"
      ]
    ],
    "rwf_sync (in module os)": [
      [
        292,
        "os.RWF_SYNC"
      ]
    ],
    "r_ok (in module os)": [
      [
        292,
        "os.R_OK"
      ]
    ],
    "sched_batch (in module os)": [
      [
        292,
        "os.SCHED_BATCH"
      ]
    ],
    "sched_fifo (in module os)": [
      [
        292,
        "os.SCHED_FIFO"
      ]
    ],
    "sched_idle (in module os)": [
      [
        292,
        "os.SCHED_IDLE"
      ]
    ],
    "sched_other (in module os)": [
      [
        292,
        "os.SCHED_OTHER"
      ]
    ],
    "sched_reset_on_fork (in module os)": [
      [
        292,
        "os.SCHED_RESET_ON_FORK"
      ]
    ],
    "sched_rr (in module os)": [
      [
        292,
        "os.SCHED_RR"
      ]
    ],
    "sched_sporadic (in module os)": [
      [
        292,
        "os.SCHED_SPORADIC"
      ]
    ],
    "seek_cur (in module os)": [
      [
        292,
        "os.SEEK_CUR"
      ]
    ],
    "seek_data (in module os)": [
      [
        292,
        "os.SEEK_DATA"
      ]
    ],
    "seek_end (in module os)": [
      [
        292,
        "os.SEEK_END"
      ]
    ],
    "seek_hole (in module os)": [
      [
        292,
        "os.SEEK_HOLE"
      ]
    ],
    "seek_set (in module os)": [
      [
        292,
        "os.SEEK_SET"
      ]
    ],
    "sf_mnowait (in module os)": [
      [
        292,
        "os.SF_MNOWAIT"
      ]
    ],
    "sf_nocache (in module os)": [
      [
        292,
        "os.SF_NOCACHE"
      ]
    ],
    "sf_nodiskio (in module os)": [
      [
        292,
        "os.SF_NODISKIO"
      ]
    ],
    "sf_sync (in module os)": [
      [
        292,
        "os.SF_SYNC"
      ]
    ],
    "splice_f_more (in module os)": [
      [
        292,
        "os.SPLICE_F_MORE"
      ]
    ],
    "splice_f_move (in module os)": [
      [
        292,
        "os.SPLICE_F_MOVE"
      ]
    ],
    "splice_f_nonblock (in module os)": [
      [
        292,
        "os.SPLICE_F_NONBLOCK"
      ]
    ],
    "unc paths": [
      [
        292,
        "index-28"
      ]
    ],
    "wcontinued (in module os)": [
      [
        292,
        "os.WCONTINUED"
      ]
    ],
    "wcoredump() (in module os)": [
      [
        292,
        "os.WCOREDUMP"
      ]
    ],
    "wexited (in module os)": [
      [
        292,
        "os.WEXITED"
      ]
    ],
    "wexitstatus() (in module os)": [
      [
        292,
        "os.WEXITSTATUS"
      ]
    ],
    "wifcontinued() (in module os)": [
      [
        292,
        "os.WIFCONTINUED"
      ]
    ],
    "wifexited() (in module os)": [
      [
        292,
        "os.WIFEXITED"
      ]
    ],
    "wifsignaled() (in module os)": [
      [
        292,
        "os.WIFSIGNALED"
      ]
    ],
    "wifstopped() (in module os)": [
      [
        292,
        "os.WIFSTOPPED"
      ]
    ],
    "wnohang (in module os)": [
      [
        292,
        "os.WNOHANG"
      ]
    ],
    "wnowait (in module os)": [
      [
        292,
        "os.WNOWAIT"
      ]
    ],
    "wstopped (in module os)": [
      [
        292,
        "os.WSTOPPED"
      ]
    ],
    "wstopsig() (in module os)": [
      [
        292,
        "os.WSTOPSIG"
      ]
    ],
    "wtermsig() (in module os)": [
      [
        292,
        "os.WTERMSIG"
      ]
    ],
    "wuntraced (in module os)": [
      [
        292,
        "os.WUNTRACED"
      ]
    ],
    "w_ok (in module os)": [
      [
        292,
        "os.W_OK"
      ]
    ],
    "xattr_create (in module os)": [
      [
        292,
        "os.XATTR_CREATE"
      ]
    ],
    "xattr_replace (in module os)": [
      [
        292,
        "os.XATTR_REPLACE"
      ]
    ],
    "xattr_size_max (in module os)": [
      [
        292,
        "os.XATTR_SIZE_MAX"
      ]
    ],
    "x_ok (in module os)": [
      [
        292,
        "os.X_OK"
      ]
    ],
    "__fspath__() (os.pathlike method)": [
      [
        292,
        "os.PathLike.__fspath__"
      ]
    ],
    "_exit() (in module os)": [
      [
        292,
        "os._exit"
      ]
    ],
    "abort() (in module os)": [
      [
        292,
        "os.abort"
      ]
    ],
    "access() (in module os)": [
      [
        292,
        "os.access"
      ]
    ],
    "add_dll_directory() (in module os)": [
      [
        292,
        "os.add_dll_directory"
      ]
    ],
    "altsep (in module os)": [
      [
        292,
        "os.altsep"
      ]
    ],
    "and os.makedirs()": [
      [
        292,
        "index-28"
      ]
    ],
    "changing": [
      [
        292,
        "index-26"
      ]
    ],
    "chdir() (in module os)": [
      [
        292,
        "os.chdir"
      ]
    ],
    "chflags() (in module os)": [
      [
        292,
        "os.chflags"
      ]
    ],
    "chmod() (in module os)": [
      [
        292,
        "os.chmod"
      ]
    ],
    "chown() (in module os)": [
      [
        292,
        "os.chown"
      ]
    ],
    "chroot() (in module os)": [
      [
        292,
        "os.chroot"
      ]
    ],
    "close() (in module os)": [
      [
        292,
        "os.close"
      ]
    ],
    "close() (os.scandir method)": [
      [
        292,
        "os.scandir.close"
      ]
    ],
    "closerange() (in module os)": [
      [
        292,
        "os.closerange"
      ]
    ],
    "columns (os.terminal_size attribute)": [
      [
        292,
        "os.terminal_size.columns"
      ]
    ],
    "confstr() (in module os)": [
      [
        292,
        "os.confstr"
      ]
    ],
    "confstr_names (in module os)": [
      [
        292,
        "os.confstr_names"
      ]
    ],
    "copy_file_range() (in module os)": [
      [
        292,
        "os.copy_file_range"
      ]
    ],
    "cpu_count() (in module os)": [
      [
        292,
        "os.cpu_count"
      ]
    ],
    "creating": [
      [
        292,
        "index-28"
      ]
    ],
    "ctermid() (in module os)": [
      [
        292,
        "os.ctermid"
      ]
    ],
    "curdir (in module os)": [
      [
        292,
        "os.curdir"
      ]
    ],
    "defpath (in module os)": [
      [
        292,
        "os.defpath"
      ]
    ],
    "deleting": [
      [
        292,
        "index-21"
      ],
      [
        292,
        "index-29"
      ],
      [
        331,
        "index-1"
      ]
    ],
    "device_encoding() (in module os)": [
      [
        292,
        "os.device_encoding"
      ]
    ],
    "devnull (in module os)": [
      [
        292,
        "os.devnull"
      ]
    ],
    "dup() (in module os)": [
      [
        292,
        "os.dup"
      ]
    ],
    "dup2() (in module os)": [
      [
        292,
        "os.dup2"
      ]
    ],
    "effective id": [
      [
        292,
        "index-8"
      ]
    ],
    "environ (in module os)": [
      [
        292,
        "os.environ"
      ]
    ],
    "environb (in module os)": [
      [
        292,
        "os.environb"
      ]
    ],
    "environment variables": [
      [
        292,
        "index-17"
      ],
      [
        292,
        "index-21"
      ]
    ],
    "eventfd() (in module os)": [
      [
        292,
        "os.eventfd"
      ]
    ],
    "eventfd_read() (in module os)": [
      [
        292,
        "os.eventfd_read"
      ]
    ],
    "eventfd_write() (in module os)": [
      [
        292,
        "os.eventfd_write"
      ]
    ],
    "execl() (in module os)": [
      [
        292,
        "os.execl"
      ]
    ],
    "execle() (in module os)": [
      [
        292,
        "os.execle"
      ]
    ],
    "execlp() (in module os)": [
      [
        292,
        "os.execlp"
      ]
    ],
    "execlpe() (in module os)": [
      [
        292,
        "os.execlpe"
      ]
    ],
    "execv() (in module os)": [
      [
        292,
        "os.execv"
      ]
    ],
    "execve() (in module os)": [
      [
        292,
        "os.execve"
      ]
    ],
    "execvp() (in module os)": [
      [
        292,
        "os.execvp"
      ]
    ],
    "execvpe() (in module os)": [
      [
        292,
        "os.execvpe"
      ]
    ],
    "extsep (in module os)": [
      [
        292,
        "os.extsep"
      ]
    ],
    "fchdir() (in module os)": [
      [
        292,
        "os.fchdir"
      ]
    ],
    "fchmod() (in module os)": [
      [
        292,
        "os.fchmod"
      ]
    ],
    "fchown() (in module os)": [
      [
        292,
        "os.fchown"
      ]
    ],
    "fdatasync() (in module os)": [
      [
        292,
        "os.fdatasync"
      ]
    ],
    "fdopen() (in module os)": [
      [
        292,
        "os.fdopen"
      ]
    ],
    "fork() (in module os)": [
      [
        292,
        "os.fork"
      ]
    ],
    "forkpty() (in module os)": [
      [
        292,
        "os.forkpty"
      ]
    ],
    "fpathconf() (in module os)": [
      [
        292,
        "os.fpathconf"
      ]
    ],
    "fsdecode() (in module os)": [
      [
        292,
        "os.fsdecode"
      ]
    ],
    "fsencode() (in module os)": [
      [
        292,
        "os.fsencode"
      ]
    ],
    "fspath() (in module os)": [
      [
        292,
        "os.fspath"
      ]
    ],
    "fstat() (in module os)": [
      [
        292,
        "os.fstat"
      ]
    ],
    "fstatvfs() (in module os)": [
      [
        292,
        "os.fstatvfs"
      ]
    ],
    "fsync() (in module os)": [
      [
        292,
        "os.fsync"
      ]
    ],
    "ftruncate() (in module os)": [
      [
        292,
        "os.ftruncate"
      ]
    ],
    "fwalk() (in module os)": [
      [
        292,
        "os.fwalk"
      ]
    ],
    "get_blocking() (in module os)": [
      [
        292,
        "os.get_blocking"
      ]
    ],
    "get_exec_path() (in module os)": [
      [
        292,
        "os.get_exec_path"
      ]
    ],
    "get_handle_inheritable() (in module os)": [
      [
        292,
        "os.get_handle_inheritable"
      ]
    ],
    "get_inheritable() (in module os)": [
      [
        292,
        "os.get_inheritable"
      ]
    ],
    "get_terminal_size() (in module os)": [
      [
        292,
        "os.get_terminal_size"
      ]
    ],
    "getcwd() (in module os)": [
      [
        292,
        "os.getcwd"
      ]
    ],
    "getcwdb() (in module os)": [
      [
        292,
        "os.getcwdb"
      ]
    ],
    "getegid() (in module os)": [
      [
        292,
        "os.getegid"
      ]
    ],
    "getenv() (in module os)": [
      [
        292,
        "os.getenv"
      ]
    ],
    "getenvb() (in module os)": [
      [
        292,
        "os.getenvb"
      ]
    ],
    "geteuid() (in module os)": [
      [
        292,
        "os.geteuid"
      ]
    ],
    "getgid() (in module os)": [
      [
        292,
        "os.getgid"
      ]
    ],
    "getgrouplist() (in module os)": [
      [
        292,
        "os.getgrouplist"
      ]
    ],
    "getgroups() (in module os)": [
      [
        292,
        "os.getgroups"
      ]
    ],
    "gethostbyaddr() (in module socket)": [
      [
        292,
        "index-20"
      ],
      [
        336,
        "socket.gethostbyaddr"
      ]
    ],
    "gethostname() (in module socket)": [
      [
        292,
        "index-20"
      ],
      [
        336,
        "socket.gethostname"
      ]
    ],
    "getloadavg() (in module os)": [
      [
        292,
        "os.getloadavg"
      ]
    ],
    "getlogin() (in module os)": [
      [
        292,
        "os.getlogin"
      ]
    ],
    "getpgid() (in module os)": [
      [
        292,
        "os.getpgid"
      ]
    ],
    "getpgrp() (in module os)": [
      [
        292,
        "os.getpgrp"
      ]
    ],
    "getpid() (in module os)": [
      [
        292,
        "os.getpid"
      ]
    ],
    "getppid() (in module os)": [
      [
        292,
        "os.getppid"
      ]
    ],
    "getpriority() (in module os)": [
      [
        292,
        "os.getpriority"
      ]
    ],
    "getrandom() (in module os)": [
      [
        292,
        "os.getrandom"
      ]
    ],
    "getresgid() (in module os)": [
      [
        292,
        "os.getresgid"
      ]
    ],
    "getresuid() (in module os)": [
      [
        292,
        "os.getresuid"
      ]
    ],
    "getsid() (in module os)": [
      [
        292,
        "os.getsid"
      ]
    ],
    "getuid() (in module os)": [
      [
        292,
        "os.getuid"
      ]
    ],
    "getxattr() (in module os)": [
      [
        292,
        "os.getxattr"
      ]
    ],
    "group": [
      [
        292,
        "index-12"
      ],
      [
        292,
        "index-9"
      ]
    ],
    "id": [
      [
        292,
        "index-13"
      ],
      [
        292,
        "index-16"
      ],
      [
        427,
        "index-1"
      ]
    ],
    "id of parent": [
      [
        292,
        "index-14"
      ]
    ],
    "id, setting": [
      [
        292,
        "index-19"
      ]
    ],
    "in pathnames": [
      [
        292,
        "index-45"
      ],
      [
        292,
        "index-46"
      ],
      [
        292,
        "index-47"
      ],
      [
        292,
        "index-49"
      ],
      [
        292,
        "index-50"
      ]
    ],
    "in pathnames (windows)": [
      [
        292,
        "index-48"
      ]
    ],
    "initgroups() (in module os)": [
      [
        292,
        "os.initgroups"
      ]
    ],
    "inode() (os.direntry method)": [
      [
        292,
        "os.DirEntry.inode"
      ]
    ],
    "is_dir() (os.direntry method)": [
      [
        292,
        "os.DirEntry.is_dir"
      ]
    ],
    "is_file() (os.direntry method)": [
      [
        292,
        "os.DirEntry.is_file"
      ]
    ],
    "is_junction() (os.direntry method)": [
      [
        292,
        "os.DirEntry.is_junction"
      ]
    ],
    "is_symlink() (os.direntry method)": [
      [
        292,
        "os.DirEntry.is_symlink"
      ]
    ],
    "isatty() (in module os)": [
      [
        292,
        "os.isatty"
      ]
    ],
    "kill() (in module os)": [
      [
        292,
        "os.kill"
      ]
    ],
    "killing": [
      [
        292,
        "index-37"
      ],
      [
        292,
        "index-38"
      ]
    ],
    "killpg() (in module os)": [
      [
        292,
        "os.killpg"
      ]
    ],
    "lchflags() (in module os)": [
      [
        292,
        "os.lchflags"
      ]
    ],
    "lchmod() (in module os)": [
      [
        292,
        "os.lchmod"
      ]
    ],
    "lchown() (in module os)": [
      [
        292,
        "os.lchown"
      ]
    ],
    "lines (os.terminal_size attribute)": [
      [
        292,
        "os.terminal_size.lines"
      ]
    ],
    "linesep (in module os)": [
      [
        292,
        "os.linesep"
      ]
    ],
    "link() (in module os)": [
      [
        292,
        "os.link"
      ]
    ],
    "listdir() (in module os)": [
      [
        292,
        "os.listdir"
      ]
    ],
    "listdrives() (in module os)": [
      [
        292,
        "os.listdrives"
      ]
    ],
    "listmounts() (in module os)": [
      [
        292,
        "os.listmounts"
      ]
    ],
    "listvolumes() (in module os)": [
      [
        292,
        "os.listvolumes"
      ]
    ],
    "listxattr() (in module os)": [
      [
        292,
        "os.listxattr"
      ]
    ],
    "lockf() (in module os)": [
      [
        292,
        "os.lockf"
      ]
    ],
    "login_tty() (in module os)": [
      [
        292,
        "os.login_tty"
      ]
    ],
    "lseek() (in module os)": [
      [
        292,
        "os.lseek"
      ]
    ],
    "lstat() (in module os)": [
      [
        292,
        "os.lstat"
      ]
    ],
    "major() (in module os)": [
      [
        292,
        "os.major"
      ]
    ],
    "makedev() (in module os)": [
      [
        292,
        "os.makedev"
      ]
    ],
    "makedirs() (in module os)": [
      [
        292,
        "os.makedirs"
      ]
    ],
    "memfd_create() (in module os)": [
      [
        292,
        "os.memfd_create"
      ]
    ],
    "minor() (in module os)": [
      [
        292,
        "os.minor"
      ]
    ],
    "mkdir() (in module os)": [
      [
        292,
        "os.mkdir"
      ]
    ],
    "mkfifo() (in module os)": [
      [
        292,
        "os.mkfifo"
      ]
    ],
    "mknod() (in module os)": [
      [
        292,
        "os.mknod"
      ]
    ],
    "name (in module os)": [
      [
        292,
        "os.name"
      ]
    ],
    "name (os.direntry attribute)": [
      [
        292,
        "os.DirEntry.name"
      ]
    ],
    "nice() (in module os)": [
      [
        292,
        "os.nice"
      ]
    ],
    "open() (in module os)": [
      [
        292,
        "os.open"
      ]
    ],
    "openpty() (in module os)": [
      [
        292,
        "os.openpty"
      ]
    ],
    "os": [
      [
        292,
        "module-os"
      ],
      [
        305,
        "index-0"
      ]
    ],
    "pardir (in module os)": [
      [
        292,
        "os.pardir"
      ]
    ],
    "path (os.direntry attribute)": [
      [
        292,
        "os.DirEntry.path"
      ]
    ],
    "path separator (posix)": [
      [
        292,
        "index-51"
      ]
    ],
    "pathconf() (in module os)": [
      [
        292,
        "os.pathconf"
      ]
    ],
    "pathconf_names (in module os)": [
      [
        292,
        "os.pathconf_names"
      ]
    ],
    "pathsep (in module os)": [
      [
        292,
        "os.pathsep"
      ]
    ],
    "pidfd_open() (in module os)": [
      [
        292,
        "os.pidfd_open"
      ]
    ],
    "pipe() (in module os)": [
      [
        292,
        "os.pipe"
      ]
    ],
    "pipe2() (in module os)": [
      [
        292,
        "os.pipe2"
      ]
    ],
    "plock() (in module os)": [
      [
        292,
        "os.plock"
      ]
    ],
    "popen() (in module os)": [
      [
        292,
        "os.popen"
      ],
      [
        327,
        "index-1"
      ],
      [
        427,
        "index-55"
      ]
    ],
    "posix_fadvise() (in module os)": [
      [
        292,
        "os.posix_fadvise"
      ]
    ],
    "posix_fallocate() (in module os)": [
      [
        292,
        "os.posix_fallocate"
      ]
    ],
    "posix_spawn() (in module os)": [
      [
        292,
        "os.posix_spawn"
      ]
    ],
    "posix_spawnp() (in module os)": [
      [
        292,
        "os.posix_spawnp"
      ]
    ],
    "pread() (in module os)": [
      [
        292,
        "os.pread"
      ]
    ],
    "preadv() (in module os)": [
      [
        292,
        "os.preadv"
      ]
    ],
    "process": [
      [
        292,
        "index-12"
      ],
      [
        292,
        "index-13"
      ],
      [
        292,
        "index-14"
      ],
      [
        292,
        "index-15"
      ],
      [
        292,
        "index-18"
      ],
      [
        292,
        "index-37"
      ],
      [
        292,
        "index-38"
      ],
      [
        292,
        "index-9"
      ]
    ],
    "pty": [
      [
        292,
        "index-23"
      ],
      [
        308,
        "module-pty"
      ]
    ],
    "putenv() (in module os)": [
      [
        292,
        "os.putenv"
      ]
    ],
    "pwrite() (in module os)": [
      [
        292,
        "os.pwrite"
      ]
    ],
    "pwritev() (in module os)": [
      [
        292,
        "os.pwritev"
      ]
    ],
    "read() (in module os)": [
      [
        292,
        "os.read"
      ]
    ],
    "readlink() (in module os)": [
      [
        292,
        "os.readlink"
      ]
    ],
    "readv() (in module os)": [
      [
        292,
        "os.readv"
      ]
    ],
    "register_at_fork() (in module os)": [
      [
        292,
        "os.register_at_fork"
      ]
    ],
    "remove() (in module os)": [
      [
        292,
        "os.remove"
      ]
    ],
    "removedirs() (in module os)": [
      [
        292,
        "os.removedirs"
      ]
    ],
    "removexattr() (in module os)": [
      [
        292,
        "os.removexattr"
      ]
    ],
    "rename() (in module os)": [
      [
        292,
        "os.rename"
      ]
    ],
    "renames() (in module os)": [
      [
        292,
        "os.renames"
      ]
    ],
    "replace() (in module os)": [
      [
        292,
        "os.replace"
      ]
    ],
    "rmdir() (in module os)": [
      [
        292,
        "os.rmdir"
      ]
    ],
    "scandir() (in module os)": [
      [
        292,
        "os.scandir"
      ]
    ],
    "sched_get_priority_max() (in module os)": [
      [
        292,
        "os.sched_get_priority_max"
      ]
    ],
    "sched_get_priority_min() (in module os)": [
      [
        292,
        "os.sched_get_priority_min"
      ]
    ],
    "sched_getaffinity() (in module os)": [
      [
        292,
        "os.sched_getaffinity"
      ]
    ],
    "sched_getparam() (in module os)": [
      [
        292,
        "os.sched_getparam"
      ]
    ],
    "sched_getscheduler() (in module os)": [
      [
        292,
        "os.sched_getscheduler"
      ]
    ],
    "sched_param (class in os)": [
      [
        292,
        "os.sched_param"
      ]
    ],
    "sched_priority (os.sched_param attribute)": [
      [
        292,
        "os.sched_param.sched_priority"
      ]
    ],
    "sched_rr_get_interval() (in module os)": [
      [
        292,
        "os.sched_rr_get_interval"
      ]
    ],
    "sched_setaffinity() (in module os)": [
      [
        292,
        "os.sched_setaffinity"
      ]
    ],
    "sched_setparam() (in module os)": [
      [
        292,
        "os.sched_setparam"
      ]
    ],
    "sched_setscheduler() (in module os)": [
      [
        292,
        "os.sched_setscheduler"
      ]
    ],
    "sched_yield() (in module os)": [
      [
        292,
        "os.sched_yield"
      ]
    ],
    "scheduling priority": [
      [
        292,
        "index-15"
      ],
      [
        292,
        "index-18"
      ]
    ],
    "sendfile() (in module os)": [
      [
        292,
        "os.sendfile"
      ]
    ],
    "sep (in module os)": [
      [
        292,
        "os.sep"
      ]
    ],
    "set_blocking() (in module os)": [
      [
        292,
        "os.set_blocking"
      ]
    ],
    "set_handle_inheritable() (in module os)": [
      [
        292,
        "os.set_handle_inheritable"
      ]
    ],
    "set_inheritable() (in module os)": [
      [
        292,
        "os.set_inheritable"
      ]
    ],
    "setegid() (in module os)": [
      [
        292,
        "os.setegid"
      ]
    ],
    "seteuid() (in module os)": [
      [
        292,
        "os.seteuid"
      ]
    ],
    "setgid() (in module os)": [
      [
        292,
        "os.setgid"
      ]
    ],
    "setgroups() (in module os)": [
      [
        292,
        "os.setgroups"
      ]
    ],
    "setns() (in module os)": [
      [
        292,
        "os.setns"
      ]
    ],
    "setpgid() (in module os)": [
      [
        292,
        "os.setpgid"
      ]
    ],
    "setpgrp() (in module os)": [
      [
        292,
        "os.setpgrp"
      ]
    ],
    "setpriority() (in module os)": [
      [
        292,
        "os.setpriority"
      ]
    ],
    "setregid() (in module os)": [
      [
        292,
        "os.setregid"
      ]
    ],
    "setresgid() (in module os)": [
      [
        292,
        "os.setresgid"
      ]
    ],
    "setresuid() (in module os)": [
      [
        292,
        "os.setresuid"
      ]
    ],
    "setreuid() (in module os)": [
      [
        292,
        "os.setreuid"
      ]
    ],
    "setsid() (in module os)": [
      [
        292,
        "os.setsid"
      ]
    ],
    "setting": [
      [
        292,
        "index-17"
      ]
    ],
    "setuid() (in module os)": [
      [
        292,
        "os.setuid"
      ]
    ],
    "setxattr() (in module os)": [
      [
        292,
        "os.setxattr"
      ]
    ],
    "signalling": [
      [
        292,
        "index-37"
      ],
      [
        292,
        "index-38"
      ]
    ],
    "spawnl() (in module os)": [
      [
        292,
        "os.spawnl"
      ]
    ],
    "spawnle() (in module os)": [
      [
        292,
        "os.spawnle"
      ]
    ],
    "spawnlp() (in module os)": [
      [
        292,
        "os.spawnlp"
      ]
    ],
    "spawnlpe() (in module os)": [
      [
        292,
        "os.spawnlpe"
      ]
    ],
    "spawnv() (in module os)": [
      [
        292,
        "os.spawnv"
      ]
    ],
    "spawnve() (in module os)": [
      [
        292,
        "os.spawnve"
      ]
    ],
    "spawnvp() (in module os)": [
      [
        292,
        "os.spawnvp"
      ]
    ],
    "spawnvpe() (in module os)": [
      [
        292,
        "os.spawnvpe"
      ]
    ],
    "splice() (in module os)": [
      [
        292,
        "os.splice"
      ]
    ],
    "st_atime (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_atime"
      ]
    ],
    "st_atime_ns (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_atime_ns"
      ]
    ],
    "st_birthtime (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_birthtime"
      ]
    ],
    "st_birthtime_ns (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_birthtime_ns"
      ]
    ],
    "st_blksize (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_blksize"
      ]
    ],
    "st_blocks (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_blocks"
      ]
    ],
    "st_creator (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_creator"
      ]
    ],
    "st_ctime (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_ctime"
      ]
    ],
    "st_ctime_ns (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_ctime_ns"
      ]
    ],
    "st_dev (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_dev"
      ]
    ],
    "st_file_attributes (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_file_attributes"
      ]
    ],
    "st_flags (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_flags"
      ]
    ],
    "st_fstype (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_fstype"
      ]
    ],
    "st_gen (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_gen"
      ]
    ],
    "st_gid (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_gid"
      ]
    ],
    "st_ino (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_ino"
      ]
    ],
    "st_mode (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_mode"
      ]
    ],
    "st_mtime (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_mtime"
      ]
    ],
    "st_mtime_ns (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_mtime_ns"
      ]
    ],
    "st_nlink (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_nlink"
      ]
    ],
    "st_rdev (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_rdev"
      ]
    ],
    "st_reparse_tag (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_reparse_tag"
      ]
    ],
    "st_rsize (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_rsize"
      ]
    ],
    "st_size (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_size"
      ]
    ],
    "st_type (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_type"
      ]
    ],
    "st_uid (os.stat_result attribute)": [
      [
        292,
        "os.stat_result.st_uid"
      ]
    ],
    "startfile() (in module os)": [
      [
        292,
        "os.startfile"
      ]
    ],
    "stat": [
      [
        292,
        "index-30"
      ],
      [
        341,
        "module-stat"
      ]
    ],
    "stat() (in module os)": [
      [
        292,
        "os.stat"
      ]
    ],
    "stat() (os.direntry method)": [
      [
        292,
        "os.DirEntry.stat"
      ]
    ],
    "stat_result (class in os)": [
      [
        292,
        "os.stat_result"
      ]
    ],
    "statvfs() (in module os)": [
      [
        292,
        "os.statvfs"
      ]
    ],
    "strerror() (in module os)": [
      [
        292,
        "os.strerror"
      ]
    ],
    "supports_bytes_environ (in module os)": [
      [
        292,
        "os.supports_bytes_environ"
      ]
    ],
    "supports_dir_fd (in module os)": [
      [
        292,
        "os.supports_dir_fd"
      ]
    ],
    "supports_effective_ids (in module os)": [
      [
        292,
        "os.supports_effective_ids"
      ]
    ],
    "supports_fd (in module os)": [
      [
        292,
        "os.supports_fd"
      ]
    ],
    "supports_follow_symlinks (in module os)": [
      [
        292,
        "os.supports_follow_symlinks"
      ]
    ],
    "symlink() (in module os)": [
      [
        292,
        "os.symlink"
      ]
    ],
    "sync() (in module os)": [
      [
        292,
        "os.sync"
      ]
    ],
    "sysconf() (in module os)": [
      [
        292,
        "os.sysconf"
      ]
    ],
    "sysconf_names (in module os)": [
      [
        292,
        "os.sysconf_names"
      ]
    ],
    "system() (in module os)": [
      [
        292,
        "os.system"
      ]
    ],
    "tcgetpgrp() (in module os)": [
      [
        292,
        "os.tcgetpgrp"
      ]
    ],
    "tcsetpgrp() (in module os)": [
      [
        292,
        "os.tcsetpgrp"
      ]
    ],
    "terminal_size (class in os)": [
      [
        292,
        "os.terminal_size"
      ]
    ],
    "times() (in module os)": [
      [
        292,
        "os.times"
      ]
    ],
    "traversal": [
      [
        292,
        "index-31"
      ],
      [
        292,
        "index-32"
      ]
    ],
    "truncate() (in module os)": [
      [
        292,
        "os.truncate"
      ]
    ],
    "ttyname() (in module os)": [
      [
        292,
        "os.ttyname"
      ]
    ],
    "umask() (in module os)": [
      [
        292,
        "os.umask"
      ]
    ],
    "uname() (in module os)": [
      [
        292,
        "os.uname"
      ]
    ],
    "unlink() (in module os)": [
      [
        292,
        "os.unlink"
      ]
    ],
    "unsetenv() (in module os)": [
      [
        292,
        "os.unsetenv"
      ]
    ],
    "unshare() (in module os)": [
      [
        292,
        "os.unshare"
      ]
    ],
    "urandom() (in module os)": [
      [
        292,
        "os.urandom"
      ]
    ],
    "utime() (in module os)": [
      [
        292,
        "os.utime"
      ]
    ],
    "wait() (in module os)": [
      [
        292,
        "os.wait"
      ]
    ],
    "wait3() (in module os)": [
      [
        292,
        "os.wait3"
      ]
    ],
    "wait4() (in module os)": [
      [
        292,
        "os.wait4"
      ]
    ],
    "waitid() (in module os)": [
      [
        292,
        "os.waitid"
      ]
    ],
    "waitpid() (in module os)": [
      [
        292,
        "os.waitpid"
      ]
    ],
    "waitstatus_to_exitcode() (in module os)": [
      [
        292,
        "os.waitstatus_to_exitcode"
      ]
    ],
    "walk() (in module os)": [
      [
        292,
        "os.walk"
      ]
    ],
    "walking": [
      [
        292,
        "index-31"
      ],
      [
        292,
        "index-32"
      ]
    ],
    "write() (in module os)": [
      [
        292,
        "os.write"
      ]
    ],
    "writev() (in module os)": [
      [
        292,
        "os.writev"
      ]
    ],
    "home": [
      [
        293,
        "index-3"
      ],
      [
        293,
        "index-8"
      ],
      [
        368,
        "index-1"
      ],
      [
        480,
        "index-14"
      ],
      [
        480,
        "index-21"
      ],
      [
        482,
        "index-200"
      ],
      [
        482,
        "index-201"
      ]
    ],
    "homedrive": [
      [
        293,
        "index-6"
      ]
    ],
    "homepath": [
      [
        293,
        "index-5"
      ]
    ],
    "userprofile": [
      [
        293,
        "index-4"
      ],
      [
        480,
        "index-13"
      ],
      [
        480,
        "index-20"
      ],
      [
        482,
        "index-199"
      ]
    ],
    "abspath() (in module os.path)": [
      [
        293,
        "os.path.abspath"
      ]
    ],
    "basename() (in module os.path)": [
      [
        293,
        "os.path.basename"
      ]
    ],
    "commonpath() (in module os.path)": [
      [
        293,
        "os.path.commonpath"
      ]
    ],
    "commonprefix() (in module os.path)": [
      [
        293,
        "os.path.commonprefix"
      ]
    ],
    "dirname() (in module os.path)": [
      [
        293,
        "os.path.dirname"
      ]
    ],
    "environment variables expansion": [
      [
        293,
        "index-9"
      ]
    ],
    "environment variables expansion (windows)": [
      [
        293,
        "index-9"
      ],
      [
        404,
        "index-0"
      ]
    ],
    "exists() (in module os.path)": [
      [
        293,
        "os.path.exists"
      ]
    ],
    "expanduser() (in module os.path)": [
      [
        293,
        "os.path.expanduser"
      ]
    ],
    "expandvars() (in module os.path)": [
      [
        293,
        "os.path.expandvars"
      ]
    ],
    "getatime() (in module os.path)": [
      [
        293,
        "os.path.getatime"
      ]
    ],
    "getctime() (in module os.path)": [
      [
        293,
        "os.path.getctime"
      ]
    ],
    "getmtime() (in module os.path)": [
      [
        293,
        "os.path.getmtime"
      ]
    ],
    "getsize() (in module os.path)": [
      [
        293,
        "os.path.getsize"
      ]
    ],
    "home directory expansion": [
      [
        293,
        "index-1"
      ]
    ],
    "isabs() (in module os.path)": [
      [
        293,
        "os.path.isabs"
      ]
    ],
    "isdevdrive() (in module os.path)": [
      [
        293,
        "os.path.isdevdrive"
      ]
    ],
    "isdir() (in module os.path)": [
      [
        293,
        "os.path.isdir"
      ]
    ],
    "isfile() (in module os.path)": [
      [
        293,
        "os.path.isfile"
      ]
    ],
    "isjunction() (in module os.path)": [
      [
        293,
        "os.path.isjunction"
      ]
    ],
    "islink() (in module os.path)": [
      [
        293,
        "os.path.islink"
      ]
    ],
    "ismount() (in module os.path)": [
      [
        293,
        "os.path.ismount"
      ]
    ],
    "join() (in module os.path)": [
      [
        293,
        "os.path.join"
      ]
    ],
    "lexists() (in module os.path)": [
      [
        293,
        "os.path.lexists"
      ]
    ],
    "normcase() (in module os.path)": [
      [
        293,
        "os.path.normcase"
      ]
    ],
    "normpath() (in module os.path)": [
      [
        293,
        "os.path.normpath"
      ]
    ],
    "operations": [
      [
        293,
        "index-0"
      ],
      [
        295,
        "index-0"
      ],
      [
        343,
        "index-1"
      ],
      [
        343,
        "index-16"
      ],
      [
        343,
        "index-5"
      ]
    ],
    "os.path": [
      [
        293,
        "module-os.path"
      ]
    ],
    "pwd": [
      [
        293,
        "index-2"
      ],
      [
        309,
        "module-pwd"
      ]
    ],
    "realpath() (in module os.path)": [
      [
        293,
        "os.path.realpath"
      ]
    ],
    "relpath() (in module os.path)": [
      [
        293,
        "os.path.relpath"
      ]
    ],
    "samefile() (in module os.path)": [
      [
        293,
        "os.path.samefile"
      ]
    ],
    "sameopenfile() (in module os.path)": [
      [
        293,
        "os.path.sameopenfile"
      ]
    ],
    "samestat() (in module os.path)": [
      [
        293,
        "os.path.samestat"
      ]
    ],
    "split() (in module os.path)": [
      [
        293,
        "os.path.split"
      ]
    ],
    "splitdrive() (in module os.path)": [
      [
        293,
        "os.path.splitdrive"
      ]
    ],
    "splitext() (in module os.path)": [
      [
        293,
        "os.path.splitext"
      ]
    ],
    "splitroot() (in module os.path)": [
      [
        293,
        "os.path.splitroot"
      ]
    ],
    "supports_unicode_filenames (in module os.path)": [
      [
        293,
        "os.path.supports_unicode_filenames"
      ]
    ],
    "~ (tilde)": [
      [
        293,
        "index-1"
      ],
      [
        343,
        "index-16"
      ],
      [
        429,
        "index-62"
      ]
    ],
    "audiodev": [
      [
        294,
        "index-1"
      ]
    ],
    "mixerdev": [
      [
        294,
        "index-2"
      ]
    ],
    "ossaudioerror": [
      [
        294,
        "ossaudiodev.OSSAudioError"
      ]
    ],
    "pep 594#ossaudiodev": [
      [
        294,
        "index-0"
      ]
    ],
    "bufsize() (ossaudiodev.oss_audio_device method)": [
      [
        294,
        "ossaudiodev.oss_audio_device.bufsize"
      ]
    ],
    "channels() (ossaudiodev.oss_audio_device method)": [
      [
        294,
        "ossaudiodev.oss_audio_device.channels"
      ]
    ],
    "close() (ossaudiodev.oss_audio_device method)": [
      [
        294,
        "ossaudiodev.oss_audio_device.close"
      ]
    ],
    "close() (ossaudiodev.oss_mixer_device method)": [
      [
        294,
        "ossaudiodev.oss_mixer_device.close"
      ]
    ],
    "closed (ossaudiodev.oss_audio_device attribute)": [
      [
        294,
        "ossaudiodev.oss_audio_device.closed"
      ]
    ],
    "controls() (ossaudiodev.oss_mixer_device method)": [
      [
        294,
        "ossaudiodev.oss_mixer_device.controls"
      ]
    ],
    "fileno() (ossaudiodev.oss_audio_device method)": [
      [
        294,
        "ossaudiodev.oss_audio_device.fileno"
      ]
    ],
    "fileno() (ossaudiodev.oss_mixer_device method)": [
      [
        294,
        "ossaudiodev.oss_mixer_device.fileno"
      ]
    ],
    "get() (ossaudiodev.oss_mixer_device method)": [
      [
        294,
        "ossaudiodev.oss_mixer_device.get"
      ]
    ],
    "get_recsrc() (ossaudiodev.oss_mixer_device method)": [
      [
        294,
        "ossaudiodev.oss_mixer_device.get_recsrc"
      ]
    ],
    "getfmts() (ossaudiodev.oss_audio_device method)": [
      [
        294,
        "ossaudiodev.oss_audio_device.getfmts"
      ]
    ],
    "mode (ossaudiodev.oss_audio_device attribute)": [
      [
        294,
        "ossaudiodev.oss_audio_device.mode"
      ]
    ],
    "name (ossaudiodev.oss_audio_device attribute)": [
      [
        294,
        "ossaudiodev.oss_audio_device.name"
      ]
    ],
    "nonblock() (ossaudiodev.oss_audio_device method)": [
      [
        294,
        "ossaudiodev.oss_audio_device.nonblock"
      ]
    ],
    "obufcount() (ossaudiodev.oss_audio_device method)": [
      [
        294,
        "ossaudiodev.oss_audio_device.obufcount"
      ]
    ],
    "obuffree() (ossaudiodev.oss_audio_device method)": [
      [
        294,
        "ossaudiodev.oss_audio_device.obuffree"
      ]
    ],
    "open() (in module ossaudiodev)": [
      [
        294,
        "ossaudiodev.open"
      ]
    ],
    "openmixer() (in module ossaudiodev)": [
      [
        294,
        "ossaudiodev.openmixer"
      ]
    ],
    "ossaudiodev": [
      [
        294,
        "module-ossaudiodev"
      ]
    ],
    "post() (ossaudiodev.oss_audio_device method)": [
      [
        294,
        "ossaudiodev.oss_audio_device.post"
      ]
    ],
    "read() (ossaudiodev.oss_audio_device method)": [
      [
        294,
        "ossaudiodev.oss_audio_device.read"
      ]
    ],
    "reccontrols() (ossaudiodev.oss_mixer_device method)": [
      [
        294,
        "ossaudiodev.oss_mixer_device.reccontrols"
      ]
    ],
    "reset() (ossaudiodev.oss_audio_device method)": [
      [
        294,
        "ossaudiodev.oss_audio_device.reset"
      ]
    ],
    "set() (ossaudiodev.oss_mixer_device method)": [
      [
        294,
        "ossaudiodev.oss_mixer_device.set"
      ]
    ],
    "set_recsrc() (ossaudiodev.oss_mixer_device method)": [
      [
        294,
        "ossaudiodev.oss_mixer_device.set_recsrc"
      ]
    ],
    "setfmt() (ossaudiodev.oss_audio_device method)": [
      [
        294,
        "ossaudiodev.oss_audio_device.setfmt"
      ]
    ],
    "setparameters() (ossaudiodev.oss_audio_device method)": [
      [
        294,
        "ossaudiodev.oss_audio_device.setparameters"
      ]
    ],
    "speed() (ossaudiodev.oss_audio_device method)": [
      [
        294,
        "ossaudiodev.oss_audio_device.speed"
      ]
    ],
    "stereocontrols() (ossaudiodev.oss_mixer_device method)": [
      [
        294,
        "ossaudiodev.oss_mixer_device.stereocontrols"
      ]
    ],
    "sync() (ossaudiodev.oss_audio_device method)": [
      [
        294,
        "ossaudiodev.oss_audio_device.sync"
      ]
    ],
    "write() (ossaudiodev.oss_audio_device method)": [
      [
        294,
        "ossaudiodev.oss_audio_device.write"
      ]
    ],
    "writeall() (ossaudiodev.oss_audio_device method)": [
      [
        294,
        "ossaudiodev.oss_audio_device.writeall"
      ]
    ],
    "pep 428": [
      [
        295,
        "index-1"
      ],
      [
        476,
        "index-30"
      ],
      [
        476,
        "index-7"
      ]
    ],
    "path (class in pathlib)": [
      [
        295,
        "pathlib.Path"
      ]
    ],
    "posixpath (class in pathlib)": [
      [
        295,
        "pathlib.PosixPath"
      ]
    ],
    "purepath (class in pathlib)": [
      [
        295,
        "pathlib.PurePath"
      ]
    ],
    "pureposixpath (class in pathlib)": [
      [
        295,
        "pathlib.PurePosixPath"
      ]
    ],
    "purewindowspath (class in pathlib)": [
      [
        295,
        "pathlib.PureWindowsPath"
      ]
    ],
    "windowspath (class in pathlib)": [
      [
        295,
        "pathlib.WindowsPath"
      ]
    ],
    "absolute() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.absolute"
      ]
    ],
    "anchor (pathlib.purepath attribute)": [
      [
        295,
        "pathlib.PurePath.anchor"
      ]
    ],
    "as_posix() (pathlib.purepath method)": [
      [
        295,
        "pathlib.PurePath.as_posix"
      ]
    ],
    "as_uri() (pathlib.purepath method)": [
      [
        295,
        "pathlib.PurePath.as_uri"
      ]
    ],
    "chmod() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.chmod"
      ]
    ],
    "cwd() (pathlib.path class method)": [
      [
        295,
        "pathlib.Path.cwd"
      ]
    ],
    "drive (pathlib.purepath attribute)": [
      [
        295,
        "pathlib.PurePath.drive"
      ]
    ],
    "exists() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.exists"
      ]
    ],
    "expanduser() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.expanduser"
      ]
    ],
    "glob() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.glob"
      ]
    ],
    "group() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.group"
      ]
    ],
    "hardlink_to() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.hardlink_to"
      ]
    ],
    "home() (pathlib.path class method)": [
      [
        295,
        "pathlib.Path.home"
      ]
    ],
    "is_absolute() (pathlib.purepath method)": [
      [
        295,
        "pathlib.PurePath.is_absolute"
      ]
    ],
    "is_block_device() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.is_block_device"
      ]
    ],
    "is_char_device() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.is_char_device"
      ]
    ],
    "is_dir() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.is_dir"
      ]
    ],
    "is_fifo() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.is_fifo"
      ]
    ],
    "is_file() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.is_file"
      ]
    ],
    "is_junction() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.is_junction"
      ]
    ],
    "is_mount() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.is_mount"
      ]
    ],
    "is_relative_to() (pathlib.purepath method)": [
      [
        295,
        "pathlib.PurePath.is_relative_to"
      ]
    ],
    "is_reserved() (pathlib.purepath method)": [
      [
        295,
        "pathlib.PurePath.is_reserved"
      ]
    ],
    "is_socket() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.is_socket"
      ]
    ],
    "is_symlink() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.is_symlink"
      ]
    ],
    "iterdir() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.iterdir"
      ]
    ],
    "joinpath() (pathlib.purepath method)": [
      [
        295,
        "pathlib.PurePath.joinpath"
      ]
    ],
    "lchmod() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.lchmod"
      ]
    ],
    "lstat() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.lstat"
      ]
    ],
    "match() (pathlib.purepath method)": [
      [
        295,
        "pathlib.PurePath.match"
      ]
    ],
    "mkdir() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.mkdir"
      ]
    ],
    "name (pathlib.purepath attribute)": [
      [
        295,
        "pathlib.PurePath.name"
      ]
    ],
    "open() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.open"
      ]
    ],
    "owner() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.owner"
      ]
    ],
    "parent (pathlib.purepath attribute)": [
      [
        295,
        "pathlib.PurePath.parent"
      ]
    ],
    "parents (pathlib.purepath attribute)": [
      [
        295,
        "pathlib.PurePath.parents"
      ]
    ],
    "parts (pathlib.purepath attribute)": [
      [
        295,
        "pathlib.PurePath.parts"
      ]
    ],
    "pathlib": [
      [
        295,
        "module-pathlib"
      ]
    ],
    "read_bytes() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.read_bytes"
      ]
    ],
    "read_text() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.read_text"
      ]
    ],
    "readlink() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.readlink"
      ]
    ],
    "relative_to() (pathlib.purepath method)": [
      [
        295,
        "pathlib.PurePath.relative_to"
      ]
    ],
    "rename() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.rename"
      ]
    ],
    "replace() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.replace"
      ]
    ],
    "resolve() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.resolve"
      ]
    ],
    "rglob() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.rglob"
      ]
    ],
    "rmdir() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.rmdir"
      ]
    ],
    "root (pathlib.purepath attribute)": [
      [
        295,
        "pathlib.PurePath.root"
      ]
    ],
    "samefile() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.samefile"
      ]
    ],
    "stat() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.stat"
      ]
    ],
    "stem (pathlib.purepath attribute)": [
      [
        295,
        "pathlib.PurePath.stem"
      ]
    ],
    "suffix (pathlib.purepath attribute)": [
      [
        295,
        "pathlib.PurePath.suffix"
      ]
    ],
    "suffixes (pathlib.purepath attribute)": [
      [
        295,
        "pathlib.PurePath.suffixes"
      ]
    ],
    "symlink_to() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.symlink_to"
      ]
    ],
    "touch() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.touch"
      ]
    ],
    "unlink() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.unlink"
      ]
    ],
    "walk() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.walk"
      ]
    ],
    "with_name() (pathlib.purepath method)": [
      [
        295,
        "pathlib.PurePath.with_name"
      ]
    ],
    "with_segments() (pathlib.purepath method)": [
      [
        295,
        "pathlib.PurePath.with_segments"
      ]
    ],
    "with_stem() (pathlib.purepath method)": [
      [
        295,
        "pathlib.PurePath.with_stem"
      ]
    ],
    "with_suffix() (pathlib.purepath method)": [
      [
        295,
        "pathlib.PurePath.with_suffix"
      ]
    ],
    "write_bytes() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.write_bytes"
      ]
    ],
    "write_text() (pathlib.path method)": [
      [
        295,
        "pathlib.Path.write_text"
      ]
    ],
    "! (pdb command)": [
      [
        296,
        "pdbcommand-0"
      ]
    ],
    ".pdbrc": [
      [
        296,
        "index-2"
      ]
    ],
    "pdb (class in pdb)": [
      [
        296,
        "index-1"
      ],
      [
        296,
        "pdb.Pdb"
      ]
    ],
    "alias (pdb command)": [
      [
        296,
        "pdbcommand-alias"
      ]
    ],
    "args (pdb command)": [
      [
        296,
        "pdbcommand-args"
      ]
    ],
    "break (pdb command)": [
      [
        296,
        "pdbcommand-break"
      ]
    ],
    "clear (pdb command)": [
      [
        296,
        "pdbcommand-clear"
      ]
    ],
    "commands (pdb command)": [
      [
        296,
        "pdbcommand-commands"
      ]
    ],
    "condition (pdb command)": [
      [
        296,
        "pdbcommand-condition"
      ]
    ],
    "continue (pdb command)": [
      [
        296,
        "pdbcommand-continue"
      ]
    ],
    "debug (pdb command)": [
      [
        296,
        "pdbcommand-debug"
      ]
    ],
    "disable (pdb command)": [
      [
        296,
        "pdbcommand-disable"
      ]
    ],
    "display (pdb command)": [
      [
        296,
        "pdbcommand-display"
      ]
    ],
    "down (pdb command)": [
      [
        296,
        "pdbcommand-down"
      ]
    ],
    "enable (pdb command)": [
      [
        296,
        "pdbcommand-enable"
      ]
    ],
    "help (pdb command)": [
      [
        296,
        "pdbcommand-help"
      ]
    ],
    "ignore (pdb command)": [
      [
        296,
        "pdbcommand-ignore"
      ]
    ],
    "interact (pdb command)": [
      [
        296,
        "pdbcommand-interact"
      ]
    ],
    "jump (pdb command)": [
      [
        296,
        "pdbcommand-jump"
      ]
    ],
    "list (pdb command)": [
      [
        296,
        "pdbcommand-list"
      ]
    ],
    "ll (pdb command)": [
      [
        296,
        "pdbcommand-ll"
      ]
    ],
    "next (pdb command)": [
      [
        296,
        "pdbcommand-next"
      ]
    ],
    "p (pdb command)": [
      [
        296,
        "pdbcommand-p"
      ]
    ],
    "pdb": [
      [
        296,
        "module-pdb"
      ]
    ],
    "pm() (in module pdb)": [
      [
        296,
        "pdb.pm"
      ]
    ],
    "post_mortem() (in module pdb)": [
      [
        296,
        "pdb.post_mortem"
      ]
    ],
    "pp (pdb command)": [
      [
        296,
        "pdbcommand-pp"
      ]
    ],
    "quit (pdb command)": [
      [
        296,
        "pdbcommand-quit"
      ]
    ],
    "restart (pdb command)": [
      [
        296,
        "pdbcommand-restart"
      ]
    ],
    "return (pdb command)": [
      [
        296,
        "pdbcommand-return"
      ]
    ],
    "retval (pdb command)": [
      [
        296,
        "pdbcommand-retval"
      ]
    ],
    "run (pdb command)": [
      [
        296,
        "pdbcommand-run"
      ]
    ],
    "run() (in module pdb)": [
      [
        296,
        "pdb.run"
      ]
    ],
    "run() (pdb.pdb method)": [
      [
        296,
        "pdb.Pdb.run"
      ]
    ],
    "runcall() (in module pdb)": [
      [
        296,
        "pdb.runcall"
      ]
    ],
    "runcall() (pdb.pdb method)": [
      [
        296,
        "pdb.Pdb.runcall"
      ]
    ],
    "runeval() (in module pdb)": [
      [
        296,
        "pdb.runeval"
      ]
    ],
    "runeval() (pdb.pdb method)": [
      [
        296,
        "pdb.Pdb.runeval"
      ]
    ],
    "set_trace() (in module pdb)": [
      [
        296,
        "pdb.set_trace"
      ]
    ],
    "set_trace() (pdb.pdb method)": [
      [
        296,
        "pdb.Pdb.set_trace"
      ]
    ],
    "source (pdb command)": [
      [
        296,
        "pdbcommand-source"
      ]
    ],
    "step (pdb command)": [
      [
        296,
        "pdbcommand-step"
      ]
    ],
    "tbreak (pdb command)": [
      [
        296,
        "pdbcommand-tbreak"
      ]
    ],
    "unalias (pdb command)": [
      [
        296,
        "pdbcommand-unalias"
      ]
    ],
    "undisplay (pdb command)": [
      [
        296,
        "pdbcommand-undisplay"
      ]
    ],
    "until (pdb command)": [
      [
        296,
        "pdbcommand-until"
      ]
    ],
    "up (pdb command)": [
      [
        296,
        "pdbcommand-up"
      ]
    ],
    "whatis (pdb command)": [
      [
        296,
        "pdbcommand-whatis"
      ]
    ],
    "where (pdb command)": [
      [
        296,
        "pdbcommand-where"
      ]
    ],
    "default_protocol (in module pickle)": [
      [
        298,
        "pickle.DEFAULT_PROTOCOL"
      ]
    ],
    "external data representation": [
      [
        298,
        "index-1"
      ],
      [
        407,
        "index-0"
      ]
    ],
    "highest_protocol (in module pickle)": [
      [
        298,
        "pickle.HIGHEST_PROTOCOL"
      ]
    ],
    "pep 307": [
      [
        298,
        "index-2"
      ],
      [
        464,
        "index-21"
      ],
      [
        464,
        "index-22"
      ],
      [
        464,
        "index-23"
      ]
    ],
    "pep 3154": [
      [
        298,
        "index-3"
      ],
      [
        476,
        "index-12"
      ],
      [
        476,
        "index-39"
      ],
      [
        482,
        "index-222"
      ]
    ],
    "pep 574": [
      [
        298,
        "index-4"
      ],
      [
        298,
        "index-8"
      ],
      [
        480,
        "index-9"
      ]
    ],
    "picklebuffer (class in pickle)": [
      [
        298,
        "pickle.PickleBuffer"
      ]
    ],
    "pickleerror": [
      [
        298,
        "pickle.PickleError"
      ]
    ],
    "pickler (class in pickle)": [
      [
        298,
        "pickle.Pickler"
      ]
    ],
    "picklingerror": [
      [
        298,
        "pickle.PicklingError"
      ]
    ],
    "unpickler (class in pickle)": [
      [
        298,
        "pickle.Unpickler"
      ]
    ],
    "unpicklingerror": [
      [
        298,
        "pickle.UnpicklingError"
      ]
    ],
    "__getnewargs__() (object method)": [
      [
        298,
        "object.__getnewargs__"
      ]
    ],
    "__getnewargs_ex__() (object method)": [
      [
        298,
        "object.__getnewargs_ex__"
      ]
    ],
    "__getstate__() (copy protocol)": [
      [
        298,
        "index-7"
      ]
    ],
    "__getstate__() (object method)": [
      [
        298,
        "object.__getstate__"
      ]
    ],
    "__reduce__() (object method)": [
      [
        298,
        "object.__reduce__"
      ]
    ],
    "__reduce_ex__() (object method)": [
      [
        298,
        "object.__reduce_ex__"
      ]
    ],
    "__setstate__() (copy protocol)": [
      [
        298,
        "index-7"
      ]
    ],
    "__setstate__() (object method)": [
      [
        298,
        "object.__setstate__"
      ]
    ],
    "dispatch_table (pickle.pickler attribute)": [
      [
        298,
        "pickle.Pickler.dispatch_table"
      ]
    ],
    "dump() (in module pickle)": [
      [
        298,
        "pickle.dump"
      ]
    ],
    "dump() (pickle.pickler method)": [
      [
        298,
        "pickle.Pickler.dump"
      ]
    ],
    "dumps() (in module pickle)": [
      [
        298,
        "pickle.dumps"
      ]
    ],
    "fast (pickle.pickler attribute)": [
      [
        298,
        "pickle.Pickler.fast"
      ]
    ],
    "find_class() (pickle protocol)": [
      [
        298,
        "index-9"
      ]
    ],
    "find_class() (pickle.unpickler method)": [
      [
        298,
        "pickle.Unpickler.find_class"
      ]
    ],
    "flattening": [
      [
        298,
        "index-0"
      ]
    ],
    "load() (in module pickle)": [
      [
        298,
        "pickle.load"
      ]
    ],
    "load() (pickle.unpickler method)": [
      [
        298,
        "pickle.Unpickler.load"
      ]
    ],
    "loads() (in module pickle)": [
      [
        298,
        "pickle.loads"
      ]
    ],
    "marshalling": [
      [
        298,
        "index-0"
      ]
    ],
    "objects": [
      [
        298,
        "index-0"
      ],
      [
        343,
        "index-8"
      ]
    ],
    "persistence": [
      [
        298,
        "index-0"
      ]
    ],
    "persistent": [
      [
        298,
        "index-0"
      ]
    ],
    "persistent_id (pickle protocol)": [
      [
        298,
        "index-6"
      ]
    ],
    "persistent_id() (pickle.pickler method)": [
      [
        298,
        "pickle.Pickler.persistent_id"
      ]
    ],
    "persistent_load (pickle protocol)": [
      [
        298,
        "index-6"
      ]
    ],
    "persistent_load() (pickle.unpickler method)": [
      [
        298,
        "pickle.Unpickler.persistent_load"
      ]
    ],
    "pickling": [
      [
        298,
        "index-0"
      ]
    ],
    "raw() (pickle.picklebuffer method)": [
      [
        298,
        "pickle.PickleBuffer.raw"
      ]
    ],
    "reducer_override() (pickle.pickler method)": [
      [
        298,
        "pickle.Pickler.reducer_override"
      ]
    ],
    "release() (pickle.picklebuffer method)": [
      [
        298,
        "pickle.PickleBuffer.release"
      ]
    ],
    "serializing": [
      [
        298,
        "index-0"
      ]
    ],
    "--annotate": [
      [
        299,
        "cmdoption-pickletools-a"
      ]
    ],
    "--indentlevel": [
      [
        299,
        "cmdoption-pickletools-l"
      ]
    ],
    "--memo": [
      [
        299,
        "cmdoption-pickletools-m"
      ]
    ],
    "--output": [
      [
        299,
        "cmdoption-pickletools-o"
      ],
      [
        420,
        "cmdoption-zipapp-o"
      ]
    ],
    "--preamble": [
      [
        299,
        "cmdoption-pickletools-p"
      ]
    ],
    "dis() (in module pickletools)": [
      [
        299,
        "pickletools.dis"
      ]
    ],
    "genops() (in module pickletools)": [
      [
        299,
        "pickletools.genops"
      ]
    ],
    "optimize() (in module pickletools)": [
      [
        299,
        "pickletools.optimize"
      ]
    ],
    "pickletools": [
      [
        299,
        "module-pickletools"
      ]
    ],
    "pickletools command line option": [
      [
        299,
        "cmdoption-pickletools-a"
      ],
      [
        299,
        "cmdoption-pickletools-l"
      ],
      [
        299,
        "cmdoption-pickletools-m"
      ],
      [
        299,
        "cmdoption-pickletools-o"
      ],
      [
        299,
        "cmdoption-pickletools-p"
      ]
    ],
    "pep 594#pipes": [
      [
        300,
        "index-0"
      ]
    ],
    "template (class in pipes)": [
      [
        300,
        "pipes.Template"
      ]
    ],
    "append() (pipes.template method)": [
      [
        300,
        "pipes.Template.append"
      ]
    ],
    "clone() (pipes.template method)": [
      [
        300,
        "pipes.Template.clone"
      ]
    ],
    "copy() (pipes.template method)": [
      [
        300,
        "pipes.Template.copy"
      ]
    ],
    "debug() (pipes.template method)": [
      [
        300,
        "pipes.Template.debug"
      ]
    ],
    "open() (pipes.template method)": [
      [
        300,
        "pipes.Template.open"
      ]
    ],
    "pipes": [
      [
        300,
        "module-pipes"
      ]
    ],
    "prepend() (pipes.template method)": [
      [
        300,
        "pipes.Template.prepend"
      ]
    ],
    "reset() (pipes.template method)": [
      [
        300,
        "pipes.Template.reset"
      ]
    ],
    "moduleinfo (class in pkgutil)": [
      [
        301,
        "pkgutil.ModuleInfo"
      ]
    ],
    "extend_path() (in module pkgutil)": [
      [
        301,
        "pkgutil.extend_path"
      ]
    ],
    "find_loader() (in module pkgutil)": [
      [
        301,
        "pkgutil.find_loader"
      ]
    ],
    "get_data() (in module pkgutil)": [
      [
        301,
        "pkgutil.get_data"
      ]
    ],
    "get_importer() (in module pkgutil)": [
      [
        301,
        "pkgutil.get_importer"
      ]
    ],
    "get_loader() (in module pkgutil)": [
      [
        301,
        "pkgutil.get_loader"
      ]
    ],
    "iter_importers() (in module pkgutil)": [
      [
        301,
        "pkgutil.iter_importers"
      ]
    ],
    "iter_modules() (in module pkgutil)": [
      [
        301,
        "pkgutil.iter_modules"
      ]
    ],
    "pkgutil": [
      [
        301,
        "module-pkgutil"
      ]
    ],
    "resolve_name() (in module pkgutil)": [
      [
        301,
        "pkgutil.resolve_name"
      ]
    ],
    "walk_packages() (in module pkgutil)": [
      [
        301,
        "pkgutil.walk_packages"
      ]
    ],
    "architecture() (in module platform)": [
      [
        302,
        "platform.architecture"
      ]
    ],
    "freedesktop_os_release() (in module platform)": [
      [
        302,
        "platform.freedesktop_os_release"
      ]
    ],
    "java_ver() (in module platform)": [
      [
        302,
        "platform.java_ver"
      ]
    ],
    "libc_ver() (in module platform)": [
      [
        302,
        "platform.libc_ver"
      ]
    ],
    "mac_ver() (in module platform)": [
      [
        302,
        "platform.mac_ver"
      ]
    ],
    "machine() (in module platform)": [
      [
        302,
        "platform.machine"
      ]
    ],
    "node() (in module platform)": [
      [
        302,
        "platform.node"
      ]
    ],
    "platform": [
      [
        302,
        "module-platform"
      ]
    ],
    "platform() (in module platform)": [
      [
        302,
        "platform.platform"
      ]
    ],
    "processor() (in module platform)": [
      [
        302,
        "platform.processor"
      ]
    ],
    "python_branch() (in module platform)": [
      [
        302,
        "platform.python_branch"
      ]
    ],
    "python_build() (in module platform)": [
      [
        302,
        "platform.python_build"
      ]
    ],
    "python_compiler() (in module platform)": [
      [
        302,
        "platform.python_compiler"
      ]
    ],
    "python_implementation() (in module platform)": [
      [
        302,
        "platform.python_implementation"
      ]
    ],
    "python_revision() (in module platform)": [
      [
        302,
        "platform.python_revision"
      ]
    ],
    "python_version() (in module platform)": [
      [
        302,
        "platform.python_version"
      ]
    ],
    "python_version_tuple() (in module platform)": [
      [
        302,
        "platform.python_version_tuple"
      ]
    ],
    "release() (in module platform)": [
      [
        302,
        "platform.release"
      ]
    ],
    "system() (in module platform)": [
      [
        302,
        "platform.system"
      ]
    ],
    "system_alias() (in module platform)": [
      [
        302,
        "platform.system_alias"
      ]
    ],
    "uname() (in module platform)": [
      [
        302,
        "platform.uname"
      ]
    ],
    "version() (in module platform)": [
      [
        302,
        "platform.version"
      ]
    ],
    "win32_edition() (in module platform)": [
      [
        302,
        "platform.win32_edition"
      ]
    ],
    "win32_is_iot() (in module platform)": [
      [
        302,
        "platform.win32_is_iot"
      ]
    ],
    "win32_ver() (in module platform)": [
      [
        302,
        "platform.win32_ver"
      ]
    ],
    "fmt_binary (in module plistlib)": [
      [
        303,
        "plistlib.FMT_BINARY"
      ]
    ],
    "fmt_xml (in module plistlib)": [
      [
        303,
        "plistlib.FMT_XML"
      ]
    ],
    "uid (class in plistlib)": [
      [
        303,
        "plistlib.UID"
      ]
    ],
    "dump() (in module plistlib)": [
      [
        303,
        "plistlib.dump"
      ]
    ],
    "dumps() (in module plistlib)": [
      [
        303,
        "plistlib.dumps"
      ]
    ],
    "load() (in module plistlib)": [
      [
        303,
        "plistlib.load"
      ]
    ],
    "loads() (in module plistlib)": [
      [
        303,
        "plistlib.loads"
      ]
    ],
    "plist": [
      [
        303,
        "index-0"
      ]
    ],
    "plistlib": [
      [
        303,
        "module-plistlib"
      ]
    ],
    "property list": [
      [
        303,
        "index-0"
      ]
    ],
    "pop3": [
      [
        304,
        "index-0"
      ]
    ],
    "pop3 (class in poplib)": [
      [
        304,
        "poplib.POP3"
      ]
    ],
    "pop3_ssl (class in poplib)": [
      [
        304,
        "poplib.POP3_SSL"
      ]
    ],
    "rfc 1939": [
      [
        304,
        "index-1"
      ],
      [
        304,
        "index-2"
      ]
    ],
    "rfc 2449": [
      [
        304,
        "index-4"
      ]
    ],
    "rfc 2595": [
      [
        304,
        "index-3"
      ],
      [
        304,
        "index-6"
      ]
    ],
    "rfc 6856": [
      [
        304,
        "index-5"
      ],
      [
        477,
        "index-36"
      ]
    ],
    "apop() (poplib.pop3 method)": [
      [
        304,
        "poplib.POP3.apop"
      ]
    ],
    "capa() (poplib.pop3 method)": [
      [
        304,
        "poplib.POP3.capa"
      ]
    ],
    "dele() (poplib.pop3 method)": [
      [
        304,
        "poplib.POP3.dele"
      ]
    ],
    "getwelcome() (poplib.pop3 method)": [
      [
        304,
        "poplib.POP3.getwelcome"
      ]
    ],
    "list() (poplib.pop3 method)": [
      [
        304,
        "poplib.POP3.list"
      ]
    ],
    "noop() (poplib.pop3 method)": [
      [
        304,
        "poplib.POP3.noop"
      ]
    ],
    "pass_() (poplib.pop3 method)": [
      [
        304,
        "poplib.POP3.pass_"
      ]
    ],
    "poplib": [
      [
        304,
        "module-poplib"
      ]
    ],
    "quit() (poplib.pop3 method)": [
      [
        304,
        "poplib.POP3.quit"
      ]
    ],
    "retr() (poplib.pop3 method)": [
      [
        304,
        "poplib.POP3.retr"
      ]
    ],
    "rpop() (poplib.pop3 method)": [
      [
        304,
        "poplib.POP3.rpop"
      ]
    ],
    "rset() (poplib.pop3 method)": [
      [
        304,
        "poplib.POP3.rset"
      ]
    ],
    "set_debuglevel() (poplib.pop3 method)": [
      [
        304,
        "poplib.POP3.set_debuglevel"
      ]
    ],
    "stat() (poplib.pop3 method)": [
      [
        304,
        "poplib.POP3.stat"
      ]
    ],
    "stls() (poplib.pop3 method)": [
      [
        304,
        "poplib.POP3.stls"
      ]
    ],
    "top() (poplib.pop3 method)": [
      [
        304,
        "poplib.POP3.top"
      ]
    ],
    "uidl() (poplib.pop3 method)": [
      [
        304,
        "poplib.POP3.uidl"
      ]
    ],
    "user() (poplib.pop3 method)": [
      [
        304,
        "poplib.POP3.user"
      ]
    ],
    "utf8() (poplib.pop3 method)": [
      [
        304,
        "poplib.POP3.utf8"
      ]
    ],
    "environ (in module posix)": [
      [
        305,
        "posix.environ"
      ]
    ],
    "large files": [
      [
        305,
        "index-1"
      ]
    ],
    "prettyprinter (class in pprint)": [
      [
        306,
        "pprint.PrettyPrinter"
      ]
    ],
    "eval": [
      [
        306,
        "index-0"
      ],
      [
        306,
        "index-2"
      ],
      [
        343,
        "index-64"
      ],
      [
        435,
        "index-44"
      ],
      [
        436,
        "index-6"
      ]
    ],
    "format() (pprint.prettyprinter method)": [
      [
        306,
        "pprint.PrettyPrinter.format"
      ]
    ],
    "isreadable() (in module pprint)": [
      [
        306,
        "pprint.isreadable"
      ]
    ],
    "isreadable() (pprint.prettyprinter method)": [
      [
        306,
        "pprint.PrettyPrinter.isreadable"
      ]
    ],
    "isrecursive() (in module pprint)": [
      [
        306,
        "pprint.isrecursive"
      ]
    ],
    "isrecursive() (pprint.prettyprinter method)": [
      [
        306,
        "pprint.PrettyPrinter.isrecursive"
      ]
    ],
    "pformat() (in module pprint)": [
      [
        306,
        "pprint.pformat"
      ]
    ],
    "pformat() (pprint.prettyprinter method)": [
      [
        306,
        "pprint.PrettyPrinter.pformat"
      ]
    ],
    "placeholder": [
      [
        306,
        "index-1"
      ],
      [
        320,
        "index-0"
      ],
      [
        363,
        "index-0"
      ]
    ],
    "pp() (in module pprint)": [
      [
        306,
        "pprint.pp"
      ]
    ],
    "pprint": [
      [
        306,
        "module-pprint"
      ]
    ],
    "pprint() (in module pprint)": [
      [
        306,
        "pprint.pprint"
      ]
    ],
    "pprint() (pprint.prettyprinter method)": [
      [
        306,
        "pprint.PrettyPrinter.pprint"
      ]
    ],
    "saferepr() (in module pprint)": [
      [
        306,
        "pprint.saferepr"
      ]
    ],
    "profile (class in profile)": [
      [
        307,
        "profile.Profile"
      ]
    ],
    "stats (class in pstats)": [
      [
        307,
        "pstats.Stats"
      ]
    ],
    "add() (pstats.stats method)": [
      [
        307,
        "pstats.Stats.add"
      ]
    ],
    "cprofile": [
      [
        307,
        "module-cProfile"
      ]
    ],
    "create_stats() (profile.profile method)": [
      [
        307,
        "profile.Profile.create_stats"
      ]
    ],
    "deterministic profiling": [
      [
        307,
        "index-0"
      ]
    ],
    "disable() (profile.profile method)": [
      [
        307,
        "profile.Profile.disable"
      ]
    ],
    "dump_stats() (profile.profile method)": [
      [
        307,
        "profile.Profile.dump_stats"
      ]
    ],
    "dump_stats() (pstats.stats method)": [
      [
        307,
        "pstats.Stats.dump_stats"
      ]
    ],
    "enable() (profile.profile method)": [
      [
        307,
        "profile.Profile.enable"
      ]
    ],
    "get_stats_profile() (pstats.stats method)": [
      [
        307,
        "pstats.Stats.get_stats_profile"
      ]
    ],
    "print_callees() (pstats.stats method)": [
      [
        307,
        "pstats.Stats.print_callees"
      ]
    ],
    "print_callers() (pstats.stats method)": [
      [
        307,
        "pstats.Stats.print_callers"
      ]
    ],
    "print_stats() (profile.profile method)": [
      [
        307,
        "profile.Profile.print_stats"
      ]
    ],
    "print_stats() (pstats.stats method)": [
      [
        307,
        "pstats.Stats.print_stats"
      ]
    ],
    "profile": [
      [
        307,
        "module-profile"
      ]
    ],
    "profiling, deterministic": [
      [
        307,
        "index-0"
      ]
    ],
    "pstats": [
      [
        307,
        "module-pstats"
      ]
    ],
    "reverse_order() (pstats.stats method)": [
      [
        307,
        "pstats.Stats.reverse_order"
      ]
    ],
    "run() (in module profile)": [
      [
        307,
        "profile.run"
      ]
    ],
    "run() (profile.profile method)": [
      [
        307,
        "profile.Profile.run"
      ]
    ],
    "runcall() (profile.profile method)": [
      [
        307,
        "profile.Profile.runcall"
      ]
    ],
    "runctx() (in module profile)": [
      [
        307,
        "profile.runctx"
      ]
    ],
    "runctx() (profile.profile method)": [
      [
        307,
        "profile.Profile.runctx"
      ]
    ],
    "sort_stats() (pstats.stats method)": [
      [
        307,
        "pstats.Stats.sort_stats"
      ]
    ],
    "strip_dirs() (pstats.stats method)": [
      [
        307,
        "pstats.Stats.strip_dirs"
      ]
    ],
    "fork() (in module pty)": [
      [
        308,
        "pty.fork"
      ]
    ],
    "openpty() (in module pty)": [
      [
        308,
        "pty.openpty"
      ]
    ],
    "spawn() (in module pty)": [
      [
        308,
        "pty.spawn"
      ]
    ],
    "getpwall() (in module pwd)": [
      [
        309,
        "pwd.getpwall"
      ]
    ],
    "getpwnam() (in module pwd)": [
      [
        309,
        "pwd.getpwnam"
      ]
    ],
    "getpwuid() (in module pwd)": [
      [
        309,
        "pwd.getpwuid"
      ]
    ],
    "-": [
      [
        310,
        "cmdoption-python-m-py_compile"
      ]
    ],
    "--quiet": [
      [
        310,
        "cmdoption-python-m-py_compile-q"
      ]
    ],
    "<file>": [
      [
        310,
        "cmdoption-python-m-py_compile-arg-file"
      ]
    ],
    "checked_hash (py_compile.pycinvalidationmode attribute)": [
      [
        310,
        "py_compile.PycInvalidationMode.CHECKED_HASH"
      ]
    ],
    "pycompileerror": [
      [
        310,
        "py_compile.PyCompileError"
      ]
    ],
    "pycinvalidationmode (class in py_compile)": [
      [
        310,
        "py_compile.PycInvalidationMode"
      ]
    ],
    "timestamp (py_compile.pycinvalidationmode attribute)": [
      [
        310,
        "py_compile.PycInvalidationMode.TIMESTAMP"
      ]
    ],
    "unchecked_hash (py_compile.pycinvalidationmode attribute)": [
      [
        310,
        "py_compile.PycInvalidationMode.UNCHECKED_HASH"
      ]
    ],
    "byte-code": [
      [
        310,
        "index-0"
      ]
    ],
    "compile() (in module py_compile)": [
      [
        310,
        "py_compile.compile"
      ]
    ],
    "py_compile": [
      [
        310,
        "module-py_compile"
      ]
    ],
    "python--m-py_compile command line option": [
      [
        310,
        "cmdoption-python-m-py_compile"
      ],
      [
        310,
        "cmdoption-python-m-py_compile-arg-file"
      ],
      [
        310,
        "cmdoption-python-m-py_compile-q"
      ]
    ],
    "class (class in pyclbr)": [
      [
        311,
        "pyclbr.Class"
      ]
    ],
    "function (class in pyclbr)": [
      [
        311,
        "pyclbr.Function"
      ]
    ],
    "children (pyclbr.class attribute)": [
      [
        311,
        "pyclbr.Class.children"
      ]
    ],
    "children (pyclbr.function attribute)": [
      [
        311,
        "pyclbr.Function.children"
      ]
    ],
    "file (pyclbr.class attribute)": [
      [
        311,
        "pyclbr.Class.file"
      ]
    ],
    "file (pyclbr.function attribute)": [
      [
        311,
        "pyclbr.Function.file"
      ]
    ],
    "is_async (pyclbr.function attribute)": [
      [
        311,
        "pyclbr.Function.is_async"
      ]
    ],
    "lineno (pyclbr.class attribute)": [
      [
        311,
        "pyclbr.Class.lineno"
      ]
    ],
    "lineno (pyclbr.function attribute)": [
      [
        311,
        "pyclbr.Function.lineno"
      ]
    ],
    "methods (pyclbr.class attribute)": [
      [
        311,
        "pyclbr.Class.methods"
      ]
    ],
    "module (pyclbr.class attribute)": [
      [
        311,
        "pyclbr.Class.module"
      ]
    ],
    "module (pyclbr.function attribute)": [
      [
        311,
        "pyclbr.Function.module"
      ]
    ],
    "name (pyclbr.class attribute)": [
      [
        311,
        "pyclbr.Class.name"
      ]
    ],
    "name (pyclbr.function attribute)": [
      [
        311,
        "pyclbr.Function.name"
      ]
    ],
    "parent (pyclbr.class attribute)": [
      [
        311,
        "pyclbr.Class.parent"
      ]
    ],
    "parent (pyclbr.function attribute)": [
      [
        311,
        "pyclbr.Function.parent"
      ]
    ],
    "pyclbr": [
      [
        311,
        "module-pyclbr"
      ]
    ],
    "readmodule() (in module pyclbr)": [
      [
        311,
        "pyclbr.readmodule"
      ]
    ],
    "readmodule_ex() (in module pyclbr)": [
      [
        311,
        "pyclbr.readmodule_ex"
      ]
    ],
    "super (pyclbr.class attribute)": [
      [
        311,
        "pyclbr.Class.super"
      ]
    ],
    "pager": [
      [
        312,
        "index-1"
      ]
    ],
    "pythondocs": [
      [
        312,
        "index-2"
      ]
    ],
    "documentation": [
      [
        312,
        "index-0"
      ]
    ],
    "generation": [
      [
        312,
        "index-0"
      ]
    ],
    "help": [
      [
        312,
        "index-0"
      ],
      [
        450,
        "index-0"
      ]
    ],
    "online": [
      [
        312,
        "index-0"
      ]
    ],
    "pydoc": [
      [
        312,
        "module-pydoc"
      ]
    ],
    "attlistdeclhandler() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.AttlistDeclHandler"
      ]
    ],
    "characterdatahandler() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.CharacterDataHandler"
      ]
    ],
    "commenthandler() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.CommentHandler"
      ]
    ],
    "currentbyteindex (xml.parsers.expat.xmlparser attribute)": [
      [
        313,
        "xml.parsers.expat.xmlparser.CurrentByteIndex"
      ]
    ],
    "currentcolumnnumber (xml.parsers.expat.xmlparser attribute)": [
      [
        313,
        "xml.parsers.expat.xmlparser.CurrentColumnNumber"
      ]
    ],
    "currentlinenumber (xml.parsers.expat.xmlparser attribute)": [
      [
        313,
        "xml.parsers.expat.xmlparser.CurrentLineNumber"
      ]
    ],
    "defaulthandler() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.DefaultHandler"
      ]
    ],
    "defaulthandlerexpand() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.DefaultHandlerExpand"
      ]
    ],
    "elementdeclhandler() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.ElementDeclHandler"
      ]
    ],
    "endcdatasectionhandler() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.EndCdataSectionHandler"
      ]
    ],
    "enddoctypedeclhandler() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.EndDoctypeDeclHandler"
      ]
    ],
    "endelementhandler() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.EndElementHandler"
      ]
    ],
    "endnamespacedeclhandler() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.EndNamespaceDeclHandler"
      ]
    ],
    "entitydeclhandler() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.EntityDeclHandler"
      ]
    ],
    "errorbyteindex (xml.parsers.expat.xmlparser attribute)": [
      [
        313,
        "xml.parsers.expat.xmlparser.ErrorByteIndex"
      ]
    ],
    "errorcode (xml.parsers.expat.xmlparser attribute)": [
      [
        313,
        "xml.parsers.expat.xmlparser.ErrorCode"
      ]
    ],
    "errorcolumnnumber (xml.parsers.expat.xmlparser attribute)": [
      [
        313,
        "xml.parsers.expat.xmlparser.ErrorColumnNumber"
      ]
    ],
    "errorlinenumber (xml.parsers.expat.xmlparser attribute)": [
      [
        313,
        "xml.parsers.expat.xmlparser.ErrorLineNumber"
      ]
    ],
    "errorstring() (in module xml.parsers.expat)": [
      [
        313,
        "xml.parsers.expat.ErrorString"
      ]
    ],
    "expat": [
      [
        313,
        "index-0"
      ]
    ],
    "expaterror": [
      [
        313,
        "xml.parsers.expat.ExpatError"
      ]
    ],
    "externalentityparsercreate() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.ExternalEntityParserCreate"
      ]
    ],
    "externalentityrefhandler() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.ExternalEntityRefHandler"
      ]
    ],
    "getbase() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.GetBase"
      ]
    ],
    "getinputcontext() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.GetInputContext"
      ]
    ],
    "notstandalonehandler() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.NotStandaloneHandler"
      ]
    ],
    "notationdeclhandler() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.NotationDeclHandler"
      ]
    ],
    "parse() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.Parse"
      ]
    ],
    "parsefile() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.ParseFile"
      ]
    ],
    "parsercreate() (in module xml.parsers.expat)": [
      [
        313,
        "xml.parsers.expat.ParserCreate"
      ]
    ],
    "processinginstructionhandler() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.ProcessingInstructionHandler"
      ]
    ],
    "setbase() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.SetBase"
      ]
    ],
    "setparamentityparsing() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.SetParamEntityParsing"
      ]
    ],
    "startcdatasectionhandler() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.StartCdataSectionHandler"
      ]
    ],
    "startdoctypedeclhandler() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.StartDoctypeDeclHandler"
      ]
    ],
    "startelementhandler() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.StartElementHandler"
      ]
    ],
    "startnamespacedeclhandler() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.StartNamespaceDeclHandler"
      ]
    ],
    "unparsedentitydeclhandler() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.UnparsedEntityDeclHandler"
      ]
    ],
    "useforeigndtd() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.UseForeignDTD"
      ]
    ],
    "xmlparsertype (in module xml.parsers.expat)": [
      [
        313,
        "xml.parsers.expat.XMLParserType"
      ]
    ],
    "xml_error_aborted (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_ABORTED"
      ]
    ],
    "xml_error_amplification_limit_breach (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_AMPLIFICATION_LIMIT_BREACH"
      ]
    ],
    "xml_error_async_entity (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_ASYNC_ENTITY"
      ]
    ],
    "xml_error_attribute_external_entity_ref (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF"
      ]
    ],
    "xml_error_bad_char_ref (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_BAD_CHAR_REF"
      ]
    ],
    "xml_error_binary_entity_ref (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_BINARY_ENTITY_REF"
      ]
    ],
    "xml_error_cant_change_feature_once_parsing (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING"
      ]
    ],
    "xml_error_duplicate_attribute (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_DUPLICATE_ATTRIBUTE"
      ]
    ],
    "xml_error_entity_declared_in_pe (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_ENTITY_DECLARED_IN_PE"
      ]
    ],
    "xml_error_external_entity_handling (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_EXTERNAL_ENTITY_HANDLING"
      ]
    ],
    "xml_error_feature_requires_xml_dtd (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_FEATURE_REQUIRES_XML_DTD"
      ]
    ],
    "xml_error_finished (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_FINISHED"
      ]
    ],
    "xml_error_incomplete_pe (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_INCOMPLETE_PE"
      ]
    ],
    "xml_error_incorrect_encoding (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_INCORRECT_ENCODING"
      ]
    ],
    "xml_error_invalid_argument (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_INVALID_ARGUMENT"
      ]
    ],
    "xml_error_invalid_token (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_INVALID_TOKEN"
      ]
    ],
    "xml_error_junk_after_doc_element (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_JUNK_AFTER_DOC_ELEMENT"
      ]
    ],
    "xml_error_misplaced_xml_pi (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_MISPLACED_XML_PI"
      ]
    ],
    "xml_error_not_standalone (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_NOT_STANDALONE"
      ]
    ],
    "xml_error_not_suspended (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_NOT_SUSPENDED"
      ]
    ],
    "xml_error_no_buffer (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_NO_BUFFER"
      ]
    ],
    "xml_error_no_elements (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_NO_ELEMENTS"
      ]
    ],
    "xml_error_no_memory (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_NO_MEMORY"
      ]
    ],
    "xml_error_param_entity_ref (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_PARAM_ENTITY_REF"
      ]
    ],
    "xml_error_partial_char (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_PARTIAL_CHAR"
      ]
    ],
    "xml_error_publicid (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_PUBLICID"
      ]
    ],
    "xml_error_recursive_entity_ref (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_RECURSIVE_ENTITY_REF"
      ]
    ],
    "xml_error_reserved_namespace_uri (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_RESERVED_NAMESPACE_URI"
      ]
    ],
    "xml_error_reserved_prefix_xml (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_RESERVED_PREFIX_XML"
      ]
    ],
    "xml_error_reserved_prefix_xmlns (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_RESERVED_PREFIX_XMLNS"
      ]
    ],
    "xml_error_suspended (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_SUSPENDED"
      ]
    ],
    "xml_error_suspend_pe (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_SUSPEND_PE"
      ]
    ],
    "xml_error_syntax (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_SYNTAX"
      ]
    ],
    "xml_error_tag_mismatch (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_TAG_MISMATCH"
      ]
    ],
    "xml_error_text_decl (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_TEXT_DECL"
      ]
    ],
    "xml_error_unbound_prefix (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_UNBOUND_PREFIX"
      ]
    ],
    "xml_error_unclosed_cdata_section (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_UNCLOSED_CDATA_SECTION"
      ]
    ],
    "xml_error_unclosed_token (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_UNCLOSED_TOKEN"
      ]
    ],
    "xml_error_undeclaring_prefix (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_UNDECLARING_PREFIX"
      ]
    ],
    "xml_error_undefined_entity (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_UNDEFINED_ENTITY"
      ]
    ],
    "xml_error_unexpected_state (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_UNEXPECTED_STATE"
      ]
    ],
    "xml_error_unknown_encoding (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_UNKNOWN_ENCODING"
      ]
    ],
    "xml_error_xml_decl (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.XML_ERROR_XML_DECL"
      ]
    ],
    "xmldeclhandler() (xml.parsers.expat.xmlparser method)": [
      [
        313,
        "xml.parsers.expat.xmlparser.XmlDeclHandler"
      ]
    ],
    "buffer_size (xml.parsers.expat.xmlparser attribute)": [
      [
        313,
        "xml.parsers.expat.xmlparser.buffer_size"
      ]
    ],
    "buffer_text (xml.parsers.expat.xmlparser attribute)": [
      [
        313,
        "xml.parsers.expat.xmlparser.buffer_text"
      ]
    ],
    "buffer_used (xml.parsers.expat.xmlparser attribute)": [
      [
        313,
        "xml.parsers.expat.xmlparser.buffer_used"
      ]
    ],
    "code (xml.parsers.expat.expaterror attribute)": [
      [
        313,
        "xml.parsers.expat.ExpatError.code"
      ]
    ],
    "codes (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.codes"
      ]
    ],
    "lineno (xml.parsers.expat.expaterror attribute)": [
      [
        313,
        "xml.parsers.expat.ExpatError.lineno"
      ]
    ],
    "messages (in module xml.parsers.expat.errors)": [
      [
        313,
        "xml.parsers.expat.errors.messages"
      ]
    ],
    "offset (xml.parsers.expat.expaterror attribute)": [
      [
        313,
        "xml.parsers.expat.ExpatError.offset"
      ]
    ],
    "ordered_attributes (xml.parsers.expat.xmlparser attribute)": [
      [
        313,
        "xml.parsers.expat.xmlparser.ordered_attributes"
      ]
    ],
    "pyexpat": [
      [
        313,
        "index-1"
      ]
    ],
    "specified_attributes (xml.parsers.expat.xmlparser attribute)": [
      [
        313,
        "xml.parsers.expat.xmlparser.specified_attributes"
      ]
    ],
    "xml.parsers.expat": [
      [
        313,
        "module-xml.parsers.expat"
      ]
    ],
    "xml.parsers.expat.errors": [
      [
        313,
        "module-xml.parsers.expat.errors"
      ]
    ],
    "xml.parsers.expat.model": [
      [
        313,
        "module-xml.parsers.expat.model"
      ]
    ],
    "empty": [
      [
        315,
        "queue.Empty"
      ],
      [
        427,
        "index-20"
      ],
      [
        429,
        "index-15"
      ],
      [
        429,
        "index-9"
      ]
    ],
    "full": [
      [
        315,
        "queue.Full"
      ]
    ],
    "lifoqueue (class in queue)": [
      [
        315,
        "queue.LifoQueue"
      ]
    ],
    "priorityqueue (class in queue)": [
      [
        315,
        "queue.PriorityQueue"
      ]
    ],
    "queue (class in queue)": [
      [
        315,
        "queue.Queue"
      ]
    ],
    "simplequeue (class in queue)": [
      [
        315,
        "queue.SimpleQueue"
      ]
    ],
    "empty() (queue.queue method)": [
      [
        315,
        "queue.Queue.empty"
      ]
    ],
    "empty() (queue.simplequeue method)": [
      [
        315,
        "queue.SimpleQueue.empty"
      ]
    ],
    "full() (queue.queue method)": [
      [
        315,
        "queue.Queue.full"
      ]
    ],
    "get() (queue.queue method)": [
      [
        315,
        "queue.Queue.get"
      ]
    ],
    "get() (queue.simplequeue method)": [
      [
        315,
        "queue.SimpleQueue.get"
      ]
    ],
    "get_nowait() (queue.queue method)": [
      [
        315,
        "queue.Queue.get_nowait"
      ]
    ],
    "get_nowait() (queue.simplequeue method)": [
      [
        315,
        "queue.SimpleQueue.get_nowait"
      ]
    ],
    "join() (queue.queue method)": [
      [
        315,
        "queue.Queue.join"
      ]
    ],
    "put() (queue.queue method)": [
      [
        315,
        "queue.Queue.put"
      ]
    ],
    "put() (queue.simplequeue method)": [
      [
        315,
        "queue.SimpleQueue.put"
      ]
    ],
    "put_nowait() (queue.queue method)": [
      [
        315,
        "queue.Queue.put_nowait"
      ]
    ],
    "put_nowait() (queue.simplequeue method)": [
      [
        315,
        "queue.SimpleQueue.put_nowait"
      ]
    ],
    "qsize() (queue.queue method)": [
      [
        315,
        "queue.Queue.qsize"
      ]
    ],
    "qsize() (queue.simplequeue method)": [
      [
        315,
        "queue.SimpleQueue.qsize"
      ]
    ],
    "queue": [
      [
        315,
        "module-queue"
      ]
    ],
    "task_done() (queue.queue method)": [
      [
        315,
        "queue.Queue.task_done"
      ]
    ],
    "decode() (in module quopri)": [
      [
        316,
        "quopri.decode"
      ]
    ],
    "decodestring() (in module quopri)": [
      [
        316,
        "quopri.decodestring"
      ]
    ],
    "encode() (in module quopri)": [
      [
        316,
        "quopri.encode"
      ]
    ],
    "encodestring() (in module quopri)": [
      [
        316,
        "quopri.encodestring"
      ]
    ],
    "quopri": [
      [
        316,
        "module-quopri"
      ]
    ],
    "quoted-printable": [
      [
        316,
        "index-0"
      ]
    ],
    "quoted-printable encoding": [
      [
        316,
        "index-0"
      ]
    ],
    "random (class in random)": [
      [
        317,
        "random.Random"
      ]
    ],
    "systemrandom (class in random)": [
      [
        317,
        "random.SystemRandom"
      ]
    ],
    "betavariate() (in module random)": [
      [
        317,
        "random.betavariate"
      ]
    ],
    "binomialvariate() (in module random)": [
      [
        317,
        "random.binomialvariate"
      ]
    ],
    "choice() (in module random)": [
      [
        317,
        "random.choice"
      ]
    ],
    "choices() (in module random)": [
      [
        317,
        "random.choices"
      ]
    ],
    "expovariate() (in module random)": [
      [
        317,
        "random.expovariate"
      ]
    ],
    "gammavariate() (in module random)": [
      [
        317,
        "random.gammavariate"
      ]
    ],
    "gauss() (in module random)": [
      [
        317,
        "random.gauss"
      ]
    ],
    "getrandbits() (in module random)": [
      [
        317,
        "random.getrandbits"
      ]
    ],
    "getrandbits() (random.random method)": [
      [
        317,
        "random.Random.getrandbits"
      ]
    ],
    "getstate() (in module random)": [
      [
        317,
        "random.getstate"
      ]
    ],
    "getstate() (random.random method)": [
      [
        317,
        "random.Random.getstate"
      ]
    ],
    "lognormvariate() (in module random)": [
      [
        317,
        "random.lognormvariate"
      ]
    ],
    "normalvariate() (in module random)": [
      [
        317,
        "random.normalvariate"
      ]
    ],
    "paretovariate() (in module random)": [
      [
        317,
        "random.paretovariate"
      ]
    ],
    "randbytes() (in module random)": [
      [
        317,
        "random.randbytes"
      ]
    ],
    "randint() (in module random)": [
      [
        317,
        "random.randint"
      ]
    ],
    "random": [
      [
        317,
        "module-random"
      ]
    ],
    "random() (in module random)": [
      [
        317,
        "random.random"
      ]
    ],
    "random() (random.random method)": [
      [
        317,
        "random.Random.random"
      ]
    ],
    "randrange() (in module random)": [
      [
        317,
        "random.randrange"
      ]
    ],
    "sample() (in module random)": [
      [
        317,
        "random.sample"
      ]
    ],
    "seed() (in module random)": [
      [
        317,
        "random.seed"
      ]
    ],
    "seed() (random.random method)": [
      [
        317,
        "random.Random.seed"
      ]
    ],
    "setstate() (in module random)": [
      [
        317,
        "random.setstate"
      ]
    ],
    "setstate() (random.random method)": [
      [
        317,
        "random.Random.setstate"
      ]
    ],
    "shuffle() (in module random)": [
      [
        317,
        "random.shuffle"
      ]
    ],
    "triangular() (in module random)": [
      [
        317,
        "random.triangular"
      ]
    ],
    "uniform() (in module random)": [
      [
        317,
        "random.uniform"
      ]
    ],
    "vonmisesvariate() (in module random)": [
      [
        317,
        "random.vonmisesvariate"
      ]
    ],
    "weibullvariate() (in module random)": [
      [
        317,
        "random.weibullvariate"
      ]
    ],
    "() (parentheses)": [
      [
        318,
        "index-15"
      ],
      [
        343,
        "index-36"
      ],
      [
        343,
        "index-46"
      ],
      [
        426,
        "index-28"
      ],
      [
        426,
        "index-42"
      ],
      [
        429,
        "index-22"
      ],
      [
        429,
        "index-47"
      ],
      [
        429,
        "index-8"
      ],
      [
        435,
        "index-6"
      ]
    ],
    "(?": [
      [
        318,
        "index-16"
      ]
    ],
    "(?!": [
      [
        318,
        "index-22"
      ]
    ],
    "(?#": [
      [
        318,
        "index-20"
      ]
    ],
    "(?(": [
      [
        318,
        "index-25"
      ]
    ],
    "(?:": [
      [
        318,
        "index-17"
      ]
    ],
    "(?<!": [
      [
        318,
        "index-24"
      ]
    ],
    "(?<=": [
      [
        318,
        "index-23"
      ]
    ],
    "(?=": [
      [
        318,
        "index-21"
      ]
    ],
    "(?p<": [
      [
        318,
        "index-18"
      ]
    ],
    "(?p=": [
      [
        318,
        "index-19"
      ]
    ],
    "*+": [
      [
        318,
        "index-7"
      ]
    ],
    "*?": [
      [
        318,
        "index-6"
      ]
    ],
    "++": [
      [
        318,
        "index-7"
      ]
    ],
    "+?": [
      [
        318,
        "index-6"
      ]
    ],
    "?+": [
      [
        318,
        "index-7"
      ]
    ],
    "??": [
      [
        318,
        "index-6"
      ]
    ],
    "a (in module re)": [
      [
        318,
        "re.A"
      ]
    ],
    "ascii (in module re)": [
      [
        318,
        "re.ASCII"
      ]
    ],
    "debug (in module re)": [
      [
        318,
        "re.DEBUG"
      ]
    ],
    "dotall (in module re)": [
      [
        318,
        "re.DOTALL"
      ]
    ],
    "i (in module re)": [
      [
        318,
        "re.I"
      ]
    ],
    "ignorecase (in module re)": [
      [
        318,
        "re.IGNORECASE"
      ]
    ],
    "l (in module re)": [
      [
        318,
        "re.L"
      ]
    ],
    "locale (in module re)": [
      [
        318,
        "re.LOCALE"
      ]
    ],
    "m (in module re)": [
      [
        318,
        "re.M"
      ]
    ],
    "multiline (in module re)": [
      [
        318,
        "re.MULTILINE"
      ]
    ],
    "match (class in re)": [
      [
        318,
        "re.Match"
      ]
    ],
    "noflag (in module re)": [
      [
        318,
        "re.NOFLAG"
      ]
    ],
    "pattern (class in re)": [
      [
        318,
        "re.Pattern"
      ]
    ],
    "regexflag (class in re)": [
      [
        318,
        "re.RegexFlag"
      ]
    ],
    "s (in module re)": [
      [
        318,
        "re.S"
      ]
    ],
    "u (in module re)": [
      [
        318,
        "re.U"
      ]
    ],
    "unicode (in module re)": [
      [
        318,
        "re.UNICODE"
      ]
    ],
    "verbose (in module re)": [
      [
        318,
        "re.VERBOSE"
      ]
    ],
    "x (in module re)": [
      [
        318,
        "re.X"
      ]
    ],
    "\\a": [
      [
        318,
        "index-27"
      ],
      [
        318,
        "index-37"
      ],
      [
        434,
        "index-23"
      ]
    ],
    "\\b": [
      [
        318,
        "index-29"
      ],
      [
        318,
        "index-28"
      ],
      [
        318,
        "index-37"
      ],
      [
        434,
        "index-23"
      ]
    ],
    "\\d": [
      [
        318,
        "index-31"
      ],
      [
        318,
        "index-30"
      ]
    ],
    "\\s": [
      [
        318,
        "index-33"
      ],
      [
        318,
        "index-32"
      ]
    ],
    "\\w": [
      [
        318,
        "index-35"
      ],
      [
        318,
        "index-34"
      ]
    ],
    "\\z": [
      [
        318,
        "index-36"
      ]
    ],
    "\\\\": [
      [
        318,
        "index-37"
      ],
      [
        434,
        "index-23"
      ]
    ],
    "\\f": [
      [
        318,
        "index-37"
      ],
      [
        434,
        "index-23"
      ]
    ],
    "\\g": [
      [
        318,
        "index-39"
      ]
    ],
    "\\r": [
      [
        318,
        "index-37"
      ],
      [
        434,
        "index-23"
      ]
    ],
    "\\t": [
      [
        318,
        "index-37"
      ],
      [
        434,
        "index-23"
      ]
    ],
    "\\v": [
      [
        318,
        "index-37"
      ],
      [
        434,
        "index-23"
      ]
    ],
    "__getitem__() (re.match method)": [
      [
        318,
        "re.Match.__getitem__"
      ]
    ],
    "colno (re.error attribute)": [
      [
        318,
        "re.error.colno"
      ]
    ],
    "compile() (in module re)": [
      [
        318,
        "re.compile"
      ]
    ],
    "end() (re.match method)": [
      [
        318,
        "re.Match.end"
      ]
    ],
    "endpos (re.match attribute)": [
      [
        318,
        "re.Match.endpos"
      ]
    ],
    "escape() (in module re)": [
      [
        318,
        "re.escape"
      ]
    ],
    "expand() (re.match method)": [
      [
        318,
        "re.Match.expand"
      ]
    ],
    "findall() (in module re)": [
      [
        318,
        "re.findall"
      ]
    ],
    "findall() (re.pattern method)": [
      [
        318,
        "re.Pattern.findall"
      ]
    ],
    "finditer() (in module re)": [
      [
        318,
        "re.finditer"
      ]
    ],
    "finditer() (re.pattern method)": [
      [
        318,
        "re.Pattern.finditer"
      ]
    ],
    "flags (re.pattern attribute)": [
      [
        318,
        "re.Pattern.flags"
      ]
    ],
    "fullmatch() (in module re)": [
      [
        318,
        "re.fullmatch"
      ]
    ],
    "fullmatch() (re.pattern method)": [
      [
        318,
        "re.Pattern.fullmatch"
      ]
    ],
    "group() (re.match method)": [
      [
        318,
        "re.Match.group"
      ]
    ],
    "groupdict() (re.match method)": [
      [
        318,
        "re.Match.groupdict"
      ]
    ],
    "groupindex (re.pattern attribute)": [
      [
        318,
        "re.Pattern.groupindex"
      ]
    ],
    "groups (re.pattern attribute)": [
      [
        318,
        "re.Pattern.groups"
      ]
    ],
    "groups() (re.match method)": [
      [
        318,
        "re.Match.groups"
      ]
    ],
    "in regular expressions": [
      [
        318,
        "index-0"
      ],
      [
        318,
        "index-1"
      ],
      [
        318,
        "index-10"
      ],
      [
        318,
        "index-11"
      ],
      [
        318,
        "index-12"
      ],
      [
        318,
        "index-13"
      ],
      [
        318,
        "index-14"
      ],
      [
        318,
        "index-15"
      ],
      [
        318,
        "index-16"
      ],
      [
        318,
        "index-17"
      ],
      [
        318,
        "index-18"
      ],
      [
        318,
        "index-19"
      ],
      [
        318,
        "index-2"
      ],
      [
        318,
        "index-20"
      ],
      [
        318,
        "index-21"
      ],
      [
        318,
        "index-22"
      ],
      [
        318,
        "index-23"
      ],
      [
        318,
        "index-24"
      ],
      [
        318,
        "index-25"
      ],
      [
        318,
        "index-26"
      ],
      [
        318,
        "index-27"
      ],
      [
        318,
        "index-28"
      ],
      [
        318,
        "index-29"
      ],
      [
        318,
        "index-3"
      ],
      [
        318,
        "index-30"
      ],
      [
        318,
        "index-31"
      ],
      [
        318,
        "index-32"
      ],
      [
        318,
        "index-33"
      ],
      [
        318,
        "index-34"
      ],
      [
        318,
        "index-35"
      ],
      [
        318,
        "index-36"
      ],
      [
        318,
        "index-37"
      ],
      [
        318,
        "index-38"
      ],
      [
        318,
        "index-39"
      ],
      [
        318,
        "index-4"
      ],
      [
        318,
        "index-5"
      ],
      [
        318,
        "index-6"
      ],
      [
        318,
        "index-7"
      ],
      [
        318,
        "index-8"
      ],
      [
        318,
        "index-9"
      ]
    ],
    "lastgroup (re.match attribute)": [
      [
        318,
        "re.Match.lastgroup"
      ]
    ],
    "lastindex (re.match attribute)": [
      [
        318,
        "re.Match.lastindex"
      ]
    ],
    "lineno (re.error attribute)": [
      [
        318,
        "re.error.lineno"
      ]
    ],
    "match() (in module re)": [
      [
        318,
        "re.match"
      ]
    ],
    "match() (re.pattern method)": [
      [
        318,
        "re.Pattern.match"
      ]
    ],
    "msg (re.error attribute)": [
      [
        318,
        "re.error.msg"
      ]
    ],
    "pattern (re.pattern attribute)": [
      [
        318,
        "re.Pattern.pattern"
      ]
    ],
    "pattern (re.error attribute)": [
      [
        318,
        "re.error.pattern"
      ]
    ],
    "pos (re.match attribute)": [
      [
        318,
        "re.Match.pos"
      ]
    ],
    "pos (re.error attribute)": [
      [
        318,
        "re.error.pos"
      ]
    ],
    "purge() (in module re)": [
      [
        318,
        "re.purge"
      ]
    ],
    "re (re.match attribute)": [
      [
        318,
        "re.Match.re"
      ]
    ],
    "scanf (c function)": [
      [
        318,
        "index-40"
      ]
    ],
    "search() (in module re)": [
      [
        318,
        "re.search"
      ]
    ],
    "search() (re.pattern method)": [
      [
        318,
        "re.Pattern.search"
      ]
    ],
    "span() (re.match method)": [
      [
        318,
        "re.Match.span"
      ]
    ],
    "split() (in module re)": [
      [
        318,
        "re.split"
      ]
    ],
    "split() (re.pattern method)": [
      [
        318,
        "re.Pattern.split"
      ]
    ],
    "start() (re.match method)": [
      [
        318,
        "re.Match.start"
      ]
    ],
    "string (re.match attribute)": [
      [
        318,
        "re.Match.string"
      ]
    ],
    "sub() (in module re)": [
      [
        318,
        "re.sub"
      ]
    ],
    "sub() (re.pattern method)": [
      [
        318,
        "re.Pattern.sub"
      ]
    ],
    "subn() (in module re)": [
      [
        318,
        "re.subn"
      ]
    ],
    "subn() (re.pattern method)": [
      [
        318,
        "re.Pattern.subn"
      ]
    ],
    "{} (curly brackets)": [
      [
        318,
        "index-8"
      ],
      [
        344,
        "index-2"
      ],
      [
        429,
        "index-16"
      ],
      [
        429,
        "index-17"
      ],
      [
        434,
        "index-25"
      ]
    ],
    "| (vertical bar)": [
      [
        318,
        "index-14"
      ],
      [
        343,
        "index-16"
      ],
      [
        429,
        "index-76"
      ]
    ],
    "add_history() (in module readline)": [
      [
        319,
        "readline.add_history"
      ]
    ],
    "append_history_file() (in module readline)": [
      [
        319,
        "readline.append_history_file"
      ]
    ],
    "clear_history() (in module readline)": [
      [
        319,
        "readline.clear_history"
      ]
    ],
    "get_begidx() (in module readline)": [
      [
        319,
        "readline.get_begidx"
      ]
    ],
    "get_completer() (in module readline)": [
      [
        319,
        "readline.get_completer"
      ]
    ],
    "get_completer_delims() (in module readline)": [
      [
        319,
        "readline.get_completer_delims"
      ]
    ],
    "get_completion_type() (in module readline)": [
      [
        319,
        "readline.get_completion_type"
      ]
    ],
    "get_current_history_length() (in module readline)": [
      [
        319,
        "readline.get_current_history_length"
      ]
    ],
    "get_endidx() (in module readline)": [
      [
        319,
        "readline.get_endidx"
      ]
    ],
    "get_history_item() (in module readline)": [
      [
        319,
        "readline.get_history_item"
      ]
    ],
    "get_history_length() (in module readline)": [
      [
        319,
        "readline.get_history_length"
      ]
    ],
    "get_line_buffer() (in module readline)": [
      [
        319,
        "readline.get_line_buffer"
      ]
    ],
    "insert_text() (in module readline)": [
      [
        319,
        "readline.insert_text"
      ]
    ],
    "parse_and_bind() (in module readline)": [
      [
        319,
        "readline.parse_and_bind"
      ]
    ],
    "read_history_file() (in module readline)": [
      [
        319,
        "readline.read_history_file"
      ]
    ],
    "read_init_file() (in module readline)": [
      [
        319,
        "readline.read_init_file"
      ]
    ],
    "readline": [
      [
        319,
        "module-readline"
      ]
    ],
    "redisplay() (in module readline)": [
      [
        319,
        "readline.redisplay"
      ]
    ],
    "remove_history_item() (in module readline)": [
      [
        319,
        "readline.remove_history_item"
      ]
    ],
    "replace_history_item() (in module readline)": [
      [
        319,
        "readline.replace_history_item"
      ]
    ],
    "set_auto_history() (in module readline)": [
      [
        319,
        "readline.set_auto_history"
      ]
    ],
    "set_completer() (in module readline)": [
      [
        319,
        "readline.set_completer"
      ]
    ],
    "set_completer_delims() (in module readline)": [
      [
        319,
        "readline.set_completer_delims"
      ]
    ],
    "set_completion_display_matches_hook() (in module readline)": [
      [
        319,
        "readline.set_completion_display_matches_hook"
      ]
    ],
    "set_history_length() (in module readline)": [
      [
        319,
        "readline.set_history_length"
      ]
    ],
    "set_pre_input_hook() (in module readline)": [
      [
        319,
        "readline.set_pre_input_hook"
      ]
    ],
    "set_startup_hook() (in module readline)": [
      [
        319,
        "readline.set_startup_hook"
      ]
    ],
    "write_history_file() (in module readline)": [
      [
        319,
        "readline.write_history_file"
      ]
    ],
    "repr (class in reprlib)": [
      [
        320,
        "reprlib.Repr"
      ]
    ],
    "arepr (in module reprlib)": [
      [
        320,
        "reprlib.aRepr"
      ]
    ],
    "fillvalue (reprlib.repr attribute)": [
      [
        320,
        "reprlib.Repr.fillvalue"
      ]
    ],
    "indent (reprlib.repr attribute)": [
      [
        320,
        "reprlib.Repr.indent"
      ]
    ],
    "maxarray (reprlib.repr attribute)": [
      [
        320,
        "reprlib.Repr.maxarray"
      ]
    ],
    "maxdeque (reprlib.repr attribute)": [
      [
        320,
        "reprlib.Repr.maxdeque"
      ]
    ],
    "maxdict (reprlib.repr attribute)": [
      [
        320,
        "reprlib.Repr.maxdict"
      ]
    ],
    "maxfrozenset (reprlib.repr attribute)": [
      [
        320,
        "reprlib.Repr.maxfrozenset"
      ]
    ],
    "maxlevel (reprlib.repr attribute)": [
      [
        320,
        "reprlib.Repr.maxlevel"
      ]
    ],
    "maxlist (reprlib.repr attribute)": [
      [
        320,
        "reprlib.Repr.maxlist"
      ]
    ],
    "maxlong (reprlib.repr attribute)": [
      [
        320,
        "reprlib.Repr.maxlong"
      ]
    ],
    "maxother (reprlib.repr attribute)": [
      [
        320,
        "reprlib.Repr.maxother"
      ]
    ],
    "maxset (reprlib.repr attribute)": [
      [
        320,
        "reprlib.Repr.maxset"
      ]
    ],
    "maxstring (reprlib.repr attribute)": [
      [
        320,
        "reprlib.Repr.maxstring"
      ]
    ],
    "maxtuple (reprlib.repr attribute)": [
      [
        320,
        "reprlib.Repr.maxtuple"
      ]
    ],
    "recursive_repr() (in module reprlib)": [
      [
        320,
        "reprlib.recursive_repr"
      ]
    ],
    "repr() (in module reprlib)": [
      [
        320,
        "reprlib.repr"
      ]
    ],
    "repr() (reprlib.repr method)": [
      [
        320,
        "reprlib.Repr.repr"
      ]
    ],
    "repr1() (reprlib.repr method)": [
      [
        320,
        "reprlib.Repr.repr1"
      ]
    ],
    "reprlib": [
      [
        320,
        "module-reprlib"
      ]
    ],
    "rlimit_as (in module resource)": [
      [
        321,
        "resource.RLIMIT_AS"
      ]
    ],
    "rlimit_core (in module resource)": [
      [
        321,
        "resource.RLIMIT_CORE"
      ]
    ],
    "rlimit_cpu (in module resource)": [
      [
        321,
        "resource.RLIMIT_CPU"
      ]
    ],
    "rlimit_data (in module resource)": [
      [
        321,
        "resource.RLIMIT_DATA"
      ]
    ],
    "rlimit_fsize (in module resource)": [
      [
        321,
        "resource.RLIMIT_FSIZE"
      ]
    ],
    "rlimit_kqueues (in module resource)": [
      [
        321,
        "resource.RLIMIT_KQUEUES"
      ]
    ],
    "rlimit_memlock (in module resource)": [
      [
        321,
        "resource.RLIMIT_MEMLOCK"
      ]
    ],
    "rlimit_msgqueue (in module resource)": [
      [
        321,
        "resource.RLIMIT_MSGQUEUE"
      ]
    ],
    "rlimit_nice (in module resource)": [
      [
        321,
        "resource.RLIMIT_NICE"
      ]
    ],
    "rlimit_nofile (in module resource)": [
      [
        321,
        "resource.RLIMIT_NOFILE"
      ]
    ],
    "rlimit_nproc (in module resource)": [
      [
        321,
        "resource.RLIMIT_NPROC"
      ]
    ],
    "rlimit_npts (in module resource)": [
      [
        321,
        "resource.RLIMIT_NPTS"
      ]
    ],
    "rlimit_ofile (in module resource)": [
      [
        321,
        "resource.RLIMIT_OFILE"
      ]
    ],
    "rlimit_rss (in module resource)": [
      [
        321,
        "resource.RLIMIT_RSS"
      ]
    ],
    "rlimit_rtprio (in module resource)": [
      [
        321,
        "resource.RLIMIT_RTPRIO"
      ]
    ],
    "rlimit_rttime (in module resource)": [
      [
        321,
        "resource.RLIMIT_RTTIME"
      ]
    ],
    "rlimit_sbsize (in module resource)": [
      [
        321,
        "resource.RLIMIT_SBSIZE"
      ]
    ],
    "rlimit_sigpending (in module resource)": [
      [
        321,
        "resource.RLIMIT_SIGPENDING"
      ]
    ],
    "rlimit_stack (in module resource)": [
      [
        321,
        "resource.RLIMIT_STACK"
      ]
    ],
    "rlimit_swap (in module resource)": [
      [
        321,
        "resource.RLIMIT_SWAP"
      ]
    ],
    "rlimit_vmem (in module resource)": [
      [
        321,
        "resource.RLIMIT_VMEM"
      ]
    ],
    "rlim_infinity (in module resource)": [
      [
        321,
        "resource.RLIM_INFINITY"
      ]
    ],
    "rusage_both (in module resource)": [
      [
        321,
        "resource.RUSAGE_BOTH"
      ]
    ],
    "rusage_children (in module resource)": [
      [
        321,
        "resource.RUSAGE_CHILDREN"
      ]
    ],
    "rusage_self (in module resource)": [
      [
        321,
        "resource.RUSAGE_SELF"
      ]
    ],
    "rusage_thread (in module resource)": [
      [
        321,
        "resource.RUSAGE_THREAD"
      ]
    ],
    "getpagesize() (in module resource)": [
      [
        321,
        "resource.getpagesize"
      ]
    ],
    "getrlimit() (in module resource)": [
      [
        321,
        "resource.getrlimit"
      ]
    ],
    "getrusage() (in module resource)": [
      [
        321,
        "resource.getrusage"
      ]
    ],
    "prlimit() (in module resource)": [
      [
        321,
        "resource.prlimit"
      ]
    ],
    "resource": [
      [
        321,
        "module-resource"
      ]
    ],
    "setrlimit() (in module resource)": [
      [
        321,
        "resource.setrlimit"
      ]
    ],
    "completer (class in rlcompleter)": [
      [
        322,
        "rlcompleter.Completer"
      ]
    ],
    "complete() (rlcompleter.completer method)": [
      [
        322,
        "rlcompleter.Completer.complete"
      ]
    ],
    "rlcompleter": [
      [
        322,
        "module-rlcompleter"
      ]
    ],
    "pep 338": [
      [
        323,
        "index-6"
      ],
      [
        431,
        "index-26"
      ],
      [
        454,
        "index-0"
      ],
      [
        466,
        "index-7"
      ]
    ],
    "run_module() (in module runpy)": [
      [
        323,
        "runpy.run_module"
      ]
    ],
    "run_path() (in module runpy)": [
      [
        323,
        "runpy.run_path"
      ]
    ],
    "runpy": [
      [
        323,
        "module-runpy"
      ]
    ],
    "cancel() (sched.scheduler method)": [
      [
        324,
        "sched.scheduler.cancel"
      ]
    ],
    "empty() (sched.scheduler method)": [
      [
        324,
        "sched.scheduler.empty"
      ]
    ],
    "enter() (sched.scheduler method)": [
      [
        324,
        "sched.scheduler.enter"
      ]
    ],
    "enterabs() (sched.scheduler method)": [
      [
        324,
        "sched.scheduler.enterabs"
      ]
    ],
    "event scheduling": [
      [
        324,
        "index-0"
      ]
    ],
    "queue (sched.scheduler attribute)": [
      [
        324,
        "sched.scheduler.queue"
      ]
    ],
    "run() (sched.scheduler method)": [
      [
        324,
        "sched.scheduler.run"
      ]
    ],
    "sched": [
      [
        324,
        "module-sched"
      ]
    ],
    "scheduler (class in sched)": [
      [
        324,
        "sched.scheduler"
      ]
    ],
    "pep 506": [
      [
        325,
        "index-0"
      ],
      [
        478,
        "index-28"
      ],
      [
        482,
        "index-288"
      ]
    ],
    "systemrandom (class in secrets)": [
      [
        325,
        "secrets.SystemRandom"
      ]
    ],
    "choice() (in module secrets)": [
      [
        325,
        "secrets.choice"
      ]
    ],
    "compare_digest() (in module secrets)": [
      [
        325,
        "secrets.compare_digest"
      ]
    ],
    "randbelow() (in module secrets)": [
      [
        325,
        "secrets.randbelow"
      ]
    ],
    "randbits() (in module secrets)": [
      [
        325,
        "secrets.randbits"
      ]
    ],
    "secrets": [
      [
        325,
        "module-secrets"
      ]
    ],
    "token_bytes() (in module secrets)": [
      [
        325,
        "secrets.token_bytes"
      ]
    ],
    "token_hex() (in module secrets)": [
      [
        325,
        "secrets.token_hex"
      ]
    ],
    "token_urlsafe() (in module secrets)": [
      [
        325,
        "secrets.token_urlsafe"
      ]
    ],
    "security considerations": [
      [
        326,
        "index-0"
      ]
    ],
    "pipe_buf (in module select)": [
      [
        327,
        "select.PIPE_BUF"
      ]
    ],
    "winsock": [
      [
        327,
        "index-2"
      ]
    ],
    "close() (select.devpoll method)": [
      [
        327,
        "select.devpoll.close"
      ]
    ],
    "close() (select.epoll method)": [
      [
        327,
        "select.epoll.close"
      ]
    ],
    "close() (select.kqueue method)": [
      [
        327,
        "select.kqueue.close"
      ]
    ],
    "closed (select.devpoll attribute)": [
      [
        327,
        "select.devpoll.closed"
      ]
    ],
    "closed (select.epoll attribute)": [
      [
        327,
        "select.epoll.closed"
      ]
    ],
    "closed (select.kqueue attribute)": [
      [
        327,
        "select.kqueue.closed"
      ]
    ],
    "control() (select.kqueue method)": [
      [
        327,
        "select.kqueue.control"
      ]
    ],
    "data (select.kevent attribute)": [
      [
        327,
        "select.kevent.data"
      ]
    ],
    "devpoll() (in module select)": [
      [
        327,
        "select.devpoll"
      ]
    ],
    "epoll() (in module select)": [
      [
        327,
        "select.epoll"
      ]
    ],
    "fflags (select.kevent attribute)": [
      [
        327,
        "select.kevent.fflags"
      ]
    ],
    "fileno() (select.devpoll method)": [
      [
        327,
        "select.devpoll.fileno"
      ]
    ],
    "fileno() (select.epoll method)": [
      [
        327,
        "select.epoll.fileno"
      ]
    ],
    "fileno() (select.kqueue method)": [
      [
        327,
        "select.kqueue.fileno"
      ]
    ],
    "filter (select.kevent attribute)": [
      [
        327,
        "select.kevent.filter"
      ]
    ],
    "flags (select.kevent attribute)": [
      [
        327,
        "select.kevent.flags"
      ]
    ],
    "fromfd() (select.epoll method)": [
      [
        327,
        "select.epoll.fromfd"
      ]
    ],
    "fromfd() (select.kqueue method)": [
      [
        327,
        "select.kqueue.fromfd"
      ]
    ],
    "ident (select.kevent attribute)": [
      [
        327,
        "select.kevent.ident"
      ]
    ],
    "kevent() (in module select)": [
      [
        327,
        "select.kevent"
      ]
    ],
    "kqueue() (in module select)": [
      [
        327,
        "select.kqueue"
      ]
    ],
    "modify() (select.devpoll method)": [
      [
        327,
        "select.devpoll.modify"
      ]
    ],
    "modify() (select.epoll method)": [
      [
        327,
        "select.epoll.modify"
      ]
    ],
    "modify() (select.poll method)": [
      [
        327,
        "select.poll.modify"
      ]
    ],
    "poll() (in module select)": [
      [
        327,
        "select.poll"
      ]
    ],
    "poll() (select.devpoll method)": [
      [
        327,
        "select.devpoll.poll"
      ]
    ],
    "poll() (select.epoll method)": [
      [
        327,
        "select.epoll.poll"
      ]
    ],
    "poll() (select.poll method)": [
      [
        327,
        "select.poll.poll"
      ]
    ],
    "register() (select.devpoll method)": [
      [
        327,
        "select.devpoll.register"
      ]
    ],
    "register() (select.epoll method)": [
      [
        327,
        "select.epoll.register"
      ]
    ],
    "register() (select.poll method)": [
      [
        327,
        "select.poll.register"
      ]
    ],
    "select": [
      [
        327,
        "module-select"
      ]
    ],
    "select() (in module select)": [
      [
        327,
        "select.select"
      ]
    ],
    "socket() (in module socket)": [
      [
        327,
        "index-1"
      ]
    ],
    "udata (select.kevent attribute)": [
      [
        327,
        "select.kevent.udata"
      ]
    ],
    "unregister() (select.devpoll method)": [
      [
        327,
        "select.devpoll.unregister"
      ]
    ],
    "unregister() (select.epoll method)": [
      [
        327,
        "select.epoll.unregister"
      ]
    ],
    "unregister() (select.poll method)": [
      [
        327,
        "select.poll.unregister"
      ]
    ],
    "baseselector (class in selectors)": [
      [
        328,
        "selectors.BaseSelector"
      ]
    ],
    "defaultselector (class in selectors)": [
      [
        328,
        "selectors.DefaultSelector"
      ]
    ],
    "devpollselector (class in selectors)": [
      [
        328,
        "selectors.DevpollSelector"
      ]
    ],
    "event_read (in module selectors)": [
      [
        328,
        "selectors.EVENT_READ"
      ]
    ],
    "event_write (in module selectors)": [
      [
        328,
        "selectors.EVENT_WRITE"
      ]
    ],
    "epollselector (class in selectors)": [
      [
        328,
        "selectors.EpollSelector"
      ]
    ],
    "kqueueselector (class in selectors)": [
      [
        328,
        "selectors.KqueueSelector"
      ]
    ],
    "pollselector (class in selectors)": [
      [
        328,
        "selectors.PollSelector"
      ]
    ],
    "selectselector (class in selectors)": [
      [
        328,
        "selectors.SelectSelector"
      ]
    ],
    "selectorkey (class in selectors)": [
      [
        328,
        "selectors.SelectorKey"
      ]
    ],
    "close() (selectors.baseselector method)": [
      [
        328,
        "selectors.BaseSelector.close"
      ]
    ],
    "data (selectors.selectorkey attribute)": [
      [
        328,
        "selectors.SelectorKey.data"
      ]
    ],
    "events (selectors.selectorkey attribute)": [
      [
        328,
        "selectors.SelectorKey.events"
      ]
    ],
    "fd (selectors.selectorkey attribute)": [
      [
        328,
        "selectors.SelectorKey.fd"
      ]
    ],
    "fileno() (selectors.devpollselector method)": [
      [
        328,
        "selectors.DevpollSelector.fileno"
      ]
    ],
    "fileno() (selectors.epollselector method)": [
      [
        328,
        "selectors.EpollSelector.fileno"
      ]
    ],
    "fileno() (selectors.kqueueselector method)": [
      [
        328,
        "selectors.KqueueSelector.fileno"
      ]
    ],
    "fileobj (selectors.selectorkey attribute)": [
      [
        328,
        "selectors.SelectorKey.fileobj"
      ]
    ],
    "get_key() (selectors.baseselector method)": [
      [
        328,
        "selectors.BaseSelector.get_key"
      ]
    ],
    "get_map() (selectors.baseselector method)": [
      [
        328,
        "selectors.BaseSelector.get_map"
      ]
    ],
    "modify() (selectors.baseselector method)": [
      [
        328,
        "selectors.BaseSelector.modify"
      ]
    ],
    "register() (selectors.baseselector method)": [
      [
        328,
        "selectors.BaseSelector.register"
      ]
    ],
    "select() (selectors.baseselector method)": [
      [
        328,
        "selectors.BaseSelector.select"
      ]
    ],
    "selectors": [
      [
        328,
        "module-selectors"
      ]
    ],
    "unregister() (selectors.baseselector method)": [
      [
        328,
        "selectors.BaseSelector.unregister"
      ]
    ],
    "bsddbshelf (class in shelve)": [
      [
        329,
        "shelve.BsdDbShelf"
      ]
    ],
    "dbfilenameshelf (class in shelve)": [
      [
        329,
        "shelve.DbfilenameShelf"
      ]
    ],
    "shelf (class in shelve)": [
      [
        329,
        "shelve.Shelf"
      ]
    ],
    "close() (shelve.shelf method)": [
      [
        329,
        "shelve.Shelf.close"
      ]
    ],
    "open() (in module shelve)": [
      [
        329,
        "shelve.open"
      ]
    ],
    "sync() (shelve.shelf method)": [
      [
        329,
        "shelve.Shelf.sync"
      ]
    ],
    "commenters (shlex.shlex attribute)": [
      [
        330,
        "shlex.shlex.commenters"
      ]
    ],
    "debug (shlex.shlex attribute)": [
      [
        330,
        "shlex.shlex.debug"
      ]
    ],
    "eof (shlex.shlex attribute)": [
      [
        330,
        "shlex.shlex.eof"
      ]
    ],
    "error_leader() (shlex.shlex method)": [
      [
        330,
        "shlex.shlex.error_leader"
      ]
    ],
    "escape (shlex.shlex attribute)": [
      [
        330,
        "shlex.shlex.escape"
      ]
    ],
    "escapedquotes (shlex.shlex attribute)": [
      [
        330,
        "shlex.shlex.escapedquotes"
      ]
    ],
    "get_token() (shlex.shlex method)": [
      [
        330,
        "shlex.shlex.get_token"
      ]
    ],
    "infile (shlex.shlex attribute)": [
      [
        330,
        "shlex.shlex.infile"
      ]
    ],
    "instream (shlex.shlex attribute)": [
      [
        330,
        "shlex.shlex.instream"
      ]
    ],
    "join() (in module shlex)": [
      [
        330,
        "shlex.join"
      ]
    ],
    "lineno (shlex.shlex attribute)": [
      [
        330,
        "shlex.shlex.lineno"
      ]
    ],
    "pop_source() (shlex.shlex method)": [
      [
        330,
        "shlex.shlex.pop_source"
      ]
    ],
    "punctuation_chars (shlex.shlex attribute)": [
      [
        330,
        "shlex.shlex.punctuation_chars"
      ]
    ],
    "push_source() (shlex.shlex method)": [
      [
        330,
        "shlex.shlex.push_source"
      ]
    ],
    "push_token() (shlex.shlex method)": [
      [
        330,
        "shlex.shlex.push_token"
      ]
    ],
    "quote() (in module shlex)": [
      [
        330,
        "shlex.quote"
      ]
    ],
    "quotes (shlex.shlex attribute)": [
      [
        330,
        "shlex.shlex.quotes"
      ]
    ],
    "read_token() (shlex.shlex method)": [
      [
        330,
        "shlex.shlex.read_token"
      ]
    ],
    "shlex": [
      [
        330,
        "module-shlex"
      ]
    ],
    "shlex (class in shlex)": [
      [
        330,
        "shlex.shlex"
      ]
    ],
    "source (shlex.shlex attribute)": [
      [
        330,
        "shlex.shlex.source"
      ]
    ],
    "sourcehook() (shlex.shlex method)": [
      [
        330,
        "shlex.shlex.sourcehook"
      ]
    ],
    "split() (in module shlex)": [
      [
        330,
        "shlex.split"
      ]
    ],
    "token (shlex.shlex attribute)": [
      [
        330,
        "shlex.shlex.token"
      ]
    ],
    "whitespace (shlex.shlex attribute)": [
      [
        330,
        "shlex.shlex.whitespace"
      ]
    ],
    "whitespace_split (shlex.shlex attribute)": [
      [
        330,
        "shlex.shlex.whitespace_split"
      ]
    ],
    "wordchars (shlex.shlex attribute)": [
      [
        330,
        "shlex.shlex.wordchars"
      ]
    ],
    "samefileerror": [
      [
        331,
        "shutil.SameFileError"
      ]
    ],
    "avoids_symlink_attacks (shutil.rmtree attribute)": [
      [
        331,
        "shutil.rmtree.avoids_symlink_attacks"
      ]
    ],
    "chown() (in module shutil)": [
      [
        331,
        "shutil.chown"
      ]
    ],
    "copy() (in module shutil)": [
      [
        331,
        "shutil.copy"
      ]
    ],
    "copy2() (in module shutil)": [
      [
        331,
        "shutil.copy2"
      ]
    ],
    "copyfile() (in module shutil)": [
      [
        331,
        "shutil.copyfile"
      ]
    ],
    "copyfileobj() (in module shutil)": [
      [
        331,
        "shutil.copyfileobj"
      ]
    ],
    "copying": [
      [
        331,
        "index-0"
      ]
    ],
    "copying files": [
      [
        331,
        "index-0"
      ]
    ],
    "copymode() (in module shutil)": [
      [
        331,
        "shutil.copymode"
      ]
    ],
    "copystat() (in module shutil)": [
      [
        331,
        "shutil.copystat"
      ]
    ],
    "copytree() (in module shutil)": [
      [
        331,
        "shutil.copytree"
      ]
    ],
    "disk_usage() (in module shutil)": [
      [
        331,
        "shutil.disk_usage"
      ]
    ],
    "get_archive_formats() (in module shutil)": [
      [
        331,
        "shutil.get_archive_formats"
      ]
    ],
    "get_terminal_size() (in module shutil)": [
      [
        331,
        "shutil.get_terminal_size"
      ]
    ],
    "get_unpack_formats() (in module shutil)": [
      [
        331,
        "shutil.get_unpack_formats"
      ]
    ],
    "ignore_patterns() (in module shutil)": [
      [
        331,
        "shutil.ignore_patterns"
      ]
    ],
    "make_archive() (in module shutil)": [
      [
        331,
        "shutil.make_archive"
      ]
    ],
    "move() (in module shutil)": [
      [
        331,
        "shutil.move"
      ]
    ],
    "register_archive_format() (in module shutil)": [
      [
        331,
        "shutil.register_archive_format"
      ]
    ],
    "register_unpack_format() (in module shutil)": [
      [
        331,
        "shutil.register_unpack_format"
      ]
    ],
    "rmtree() (in module shutil)": [
      [
        331,
        "shutil.rmtree"
      ]
    ],
    "shutil": [
      [
        331,
        "module-shutil"
      ]
    ],
    "unpack_archive() (in module shutil)": [
      [
        331,
        "shutil.unpack_archive"
      ]
    ],
    "unregister_archive_format() (in module shutil)": [
      [
        331,
        "shutil.unregister_archive_format"
      ]
    ],
    "unregister_unpack_format() (in module shutil)": [
      [
        331,
        "shutil.unregister_unpack_format"
      ]
    ],
    "which() (in module shutil)": [
      [
        331,
        "shutil.which"
      ]
    ],
    "ctrl_break_event (in module signal)": [
      [
        332,
        "signal.CTRL_BREAK_EVENT"
      ]
    ],
    "ctrl_c_event (in module signal)": [
      [
        332,
        "signal.CTRL_C_EVENT"
      ]
    ],
    "handlers (class in signal)": [
      [
        332,
        "signal.Handlers"
      ]
    ],
    "itimer_prof (in module signal)": [
      [
        332,
        "signal.ITIMER_PROF"
      ]
    ],
    "itimer_real (in module signal)": [
      [
        332,
        "signal.ITIMER_REAL"
      ]
    ],
    "itimer_virtual (in module signal)": [
      [
        332,
        "signal.ITIMER_VIRTUAL"
      ]
    ],
    "itimererror": [
      [
        332,
        "signal.ItimerError"
      ]
    ],
    "nsig (in module signal)": [
      [
        332,
        "signal.NSIG"
      ]
    ],
    "sigabrt (in module signal)": [
      [
        332,
        "signal.SIGABRT"
      ]
    ],
    "sigalrm (in module signal)": [
      [
        332,
        "signal.SIGALRM"
      ]
    ],
    "sigbreak (in module signal)": [
      [
        332,
        "signal.SIGBREAK"
      ]
    ],
    "sigbus (in module signal)": [
      [
        332,
        "signal.SIGBUS"
      ]
    ],
    "sigchld (in module signal)": [
      [
        332,
        "signal.SIGCHLD"
      ]
    ],
    "sigcld (in module signal)": [
      [
        332,
        "signal.SIGCLD"
      ]
    ],
    "sigcont (in module signal)": [
      [
        332,
        "signal.SIGCONT"
      ]
    ],
    "sigfpe (in module signal)": [
      [
        332,
        "signal.SIGFPE"
      ]
    ],
    "sighup (in module signal)": [
      [
        332,
        "signal.SIGHUP"
      ]
    ],
    "sigill (in module signal)": [
      [
        332,
        "signal.SIGILL"
      ]
    ],
    "sigint (in module signal)": [
      [
        332,
        "signal.SIGINT"
      ]
    ],
    "sigkill (in module signal)": [
      [
        332,
        "signal.SIGKILL"
      ]
    ],
    "sigpipe (in module signal)": [
      [
        332,
        "signal.SIGPIPE"
      ]
    ],
    "sigsegv (in module signal)": [
      [
        332,
        "signal.SIGSEGV"
      ]
    ],
    "sigstkflt (in module signal)": [
      [
        332,
        "signal.SIGSTKFLT"
      ]
    ],
    "sigterm (in module signal)": [
      [
        332,
        "signal.SIGTERM"
      ]
    ],
    "sigusr1 (in module signal)": [
      [
        332,
        "signal.SIGUSR1"
      ]
    ],
    "sigusr2 (in module signal)": [
      [
        332,
        "signal.SIGUSR2"
      ]
    ],
    "sigwinch (in module signal)": [
      [
        332,
        "signal.SIGWINCH"
      ]
    ],
    "sig_block (in module signal)": [
      [
        332,
        "signal.SIG_BLOCK"
      ]
    ],
    "sig_dfl (in module signal)": [
      [
        332,
        "signal.SIG_DFL"
      ]
    ],
    "sig_ign (in module signal)": [
      [
        332,
        "signal.SIG_IGN"
      ]
    ],
    "sig_setmask (in module signal)": [
      [
        332,
        "signal.SIG_SETMASK"
      ]
    ],
    "sig_unblock (in module signal)": [
      [
        332,
        "signal.SIG_UNBLOCK"
      ]
    ],
    "sigmasks (class in signal)": [
      [
        332,
        "signal.Sigmasks"
      ]
    ],
    "signals (class in signal)": [
      [
        332,
        "signal.Signals"
      ]
    ],
    "alarm() (in module signal)": [
      [
        332,
        "signal.alarm"
      ]
    ],
    "getitimer() (in module signal)": [
      [
        332,
        "signal.getitimer"
      ]
    ],
    "getsignal() (in module signal)": [
      [
        332,
        "signal.getsignal"
      ]
    ],
    "pause() (in module signal)": [
      [
        332,
        "signal.pause"
      ]
    ],
    "pidfd_send_signal() (in module signal)": [
      [
        332,
        "signal.pidfd_send_signal"
      ]
    ],
    "pthread_kill() (in module signal)": [
      [
        332,
        "signal.pthread_kill"
      ]
    ],
    "pthread_sigmask() (in module signal)": [
      [
        332,
        "signal.pthread_sigmask"
      ]
    ],
    "raise_signal() (in module signal)": [
      [
        332,
        "signal.raise_signal"
      ]
    ],
    "set_wakeup_fd() (in module signal)": [
      [
        332,
        "signal.set_wakeup_fd"
      ]
    ],
    "setitimer() (in module signal)": [
      [
        332,
        "signal.setitimer"
      ]
    ],
    "siginterrupt() (in module signal)": [
      [
        332,
        "signal.siginterrupt"
      ]
    ],
    "signal() (in module signal)": [
      [
        332,
        "signal.signal"
      ]
    ],
    "sigpending() (in module signal)": [
      [
        332,
        "signal.sigpending"
      ]
    ],
    "sigtimedwait() (in module signal)": [
      [
        332,
        "signal.sigtimedwait"
      ]
    ],
    "sigwait() (in module signal)": [
      [
        332,
        "signal.sigwait"
      ]
    ],
    "sigwaitinfo() (in module signal)": [
      [
        332,
        "signal.sigwaitinfo"
      ]
    ],
    "strsignal() (in module signal)": [
      [
        332,
        "signal.strsignal"
      ]
    ],
    "valid_signals() (in module signal)": [
      [
        332,
        "signal.valid_signals"
      ]
    ],
    "--user-base": [
      [
        333,
        "cmdoption-site-user-base"
      ]
    ],
    "--user-site": [
      [
        333,
        "cmdoption-site-user-site"
      ]
    ],
    "enable_user_site (in module site)": [
      [
        333,
        "site.ENABLE_USER_SITE"
      ]
    ],
    "pep 370": [
      [
        333,
        "index-9"
      ],
      [
        454,
        "index-15"
      ],
      [
        454,
        "index-37"
      ],
      [
        454,
        "index-38"
      ],
      [
        467,
        "index-7"
      ],
      [
        482,
        "index-46"
      ]
    ],
    "prefixes (in module site)": [
      [
        333,
        "site.PREFIXES"
      ]
    ],
    "pythonuserbase": [
      [
        333,
        "index-7"
      ],
      [
        333,
        "index-8"
      ],
      [
        454,
        "envvar-PYTHONUSERBASE"
      ],
      [
        467,
        "index-4"
      ]
    ],
    "user_base (in module site)": [
      [
        333,
        "site.USER_BASE"
      ]
    ],
    "user_site (in module site)": [
      [
        333,
        "site.USER_SITE"
      ]
    ],
    "addsitedir() (in module site)": [
      [
        333,
        "site.addsitedir"
      ]
    ],
    "comment": [
      [
        333,
        "index-2"
      ],
      [
        434,
        "index-4"
      ],
      [
        448,
        "index-0"
      ]
    ],
    "getsitepackages() (in module site)": [
      [
        333,
        "site.getsitepackages"
      ]
    ],
    "getuserbase() (in module site)": [
      [
        333,
        "site.getuserbase"
      ]
    ],
    "getusersitepackages() (in module site)": [
      [
        333,
        "site.getusersitepackages"
      ]
    ],
    "main() (in module site)": [
      [
        333,
        "site.main"
      ]
    ],
    "site": [
      [
        333,
        "module-site"
      ]
    ],
    "site command line option": [
      [
        333,
        "cmdoption-site-user-base"
      ],
      [
        333,
        "cmdoption-site-user-site"
      ]
    ],
    "site-packages": [
      [
        333,
        "index-1"
      ]
    ],
    "sitecustomize": [
      [
        333,
        "module-sitecustomize"
      ],
      [
        437,
        "index-2"
      ],
      [
        437,
        "index-4"
      ]
    ],
    "usercustomize": [
      [
        333,
        "module-usercustomize"
      ],
      [
        437,
        "index-3"
      ],
      [
        437,
        "index-5"
      ]
    ],
    "lmtp (class in smtplib)": [
      [
        334,
        "smtplib.LMTP"
      ]
    ],
    "rfc 1869": [
      [
        334,
        "index-2"
      ],
      [
        334,
        "index-5"
      ]
    ],
    "rfc 4954": [
      [
        334,
        "index-7"
      ],
      [
        334,
        "index-8"
      ]
    ],
    "rfc 821": [
      [
        334,
        "index-1"
      ],
      [
        334,
        "index-4"
      ]
    ],
    "smtp": [
      [
        334,
        "index-0"
      ]
    ],
    "smtp (class in smtplib)": [
      [
        334,
        "smtplib.SMTP"
      ]
    ],
    "smtpauthenticationerror": [
      [
        334,
        "smtplib.SMTPAuthenticationError"
      ]
    ],
    "smtpconnecterror": [
      [
        334,
        "smtplib.SMTPConnectError"
      ]
    ],
    "smtpdataerror": [
      [
        334,
        "smtplib.SMTPDataError"
      ]
    ],
    "smtpexception": [
      [
        334,
        "smtplib.SMTPException"
      ]
    ],
    "smtpheloerror": [
      [
        334,
        "smtplib.SMTPHeloError"
      ]
    ],
    "smtpnotsupportederror": [
      [
        334,
        "smtplib.SMTPNotSupportedError"
      ]
    ],
    "smtprecipientsrefused": [
      [
        334,
        "smtplib.SMTPRecipientsRefused"
      ]
    ],
    "smtpresponseexception": [
      [
        334,
        "smtplib.SMTPResponseException"
      ]
    ],
    "smtpsenderrefused": [
      [
        334,
        "smtplib.SMTPSenderRefused"
      ]
    ],
    "smtpserverdisconnected": [
      [
        334,
        "smtplib.SMTPServerDisconnected"
      ]
    ],
    "smtp_ssl (class in smtplib)": [
      [
        334,
        "smtplib.SMTP_SSL"
      ]
    ],
    "simple mail transfer protocol": [
      [
        334,
        "index-0"
      ]
    ],
    "auth() (smtplib.smtp method)": [
      [
        334,
        "smtplib.SMTP.auth"
      ]
    ],
    "connect() (smtplib.smtp method)": [
      [
        334,
        "smtplib.SMTP.connect"
      ]
    ],
    "docmd() (smtplib.smtp method)": [
      [
        334,
        "smtplib.SMTP.docmd"
      ]
    ],
    "ehlo() (smtplib.smtp method)": [
      [
        334,
        "smtplib.SMTP.ehlo"
      ]
    ],
    "ehlo_or_helo_if_needed() (smtplib.smtp method)": [
      [
        334,
        "smtplib.SMTP.ehlo_or_helo_if_needed"
      ]
    ],
    "has_extn() (smtplib.smtp method)": [
      [
        334,
        "smtplib.SMTP.has_extn"
      ]
    ],
    "helo() (smtplib.smtp method)": [
      [
        334,
        "smtplib.SMTP.helo"
      ]
    ],
    "login() (smtplib.smtp method)": [
      [
        334,
        "smtplib.SMTP.login"
      ]
    ],
    "quit() (smtplib.smtp method)": [
      [
        334,
        "smtplib.SMTP.quit"
      ]
    ],
    "send_message() (smtplib.smtp method)": [
      [
        334,
        "smtplib.SMTP.send_message"
      ]
    ],
    "sendmail() (smtplib.smtp method)": [
      [
        334,
        "smtplib.SMTP.sendmail"
      ]
    ],
    "set_debuglevel() (smtplib.smtp method)": [
      [
        334,
        "smtplib.SMTP.set_debuglevel"
      ]
    ],
    "smtplib": [
      [
        334,
        "module-smtplib"
      ]
    ],
    "starttls() (smtplib.smtp method)": [
      [
        334,
        "smtplib.SMTP.starttls"
      ]
    ],
    "verify() (smtplib.smtp method)": [
      [
        334,
        "smtplib.SMTP.verify"
      ]
    ],
    "pep 594#sndhdr": [
      [
        335,
        "index-1"
      ]
    ],
    "sndhdr": [
      [
        335,
        "module-sndhdr"
      ]
    ],
    "tests (in module sndhdr)": [
      [
        335,
        "sndhdr.tests"
      ]
    ],
    "what() (in module sndhdr)": [
      [
        335,
        "sndhdr.what"
      ]
    ],
    "whathdr() (in module sndhdr)": [
      [
        335,
        "sndhdr.whathdr"
      ]
    ],
    "af_alg (in module socket)": [
      [
        336,
        "socket.AF_ALG"
      ]
    ],
    "af_can (in module socket)": [
      [
        336,
        "socket.AF_CAN"
      ]
    ],
    "af_divert (in module socket)": [
      [
        336,
        "socket.AF_DIVERT"
      ]
    ],
    "af_hyperv (in module socket)": [
      [
        336,
        "socket.AF_HYPERV"
      ]
    ],
    "af_inet (in module socket)": [
      [
        336,
        "socket.AF_INET"
      ]
    ],
    "af_inet6 (in module socket)": [
      [
        336,
        "socket.AF_INET6"
      ]
    ],
    "af_link (in module socket)": [
      [
        336,
        "socket.AF_LINK"
      ]
    ],
    "af_packet (in module socket)": [
      [
        336,
        "socket.AF_PACKET"
      ]
    ],
    "af_qipcrtr (in module socket)": [
      [
        336,
        "socket.AF_QIPCRTR"
      ]
    ],
    "af_rds (in module socket)": [
      [
        336,
        "socket.AF_RDS"
      ]
    ],
    "af_unix (in module socket)": [
      [
        336,
        "socket.AF_UNIX"
      ]
    ],
    "af_unspec (in module socket)": [
      [
        336,
        "socket.AF_UNSPEC"
      ]
    ],
    "af_vsock (in module socket)": [
      [
        336,
        "socket.AF_VSOCK"
      ]
    ],
    "bdaddr_any (in module socket)": [
      [
        336,
        "socket.BDADDR_ANY"
      ]
    ],
    "bdaddr_local (in module socket)": [
      [
        336,
        "socket.BDADDR_LOCAL"
      ]
    ],
    "can_bcm (in module socket)": [
      [
        336,
        "socket.CAN_BCM"
      ]
    ],
    "can_isotp (in module socket)": [
      [
        336,
        "socket.CAN_ISOTP"
      ]
    ],
    "can_j1939 (in module socket)": [
      [
        336,
        "socket.CAN_J1939"
      ]
    ],
    "can_raw_fd_frames (in module socket)": [
      [
        336,
        "socket.CAN_RAW_FD_FRAMES"
      ]
    ],
    "can_raw_join_filters (in module socket)": [
      [
        336,
        "socket.CAN_RAW_JOIN_FILTERS"
      ]
    ],
    "cmsg_len() (in module socket)": [
      [
        336,
        "socket.CMSG_LEN"
      ]
    ],
    "cmsg_space() (in module socket)": [
      [
        336,
        "socket.CMSG_SPACE"
      ]
    ],
    "ethertype_arp (in module socket)": [
      [
        336,
        "socket.ETHERTYPE_ARP"
      ]
    ],
    "ethertype_ip (in module socket)": [
      [
        336,
        "socket.ETHERTYPE_IP"
      ]
    ],
    "ethertype_ipv6 (in module socket)": [
      [
        336,
        "socket.ETHERTYPE_IPV6"
      ]
    ],
    "ethertype_vlan (in module socket)": [
      [
        336,
        "socket.ETHERTYPE_VLAN"
      ]
    ],
    "eth_p_all (in module socket)": [
      [
        336,
        "socket.ETH_P_ALL"
      ]
    ],
    "hci_data_dir (in module socket)": [
      [
        336,
        "socket.HCI_DATA_DIR"
      ]
    ],
    "hci_filter (in module socket)": [
      [
        336,
        "socket.HCI_FILTER"
      ]
    ],
    "hci_time_stamp (in module socket)": [
      [
        336,
        "socket.HCI_TIME_STAMP"
      ]
    ],
    "hvsocket_address_flag_passthru (in module socket)": [
      [
        336,
        "socket.HVSOCKET_ADDRESS_FLAG_PASSTHRU"
      ]
    ],
    "hvsocket_connected_suspend (in module socket)": [
      [
        336,
        "socket.HVSOCKET_CONNECTED_SUSPEND"
      ]
    ],
    "hvsocket_connect_timeout (in module socket)": [
      [
        336,
        "socket.HVSOCKET_CONNECT_TIMEOUT"
      ]
    ],
    "hvsocket_connect_timeout_max (in module socket)": [
      [
        336,
        "socket.HVSOCKET_CONNECT_TIMEOUT_MAX"
      ]
    ],
    "hv_guid_broadcast (in module socket)": [
      [
        336,
        "socket.HV_GUID_BROADCAST"
      ]
    ],
    "hv_guid_children (in module socket)": [
      [
        336,
        "socket.HV_GUID_CHILDREN"
      ]
    ],
    "hv_guid_loopback (in module socket)": [
      [
        336,
        "socket.HV_GUID_LOOPBACK"
      ]
    ],
    "hv_guid_parent (in module socket)": [
      [
        336,
        "socket.HV_GUID_PARENT"
      ]
    ],
    "hv_guid_wildcard (in module socket)": [
      [
        336,
        "socket.HV_GUID_WILDCARD"
      ]
    ],
    "hv_guid_zero (in module socket)": [
      [
        336,
        "socket.HV_GUID_ZERO"
      ]
    ],
    "hv_protocol_raw (in module socket)": [
      [
        336,
        "socket.HV_PROTOCOL_RAW"
      ]
    ],
    "ioctl_vm_sockets_get_local_cid (in module socket)": [
      [
        336,
        "socket.IOCTL_VM_SOCKETS_GET_LOCAL_CID"
      ]
    ],
    "local_creds (in module socket)": [
      [
        336,
        "socket.LOCAL_CREDS"
      ]
    ],
    "local_creds_persistent (in module socket)": [
      [
        336,
        "socket.LOCAL_CREDS_PERSISTENT"
      ]
    ],
    "pf_can (in module socket)": [
      [
        336,
        "socket.PF_CAN"
      ]
    ],
    "pf_divert (in module socket)": [
      [
        336,
        "socket.PF_DIVERT"
      ]
    ],
    "pf_packet (in module socket)": [
      [
        336,
        "socket.PF_PACKET"
      ]
    ],
    "pf_rds (in module socket)": [
      [
        336,
        "socket.PF_RDS"
      ]
    ],
    "rfc 3493": [
      [
        336,
        "index-15"
      ]
    ],
    "rfc 3542": [
      [
        336,
        "index-3"
      ],
      [
        482,
        "index-217"
      ]
    ],
    "scm_creds2 (in module socket)": [
      [
        336,
        "socket.SCM_CREDS2"
      ]
    ],
    "sio_keepalive_vals (in module socket)": [
      [
        336,
        "socket.SIO_KEEPALIVE_VALS"
      ]
    ],
    "sio_loopback_fast_path (in module socket)": [
      [
        336,
        "socket.SIO_LOOPBACK_FAST_PATH"
      ]
    ],
    "sio_rcvall (in module socket)": [
      [
        336,
        "socket.SIO_RCVALL"
      ]
    ],
    "sock_cloexec (in module socket)": [
      [
        336,
        "socket.SOCK_CLOEXEC"
      ]
    ],
    "sock_dgram (in module socket)": [
      [
        336,
        "socket.SOCK_DGRAM"
      ]
    ],
    "sock_nonblock (in module socket)": [
      [
        336,
        "socket.SOCK_NONBLOCK"
      ]
    ],
    "sock_raw (in module socket)": [
      [
        336,
        "socket.SOCK_RAW"
      ]
    ],
    "sock_rdm (in module socket)": [
      [
        336,
        "socket.SOCK_RDM"
      ]
    ],
    "sock_seqpacket (in module socket)": [
      [
        336,
        "socket.SOCK_SEQPACKET"
      ]
    ],
    "sock_stream (in module socket)": [
      [
        336,
        "socket.SOCK_STREAM"
      ]
    ],
    "sol_alg (in module socket)": [
      [
        336,
        "socket.SOL_ALG"
      ]
    ],
    "sol_rds (in module socket)": [
      [
        336,
        "socket.SOL_RDS"
      ]
    ],
    "somaxconn (in module socket)": [
      [
        336,
        "socket.SOMAXCONN"
      ]
    ],
    "so_incoming_cpu (in module socket)": [
      [
        336,
        "socket.SO_INCOMING_CPU"
      ]
    ],
    "sockettype (in module socket)": [
      [
        336,
        "socket.SocketType"
      ]
    ],
    "accept() (socket.socket method)": [
      [
        336,
        "socket.socket.accept"
      ]
    ],
    "bind() (socket.socket method)": [
      [
        336,
        "socket.socket.bind"
      ]
    ],
    "close() (in module socket)": [
      [
        336,
        "socket.close"
      ]
    ],
    "close() (socket.socket method)": [
      [
        336,
        "socket.socket.close"
      ]
    ],
    "connect() (socket.socket method)": [
      [
        336,
        "socket.socket.connect"
      ]
    ],
    "connect_ex() (socket.socket method)": [
      [
        336,
        "socket.socket.connect_ex"
      ]
    ],
    "create_connection() (in module socket)": [
      [
        336,
        "socket.create_connection"
      ]
    ],
    "create_server() (in module socket)": [
      [
        336,
        "socket.create_server"
      ]
    ],
    "detach() (socket.socket method)": [
      [
        336,
        "socket.socket.detach"
      ]
    ],
    "dup() (socket.socket method)": [
      [
        336,
        "socket.socket.dup"
      ]
    ],
    "family (socket.socket attribute)": [
      [
        336,
        "socket.socket.family"
      ]
    ],
    "fileno() (socket.socket method)": [
      [
        336,
        "socket.socket.fileno"
      ]
    ],
    "fromfd() (in module socket)": [
      [
        336,
        "socket.fromfd"
      ]
    ],
    "fromshare() (in module socket)": [
      [
        336,
        "socket.fromshare"
      ]
    ],
    "gaierror": [
      [
        336,
        "socket.gaierror"
      ]
    ],
    "get_inheritable() (socket.socket method)": [
      [
        336,
        "socket.socket.get_inheritable"
      ]
    ],
    "getaddrinfo() (in module socket)": [
      [
        336,
        "socket.getaddrinfo"
      ]
    ],
    "getblocking() (socket.socket method)": [
      [
        336,
        "socket.socket.getblocking"
      ]
    ],
    "getdefaulttimeout() (in module socket)": [
      [
        336,
        "socket.getdefaulttimeout"
      ]
    ],
    "getfqdn() (in module socket)": [
      [
        336,
        "socket.getfqdn"
      ]
    ],
    "gethostbyname() (in module socket)": [
      [
        336,
        "socket.gethostbyname"
      ]
    ],
    "gethostbyname_ex() (in module socket)": [
      [
        336,
        "socket.gethostbyname_ex"
      ]
    ],
    "getnameinfo() (in module socket)": [
      [
        336,
        "socket.getnameinfo"
      ]
    ],
    "getpeername() (socket.socket method)": [
      [
        336,
        "socket.socket.getpeername"
      ]
    ],
    "getprotobyname() (in module socket)": [
      [
        336,
        "socket.getprotobyname"
      ]
    ],
    "getservbyname() (in module socket)": [
      [
        336,
        "socket.getservbyname"
      ]
    ],
    "getservbyport() (in module socket)": [
      [
        336,
        "socket.getservbyport"
      ]
    ],
    "getsockname() (socket.socket method)": [
      [
        336,
        "socket.socket.getsockname"
      ]
    ],
    "getsockopt() (socket.socket method)": [
      [
        336,
        "socket.socket.getsockopt"
      ]
    ],
    "gettimeout() (socket.socket method)": [
      [
        336,
        "socket.socket.gettimeout"
      ]
    ],
    "has_dualstack_ipv6() (in module socket)": [
      [
        336,
        "socket.has_dualstack_ipv6"
      ]
    ],
    "has_ipv6 (in module socket)": [
      [
        336,
        "socket.has_ipv6"
      ]
    ],
    "herror": [
      [
        336,
        "socket.herror"
      ]
    ],
    "htonl() (in module socket)": [
      [
        336,
        "socket.htonl"
      ]
    ],
    "htons() (in module socket)": [
      [
        336,
        "socket.htons"
      ]
    ],
    "if_indextoname() (in module socket)": [
      [
        336,
        "socket.if_indextoname"
      ]
    ],
    "if_nameindex() (in module socket)": [
      [
        336,
        "socket.if_nameindex"
      ]
    ],
    "if_nametoindex() (in module socket)": [
      [
        336,
        "socket.if_nametoindex"
      ]
    ],
    "inet_aton() (in module socket)": [
      [
        336,
        "socket.inet_aton"
      ]
    ],
    "inet_ntoa() (in module socket)": [
      [
        336,
        "socket.inet_ntoa"
      ]
    ],
    "inet_ntop() (in module socket)": [
      [
        336,
        "socket.inet_ntop"
      ]
    ],
    "inet_pton() (in module socket)": [
      [
        336,
        "socket.inet_pton"
      ]
    ],
    "ioctl() (socket.socket method)": [
      [
        336,
        "socket.socket.ioctl"
      ]
    ],
    "listen() (socket.socket method)": [
      [
        336,
        "socket.socket.listen"
      ]
    ],
    "makefile() (socket.socket method)": [
      [
        336,
        "socket.socket.makefile"
      ]
    ],
    "ntohl() (in module socket)": [
      [
        336,
        "socket.ntohl"
      ]
    ],
    "ntohs() (in module socket)": [
      [
        336,
        "socket.ntohs"
      ]
    ],
    "proto (socket.socket attribute)": [
      [
        336,
        "socket.socket.proto"
      ]
    ],
    "recv() (socket.socket method)": [
      [
        336,
        "socket.socket.recv"
      ]
    ],
    "recv_fds() (in module socket)": [
      [
        336,
        "socket.recv_fds"
      ]
    ],
    "recv_into() (socket.socket method)": [
      [
        336,
        "socket.socket.recv_into"
      ]
    ],
    "recvfrom() (socket.socket method)": [
      [
        336,
        "socket.socket.recvfrom"
      ]
    ],
    "recvfrom_into() (socket.socket method)": [
      [
        336,
        "socket.socket.recvfrom_into"
      ]
    ],
    "recvmsg() (socket.socket method)": [
      [
        336,
        "socket.socket.recvmsg"
      ]
    ],
    "recvmsg_into() (socket.socket method)": [
      [
        336,
        "socket.socket.recvmsg_into"
      ]
    ],
    "send() (socket.socket method)": [
      [
        336,
        "socket.socket.send"
      ]
    ],
    "send_fds() (in module socket)": [
      [
        336,
        "socket.send_fds"
      ]
    ],
    "sendall() (socket.socket method)": [
      [
        336,
        "socket.socket.sendall"
      ]
    ],
    "sendfile() (socket.socket method)": [
      [
        336,
        "socket.socket.sendfile"
      ]
    ],
    "sendmsg() (socket.socket method)": [
      [
        336,
        "socket.socket.sendmsg"
      ]
    ],
    "sendmsg_afalg() (socket.socket method)": [
      [
        336,
        "socket.socket.sendmsg_afalg"
      ]
    ],
    "sendto() (socket.socket method)": [
      [
        336,
        "socket.socket.sendto"
      ]
    ],
    "set_inheritable() (socket.socket method)": [
      [
        336,
        "socket.socket.set_inheritable"
      ]
    ],
    "setblocking() (socket.socket method)": [
      [
        336,
        "socket.socket.setblocking"
      ]
    ],
    "setdefaulttimeout() (in module socket)": [
      [
        336,
        "socket.setdefaulttimeout"
      ]
    ],
    "sethostname() (in module socket)": [
      [
        336,
        "socket.sethostname"
      ]
    ],
    "setsockopt() (socket.socket method)": [
      [
        336,
        "socket.socket.setsockopt"
      ]
    ],
    "settimeout() (socket.socket method)": [
      [
        336,
        "socket.socket.settimeout"
      ]
    ],
    "share() (socket.socket method)": [
      [
        336,
        "socket.socket.share"
      ]
    ],
    "shutdown() (socket.socket method)": [
      [
        336,
        "socket.socket.shutdown"
      ]
    ],
    "socket (class in socket)": [
      [
        336,
        "socket.socket"
      ]
    ],
    "socketpair() (in module socket)": [
      [
        336,
        "socket.socketpair"
      ]
    ],
    "struct": [
      [
        336,
        "index-14"
      ],
      [
        346,
        "module-struct"
      ]
    ],
    "timeout": [
      [
        336,
        "socket.timeout"
      ]
    ],
    "type (socket.socket attribute)": [
      [
        336,
        "socket.socket.type"
      ]
    ],
    "baserequesthandler (class in socketserver)": [
      [
        337,
        "socketserver.BaseRequestHandler"
      ]
    ],
    "baseserver (class in socketserver)": [
      [
        337,
        "socketserver.BaseServer"
      ]
    ],
    "datagramrequesthandler (class in socketserver)": [
      [
        337,
        "socketserver.DatagramRequestHandler"
      ]
    ],
    "forkingmixin (class in socketserver)": [
      [
        337,
        "socketserver.ForkingMixIn"
      ]
    ],
    "forkingtcpserver (class in socketserver)": [
      [
        337,
        "socketserver.ForkingTCPServer"
      ]
    ],
    "forkingudpserver (class in socketserver)": [
      [
        337,
        "socketserver.ForkingUDPServer"
      ]
    ],
    "forkingunixdatagramserver (class in socketserver)": [
      [
        337,
        "socketserver.ForkingUnixDatagramServer"
      ]
    ],
    "forkingunixstreamserver (class in socketserver)": [
      [
        337,
        "socketserver.ForkingUnixStreamServer"
      ]
    ],
    "requesthandlerclass (socketserver.baseserver attribute)": [
      [
        337,
        "socketserver.BaseServer.RequestHandlerClass"
      ]
    ],
    "streamrequesthandler (class in socketserver)": [
      [
        337,
        "socketserver.StreamRequestHandler"
      ]
    ],
    "tcpserver (class in socketserver)": [
      [
        337,
        "socketserver.TCPServer"
      ]
    ],
    "threadingmixin (class in socketserver)": [
      [
        337,
        "socketserver.ThreadingMixIn"
      ]
    ],
    "threadingtcpserver (class in socketserver)": [
      [
        337,
        "socketserver.ThreadingTCPServer"
      ]
    ],
    "threadingudpserver (class in socketserver)": [
      [
        337,
        "socketserver.ThreadingUDPServer"
      ]
    ],
    "threadingunixdatagramserver (class in socketserver)": [
      [
        337,
        "socketserver.ThreadingUnixDatagramServer"
      ]
    ],
    "threadingunixstreamserver (class in socketserver)": [
      [
        337,
        "socketserver.ThreadingUnixStreamServer"
      ]
    ],
    "udpserver (class in socketserver)": [
      [
        337,
        "socketserver.UDPServer"
      ]
    ],
    "unixdatagramserver (class in socketserver)": [
      [
        337,
        "socketserver.UnixDatagramServer"
      ]
    ],
    "unixstreamserver (class in socketserver)": [
      [
        337,
        "socketserver.UnixStreamServer"
      ]
    ],
    "address_family (socketserver.baseserver attribute)": [
      [
        337,
        "socketserver.BaseServer.address_family"
      ]
    ],
    "allow_reuse_address (socketserver.baseserver attribute)": [
      [
        337,
        "socketserver.BaseServer.allow_reuse_address"
      ]
    ],
    "block_on_close (socketserver.threadingmixin attribute)": [
      [
        337,
        "socketserver.ThreadingMixIn.block_on_close"
      ]
    ],
    "client_address (socketserver.baserequesthandler attribute)": [
      [
        337,
        "socketserver.BaseRequestHandler.client_address"
      ]
    ],
    "daemon_threads (socketserver.threadingmixin attribute)": [
      [
        337,
        "socketserver.ThreadingMixIn.daemon_threads"
      ]
    ],
    "fileno() (socketserver.baseserver method)": [
      [
        337,
        "socketserver.BaseServer.fileno"
      ]
    ],
    "finish() (socketserver.baserequesthandler method)": [
      [
        337,
        "socketserver.BaseRequestHandler.finish"
      ]
    ],
    "finish_request() (socketserver.baseserver method)": [
      [
        337,
        "socketserver.BaseServer.finish_request"
      ]
    ],
    "get_request() (socketserver.baseserver method)": [
      [
        337,
        "socketserver.BaseServer.get_request"
      ]
    ],
    "handle() (socketserver.baserequesthandler method)": [
      [
        337,
        "socketserver.BaseRequestHandler.handle"
      ]
    ],
    "handle_error() (socketserver.baseserver method)": [
      [
        337,
        "socketserver.BaseServer.handle_error"
      ]
    ],
    "handle_request() (socketserver.baseserver method)": [
      [
        337,
        "socketserver.BaseServer.handle_request"
      ]
    ],
    "handle_timeout() (socketserver.baseserver method)": [
      [
        337,
        "socketserver.BaseServer.handle_timeout"
      ]
    ],
    "process_request() (socketserver.baseserver method)": [
      [
        337,
        "socketserver.BaseServer.process_request"
      ]
    ],
    "request (socketserver.baserequesthandler attribute)": [
      [
        337,
        "socketserver.BaseRequestHandler.request"
      ]
    ],
    "request_queue_size (socketserver.baseserver attribute)": [
      [
        337,
        "socketserver.BaseServer.request_queue_size"
      ]
    ],
    "rfile (socketserver.datagramrequesthandler attribute)": [
      [
        337,
        "socketserver.DatagramRequestHandler.rfile"
      ]
    ],
    "serve_forever() (socketserver.baseserver method)": [
      [
        337,
        "socketserver.BaseServer.serve_forever"
      ]
    ],
    "server (socketserver.baserequesthandler attribute)": [
      [
        337,
        "socketserver.BaseRequestHandler.server"
      ]
    ],
    "server_activate() (socketserver.baseserver method)": [
      [
        337,
        "socketserver.BaseServer.server_activate"
      ]
    ],
    "server_address (socketserver.baseserver attribute)": [
      [
        337,
        "socketserver.BaseServer.server_address"
      ]
    ],
    "server_bind() (socketserver.baseserver method)": [
      [
        337,
        "socketserver.BaseServer.server_bind"
      ]
    ],
    "server_close() (socketserver.baseserver method)": [
      [
        337,
        "socketserver.BaseServer.server_close"
      ]
    ],
    "service_actions() (socketserver.baseserver method)": [
      [
        337,
        "socketserver.BaseServer.service_actions"
      ]
    ],
    "setup() (socketserver.baserequesthandler method)": [
      [
        337,
        "socketserver.BaseRequestHandler.setup"
      ]
    ],
    "shutdown() (socketserver.baseserver method)": [
      [
        337,
        "socketserver.BaseServer.shutdown"
      ]
    ],
    "socket (socketserver.baseserver attribute)": [
      [
        337,
        "socketserver.BaseServer.socket"
      ]
    ],
    "socket_type (socketserver.baseserver attribute)": [
      [
        337,
        "socketserver.BaseServer.socket_type"
      ]
    ],
    "socketserver": [
      [
        337,
        "module-socketserver"
      ]
    ],
    "timeout (socketserver.baseserver attribute)": [
      [
        337,
        "socketserver.BaseServer.timeout"
      ]
    ],
    "verify_request() (socketserver.baseserver method)": [
      [
        337,
        "socketserver.BaseServer.verify_request"
      ]
    ],
    "wfile (socketserver.datagramrequesthandler attribute)": [
      [
        337,
        "socketserver.DatagramRequestHandler.wfile"
      ]
    ],
    "pep 594#spwd": [
      [
        338,
        "index-0"
      ]
    ],
    "getspall() (in module spwd)": [
      [
        338,
        "spwd.getspall"
      ]
    ],
    "getspnam() (in module spwd)": [
      [
        338,
        "spwd.getspnam"
      ]
    ],
    "spwd": [
      [
        338,
        "module-spwd"
      ]
    ],
    "--version": [
      [
        339,
        "cmdoption-python-m-sqlite3-h-v-filename-sql-v"
      ],
      [
        379,
        "cmdoption-trace-version"
      ],
      [
        454,
        "cmdoption-version"
      ]
    ],
    "-v": [
      [
        339,
        "cmdoption-python-m-sqlite3-h-v-filename-sql-v"
      ],
      [
        357,
        "cmdoption-tarfile-v"
      ],
      [
        366,
        "cmdoption-timeit-v"
      ],
      [
        387,
        "cmdoption-unittest-discover-v"
      ],
      [
        454,
        "cmdoption-V"
      ],
      [
        454,
        "cmdoption-v"
      ]
    ],
    "blob (class in sqlite3)": [
      [
        339,
        "sqlite3.Blob"
      ]
    ],
    "connection (class in sqlite3)": [
      [
        339,
        "sqlite3.Connection"
      ]
    ],
    "cursor (class in sqlite3)": [
      [
        339,
        "sqlite3.Cursor"
      ]
    ],
    "dataerror": [
      [
        339,
        "sqlite3.DataError"
      ]
    ],
    "databaseerror": [
      [
        339,
        "sqlite3.DatabaseError"
      ]
    ],
    "integrityerror": [
      [
        339,
        "sqlite3.IntegrityError"
      ]
    ],
    "interfaceerror": [
      [
        339,
        "sqlite3.InterfaceError"
      ]
    ],
    "internalerror": [
      [
        339,
        "sqlite3.InternalError"
      ]
    ],
    "legacy_transaction_control (in module sqlite3)": [
      [
        339,
        "sqlite3.LEGACY_TRANSACTION_CONTROL"
      ]
    ],
    "notsupportederror": [
      [
        339,
        "sqlite3.NotSupportedError"
      ]
    ],
    "operationalerror": [
      [
        339,
        "sqlite3.OperationalError"
      ]
    ],
    "parse_colnames (in module sqlite3)": [
      [
        339,
        "sqlite3.PARSE_COLNAMES"
      ]
    ],
    "parse_decltypes (in module sqlite3)": [
      [
        339,
        "sqlite3.PARSE_DECLTYPES"
      ]
    ],
    "pep 246": [
      [
        339,
        "index-8"
      ],
      [
        482,
        "index-48"
      ]
    ],
    "pep 249": [
      [
        339,
        "index-0"
      ],
      [
        339,
        "index-1"
      ],
      [
        339,
        "index-10"
      ],
      [
        339,
        "index-11"
      ],
      [
        339,
        "index-12"
      ],
      [
        339,
        "index-2"
      ],
      [
        339,
        "index-3"
      ],
      [
        339,
        "index-4"
      ],
      [
        339,
        "index-5"
      ],
      [
        339,
        "index-9"
      ],
      [
        466,
        "index-24"
      ],
      [
        466,
        "index-25"
      ],
      [
        473,
        "index-24"
      ],
      [
        482,
        "index-39"
      ],
      [
        482,
        "index-71"
      ]
    ],
    "prepareprotocol (class in sqlite3)": [
      [
        339,
        "sqlite3.PrepareProtocol"
      ]
    ],
    "programmingerror": [
      [
        339,
        "sqlite3.ProgrammingError"
      ]
    ],
    "row (class in sqlite3)": [
      [
        339,
        "sqlite3.Row"
      ]
    ],
    "sqlite_dbconfig_defensive (in module sqlite3)": [
      [
        339,
        "sqlite3.SQLITE_DBCONFIG_DEFENSIVE"
      ]
    ],
    "sqlite_dbconfig_dqs_ddl (in module sqlite3)": [
      [
        339,
        "sqlite3.SQLITE_DBCONFIG_DQS_DDL"
      ]
    ],
    "sqlite_dbconfig_dqs_dml (in module sqlite3)": [
      [
        339,
        "sqlite3.SQLITE_DBCONFIG_DQS_DML"
      ]
    ],
    "sqlite_dbconfig_enable_fkey (in module sqlite3)": [
      [
        339,
        "sqlite3.SQLITE_DBCONFIG_ENABLE_FKEY"
      ]
    ],
    "sqlite_dbconfig_enable_fts3_tokenizer (in module sqlite3)": [
      [
        339,
        "sqlite3.SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER"
      ]
    ],
    "sqlite_dbconfig_enable_load_extension (in module sqlite3)": [
      [
        339,
        "sqlite3.SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION"
      ]
    ],
    "sqlite_dbconfig_enable_qpsg (in module sqlite3)": [
      [
        339,
        "sqlite3.SQLITE_DBCONFIG_ENABLE_QPSG"
      ]
    ],
    "sqlite_dbconfig_enable_trigger (in module sqlite3)": [
      [
        339,
        "sqlite3.SQLITE_DBCONFIG_ENABLE_TRIGGER"
      ]
    ],
    "sqlite_dbconfig_enable_view (in module sqlite3)": [
      [
        339,
        "sqlite3.SQLITE_DBCONFIG_ENABLE_VIEW"
      ]
    ],
    "sqlite_dbconfig_legacy_alter_table (in module sqlite3)": [
      [
        339,
        "sqlite3.SQLITE_DBCONFIG_LEGACY_ALTER_TABLE"
      ]
    ],
    "sqlite_dbconfig_legacy_file_format (in module sqlite3)": [
      [
        339,
        "sqlite3.SQLITE_DBCONFIG_LEGACY_FILE_FORMAT"
      ]
    ],
    "sqlite_dbconfig_no_ckpt_on_close (in module sqlite3)": [
      [
        339,
        "sqlite3.SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE"
      ]
    ],
    "sqlite_dbconfig_reset_database (in module sqlite3)": [
      [
        339,
        "sqlite3.SQLITE_DBCONFIG_RESET_DATABASE"
      ]
    ],
    "sqlite_dbconfig_trigger_eqp (in module sqlite3)": [
      [
        339,
        "sqlite3.SQLITE_DBCONFIG_TRIGGER_EQP"
      ]
    ],
    "sqlite_dbconfig_trusted_schema (in module sqlite3)": [
      [
        339,
        "sqlite3.SQLITE_DBCONFIG_TRUSTED_SCHEMA"
      ]
    ],
    "sqlite_dbconfig_writable_schema (in module sqlite3)": [
      [
        339,
        "sqlite3.SQLITE_DBCONFIG_WRITABLE_SCHEMA"
      ]
    ],
    "sqlite_deny (in module sqlite3)": [
      [
        339,
        "sqlite3.SQLITE_DENY"
      ]
    ],
    "sqlite_ignore (in module sqlite3)": [
      [
        339,
        "sqlite3.SQLITE_IGNORE"
      ]
    ],
    "sqlite_ok (in module sqlite3)": [
      [
        339,
        "sqlite3.SQLITE_OK"
      ]
    ],
    "apilevel (in module sqlite3)": [
      [
        339,
        "sqlite3.apilevel"
      ]
    ],
    "arraysize (sqlite3.cursor attribute)": [
      [
        339,
        "sqlite3.Cursor.arraysize"
      ]
    ],
    "autocommit (sqlite3.connection attribute)": [
      [
        339,
        "sqlite3.Connection.autocommit"
      ]
    ],
    "backup() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.backup"
      ]
    ],
    "blobopen() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.blobopen"
      ]
    ],
    "close() (sqlite3.blob method)": [
      [
        339,
        "sqlite3.Blob.close"
      ]
    ],
    "close() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.close"
      ]
    ],
    "close() (sqlite3.cursor method)": [
      [
        339,
        "sqlite3.Cursor.close"
      ]
    ],
    "commit() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.commit"
      ]
    ],
    "complete_statement() (in module sqlite3)": [
      [
        339,
        "sqlite3.complete_statement"
      ]
    ],
    "connect() (in module sqlite3)": [
      [
        339,
        "sqlite3.connect"
      ]
    ],
    "connection (sqlite3.cursor attribute)": [
      [
        339,
        "sqlite3.Cursor.connection"
      ]
    ],
    "create_aggregate() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.create_aggregate"
      ]
    ],
    "create_collation() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.create_collation"
      ]
    ],
    "create_function() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.create_function"
      ]
    ],
    "create_window_function() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.create_window_function"
      ]
    ],
    "cursor() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.cursor"
      ]
    ],
    "description (sqlite3.cursor attribute)": [
      [
        339,
        "sqlite3.Cursor.description"
      ]
    ],
    "deserialize() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.deserialize"
      ]
    ],
    "enable_callback_tracebacks() (in module sqlite3)": [
      [
        339,
        "sqlite3.enable_callback_tracebacks"
      ]
    ],
    "enable_load_extension() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.enable_load_extension"
      ]
    ],
    "execute() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.execute"
      ]
    ],
    "execute() (sqlite3.cursor method)": [
      [
        339,
        "sqlite3.Cursor.execute"
      ]
    ],
    "executemany() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.executemany"
      ]
    ],
    "executemany() (sqlite3.cursor method)": [
      [
        339,
        "sqlite3.Cursor.executemany"
      ]
    ],
    "executescript() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.executescript"
      ]
    ],
    "executescript() (sqlite3.cursor method)": [
      [
        339,
        "sqlite3.Cursor.executescript"
      ]
    ],
    "fetchall() (sqlite3.cursor method)": [
      [
        339,
        "sqlite3.Cursor.fetchall"
      ]
    ],
    "fetchmany() (sqlite3.cursor method)": [
      [
        339,
        "sqlite3.Cursor.fetchmany"
      ]
    ],
    "fetchone() (sqlite3.cursor method)": [
      [
        339,
        "sqlite3.Cursor.fetchone"
      ]
    ],
    "getconfig() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.getconfig"
      ]
    ],
    "getlimit() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.getlimit"
      ]
    ],
    "in sql statements": [
      [
        339,
        "index-6"
      ],
      [
        339,
        "index-7"
      ]
    ],
    "in_transaction (sqlite3.connection attribute)": [
      [
        339,
        "sqlite3.Connection.in_transaction"
      ]
    ],
    "interrupt() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.interrupt"
      ]
    ],
    "isolation_level (sqlite3.connection attribute)": [
      [
        339,
        "sqlite3.Connection.isolation_level"
      ]
    ],
    "iterdump() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.iterdump"
      ]
    ],
    "keys() (sqlite3.row method)": [
      [
        339,
        "sqlite3.Row.keys"
      ]
    ],
    "lastrowid (sqlite3.cursor attribute)": [
      [
        339,
        "sqlite3.Cursor.lastrowid"
      ]
    ],
    "load_extension() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.load_extension"
      ]
    ],
    "paramstyle (in module sqlite3)": [
      [
        339,
        "sqlite3.paramstyle"
      ]
    ],
    "python--m-sqlite3-[-h]-[-v]-[filename]-[sql] command line option": [
      [
        339,
        "cmdoption-python-m-sqlite3-h-v-filename-sql-h"
      ],
      [
        339,
        "cmdoption-python-m-sqlite3-h-v-filename-sql-v"
      ]
    ],
    "read() (sqlite3.blob method)": [
      [
        339,
        "sqlite3.Blob.read"
      ]
    ],
    "register_adapter() (in module sqlite3)": [
      [
        339,
        "sqlite3.register_adapter"
      ]
    ],
    "register_converter() (in module sqlite3)": [
      [
        339,
        "sqlite3.register_converter"
      ]
    ],
    "rollback() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.rollback"
      ]
    ],
    "row_factory (sqlite3.connection attribute)": [
      [
        339,
        "sqlite3.Connection.row_factory"
      ]
    ],
    "row_factory (sqlite3.cursor attribute)": [
      [
        339,
        "sqlite3.Cursor.row_factory"
      ]
    ],
    "rowcount (sqlite3.cursor attribute)": [
      [
        339,
        "sqlite3.Cursor.rowcount"
      ]
    ],
    "seek() (sqlite3.blob method)": [
      [
        339,
        "sqlite3.Blob.seek"
      ]
    ],
    "serialize() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.serialize"
      ]
    ],
    "set_authorizer() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.set_authorizer"
      ]
    ],
    "set_progress_handler() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.set_progress_handler"
      ]
    ],
    "set_trace_callback() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.set_trace_callback"
      ]
    ],
    "setconfig() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.setconfig"
      ]
    ],
    "setinputsizes() (sqlite3.cursor method)": [
      [
        339,
        "sqlite3.Cursor.setinputsizes"
      ]
    ],
    "setlimit() (sqlite3.connection method)": [
      [
        339,
        "sqlite3.Connection.setlimit"
      ]
    ],
    "setoutputsize() (sqlite3.cursor method)": [
      [
        339,
        "sqlite3.Cursor.setoutputsize"
      ]
    ],
    "sqlite3": [
      [
        339,
        "module-sqlite3"
      ]
    ],
    "sqlite_errorcode (sqlite3.error attribute)": [
      [
        339,
        "sqlite3.Error.sqlite_errorcode"
      ]
    ],
    "sqlite_errorname (sqlite3.error attribute)": [
      [
        339,
        "sqlite3.Error.sqlite_errorname"
      ]
    ],
    "sqlite_version (in module sqlite3)": [
      [
        339,
        "sqlite3.sqlite_version"
      ]
    ],
    "sqlite_version_info (in module sqlite3)": [
      [
        339,
        "sqlite3.sqlite_version_info"
      ]
    ],
    "tell() (sqlite3.blob method)": [
      [
        339,
        "sqlite3.Blob.tell"
      ]
    ],
    "text_factory (sqlite3.connection attribute)": [
      [
        339,
        "sqlite3.Connection.text_factory"
      ]
    ],
    "threadsafety (in module sqlite3)": [
      [
        339,
        "sqlite3.threadsafety"
      ]
    ],
    "total_changes (sqlite3.connection attribute)": [
      [
        339,
        "sqlite3.Connection.total_changes"
      ]
    ],
    "version (in module sqlite3)": [
      [
        339,
        "sqlite3.version"
      ]
    ],
    "version_info (in module sqlite3)": [
      [
        339,
        "sqlite3.version_info"
      ]
    ],
    "write() (sqlite3.blob method)": [
      [
        339,
        "sqlite3.Blob.write"
      ]
    ],
    "(use in module ssl)": [
      [
        340,
        "index-0"
      ]
    ],
    "alert_description_handshake_failure (in module ssl)": [
      [
        340,
        "ssl.ALERT_DESCRIPTION_HANDSHAKE_FAILURE"
      ]
    ],
    "alert_description_internal_error (in module ssl)": [
      [
        340,
        "ssl.ALERT_DESCRIPTION_INTERNAL_ERROR"
      ]
    ],
    "alertdescription (class in ssl)": [
      [
        340,
        "ssl.AlertDescription"
      ]
    ],
    "cert_none (in module ssl)": [
      [
        340,
        "ssl.CERT_NONE"
      ]
    ],
    "cert_optional (in module ssl)": [
      [
        340,
        "ssl.CERT_OPTIONAL"
      ]
    ],
    "cert_required (in module ssl)": [
      [
        340,
        "ssl.CERT_REQUIRED"
      ]
    ],
    "channel_binding_types (in module ssl)": [
      [
        340,
        "ssl.CHANNEL_BINDING_TYPES"
      ]
    ],
    "certificateerror": [
      [
        340,
        "ssl.CertificateError"
      ]
    ],
    "der_cert_to_pem_cert() (in module ssl)": [
      [
        340,
        "ssl.DER_cert_to_PEM_cert"
      ]
    ],
    "has_alpn (in module ssl)": [
      [
        340,
        "ssl.HAS_ALPN"
      ]
    ],
    "has_ecdh (in module ssl)": [
      [
        340,
        "ssl.HAS_ECDH"
      ]
    ],
    "has_never_check_common_name (in module ssl)": [
      [
        340,
        "ssl.HAS_NEVER_CHECK_COMMON_NAME"
      ]
    ],
    "has_npn (in module ssl)": [
      [
        340,
        "ssl.HAS_NPN"
      ]
    ],
    "has_sni (in module ssl)": [
      [
        340,
        "ssl.HAS_SNI"
      ]
    ],
    "has_sslv2 (in module ssl)": [
      [
        340,
        "ssl.HAS_SSLv2"
      ]
    ],
    "has_sslv3 (in module ssl)": [
      [
        340,
        "ssl.HAS_SSLv3"
      ]
    ],
    "has_tlsv1 (in module ssl)": [
      [
        340,
        "ssl.HAS_TLSv1"
      ]
    ],
    "has_tlsv1_1 (in module ssl)": [
      [
        340,
        "ssl.HAS_TLSv1_1"
      ]
    ],
    "has_tlsv1_2 (in module ssl)": [
      [
        340,
        "ssl.HAS_TLSv1_2"
      ]
    ],
    "has_tlsv1_3 (in module ssl)": [
      [
        340,
        "ssl.HAS_TLSv1_3"
      ]
    ],
    "maximum_supported (ssl.tlsversion attribute)": [
      [
        340,
        "ssl.TLSVersion.MAXIMUM_SUPPORTED"
      ]
    ],
    "minimum_supported (ssl.tlsversion attribute)": [
      [
        340,
        "ssl.TLSVersion.MINIMUM_SUPPORTED"
      ]
    ],
    "memorybio (class in ssl)": [
      [
        340,
        "ssl.MemoryBIO"
      ]
    ],
    "openssl_version (in module ssl)": [
      [
        340,
        "ssl.OPENSSL_VERSION"
      ]
    ],
    "openssl_version_info (in module ssl)": [
      [
        340,
        "ssl.OPENSSL_VERSION_INFO"
      ]
    ],
    "openssl_version_number (in module ssl)": [
      [
        340,
        "ssl.OPENSSL_VERSION_NUMBER"
      ]
    ],
    "op_all (in module ssl)": [
      [
        340,
        "ssl.OP_ALL"
      ]
    ],
    "op_cipher_server_preference (in module ssl)": [
      [
        340,
        "ssl.OP_CIPHER_SERVER_PREFERENCE"
      ]
    ],
    "op_enable_ktls (in module ssl)": [
      [
        340,
        "ssl.OP_ENABLE_KTLS"
      ]
    ],
    "op_enable_middlebox_compat (in module ssl)": [
      [
        340,
        "ssl.OP_ENABLE_MIDDLEBOX_COMPAT"
      ]
    ],
    "op_ignore_unexpected_eof (in module ssl)": [
      [
        340,
        "ssl.OP_IGNORE_UNEXPECTED_EOF"
      ]
    ],
    "op_legacy_server_connect (in module ssl)": [
      [
        340,
        "ssl.OP_LEGACY_SERVER_CONNECT"
      ]
    ],
    "op_no_compression (in module ssl)": [
      [
        340,
        "ssl.OP_NO_COMPRESSION"
      ]
    ],
    "op_no_renegotiation (in module ssl)": [
      [
        340,
        "ssl.OP_NO_RENEGOTIATION"
      ]
    ],
    "op_no_sslv2 (in module ssl)": [
      [
        340,
        "ssl.OP_NO_SSLv2"
      ]
    ],
    "op_no_sslv3 (in module ssl)": [
      [
        340,
        "ssl.OP_NO_SSLv3"
      ]
    ],
    "op_no_ticket (in module ssl)": [
      [
        340,
        "ssl.OP_NO_TICKET"
      ]
    ],
    "op_no_tlsv1 (in module ssl)": [
      [
        340,
        "ssl.OP_NO_TLSv1"
      ]
    ],
    "op_no_tlsv1_1 (in module ssl)": [
      [
        340,
        "ssl.OP_NO_TLSv1_1"
      ]
    ],
    "op_no_tlsv1_2 (in module ssl)": [
      [
        340,
        "ssl.OP_NO_TLSv1_2"
      ]
    ],
    "op_no_tlsv1_3 (in module ssl)": [
      [
        340,
        "ssl.OP_NO_TLSv1_3"
      ]
    ],
    "op_single_dh_use (in module ssl)": [
      [
        340,
        "ssl.OP_SINGLE_DH_USE"
      ]
    ],
    "op_single_ecdh_use (in module ssl)": [
      [
        340,
        "ssl.OP_SINGLE_ECDH_USE"
      ]
    ],
    "options (class in ssl)": [
      [
        340,
        "ssl.Options"
      ]
    ],
    "pem_cert_to_der_cert() (in module ssl)": [
      [
        340,
        "ssl.PEM_cert_to_DER_cert"
      ]
    ],
    "pep 644": [
      [
        340,
        "index-2"
      ],
      [
        471,
        "index-29"
      ],
      [
        471,
        "index-30"
      ],
      [
        471,
        "index-35"
      ],
      [
        471,
        "index-9"
      ],
      [
        473,
        "index-34"
      ],
      [
        482,
        "index-101"
      ],
      [
        482,
        "index-45"
      ]
    ],
    "protocol_sslv23 (in module ssl)": [
      [
        340,
        "ssl.PROTOCOL_SSLv23"
      ]
    ],
    "protocol_sslv3 (in module ssl)": [
      [
        340,
        "ssl.PROTOCOL_SSLv3"
      ]
    ],
    "protocol_tls (in module ssl)": [
      [
        340,
        "ssl.PROTOCOL_TLS"
      ]
    ],
    "protocol_tls_client (in module ssl)": [
      [
        340,
        "ssl.PROTOCOL_TLS_CLIENT"
      ]
    ],
    "protocol_tls_server (in module ssl)": [
      [
        340,
        "ssl.PROTOCOL_TLS_SERVER"
      ]
    ],
    "protocol_tlsv1 (in module ssl)": [
      [
        340,
        "ssl.PROTOCOL_TLSv1"
      ]
    ],
    "protocol_tlsv1_1 (in module ssl)": [
      [
        340,
        "ssl.PROTOCOL_TLSv1_1"
      ]
    ],
    "protocol_tlsv1_2 (in module ssl)": [
      [
        340,
        "ssl.PROTOCOL_TLSv1_2"
      ]
    ],
    "purpose.client_auth (in module ssl)": [
      [
        340,
        "ssl.Purpose.CLIENT_AUTH"
      ]
    ],
    "purpose.server_auth (in module ssl)": [
      [
        340,
        "ssl.Purpose.SERVER_AUTH"
      ]
    ],
    "rand_add() (in module ssl)": [
      [
        340,
        "ssl.RAND_add"
      ]
    ],
    "rand_bytes() (in module ssl)": [
      [
        340,
        "ssl.RAND_bytes"
      ]
    ],
    "rand_status() (in module ssl)": [
      [
        340,
        "ssl.RAND_status"
      ]
    ],
    "rfc 1422": [
      [
        340,
        "index-16"
      ],
      [
        340,
        "index-17"
      ]
    ],
    "rfc 1750": [
      [
        340,
        "index-5"
      ]
    ],
    "rfc 3280": [
      [
        340,
        "index-10"
      ]
    ],
    "rfc 4086": [
      [
        340,
        "index-18"
      ]
    ],
    "rfc 5246": [
      [
        340,
        "index-20"
      ],
      [
        340,
        "index-9"
      ]
    ],
    "rfc 5280": [
      [
        340,
        "index-19"
      ],
      [
        340,
        "index-6"
      ],
      [
        477,
        "index-41"
      ],
      [
        477,
        "index-51"
      ]
    ],
    "rfc 5929": [
      [
        340,
        "index-11"
      ]
    ],
    "rfc 6066": [
      [
        340,
        "index-13"
      ],
      [
        340,
        "index-21"
      ],
      [
        340,
        "index-8"
      ]
    ],
    "rfc 7301": [
      [
        340,
        "index-12"
      ],
      [
        340,
        "index-7"
      ],
      [
        477,
        "index-40"
      ]
    ],
    "rfc 7525": [
      [
        340,
        "index-22"
      ]
    ],
    "ssl": [
      [
        340,
        "index-1"
      ],
      [
        340,
        "module-ssl"
      ]
    ],
    "sslcertverificationerror": [
      [
        340,
        "ssl.SSLCertVerificationError"
      ]
    ],
    "sslcontext (class in ssl)": [
      [
        340,
        "ssl.SSLContext"
      ]
    ],
    "ssleoferror": [
      [
        340,
        "ssl.SSLEOFError"
      ]
    ],
    "sslerror": [
      [
        340,
        "ssl.SSLError"
      ]
    ],
    "sslerrornumber (class in ssl)": [
      [
        340,
        "ssl.SSLErrorNumber"
      ]
    ],
    "sslkeylogfile": [
      [
        340,
        "index-3"
      ],
      [
        340,
        "index-4"
      ]
    ],
    "sslobject (class in ssl)": [
      [
        340,
        "ssl.SSLObject"
      ]
    ],
    "sslsession (class in ssl)": [
      [
        340,
        "ssl.SSLSession"
      ]
    ],
    "sslsocket (class in ssl)": [
      [
        340,
        "ssl.SSLSocket"
      ]
    ],
    "sslsyscallerror": [
      [
        340,
        "ssl.SSLSyscallError"
      ]
    ],
    "sslwantreaderror": [
      [
        340,
        "ssl.SSLWantReadError"
      ]
    ],
    "sslwantwriteerror": [
      [
        340,
        "ssl.SSLWantWriteError"
      ]
    ],
    "sslzeroreturnerror": [
      [
        340,
        "ssl.SSLZeroReturnError"
      ]
    ],
    "sslv3 (ssl.tlsversion attribute)": [
      [
        340,
        "ssl.TLSVersion.SSLv3"
      ]
    ],
    "secure sockets layer": [
      [
        340,
        "index-1"
      ]
    ],
    "tls": [
      [
        340,
        "index-1"
      ]
    ],
    "tlsversion (class in ssl)": [
      [
        340,
        "ssl.TLSVersion"
      ]
    ],
    "tlsv1 (ssl.tlsversion attribute)": [
      [
        340,
        "ssl.TLSVersion.TLSv1"
      ]
    ],
    "tlsv1_1 (ssl.tlsversion attribute)": [
      [
        340,
        "ssl.TLSVersion.TLSv1_1"
      ]
    ],
    "tlsv1_2 (ssl.tlsversion attribute)": [
      [
        340,
        "ssl.TLSVersion.TLSv1_2"
      ]
    ],
    "tlsv1_3 (ssl.tlsversion attribute)": [
      [
        340,
        "ssl.TLSVersion.TLSv1_3"
      ]
    ],
    "transport layer security": [
      [
        340,
        "index-1"
      ]
    ],
    "verify_allow_proxy_certs (in module ssl)": [
      [
        340,
        "ssl.VERIFY_ALLOW_PROXY_CERTS"
      ]
    ],
    "verify_crl_check_chain (in module ssl)": [
      [
        340,
        "ssl.VERIFY_CRL_CHECK_CHAIN"
      ]
    ],
    "verify_crl_check_leaf (in module ssl)": [
      [
        340,
        "ssl.VERIFY_CRL_CHECK_LEAF"
      ]
    ],
    "verify_default (in module ssl)": [
      [
        340,
        "ssl.VERIFY_DEFAULT"
      ]
    ],
    "verify_x509_partial_chain (in module ssl)": [
      [
        340,
        "ssl.VERIFY_X509_PARTIAL_CHAIN"
      ]
    ],
    "verify_x509_strict (in module ssl)": [
      [
        340,
        "ssl.VERIFY_X509_STRICT"
      ]
    ],
    "verify_x509_trusted_first (in module ssl)": [
      [
        340,
        "ssl.VERIFY_X509_TRUSTED_FIRST"
      ]
    ],
    "verifyflags (class in ssl)": [
      [
        340,
        "ssl.VerifyFlags"
      ]
    ],
    "verifymode (class in ssl)": [
      [
        340,
        "ssl.VerifyMode"
      ]
    ],
    "x509 certificate": [
      [
        340,
        "index-15"
      ]
    ],
    "cert_store_stats() (ssl.sslcontext method)": [
      [
        340,
        "ssl.SSLContext.cert_store_stats"
      ]
    ],
    "cert_time_to_seconds() (in module ssl)": [
      [
        340,
        "ssl.cert_time_to_seconds"
      ]
    ],
    "certificates": [
      [
        340,
        "index-14"
      ]
    ],
    "check_hostname (ssl.sslcontext attribute)": [
      [
        340,
        "ssl.SSLContext.check_hostname"
      ]
    ],
    "cipher() (ssl.sslsocket method)": [
      [
        340,
        "ssl.SSLSocket.cipher"
      ]
    ],
    "compression() (ssl.sslsocket method)": [
      [
        340,
        "ssl.SSLSocket.compression"
      ]
    ],
    "context (ssl.sslsocket attribute)": [
      [
        340,
        "ssl.SSLSocket.context"
      ]
    ],
    "create_default_context() (in module ssl)": [
      [
        340,
        "ssl.create_default_context"
      ]
    ],
    "do_handshake() (ssl.sslsocket method)": [
      [
        340,
        "ssl.SSLSocket.do_handshake"
      ]
    ],
    "enum_certificates() (in module ssl)": [
      [
        340,
        "ssl.enum_certificates"
      ]
    ],
    "enum_crls() (in module ssl)": [
      [
        340,
        "ssl.enum_crls"
      ]
    ],
    "eof (ssl.memorybio attribute)": [
      [
        340,
        "ssl.MemoryBIO.eof"
      ]
    ],
    "get_ca_certs() (ssl.sslcontext method)": [
      [
        340,
        "ssl.SSLContext.get_ca_certs"
      ]
    ],
    "get_channel_binding() (ssl.sslsocket method)": [
      [
        340,
        "ssl.SSLSocket.get_channel_binding"
      ]
    ],
    "get_ciphers() (ssl.sslcontext method)": [
      [
        340,
        "ssl.SSLContext.get_ciphers"
      ]
    ],
    "get_default_verify_paths() (in module ssl)": [
      [
        340,
        "ssl.get_default_verify_paths"
      ]
    ],
    "get_server_certificate() (in module ssl)": [
      [
        340,
        "ssl.get_server_certificate"
      ]
    ],
    "getpeercert() (ssl.sslsocket method)": [
      [
        340,
        "ssl.SSLSocket.getpeercert"
      ]
    ],
    "has_ticket (ssl.sslsession attribute)": [
      [
        340,
        "ssl.SSLSession.has_ticket"
      ]
    ],
    "hostname_checks_common_name (ssl.sslcontext attribute)": [
      [
        340,
        "ssl.SSLContext.hostname_checks_common_name"
      ]
    ],
    "id (ssl.sslsession attribute)": [
      [
        340,
        "ssl.SSLSession.id"
      ]
    ],
    "keylog_filename (ssl.sslcontext attribute)": [
      [
        340,
        "ssl.SSLContext.keylog_filename"
      ]
    ],
    "library (ssl.sslerror attribute)": [
      [
        340,
        "ssl.SSLError.library"
      ]
    ],
    "load_cert_chain() (ssl.sslcontext method)": [
      [
        340,
        "ssl.SSLContext.load_cert_chain"
      ]
    ],
    "load_default_certs() (ssl.sslcontext method)": [
      [
        340,
        "ssl.SSLContext.load_default_certs"
      ]
    ],
    "load_dh_params() (ssl.sslcontext method)": [
      [
        340,
        "ssl.SSLContext.load_dh_params"
      ]
    ],
    "load_verify_locations() (ssl.sslcontext method)": [
      [
        340,
        "ssl.SSLContext.load_verify_locations"
      ]
    ],
    "maximum_version (ssl.sslcontext attribute)": [
      [
        340,
        "ssl.SSLContext.maximum_version"
      ]
    ],
    "minimum_version (ssl.sslcontext attribute)": [
      [
        340,
        "ssl.SSLContext.minimum_version"
      ]
    ],
    "num_tickets (ssl.sslcontext attribute)": [
      [
        340,
        "ssl.SSLContext.num_tickets"
      ]
    ],
    "options (ssl.sslcontext attribute)": [
      [
        340,
        "ssl.SSLContext.options"
      ]
    ],
    "pending (ssl.memorybio attribute)": [
      [
        340,
        "ssl.MemoryBIO.pending"
      ]
    ],
    "pending() (ssl.sslsocket method)": [
      [
        340,
        "ssl.SSLSocket.pending"
      ]
    ],
    "post_handshake_auth (ssl.sslcontext attribute)": [
      [
        340,
        "ssl.SSLContext.post_handshake_auth"
      ]
    ],
    "protocol (ssl.sslcontext attribute)": [
      [
        340,
        "ssl.SSLContext.protocol"
      ]
    ],
    "read() (ssl.memorybio method)": [
      [
        340,
        "ssl.MemoryBIO.read"
      ]
    ],
    "read() (ssl.sslsocket method)": [
      [
        340,
        "ssl.SSLSocket.read"
      ]
    ],
    "reason (ssl.sslerror attribute)": [
      [
        340,
        "ssl.SSLError.reason"
      ]
    ],
    "security_level (ssl.sslcontext attribute)": [
      [
        340,
        "ssl.SSLContext.security_level"
      ]
    ],
    "selected_alpn_protocol() (ssl.sslsocket method)": [
      [
        340,
        "ssl.SSLSocket.selected_alpn_protocol"
      ]
    ],
    "selected_npn_protocol() (ssl.sslsocket method)": [
      [
        340,
        "ssl.SSLSocket.selected_npn_protocol"
      ]
    ],
    "server_hostname (ssl.sslsocket attribute)": [
      [
        340,
        "ssl.SSLSocket.server_hostname"
      ]
    ],
    "server_side (ssl.sslsocket attribute)": [
      [
        340,
        "ssl.SSLSocket.server_side"
      ]
    ],
    "session (ssl.sslsocket attribute)": [
      [
        340,
        "ssl.SSLSocket.session"
      ]
    ],
    "session_reused (ssl.sslsocket attribute)": [
      [
        340,
        "ssl.SSLSocket.session_reused"
      ]
    ],
    "session_stats() (ssl.sslcontext method)": [
      [
        340,
        "ssl.SSLContext.session_stats"
      ]
    ],
    "set_alpn_protocols() (ssl.sslcontext method)": [
      [
        340,
        "ssl.SSLContext.set_alpn_protocols"
      ]
    ],
    "set_ciphers() (ssl.sslcontext method)": [
      [
        340,
        "ssl.SSLContext.set_ciphers"
      ]
    ],
    "set_default_verify_paths() (ssl.sslcontext method)": [
      [
        340,
        "ssl.SSLContext.set_default_verify_paths"
      ]
    ],
    "set_ecdh_curve() (ssl.sslcontext method)": [
      [
        340,
        "ssl.SSLContext.set_ecdh_curve"
      ]
    ],
    "set_npn_protocols() (ssl.sslcontext method)": [
      [
        340,
        "ssl.SSLContext.set_npn_protocols"
      ]
    ],
    "set_servername_callback (ssl.sslcontext attribute)": [
      [
        340,
        "ssl.SSLContext.set_servername_callback"
      ]
    ],
    "shared_ciphers() (ssl.sslsocket method)": [
      [
        340,
        "ssl.SSLSocket.shared_ciphers"
      ]
    ],
    "sni_callback (ssl.sslcontext attribute)": [
      [
        340,
        "ssl.SSLContext.sni_callback"
      ]
    ],
    "sslobject_class (ssl.sslcontext attribute)": [
      [
        340,
        "ssl.SSLContext.sslobject_class"
      ]
    ],
    "sslsocket_class (ssl.sslcontext attribute)": [
      [
        340,
        "ssl.SSLContext.sslsocket_class"
      ]
    ],
    "ticket_lifetime_hint (ssl.sslsession attribute)": [
      [
        340,
        "ssl.SSLSession.ticket_lifetime_hint"
      ]
    ],
    "time (ssl.sslsession attribute)": [
      [
        340,
        "ssl.SSLSession.time"
      ]
    ],
    "timeout (ssl.sslsession attribute)": [
      [
        340,
        "ssl.SSLSession.timeout"
      ]
    ],
    "unwrap() (ssl.sslsocket method)": [
      [
        340,
        "ssl.SSLSocket.unwrap"
      ]
    ],
    "verify_client_post_handshake() (ssl.sslsocket method)": [
      [
        340,
        "ssl.SSLSocket.verify_client_post_handshake"
      ]
    ],
    "verify_code (ssl.sslcertverificationerror attribute)": [
      [
        340,
        "ssl.SSLCertVerificationError.verify_code"
      ]
    ],
    "verify_flags (ssl.sslcontext attribute)": [
      [
        340,
        "ssl.SSLContext.verify_flags"
      ]
    ],
    "verify_message (ssl.sslcertverificationerror attribute)": [
      [
        340,
        "ssl.SSLCertVerificationError.verify_message"
      ]
    ],
    "verify_mode (ssl.sslcontext attribute)": [
      [
        340,
        "ssl.SSLContext.verify_mode"
      ]
    ],
    "version() (ssl.sslsocket method)": [
      [
        340,
        "ssl.SSLSocket.version"
      ]
    ],
    "wrap_bio() (ssl.sslcontext method)": [
      [
        340,
        "ssl.SSLContext.wrap_bio"
      ]
    ],
    "wrap_socket() (ssl.sslcontext method)": [
      [
        340,
        "ssl.SSLContext.wrap_socket"
      ]
    ],
    "write() (ssl.memorybio method)": [
      [
        340,
        "ssl.MemoryBIO.write"
      ]
    ],
    "write() (ssl.sslsocket method)": [
      [
        340,
        "ssl.SSLSocket.write"
      ]
    ],
    "write_eof() (ssl.memorybio method)": [
      [
        340,
        "ssl.MemoryBIO.write_eof"
      ]
    ],
    "file_attribute_archive (in module stat)": [
      [
        341,
        "stat.FILE_ATTRIBUTE_ARCHIVE"
      ]
    ],
    "file_attribute_compressed (in module stat)": [
      [
        341,
        "stat.FILE_ATTRIBUTE_COMPRESSED"
      ]
    ],
    "file_attribute_device (in module stat)": [
      [
        341,
        "stat.FILE_ATTRIBUTE_DEVICE"
      ]
    ],
    "file_attribute_directory (in module stat)": [
      [
        341,
        "stat.FILE_ATTRIBUTE_DIRECTORY"
      ]
    ],
    "file_attribute_encrypted (in module stat)": [
      [
        341,
        "stat.FILE_ATTRIBUTE_ENCRYPTED"
      ]
    ],
    "file_attribute_hidden (in module stat)": [
      [
        341,
        "stat.FILE_ATTRIBUTE_HIDDEN"
      ]
    ],
    "file_attribute_integrity_stream (in module stat)": [
      [
        341,
        "stat.FILE_ATTRIBUTE_INTEGRITY_STREAM"
      ]
    ],
    "file_attribute_normal (in module stat)": [
      [
        341,
        "stat.FILE_ATTRIBUTE_NORMAL"
      ]
    ],
    "file_attribute_not_content_indexed (in module stat)": [
      [
        341,
        "stat.FILE_ATTRIBUTE_NOT_CONTENT_INDEXED"
      ]
    ],
    "file_attribute_no_scrub_data (in module stat)": [
      [
        341,
        "stat.FILE_ATTRIBUTE_NO_SCRUB_DATA"
      ]
    ],
    "file_attribute_offline (in module stat)": [
      [
        341,
        "stat.FILE_ATTRIBUTE_OFFLINE"
      ]
    ],
    "file_attribute_readonly (in module stat)": [
      [
        341,
        "stat.FILE_ATTRIBUTE_READONLY"
      ]
    ],
    "file_attribute_reparse_point (in module stat)": [
      [
        341,
        "stat.FILE_ATTRIBUTE_REPARSE_POINT"
      ]
    ],
    "file_attribute_sparse_file (in module stat)": [
      [
        341,
        "stat.FILE_ATTRIBUTE_SPARSE_FILE"
      ]
    ],
    "file_attribute_system (in module stat)": [
      [
        341,
        "stat.FILE_ATTRIBUTE_SYSTEM"
      ]
    ],
    "file_attribute_temporary (in module stat)": [
      [
        341,
        "stat.FILE_ATTRIBUTE_TEMPORARY"
      ]
    ],
    "file_attribute_virtual (in module stat)": [
      [
        341,
        "stat.FILE_ATTRIBUTE_VIRTUAL"
      ]
    ],
    "io_reparse_tag_appexeclink (in module stat)": [
      [
        341,
        "stat.IO_REPARSE_TAG_APPEXECLINK"
      ]
    ],
    "io_reparse_tag_mount_point (in module stat)": [
      [
        341,
        "stat.IO_REPARSE_TAG_MOUNT_POINT"
      ]
    ],
    "io_reparse_tag_symlink (in module stat)": [
      [
        341,
        "stat.IO_REPARSE_TAG_SYMLINK"
      ]
    ],
    "sf_append (in module stat)": [
      [
        341,
        "stat.SF_APPEND"
      ]
    ],
    "sf_archived (in module stat)": [
      [
        341,
        "stat.SF_ARCHIVED"
      ]
    ],
    "sf_immutable (in module stat)": [
      [
        341,
        "stat.SF_IMMUTABLE"
      ]
    ],
    "sf_nounlink (in module stat)": [
      [
        341,
        "stat.SF_NOUNLINK"
      ]
    ],
    "sf_snapshot (in module stat)": [
      [
        341,
        "stat.SF_SNAPSHOT"
      ]
    ],
    "st_atime (in module stat)": [
      [
        341,
        "stat.ST_ATIME"
      ]
    ],
    "st_ctime (in module stat)": [
      [
        341,
        "stat.ST_CTIME"
      ]
    ],
    "st_dev (in module stat)": [
      [
        341,
        "stat.ST_DEV"
      ]
    ],
    "st_gid (in module stat)": [
      [
        341,
        "stat.ST_GID"
      ]
    ],
    "st_ino (in module stat)": [
      [
        341,
        "stat.ST_INO"
      ]
    ],
    "st_mode (in module stat)": [
      [
        341,
        "stat.ST_MODE"
      ]
    ],
    "st_mtime (in module stat)": [
      [
        341,
        "stat.ST_MTIME"
      ]
    ],
    "st_nlink (in module stat)": [
      [
        341,
        "stat.ST_NLINK"
      ]
    ],
    "st_size (in module stat)": [
      [
        341,
        "stat.ST_SIZE"
      ]
    ],
    "st_uid (in module stat)": [
      [
        341,
        "stat.ST_UID"
      ]
    ],
    "s_enfmt (in module stat)": [
      [
        341,
        "stat.S_ENFMT"
      ]
    ],
    "s_iexec (in module stat)": [
      [
        341,
        "stat.S_IEXEC"
      ]
    ],
    "s_ifblk (in module stat)": [
      [
        341,
        "stat.S_IFBLK"
      ]
    ],
    "s_ifchr (in module stat)": [
      [
        341,
        "stat.S_IFCHR"
      ]
    ],
    "s_ifdir (in module stat)": [
      [
        341,
        "stat.S_IFDIR"
      ]
    ],
    "s_ifdoor (in module stat)": [
      [
        341,
        "stat.S_IFDOOR"
      ]
    ],
    "s_ififo (in module stat)": [
      [
        341,
        "stat.S_IFIFO"
      ]
    ],
    "s_iflnk (in module stat)": [
      [
        341,
        "stat.S_IFLNK"
      ]
    ],
    "s_ifmt() (in module stat)": [
      [
        341,
        "stat.S_IFMT"
      ]
    ],
    "s_ifport (in module stat)": [
      [
        341,
        "stat.S_IFPORT"
      ]
    ],
    "s_ifreg (in module stat)": [
      [
        341,
        "stat.S_IFREG"
      ]
    ],
    "s_ifsock (in module stat)": [
      [
        341,
        "stat.S_IFSOCK"
      ]
    ],
    "s_ifwht (in module stat)": [
      [
        341,
        "stat.S_IFWHT"
      ]
    ],
    "s_imode() (in module stat)": [
      [
        341,
        "stat.S_IMODE"
      ]
    ],
    "s_iread (in module stat)": [
      [
        341,
        "stat.S_IREAD"
      ]
    ],
    "s_irgrp (in module stat)": [
      [
        341,
        "stat.S_IRGRP"
      ]
    ],
    "s_iroth (in module stat)": [
      [
        341,
        "stat.S_IROTH"
      ]
    ],
    "s_irusr (in module stat)": [
      [
        341,
        "stat.S_IRUSR"
      ]
    ],
    "s_irwxg (in module stat)": [
      [
        341,
        "stat.S_IRWXG"
      ]
    ],
    "s_irwxo (in module stat)": [
      [
        341,
        "stat.S_IRWXO"
      ]
    ],
    "s_irwxu (in module stat)": [
      [
        341,
        "stat.S_IRWXU"
      ]
    ],
    "s_isblk() (in module stat)": [
      [
        341,
        "stat.S_ISBLK"
      ]
    ],
    "s_ischr() (in module stat)": [
      [
        341,
        "stat.S_ISCHR"
      ]
    ],
    "s_isdir() (in module stat)": [
      [
        341,
        "stat.S_ISDIR"
      ]
    ],
    "s_isdoor() (in module stat)": [
      [
        341,
        "stat.S_ISDOOR"
      ]
    ],
    "s_isfifo() (in module stat)": [
      [
        341,
        "stat.S_ISFIFO"
      ]
    ],
    "s_isgid (in module stat)": [
      [
        341,
        "stat.S_ISGID"
      ]
    ],
    "s_islnk() (in module stat)": [
      [
        341,
        "stat.S_ISLNK"
      ]
    ],
    "s_isport() (in module stat)": [
      [
        341,
        "stat.S_ISPORT"
      ]
    ],
    "s_isreg() (in module stat)": [
      [
        341,
        "stat.S_ISREG"
      ]
    ],
    "s_issock() (in module stat)": [
      [
        341,
        "stat.S_ISSOCK"
      ]
    ],
    "s_isuid (in module stat)": [
      [
        341,
        "stat.S_ISUID"
      ]
    ],
    "s_isvtx (in module stat)": [
      [
        341,
        "stat.S_ISVTX"
      ]
    ],
    "s_iswht() (in module stat)": [
      [
        341,
        "stat.S_ISWHT"
      ]
    ],
    "s_iwgrp (in module stat)": [
      [
        341,
        "stat.S_IWGRP"
      ]
    ],
    "s_iwoth (in module stat)": [
      [
        341,
        "stat.S_IWOTH"
      ]
    ],
    "s_iwrite (in module stat)": [
      [
        341,
        "stat.S_IWRITE"
      ]
    ],
    "s_iwusr (in module stat)": [
      [
        341,
        "stat.S_IWUSR"
      ]
    ],
    "s_ixgrp (in module stat)": [
      [
        341,
        "stat.S_IXGRP"
      ]
    ],
    "s_ixoth (in module stat)": [
      [
        341,
        "stat.S_IXOTH"
      ]
    ],
    "s_ixusr (in module stat)": [
      [
        341,
        "stat.S_IXUSR"
      ]
    ],
    "uf_append (in module stat)": [
      [
        341,
        "stat.UF_APPEND"
      ]
    ],
    "uf_compressed (in module stat)": [
      [
        341,
        "stat.UF_COMPRESSED"
      ]
    ],
    "uf_hidden (in module stat)": [
      [
        341,
        "stat.UF_HIDDEN"
      ]
    ],
    "uf_immutable (in module stat)": [
      [
        341,
        "stat.UF_IMMUTABLE"
      ]
    ],
    "uf_nodump (in module stat)": [
      [
        341,
        "stat.UF_NODUMP"
      ]
    ],
    "uf_nounlink (in module stat)": [
      [
        341,
        "stat.UF_NOUNLINK"
      ]
    ],
    "uf_opaque (in module stat)": [
      [
        341,
        "stat.UF_OPAQUE"
      ]
    ],
    "filemode() (in module stat)": [
      [
        341,
        "stat.filemode"
      ]
    ],
    "normaldist (class in statistics)": [
      [
        342,
        "statistics.NormalDist"
      ]
    ],
    "statisticserror": [
      [
        342,
        "statistics.StatisticsError"
      ]
    ],
    "cdf() (statistics.normaldist method)": [
      [
        342,
        "statistics.NormalDist.cdf"
      ]
    ],
    "correlation() (in module statistics)": [
      [
        342,
        "statistics.correlation"
      ]
    ],
    "covariance() (in module statistics)": [
      [
        342,
        "statistics.covariance"
      ]
    ],
    "fmean() (in module statistics)": [
      [
        342,
        "statistics.fmean"
      ]
    ],
    "from_samples() (statistics.normaldist class method)": [
      [
        342,
        "statistics.NormalDist.from_samples"
      ]
    ],
    "geometric_mean() (in module statistics)": [
      [
        342,
        "statistics.geometric_mean"
      ]
    ],
    "harmonic_mean() (in module statistics)": [
      [
        342,
        "statistics.harmonic_mean"
      ]
    ],
    "inv_cdf() (statistics.normaldist method)": [
      [
        342,
        "statistics.NormalDist.inv_cdf"
      ]
    ],
    "linear_regression() (in module statistics)": [
      [
        342,
        "statistics.linear_regression"
      ]
    ],
    "mean (statistics.normaldist attribute)": [
      [
        342,
        "statistics.NormalDist.mean"
      ]
    ],
    "mean() (in module statistics)": [
      [
        342,
        "statistics.mean"
      ]
    ],
    "median (statistics.normaldist attribute)": [
      [
        342,
        "statistics.NormalDist.median"
      ]
    ],
    "median() (in module statistics)": [
      [
        342,
        "statistics.median"
      ]
    ],
    "median_grouped() (in module statistics)": [
      [
        342,
        "statistics.median_grouped"
      ]
    ],
    "median_high() (in module statistics)": [
      [
        342,
        "statistics.median_high"
      ]
    ],
    "median_low() (in module statistics)": [
      [
        342,
        "statistics.median_low"
      ]
    ],
    "mode (statistics.normaldist attribute)": [
      [
        342,
        "statistics.NormalDist.mode"
      ]
    ],
    "mode() (in module statistics)": [
      [
        342,
        "statistics.mode"
      ]
    ],
    "multimode() (in module statistics)": [
      [
        342,
        "statistics.multimode"
      ]
    ],
    "overlap() (statistics.normaldist method)": [
      [
        342,
        "statistics.NormalDist.overlap"
      ]
    ],
    "pdf() (statistics.normaldist method)": [
      [
        342,
        "statistics.NormalDist.pdf"
      ]
    ],
    "pstdev() (in module statistics)": [
      [
        342,
        "statistics.pstdev"
      ]
    ],
    "pvariance() (in module statistics)": [
      [
        342,
        "statistics.pvariance"
      ]
    ],
    "quantiles() (in module statistics)": [
      [
        342,
        "statistics.quantiles"
      ]
    ],
    "quantiles() (statistics.normaldist method)": [
      [
        342,
        "statistics.NormalDist.quantiles"
      ]
    ],
    "samples() (statistics.normaldist method)": [
      [
        342,
        "statistics.NormalDist.samples"
      ]
    ],
    "statistics": [
      [
        342,
        "module-statistics"
      ]
    ],
    "stdev (statistics.normaldist attribute)": [
      [
        342,
        "statistics.NormalDist.stdev"
      ]
    ],
    "stdev() (in module statistics)": [
      [
        342,
        "statistics.stdev"
      ]
    ],
    "variance (statistics.normaldist attribute)": [
      [
        342,
        "statistics.NormalDist.variance"
      ]
    ],
    "variance() (in module statistics)": [
      [
        342,
        "statistics.variance"
      ]
    ],
    "zscore() (statistics.normaldist method)": [
      [
        342,
        "statistics.NormalDist.zscore"
      ]
    ],
    "!=": [
      [
        343,
        "index-7"
      ],
      [
        429,
        "index-77"
      ]
    ],
    "& (ampersand)": [
      [
        343,
        "index-16"
      ],
      [
        429,
        "index-74"
      ]
    ],
    "(see also string)": [
      [
        343,
        "index-28"
      ]
    ],
    "//": [
      [
        343,
        "index-13"
      ],
      [
        429,
        "index-67"
      ]
    ],
    "< (less)": [
      [
        343,
        "index-7"
      ],
      [
        344,
        "index-3"
      ],
      [
        346,
        "index-1"
      ],
      [
        429,
        "index-77"
      ]
    ],
    "<=": [
      [
        343,
        "index-7"
      ],
      [
        429,
        "index-77"
      ]
    ],
    "==": [
      [
        343,
        "index-7"
      ],
      [
        429,
        "index-77"
      ]
    ],
    "> (greater)": [
      [
        343,
        "index-7"
      ],
      [
        344,
        "index-3"
      ],
      [
        346,
        "index-1"
      ],
      [
        429,
        "index-77"
      ]
    ],
    ">=": [
      [
        343,
        "index-7"
      ],
      [
        429,
        "index-77"
      ]
    ],
    ">>": [
      [
        343,
        "index-16"
      ],
      [
        429,
        "index-71"
      ]
    ],
    "alias": [
      [
        343,
        "index-56"
      ]
    ],
    "c": [
      [
        343,
        "index-11"
      ],
      [
        346,
        "index-0"
      ],
      [
        427,
        "index-13"
      ],
      [
        427,
        "index-4"
      ],
      [
        427,
        "index-42"
      ],
      [
        429,
        "index-77"
      ],
      [
        434,
        "index-23"
      ]
    ],
    "false": [
      [
        343,
        "index-17"
      ],
      [
        343,
        "index-4"
      ],
      [
        343,
        "index-1"
      ],
      [
        427,
        "index-12"
      ]
    ],
    "false (built-in object)": [
      [
        343,
        "index-3"
      ]
    ],
    "generic": [
      [
        343,
        "index-56"
      ],
      [
        427,
        "index-5"
      ]
    ],
    "genericalias": [
      [
        343,
        "index-56"
      ]
    ],
    "none (built-in object)": [
      [
        343,
        "index-3"
      ]
    ],
    "pep 237": [
      [
        343,
        "index-38"
      ],
      [
        343,
        "index-48"
      ],
      [
        463,
        "index-10"
      ],
      [
        465,
        "index-1"
      ],
      [
        465,
        "index-16"
      ],
      [
        469,
        "index-1"
      ]
    ],
    "pep 3118": [
      [
        343,
        "index-50"
      ],
      [
        467,
        "index-15"
      ],
      [
        469,
        "index-33"
      ],
      [
        475,
        "index-31"
      ],
      [
        475,
        "index-4"
      ],
      [
        475,
        "index-5"
      ],
      [
        480,
        "index-8"
      ],
      [
        482,
        "index-250"
      ],
      [
        482,
        "index-257"
      ],
      [
        482,
        "index-302"
      ]
    ],
    "pep 461": [
      [
        343,
        "index-49"
      ],
      [
        477,
        "index-7"
      ],
      [
        477,
        "index-8"
      ]
    ],
    "true": [
      [
        343,
        "index-17"
      ],
      [
        343,
        "index-4"
      ],
      [
        343,
        "index-2"
      ],
      [
        427,
        "index-12"
      ]
    ],
    "union": [
      [
        343,
        "index-59"
      ],
      [
        343,
        "index-59"
      ]
    ],
    "__args__ (genericalias attribute)": [
      [
        343,
        "genericalias.__args__"
      ]
    ],
    "__bases__ (class attribute)": [
      [
        343,
        "class.__bases__"
      ],
      [
        427,
        "index-50"
      ]
    ],
    "__class__ (instance attribute)": [
      [
        343,
        "instance.__class__"
      ],
      [
        427,
        "index-54"
      ]
    ],
    "__code__ (function object attribute)": [
      [
        343,
        "index-63"
      ]
    ],
    "__dict__ (object attribute)": [
      [
        343,
        "object.__dict__"
      ]
    ],
    "__enter__() (contextmanager method)": [
      [
        343,
        "contextmanager.__enter__"
      ]
    ],
    "__eq__() (instance method)": [
      [
        343,
        "index-9"
      ]
    ],
    "__eq__() (memoryview method)": [
      [
        343,
        "memoryview.__eq__"
      ]
    ],
    "__exit__() (contextmanager method)": [
      [
        343,
        "contextmanager.__exit__"
      ]
    ],
    "__ge__() (instance method)": [
      [
        343,
        "index-9"
      ]
    ],
    "__gt__() (instance method)": [
      [
        343,
        "index-9"
      ]
    ],
    "__iter__() (container method)": [
      [
        343,
        "container.__iter__"
      ]
    ],
    "__iter__() (iterator method)": [
      [
        343,
        "iterator.__iter__"
      ]
    ],
    "__le__() (instance method)": [
      [
        343,
        "index-9"
      ]
    ],
    "__lt__() (instance method)": [
      [
        343,
        "index-9"
      ]
    ],
    "__missing__()": [
      [
        343,
        "index-53"
      ]
    ],
    "__mro__ (class attribute)": [
      [
        343,
        "class.__mro__"
      ]
    ],
    "__name__ (definition attribute)": [
      [
        343,
        "definition.__name__"
      ]
    ],
    "__ne__() (instance method)": [
      [
        343,
        "index-9"
      ]
    ],
    "__next__() (iterator method)": [
      [
        343,
        "iterator.__next__"
      ]
    ],
    "__origin__ (genericalias attribute)": [
      [
        343,
        "genericalias.__origin__"
      ]
    ],
    "__parameters__ (genericalias attribute)": [
      [
        343,
        "genericalias.__parameters__"
      ]
    ],
    "__qualname__ (definition attribute)": [
      [
        343,
        "definition.__qualname__"
      ]
    ],
    "__subclasses__() (class method)": [
      [
        343,
        "class.__subclasses__"
      ]
    ],
    "__type_params__ (definition attribute)": [
      [
        343,
        "definition.__type_params__"
      ]
    ],
    "__unpacked__ (genericalias attribute)": [
      [
        343,
        "genericalias.__unpacked__"
      ]
    ],
    "add() (frozenset method)": [
      [
        343,
        "frozenset.add"
      ]
    ],
    "and": [
      [
        343,
        "index-4"
      ],
      [
        343,
        "index-6"
      ],
      [
        429,
        "index-74"
      ],
      [
        429,
        "index-84"
      ]
    ],
    "append() (sequence method)": [
      [
        343,
        "index-24"
      ]
    ],
    "arithmetic": [
      [
        343,
        "index-13"
      ],
      [
        429,
        "index-1"
      ],
      [
        429,
        "index-59"
      ],
      [
        429,
        "index-64"
      ]
    ],
    "as_integer_ratio() (float method)": [
      [
        343,
        "float.as_integer_ratio"
      ]
    ],
    "as_integer_ratio() (int method)": [
      [
        343,
        "int.as_integer_ratio"
      ]
    ],
    "assignment": [
      [
        343,
        "index-24"
      ],
      [
        427,
        "index-22"
      ],
      [
        427,
        "index-48"
      ],
      [
        427,
        "index-52"
      ],
      [
        435,
        "index-12"
      ],
      [
        435,
        "index-14"
      ],
      [
        435,
        "index-15"
      ],
      [
        435,
        "index-4"
      ],
      [
        435,
        "index-6"
      ],
      [
        435,
        "index-8"
      ],
      [
        435,
        "index-9"
      ]
    ],
    "binary": [
      [
        343,
        "index-12"
      ],
      [
        346,
        "index-0"
      ],
      [
        429,
        "index-64"
      ],
      [
        429,
        "index-73"
      ]
    ],
    "binary operator": [
      [
        343,
        "index-13"
      ],
      [
        429,
        "index-69"
      ],
      [
        429,
        "index-70"
      ]
    ],
    "binary sequence types": [
      [
        343,
        "index-39"
      ]
    ],
    "bit_count() (int method)": [
      [
        343,
        "int.bit_count"
      ]
    ],
    "bit_length() (int method)": [
      [
        343,
        "int.bit_length"
      ]
    ],
    "bitwise": [
      [
        343,
        "index-16"
      ],
      [
        429,
        "index-59"
      ],
      [
        429,
        "index-73"
      ],
      [
        429,
        "index-74"
      ],
      [
        429,
        "index-75"
      ],
      [
        429,
        "index-76"
      ]
    ],
    "built-in": [
      [
        343,
        "index-0"
      ],
      [
        427,
        "index-43"
      ]
    ],
    "bytearray (%)": [
      [
        343,
        "index-45"
      ]
    ],
    "bytearray (built-in class)": [
      [
        343,
        "bytearray"
      ]
    ],
    "bytearray.splitlines method": [
      [
        343,
        "index-44"
      ]
    ],
    "bytes (%)": [
      [
        343,
        "index-45"
      ]
    ],
    "bytes (built-in class)": [
      [
        343,
        "bytes"
      ]
    ],
    "bytes.splitlines method": [
      [
        343,
        "index-44"
      ]
    ],
    "c_contiguous (memoryview attribute)": [
      [
        343,
        "memoryview.c_contiguous"
      ]
    ],
    "capitalize() (bytearray method)": [
      [
        343,
        "bytearray.capitalize"
      ]
    ],
    "capitalize() (bytes method)": [
      [
        343,
        "bytes.capitalize"
      ]
    ],
    "capitalize() (str method)": [
      [
        343,
        "str.capitalize"
      ]
    ],
    "casefold() (str method)": [
      [
        343,
        "str.casefold"
      ]
    ],
    "cast() (memoryview method)": [
      [
        343,
        "memoryview.cast"
      ]
    ],
    "center() (bytearray method)": [
      [
        343,
        "bytearray.center"
      ]
    ],
    "center() (bytes method)": [
      [
        343,
        "bytes.center"
      ]
    ],
    "center() (str method)": [
      [
        343,
        "str.center"
      ]
    ],
    "clear() (dict method)": [
      [
        343,
        "dict.clear"
      ]
    ],
    "clear() (frozenset method)": [
      [
        343,
        "frozenset.clear"
      ]
    ],
    "clear() (sequence method)": [
      [
        343,
        "index-24"
      ]
    ],
    "comparing": [
      [
        343,
        "index-8"
      ]
    ],
    "comparison": [
      [
        343,
        "index-7"
      ],
      [
        429,
        "index-77"
      ]
    ],
    "comparisons": [
      [
        343,
        "index-7"
      ],
      [
        427,
        "index-79"
      ],
      [
        429,
        "index-78"
      ]
    ],
    "complex": [
      [
        343,
        "index-13"
      ],
      [
        427,
        "index-104"
      ],
      [
        427,
        "index-14"
      ]
    ],
    "concatenation": [
      [
        343,
        "index-20"
      ]
    ],
    "conjugate() (complex number method)": [
      [
        343,
        "index-14"
      ]
    ],
    "container": [
      [
        343,
        "index-18"
      ],
      [
        427,
        "index-3"
      ],
      [
        427,
        "index-47"
      ]
    ],
    "context management": [
      [
        343,
        "index-54"
      ]
    ],
    "context management protocol": [
      [
        343,
        "index-54"
      ]
    ],
    "contiguous (memoryview attribute)": [
      [
        343,
        "memoryview.contiguous"
      ]
    ],
    "conversions": [
      [
        343,
        "index-15"
      ]
    ],
    "copy() (dict method)": [
      [
        343,
        "dict.copy"
      ]
    ],
    "copy() (frozenset method)": [
      [
        343,
        "frozenset.copy"
      ]
    ],
    "copy() (sequence method)": [
      [
        343,
        "index-24"
      ]
    ],
    "count() (bytearray method)": [
      [
        343,
        "bytearray.count"
      ]
    ],
    "count() (bytes method)": [
      [
        343,
        "bytes.count"
      ]
    ],
    "count() (sequence method)": [
      [
        343,
        "index-20"
      ]
    ],
    "count() (str method)": [
      [
        343,
        "str.count"
      ]
    ],
    "decode() (bytearray method)": [
      [
        343,
        "bytearray.decode"
      ]
    ],
    "decode() (bytes method)": [
      [
        343,
        "bytes.decode"
      ]
    ],
    "del": [
      [
        343,
        "index-24"
      ],
      [
        343,
        "index-52"
      ],
      [
        427,
        "index-74"
      ],
      [
        435,
        "index-21"
      ]
    ],
    "dict (built-in class)": [
      [
        343,
        "dict"
      ]
    ],
    "difference() (frozenset method)": [
      [
        343,
        "frozenset.difference"
      ]
    ],
    "difference_update() (frozenset method)": [
      [
        343,
        "frozenset.difference_update"
      ]
    ],
    "discard() (frozenset method)": [
      [
        343,
        "frozenset.discard"
      ]
    ],
    "encode() (str method)": [
      [
        343,
        "str.encode"
      ]
    ],
    "endswith() (bytearray method)": [
      [
        343,
        "bytearray.endswith"
      ]
    ],
    "endswith() (bytes method)": [
      [
        343,
        "bytes.endswith"
      ]
    ],
    "endswith() (str method)": [
      [
        343,
        "str.endswith"
      ]
    ],
    "expandtabs() (bytearray method)": [
      [
        343,
        "bytearray.expandtabs"
      ]
    ],
    "expandtabs() (bytes method)": [
      [
        343,
        "bytes.expandtabs"
      ]
    ],
    "expandtabs() (str method)": [
      [
        343,
        "str.expandtabs"
      ]
    ],
    "extend() (sequence method)": [
      [
        343,
        "index-24"
      ]
    ],
    "f_contiguous (memoryview attribute)": [
      [
        343,
        "memoryview.f_contiguous"
      ]
    ],
    "find() (bytearray method)": [
      [
        343,
        "bytearray.find"
      ]
    ],
    "find() (bytes method)": [
      [
        343,
        "bytes.find"
      ]
    ],
    "find() (str method)": [
      [
        343,
        "str.find"
      ]
    ],
    "format (memoryview attribute)": [
      [
        343,
        "memoryview.format"
      ]
    ],
    "format() (str method)": [
      [
        343,
        "str.format"
      ]
    ],
    "format_map() (str method)": [
      [
        343,
        "str.format_map"
      ]
    ],
    "formatting": [
      [
        343,
        "index-45"
      ]
    ],
    "formatting, printf": [
      [
        343,
        "index-35"
      ]
    ],
    "formatting, string (%)": [
      [
        343,
        "index-35"
      ]
    ],
    "from_bytes() (int class method)": [
      [
        343,
        "int.from_bytes"
      ]
    ],
    "fromhex() (bytearray class method)": [
      [
        343,
        "bytearray.fromhex"
      ]
    ],
    "fromhex() (bytes class method)": [
      [
        343,
        "bytes.fromhex"
      ]
    ],
    "fromhex() (float class method)": [
      [
        343,
        "float.fromhex"
      ]
    ],
    "fromkeys() (dict class method)": [
      [
        343,
        "dict.fromkeys"
      ]
    ],
    "frozenset (built-in class)": [
      [
        343,
        "frozenset"
      ]
    ],
    "get() (dict method)": [
      [
        343,
        "dict.get"
      ]
    ],
    "hex() (bytearray method)": [
      [
        343,
        "bytearray.hex"
      ]
    ],
    "hex() (bytes method)": [
      [
        343,
        "bytes.hex"
      ]
    ],
    "hex() (float method)": [
      [
        343,
        "float.hex"
      ]
    ],
    "hex() (memoryview method)": [
      [
        343,
        "memoryview.hex"
      ]
    ],
    "hexadecimal": [
      [
        343,
        "index-12"
      ]
    ],
    "if": [
      [
        343,
        "index-1"
      ],
      [
        426,
        "index-18"
      ],
      [
        426,
        "index-3"
      ],
      [
        429,
        "index-12"
      ],
      [
        429,
        "index-88"
      ]
    ],
    "in": [
      [
        343,
        "index-10"
      ],
      [
        343,
        "index-20"
      ],
      [
        426,
        "index-6"
      ],
      [
        429,
        "index-80"
      ]
    ],
    "in printf-style formatting": [
      [
        343,
        "index-36"
      ],
      [
        343,
        "index-37"
      ],
      [
        343,
        "index-46"
      ],
      [
        343,
        "index-47"
      ]
    ],
    "index() (bytearray method)": [
      [
        343,
        "bytearray.index"
      ]
    ],
    "index() (bytes method)": [
      [
        343,
        "bytes.index"
      ]
    ],
    "index() (sequence method)": [
      [
        343,
        "index-20"
      ]
    ],
    "index() (str method)": [
      [
        343,
        "str.index"
      ]
    ],
    "insert() (sequence method)": [
      [
        343,
        "index-24"
      ]
    ],
    "interpolation": [
      [
        343,
        "index-45"
      ]
    ],
    "interpolation, printf": [
      [
        343,
        "index-35"
      ]
    ],
    "interpolation, string (%)": [
      [
        343,
        "index-35"
      ]
    ],
    "intersection() (frozenset method)": [
      [
        343,
        "frozenset.intersection"
      ]
    ],
    "intersection_update() (frozenset method)": [
      [
        343,
        "frozenset.intersection_update"
      ]
    ],
    "io.stringio": [
      [
        343,
        "index-29"
      ]
    ],
    "is": [
      [
        343,
        "index-7"
      ],
      [
        429,
        "index-81"
      ]
    ],
    "is not": [
      [
        343,
        "index-7"
      ],
      [
        429,
        "index-81"
      ]
    ],
    "is_integer() (float method)": [
      [
        343,
        "float.is_integer"
      ]
    ],
    "is_integer() (int method)": [
      [
        343,
        "int.is_integer"
      ]
    ],
    "isalnum() (bytearray method)": [
      [
        343,
        "bytearray.isalnum"
      ]
    ],
    "isalnum() (bytes method)": [
      [
        343,
        "bytes.isalnum"
      ]
    ],
    "isalnum() (str method)": [
      [
        343,
        "str.isalnum"
      ]
    ],
    "isalpha() (bytearray method)": [
      [
        343,
        "bytearray.isalpha"
      ]
    ],
    "isalpha() (bytes method)": [
      [
        343,
        "bytes.isalpha"
      ]
    ],
    "isalpha() (str method)": [
      [
        343,
        "str.isalpha"
      ]
    ],
    "isascii() (bytearray method)": [
      [
        343,
        "bytearray.isascii"
      ]
    ],
    "isascii() (bytes method)": [
      [
        343,
        "bytes.isascii"
      ]
    ],
    "isascii() (str method)": [
      [
        343,
        "str.isascii"
      ]
    ],
    "isdecimal() (str method)": [
      [
        343,
        "str.isdecimal"
      ]
    ],
    "isdigit() (bytearray method)": [
      [
        343,
        "bytearray.isdigit"
      ]
    ],
    "isdigit() (bytes method)": [
      [
        343,
        "bytes.isdigit"
      ]
    ],
    "isdigit() (str method)": [
      [
        343,
        "str.isdigit"
      ]
    ],
    "isdisjoint() (frozenset method)": [
      [
        343,
        "frozenset.isdisjoint"
      ]
    ],
    "isidentifier() (str method)": [
      [
        343,
        "str.isidentifier"
      ]
    ],
    "islower() (bytearray method)": [
      [
        343,
        "bytearray.islower"
      ]
    ],
    "islower() (bytes method)": [
      [
        343,
        "bytes.islower"
      ]
    ],
    "islower() (str method)": [
      [
        343,
        "str.islower"
      ]
    ],
    "isnumeric() (str method)": [
      [
        343,
        "str.isnumeric"
      ]
    ],
    "isprintable() (str method)": [
      [
        343,
        "str.isprintable"
      ]
    ],
    "isspace() (bytearray method)": [
      [
        343,
        "bytearray.isspace"
      ]
    ],
    "isspace() (bytes method)": [
      [
        343,
        "bytes.isspace"
      ]
    ],
    "isspace() (str method)": [
      [
        343,
        "str.isspace"
      ]
    ],
    "issubset() (frozenset method)": [
      [
        343,
        "frozenset.issubset"
      ]
    ],
    "issuperset() (frozenset method)": [
      [
        343,
        "frozenset.issuperset"
      ]
    ],
    "istitle() (bytearray method)": [
      [
        343,
        "bytearray.istitle"
      ]
    ],
    "istitle() (bytes method)": [
      [
        343,
        "bytes.istitle"
      ]
    ],
    "istitle() (str method)": [
      [
        343,
        "str.istitle"
      ]
    ],
    "isupper() (bytearray method)": [
      [
        343,
        "bytearray.isupper"
      ]
    ],
    "isupper() (bytes method)": [
      [
        343,
        "bytes.isupper"
      ]
    ],
    "isupper() (str method)": [
      [
        343,
        "str.isupper"
      ]
    ],
    "items() (dict method)": [
      [
        343,
        "dict.items"
      ]
    ],
    "itemsize (memoryview attribute)": [
      [
        343,
        "memoryview.itemsize"
      ]
    ],
    "iteration": [
      [
        343,
        "index-18"
      ]
    ],
    "iteration over": [
      [
        343,
        "index-18"
      ]
    ],
    "iterator protocol": [
      [
        343,
        "index-18"
      ]
    ],
    "join() (bytearray method)": [
      [
        343,
        "bytearray.join"
      ]
    ],
    "join() (bytes method)": [
      [
        343,
        "bytes.join"
      ]
    ],
    "join() (str method)": [
      [
        343,
        "str.join"
      ]
    ],
    "keys() (dict method)": [
      [
        343,
        "dict.keys"
      ]
    ],
    "list (built-in class)": [
      [
        343,
        "list"
      ]
    ],
    "literals": [
      [
        343,
        "index-12"
      ]
    ],
    "ljust() (bytearray method)": [
      [
        343,
        "bytearray.ljust"
      ]
    ],
    "ljust() (bytes method)": [
      [
        343,
        "bytes.ljust"
      ]
    ],
    "ljust() (str method)": [
      [
        343,
        "str.ljust"
      ]
    ],
    "loop": [
      [
        343,
        "index-21"
      ],
      [
        426,
        "index-4"
      ],
      [
        426,
        "index-6"
      ],
      [
        435,
        "index-30"
      ],
      [
        435,
        "index-33"
      ]
    ],
    "loop over": [
      [
        343,
        "index-21"
      ]
    ],
    "lower() (bytearray method)": [
      [
        343,
        "bytearray.lower"
      ]
    ],
    "lower() (bytes method)": [
      [
        343,
        "bytes.lower"
      ]
    ],
    "lower() (str method)": [
      [
        343,
        "str.lower"
      ]
    ],
    "lstrip() (bytearray method)": [
      [
        343,
        "bytearray.lstrip"
      ]
    ],
    "lstrip() (bytes method)": [
      [
        343,
        "bytes.lstrip"
      ]
    ],
    "lstrip() (str method)": [
      [
        343,
        "str.lstrip"
      ]
    ],
    "maketrans() (bytearray static method)": [
      [
        343,
        "bytearray.maketrans"
      ]
    ],
    "maketrans() (bytes static method)": [
      [
        343,
        "bytes.maketrans"
      ]
    ],
    "maketrans() (str static method)": [
      [
        343,
        "str.maketrans"
      ]
    ],
    "masking": [
      [
        343,
        "index-16"
      ]
    ],
    "max": [
      [
        343,
        "index-20"
      ]
    ],
    "memoryview (built-in class)": [
      [
        343,
        "memoryview"
      ]
    ],
    "methods": [
      [
        343,
        "index-32"
      ],
      [
        343,
        "index-43"
      ]
    ],
    "min": [
      [
        343,
        "index-20"
      ]
    ],
    "mro() (class method)": [
      [
        343,
        "class.mro"
      ]
    ],
    "mutable sequence": [
      [
        343,
        "index-21"
      ],
      [
        427,
        "index-22"
      ]
    ],
    "nbytes (memoryview attribute)": [
      [
        343,
        "memoryview.nbytes"
      ]
    ],
    "ndim (memoryview attribute)": [
      [
        343,
        "memoryview.ndim"
      ]
    ],
    "not": [
      [
        343,
        "index-6"
      ],
      [
        429,
        "index-83"
      ]
    ],
    "not in": [
      [
        343,
        "index-10"
      ],
      [
        343,
        "index-20"
      ],
      [
        429,
        "index-80"
      ]
    ],
    "obj (memoryview attribute)": [
      [
        343,
        "memoryview.obj"
      ]
    ],
    "octal": [
      [
        343,
        "index-12"
      ]
    ],
    "operation": [
      [
        343,
        "index-20"
      ],
      [
        429,
        "index-58"
      ],
      [
        429,
        "index-59"
      ],
      [
        429,
        "index-64"
      ],
      [
        429,
        "index-71"
      ],
      [
        429,
        "index-73"
      ],
      [
        429,
        "index-82"
      ],
      [
        435,
        "index-20"
      ]
    ],
    "operations on": [
      [
        343,
        "index-14"
      ],
      [
        343,
        "index-16"
      ],
      [
        343,
        "index-20"
      ],
      [
        343,
        "index-24"
      ],
      [
        343,
        "index-52"
      ]
    ],
    "or": [
      [
        343,
        "index-4"
      ],
      [
        343,
        "index-6"
      ],
      [
        429,
        "index-75"
      ],
      [
        429,
        "index-76"
      ],
      [
        429,
        "index-85"
      ]
    ],
    "over mutable sequence": [
      [
        343,
        "index-21"
      ]
    ],
    "partition() (bytearray method)": [
      [
        343,
        "bytearray.partition"
      ]
    ],
    "partition() (bytes method)": [
      [
        343,
        "bytes.partition"
      ]
    ],
    "partition() (str method)": [
      [
        343,
        "str.partition"
      ]
    ],
    "pop() (dict method)": [
      [
        343,
        "dict.pop"
      ]
    ],
    "pop() (frozenset method)": [
      [
        343,
        "frozenset.pop"
      ]
    ],
    "pop() (sequence method)": [
      [
        343,
        "index-24"
      ]
    ],
    "popitem() (dict method)": [
      [
        343,
        "dict.popitem"
      ]
    ],
    "printf-style formatting": [
      [
        343,
        "index-35"
      ],
      [
        343,
        "index-45"
      ]
    ],
    "range": [
      [
        343,
        "index-27"
      ],
      [
        426,
        "index-8"
      ]
    ],
    "range (built-in class)": [
      [
        343,
        "range"
      ]
    ],
    "readonly (memoryview attribute)": [
      [
        343,
        "memoryview.readonly"
      ]
    ],
    "release() (memoryview method)": [
      [
        343,
        "memoryview.release"
      ]
    ],
    "remove() (frozenset method)": [
      [
        343,
        "frozenset.remove"
      ]
    ],
    "remove() (sequence method)": [
      [
        343,
        "index-24"
      ]
    ],
    "removeprefix() (bytearray method)": [
      [
        343,
        "bytearray.removeprefix"
      ]
    ],
    "removeprefix() (bytes method)": [
      [
        343,
        "bytes.removeprefix"
      ]
    ],
    "removeprefix() (str method)": [
      [
        343,
        "str.removeprefix"
      ]
    ],
    "removesuffix() (bytearray method)": [
      [
        343,
        "bytearray.removesuffix"
      ]
    ],
    "removesuffix() (bytes method)": [
      [
        343,
        "bytes.removesuffix"
      ]
    ],
    "removesuffix() (str method)": [
      [
        343,
        "str.removesuffix"
      ]
    ],
    "repetition": [
      [
        343,
        "index-20"
      ]
    ],
    "replace() (bytearray method)": [
      [
        343,
        "bytearray.replace"
      ]
    ],
    "replace() (bytes method)": [
      [
        343,
        "bytes.replace"
      ]
    ],
    "replace() (str method)": [
      [
        343,
        "str.replace"
      ]
    ],
    "reverse() (sequence method)": [
      [
        343,
        "index-24"
      ]
    ],
    "rfind() (bytearray method)": [
      [
        343,
        "bytearray.rfind"
      ]
    ],
    "rfind() (bytes method)": [
      [
        343,
        "bytes.rfind"
      ]
    ],
    "rfind() (str method)": [
      [
        343,
        "str.rfind"
      ]
    ],
    "rindex() (bytearray method)": [
      [
        343,
        "bytearray.rindex"
      ]
    ],
    "rindex() (bytes method)": [
      [
        343,
        "bytes.rindex"
      ]
    ],
    "rindex() (str method)": [
      [
        343,
        "str.rindex"
      ]
    ],
    "rjust() (bytearray method)": [
      [
        343,
        "bytearray.rjust"
      ]
    ],
    "rjust() (bytes method)": [
      [
        343,
        "bytes.rjust"
      ]
    ],
    "rjust() (str method)": [
      [
        343,
        "str.rjust"
      ]
    ],
    "rpartition() (bytearray method)": [
      [
        343,
        "bytearray.rpartition"
      ]
    ],
    "rpartition() (bytes method)": [
      [
        343,
        "bytes.rpartition"
      ]
    ],
    "rpartition() (str method)": [
      [
        343,
        "str.rpartition"
      ]
    ],
    "rsplit() (bytearray method)": [
      [
        343,
        "bytearray.rsplit"
      ]
    ],
    "rsplit() (bytes method)": [
      [
        343,
        "bytes.rsplit"
      ]
    ],
    "rsplit() (str method)": [
      [
        343,
        "str.rsplit"
      ]
    ],
    "rstrip() (bytearray method)": [
      [
        343,
        "bytearray.rstrip"
      ]
    ],
    "rstrip() (bytes method)": [
      [
        343,
        "bytes.rstrip"
      ]
    ],
    "rstrip() (str method)": [
      [
        343,
        "str.rstrip"
      ]
    ],
    "set (built-in class)": [
      [
        343,
        "set"
      ]
    ],
    "setdefault() (dict method)": [
      [
        343,
        "dict.setdefault"
      ]
    ],
    "shape (memoryview attribute)": [
      [
        343,
        "memoryview.shape"
      ]
    ],
    "shifting": [
      [
        343,
        "index-16"
      ],
      [
        429,
        "index-71"
      ]
    ],
    "sort() (list method)": [
      [
        343,
        "list.sort"
      ]
    ],
    "space": [
      [
        343,
        "index-37"
      ],
      [
        343,
        "index-47"
      ],
      [
        344,
        "index-4"
      ],
      [
        434,
        "index-8"
      ]
    ],
    "split() (bytearray method)": [
      [
        343,
        "bytearray.split"
      ]
    ],
    "split() (bytes method)": [
      [
        343,
        "bytes.split"
      ]
    ],
    "split() (str method)": [
      [
        343,
        "str.split"
      ]
    ],
    "splitlines() (bytearray method)": [
      [
        343,
        "bytearray.splitlines"
      ]
    ],
    "splitlines() (bytes method)": [
      [
        343,
        "bytes.splitlines"
      ]
    ],
    "splitlines() (str method)": [
      [
        343,
        "str.splitlines"
      ]
    ],
    "sprintf-style formatting": [
      [
        343,
        "index-35"
      ],
      [
        343,
        "index-45"
      ]
    ],
    "start (range attribute)": [
      [
        343,
        "range.start"
      ]
    ],
    "startswith() (bytearray method)": [
      [
        343,
        "bytearray.startswith"
      ]
    ],
    "startswith() (bytes method)": [
      [
        343,
        "bytes.startswith"
      ]
    ],
    "startswith() (str method)": [
      [
        343,
        "str.startswith"
      ]
    ],
    "step (range attribute)": [
      [
        343,
        "range.step"
      ]
    ],
    "stop (range attribute)": [
      [
        343,
        "range.stop"
      ]
    ],
    "str (built-in class)": [
      [
        343,
        "index-28"
      ],
      [
        343,
        "index-30"
      ],
      [
        343,
        "index-31"
      ],
      [
        343,
        "str"
      ]
    ],
    "str.splitlines method": [
      [
        343,
        "index-34"
      ]
    ],
    "strides (memoryview attribute)": [
      [
        343,
        "memoryview.strides"
      ]
    ],
    "strip() (bytearray method)": [
      [
        343,
        "bytearray.strip"
      ]
    ],
    "strip() (bytes method)": [
      [
        343,
        "bytes.strip"
      ]
    ],
    "strip() (str method)": [
      [
        343,
        "str.strip"
      ]
    ],
    "suboffsets (memoryview attribute)": [
      [
        343,
        "memoryview.suboffsets"
      ]
    ],
    "subscript": [
      [
        343,
        "index-20"
      ],
      [
        343,
        "index-24"
      ]
    ],
    "swapcase() (bytearray method)": [
      [
        343,
        "bytearray.swapcase"
      ]
    ],
    "swapcase() (bytes method)": [
      [
        343,
        "bytes.swapcase"
      ]
    ],
    "swapcase() (str method)": [
      [
        343,
        "str.swapcase"
      ]
    ],
    "symmetric_difference() (frozenset method)": [
      [
        343,
        "frozenset.symmetric_difference"
      ]
    ],
    "symmetric_difference_update() (frozenset method)": [
      [
        343,
        "frozenset.symmetric_difference_update"
      ]
    ],
    "text sequence type": [
      [
        343,
        "index-28"
      ]
    ],
    "title() (bytearray method)": [
      [
        343,
        "bytearray.title"
      ]
    ],
    "title() (bytes method)": [
      [
        343,
        "bytes.title"
      ]
    ],
    "title() (str method)": [
      [
        343,
        "str.title"
      ]
    ],
    "to_bytes() (int method)": [
      [
        343,
        "int.to_bytes"
      ]
    ],
    "tobytes() (memoryview method)": [
      [
        343,
        "memoryview.tobytes"
      ]
    ],
    "tolist() (memoryview method)": [
      [
        343,
        "memoryview.tolist"
      ]
    ],
    "toreadonly() (memoryview method)": [
      [
        343,
        "memoryview.toreadonly"
      ]
    ],
    "translate() (bytearray method)": [
      [
        343,
        "bytearray.translate"
      ]
    ],
    "translate() (bytes method)": [
      [
        343,
        "bytes.translate"
      ]
    ],
    "translate() (str method)": [
      [
        343,
        "str.translate"
      ]
    ],
    "truth": [
      [
        343,
        "index-1"
      ]
    ],
    "tuple (built-in class)": [
      [
        343,
        "tuple"
      ]
    ],
    "type annotation; type hint": [
      [
        343,
        "index-55"
      ]
    ],
    "types": [
      [
        343,
        "index-0"
      ],
      [
        343,
        "index-14"
      ],
      [
        343,
        "index-16"
      ],
      [
        343,
        "index-20"
      ],
      [
        343,
        "index-22"
      ],
      [
        343,
        "index-23"
      ],
      [
        343,
        "index-24"
      ],
      [
        343,
        "index-52"
      ],
      [
        343,
        "index-65"
      ],
      [
        384,
        "module-types"
      ]
    ],
    "unary operator": [
      [
        343,
        "index-13"
      ],
      [
        429,
        "index-60"
      ],
      [
        429,
        "index-61"
      ]
    ],
    "union() (frozenset method)": [
      [
        343,
        "frozenset.union"
      ]
    ],
    "update() (dict method)": [
      [
        343,
        "dict.update"
      ]
    ],
    "update() (frozenset method)": [
      [
        343,
        "frozenset.update"
      ]
    ],
    "upper() (bytearray method)": [
      [
        343,
        "bytearray.upper"
      ]
    ],
    "upper() (bytes method)": [
      [
        343,
        "bytes.upper"
      ]
    ],
    "upper() (str method)": [
      [
        343,
        "str.upper"
      ]
    ],
    "value": [
      [
        343,
        "index-1"
      ],
      [
        426,
        "index-31"
      ],
      [
        429,
        "index-17"
      ]
    ],
    "values": [
      [
        343,
        "index-17"
      ],
      [
        435,
        "index-3"
      ]
    ],
    "values() (dict method)": [
      [
        343,
        "dict.values"
      ]
    ],
    "while": [
      [
        343,
        "index-1"
      ],
      [
        426,
        "index-4"
      ],
      [
        435,
        "index-30"
      ],
      [
        435,
        "index-33"
      ]
    ],
    "zfill() (bytearray method)": [
      [
        343,
        "bytearray.zfill"
      ]
    ],
    "zfill() (bytes method)": [
      [
        343,
        "bytes.zfill"
      ]
    ],
    "zfill() (str method)": [
      [
        343,
        "str.zfill"
      ]
    ],
    ", (comma)": [
      [
        344,
        "index-8"
      ],
      [
        426,
        "index-16"
      ],
      [
        426,
        "index-28"
      ],
      [
        426,
        "index-42"
      ],
      [
        429,
        "index-10"
      ],
      [
        429,
        "index-15"
      ],
      [
        429,
        "index-16"
      ],
      [
        429,
        "index-17"
      ],
      [
        429,
        "index-44"
      ],
      [
        429,
        "index-47"
      ],
      [
        429,
        "index-91"
      ],
      [
        435,
        "index-18"
      ],
      [
        435,
        "index-34"
      ],
      [
        435,
        "index-43"
      ],
      [
        435,
        "index-45"
      ],
      [
        435,
        "index-6"
      ]
    ],
    "= (equals)": [
      [
        344,
        "index-3"
      ],
      [
        346,
        "index-1"
      ],
      [
        426,
        "index-31"
      ],
      [
        427,
        "index-86"
      ],
      [
        429,
        "index-47"
      ],
      [
        434,
        "index-25"
      ],
      [
        435,
        "index-4"
      ]
    ],
    "formatter (class in string)": [
      [
        344,
        "string.Formatter"
      ]
    ],
    "pep 292": [
      [
        344,
        "index-12"
      ],
      [
        465,
        "index-3"
      ]
    ],
    "pep 378": [
      [
        344,
        "index-9"
      ],
      [
        468,
        "index-3"
      ],
      [
        470,
        "index-1"
      ]
    ],
    "pep 682": [
      [
        344,
        "index-6"
      ],
      [
        472,
        "index-22"
      ]
    ],
    "template (class in string)": [
      [
        344,
        "string.Template"
      ]
    ],
    "ascii_letters (in module string)": [
      [
        344,
        "string.ascii_letters"
      ]
    ],
    "ascii_lowercase (in module string)": [
      [
        344,
        "string.ascii_lowercase"
      ]
    ],
    "ascii_uppercase (in module string)": [
      [
        344,
        "string.ascii_uppercase"
      ]
    ],
    "capwords() (in module string)": [
      [
        344,
        "string.capwords"
      ]
    ],
    "check_unused_args() (string.formatter method)": [
      [
        344,
        "string.Formatter.check_unused_args"
      ]
    ],
    "convert_field() (string.formatter method)": [
      [
        344,
        "string.Formatter.convert_field"
      ]
    ],
    "digits (in module string)": [
      [
        344,
        "string.digits"
      ]
    ],
    "format() (string.formatter method)": [
      [
        344,
        "string.Formatter.format"
      ]
    ],
    "format_field() (string.formatter method)": [
      [
        344,
        "string.Formatter.format_field"
      ]
    ],
    "get_field() (string.formatter method)": [
      [
        344,
        "string.Formatter.get_field"
      ]
    ],
    "get_identifiers() (string.template method)": [
      [
        344,
        "string.Template.get_identifiers"
      ]
    ],
    "get_value() (string.formatter method)": [
      [
        344,
        "string.Formatter.get_value"
      ]
    ],
    "hexdigits (in module string)": [
      [
        344,
        "string.hexdigits"
      ]
    ],
    "in string formatting": [
      [
        344,
        "index-10"
      ],
      [
        344,
        "index-2"
      ],
      [
        344,
        "index-3"
      ],
      [
        344,
        "index-4"
      ],
      [
        344,
        "index-5"
      ],
      [
        344,
        "index-7"
      ],
      [
        344,
        "index-8"
      ]
    ],
    "in template strings": [
      [
        344,
        "index-13"
      ]
    ],
    "is_valid() (string.template method)": [
      [
        344,
        "string.Template.is_valid"
      ]
    ],
    "octdigits (in module string)": [
      [
        344,
        "string.octdigits"
      ]
    ],
    "parse() (string.formatter method)": [
      [
        344,
        "string.Formatter.parse"
      ]
    ],
    "printable (in module string)": [
      [
        344,
        "string.printable"
      ]
    ],
    "punctuation (in module string)": [
      [
        344,
        "string.punctuation"
      ]
    ],
    "safe_substitute() (string.template method)": [
      [
        344,
        "string.Template.safe_substitute"
      ]
    ],
    "substitute() (string.template method)": [
      [
        344,
        "string.Template.substitute"
      ]
    ],
    "template (string.template attribute)": [
      [
        344,
        "string.Template.template"
      ]
    ],
    "vformat() (string.formatter method)": [
      [
        344,
        "string.Formatter.vformat"
      ]
    ],
    "whitespace (in module string)": [
      [
        344,
        "string.whitespace"
      ]
    ],
    "z": [
      [
        344,
        "index-5"
      ]
    ],
    "rfc 3454": [
      [
        345,
        "index-0"
      ],
      [
        345,
        "index-1"
      ],
      [
        482,
        "index-33"
      ]
    ],
    "in_table_a1() (in module stringprep)": [
      [
        345,
        "stringprep.in_table_a1"
      ]
    ],
    "in_table_b1() (in module stringprep)": [
      [
        345,
        "stringprep.in_table_b1"
      ]
    ],
    "in_table_c11() (in module stringprep)": [
      [
        345,
        "stringprep.in_table_c11"
      ]
    ],
    "in_table_c11_c12() (in module stringprep)": [
      [
        345,
        "stringprep.in_table_c11_c12"
      ]
    ],
    "in_table_c12() (in module stringprep)": [
      [
        345,
        "stringprep.in_table_c12"
      ]
    ],
    "in_table_c21() (in module stringprep)": [
      [
        345,
        "stringprep.in_table_c21"
      ]
    ],
    "in_table_c21_c22() (in module stringprep)": [
      [
        345,
        "stringprep.in_table_c21_c22"
      ]
    ],
    "in_table_c22() (in module stringprep)": [
      [
        345,
        "stringprep.in_table_c22"
      ]
    ],
    "in_table_c3() (in module stringprep)": [
      [
        345,
        "stringprep.in_table_c3"
      ]
    ],
    "in_table_c4() (in module stringprep)": [
      [
        345,
        "stringprep.in_table_c4"
      ]
    ],
    "in_table_c5() (in module stringprep)": [
      [
        345,
        "stringprep.in_table_c5"
      ]
    ],
    "in_table_c6() (in module stringprep)": [
      [
        345,
        "stringprep.in_table_c6"
      ]
    ],
    "in_table_c7() (in module stringprep)": [
      [
        345,
        "stringprep.in_table_c7"
      ]
    ],
    "in_table_c8() (in module stringprep)": [
      [
        345,
        "stringprep.in_table_c8"
      ]
    ],
    "in_table_c9() (in module stringprep)": [
      [
        345,
        "stringprep.in_table_c9"
      ]
    ],
    "in_table_d1() (in module stringprep)": [
      [
        345,
        "stringprep.in_table_d1"
      ]
    ],
    "in_table_d2() (in module stringprep)": [
      [
        345,
        "stringprep.in_table_d2"
      ]
    ],
    "map_table_b2() (in module stringprep)": [
      [
        345,
        "stringprep.map_table_b2"
      ]
    ],
    "map_table_b3() (in module stringprep)": [
      [
        345,
        "stringprep.map_table_b3"
      ]
    ],
    "stringprep": [
      [
        345,
        "module-stringprep"
      ]
    ],
    "@ (at)": [
      [
        346,
        "index-1"
      ],
      [
        426,
        "index-29"
      ],
      [
        426,
        "index-43"
      ],
      [
        429,
        "index-66"
      ]
    ],
    "struct (class in struct)": [
      [
        346,
        "struct.Struct"
      ]
    ],
    "calcsize() (in module struct)": [
      [
        346,
        "struct.calcsize"
      ]
    ],
    "format (struct.struct attribute)": [
      [
        346,
        "struct.Struct.format"
      ]
    ],
    "in struct format strings": [
      [
        346,
        "index-1"
      ],
      [
        346,
        "index-2"
      ],
      [
        346,
        "index-3"
      ]
    ],
    "iter_unpack() (in module struct)": [
      [
        346,
        "struct.iter_unpack"
      ]
    ],
    "iter_unpack() (struct.struct method)": [
      [
        346,
        "struct.Struct.iter_unpack"
      ]
    ],
    "pack() (in module struct)": [
      [
        346,
        "struct.pack"
      ]
    ],
    "pack() (struct.struct method)": [
      [
        346,
        "struct.Struct.pack"
      ]
    ],
    "pack_into() (in module struct)": [
      [
        346,
        "struct.pack_into"
      ]
    ],
    "pack_into() (struct.struct method)": [
      [
        346,
        "struct.Struct.pack_into"
      ]
    ],
    "packing": [
      [
        346,
        "index-0"
      ]
    ],
    "size (struct.struct attribute)": [
      [
        346,
        "struct.Struct.size"
      ]
    ],
    "structures": [
      [
        346,
        "index-0"
      ]
    ],
    "unpack() (in module struct)": [
      [
        346,
        "struct.unpack"
      ]
    ],
    "unpack() (struct.struct method)": [
      [
        346,
        "struct.Struct.unpack"
      ]
    ],
    "unpack_from() (in module struct)": [
      [
        346,
        "struct.unpack_from"
      ]
    ],
    "unpack_from() (struct.struct method)": [
      [
        346,
        "struct.Struct.unpack_from"
      ]
    ],
    "above_normal_priority_class (in module subprocess)": [
      [
        347,
        "subprocess.ABOVE_NORMAL_PRIORITY_CLASS"
      ]
    ],
    "below_normal_priority_class (in module subprocess)": [
      [
        347,
        "subprocess.BELOW_NORMAL_PRIORITY_CLASS"
      ]
    ],
    "create_breakaway_from_job (in module subprocess)": [
      [
        347,
        "subprocess.CREATE_BREAKAWAY_FROM_JOB"
      ]
    ],
    "create_default_error_mode (in module subprocess)": [
      [
        347,
        "subprocess.CREATE_DEFAULT_ERROR_MODE"
      ]
    ],
    "create_new_console (in module subprocess)": [
      [
        347,
        "subprocess.CREATE_NEW_CONSOLE"
      ]
    ],
    "create_new_process_group (in module subprocess)": [
      [
        347,
        "subprocess.CREATE_NEW_PROCESS_GROUP"
      ]
    ],
    "create_no_window (in module subprocess)": [
      [
        347,
        "subprocess.CREATE_NO_WINDOW"
      ]
    ],
    "calledprocesserror": [
      [
        347,
        "subprocess.CalledProcessError"
      ]
    ],
    "completedprocess (class in subprocess)": [
      [
        347,
        "subprocess.CompletedProcess"
      ]
    ],
    "detached_process (in module subprocess)": [
      [
        347,
        "subprocess.DETACHED_PROCESS"
      ]
    ],
    "devnull (in module subprocess)": [
      [
        347,
        "subprocess.DEVNULL"
      ]
    ],
    "high_priority_class (in module subprocess)": [
      [
        347,
        "subprocess.HIGH_PRIORITY_CLASS"
      ]
    ],
    "idle_priority_class (in module subprocess)": [
      [
        347,
        "subprocess.IDLE_PRIORITY_CLASS"
      ]
    ],
    "normal_priority_class (in module subprocess)": [
      [
        347,
        "subprocess.NORMAL_PRIORITY_CLASS"
      ]
    ],
    "pep 324": [
      [
        347,
        "index-0"
      ],
      [
        465,
        "index-8"
      ]
    ],
    "pipe (in module subprocess)": [
      [
        347,
        "subprocess.PIPE"
      ]
    ],
    "popen (class in subprocess)": [
      [
        347,
        "subprocess.Popen"
      ]
    ],
    "realtime_priority_class (in module subprocess)": [
      [
        347,
        "subprocess.REALTIME_PRIORITY_CLASS"
      ]
    ],
    "startf_useshowwindow (in module subprocess)": [
      [
        347,
        "subprocess.STARTF_USESHOWWINDOW"
      ]
    ],
    "startf_usestdhandles (in module subprocess)": [
      [
        347,
        "subprocess.STARTF_USESTDHANDLES"
      ]
    ],
    "startupinfo (class in subprocess)": [
      [
        347,
        "subprocess.STARTUPINFO"
      ]
    ],
    "stdout (in module subprocess)": [
      [
        347,
        "subprocess.STDOUT"
      ]
    ],
    "std_error_handle (in module subprocess)": [
      [
        347,
        "subprocess.STD_ERROR_HANDLE"
      ]
    ],
    "std_input_handle (in module subprocess)": [
      [
        347,
        "subprocess.STD_INPUT_HANDLE"
      ]
    ],
    "std_output_handle (in module subprocess)": [
      [
        347,
        "subprocess.STD_OUTPUT_HANDLE"
      ]
    ],
    "sw_hide (in module subprocess)": [
      [
        347,
        "subprocess.SW_HIDE"
      ]
    ],
    "subprocesserror": [
      [
        347,
        "subprocess.SubprocessError"
      ]
    ],
    "systemroot": [
      [
        347,
        "index-4"
      ]
    ],
    "timeoutexpired": [
      [
        347,
        "subprocess.TimeoutExpired"
      ]
    ],
    "args (subprocess.completedprocess attribute)": [
      [
        347,
        "subprocess.CompletedProcess.args"
      ]
    ],
    "args (subprocess.popen attribute)": [
      [
        347,
        "subprocess.Popen.args"
      ]
    ],
    "call() (in module subprocess)": [
      [
        347,
        "subprocess.call"
      ]
    ],
    "check_call() (in module subprocess)": [
      [
        347,
        "subprocess.check_call"
      ]
    ],
    "check_output() (in module subprocess)": [
      [
        347,
        "subprocess.check_output"
      ]
    ],
    "check_returncode() (subprocess.completedprocess method)": [
      [
        347,
        "subprocess.CompletedProcess.check_returncode"
      ]
    ],
    "cmd (subprocess.calledprocesserror attribute)": [
      [
        347,
        "subprocess.CalledProcessError.cmd"
      ]
    ],
    "cmd (subprocess.timeoutexpired attribute)": [
      [
        347,
        "subprocess.TimeoutExpired.cmd"
      ]
    ],
    "communicate() (subprocess.popen method)": [
      [
        347,
        "subprocess.Popen.communicate"
      ]
    ],
    "dwflags (subprocess.startupinfo attribute)": [
      [
        347,
        "subprocess.STARTUPINFO.dwFlags"
      ]
    ],
    "getoutput() (in module subprocess)": [
      [
        347,
        "subprocess.getoutput"
      ]
    ],
    "getstatusoutput() (in module subprocess)": [
      [
        347,
        "subprocess.getstatusoutput"
      ]
    ],
    "hstderror (subprocess.startupinfo attribute)": [
      [
        347,
        "subprocess.STARTUPINFO.hStdError"
      ]
    ],
    "hstdinput (subprocess.startupinfo attribute)": [
      [
        347,
        "subprocess.STARTUPINFO.hStdInput"
      ]
    ],
    "hstdoutput (subprocess.startupinfo attribute)": [
      [
        347,
        "subprocess.STARTUPINFO.hStdOutput"
      ]
    ],
    "kill() (subprocess.popen method)": [
      [
        347,
        "subprocess.Popen.kill"
      ]
    ],
    "lpattributelist (subprocess.startupinfo attribute)": [
      [
        347,
        "subprocess.STARTUPINFO.lpAttributeList"
      ]
    ],
    "output (subprocess.calledprocesserror attribute)": [
      [
        347,
        "subprocess.CalledProcessError.output"
      ]
    ],
    "output (subprocess.timeoutexpired attribute)": [
      [
        347,
        "subprocess.TimeoutExpired.output"
      ]
    ],
    "pid (subprocess.popen attribute)": [
      [
        347,
        "subprocess.Popen.pid"
      ]
    ],
    "poll() (subprocess.popen method)": [
      [
        347,
        "subprocess.Popen.poll"
      ]
    ],
    "returncode (subprocess.calledprocesserror attribute)": [
      [
        347,
        "subprocess.CalledProcessError.returncode"
      ]
    ],
    "returncode (subprocess.completedprocess attribute)": [
      [
        347,
        "subprocess.CompletedProcess.returncode"
      ]
    ],
    "returncode (subprocess.popen attribute)": [
      [
        347,
        "subprocess.Popen.returncode"
      ]
    ],
    "run() (in module subprocess)": [
      [
        347,
        "subprocess.run"
      ]
    ],
    "send_signal() (subprocess.popen method)": [
      [
        347,
        "subprocess.Popen.send_signal"
      ]
    ],
    "stderr (subprocess.calledprocesserror attribute)": [
      [
        347,
        "subprocess.CalledProcessError.stderr"
      ]
    ],
    "stderr (subprocess.completedprocess attribute)": [
      [
        347,
        "subprocess.CompletedProcess.stderr"
      ]
    ],
    "stderr (subprocess.popen attribute)": [
      [
        347,
        "subprocess.Popen.stderr"
      ]
    ],
    "stderr (subprocess.timeoutexpired attribute)": [
      [
        347,
        "subprocess.TimeoutExpired.stderr"
      ]
    ],
    "stdin (subprocess.popen attribute)": [
      [
        347,
        "subprocess.Popen.stdin"
      ]
    ],
    "stdout (subprocess.calledprocesserror attribute)": [
      [
        347,
        "subprocess.CalledProcessError.stdout"
      ]
    ],
    "stdout (subprocess.completedprocess attribute)": [
      [
        347,
        "subprocess.CompletedProcess.stdout"
      ]
    ],
    "stdout (subprocess.popen attribute)": [
      [
        347,
        "subprocess.Popen.stdout"
      ]
    ],
    "stdout (subprocess.timeoutexpired attribute)": [
      [
        347,
        "subprocess.TimeoutExpired.stdout"
      ]
    ],
    "subprocess": [
      [
        347,
        "module-subprocess"
      ]
    ],
    "subprocess module": [
      [
        347,
        "index-1"
      ]
    ],
    "terminate() (subprocess.popen method)": [
      [
        347,
        "subprocess.Popen.terminate"
      ]
    ],
    "timeout (subprocess.timeoutexpired attribute)": [
      [
        347,
        "subprocess.TimeoutExpired.timeout"
      ]
    ],
    "wshowwindow (subprocess.startupinfo attribute)": [
      [
        347,
        "subprocess.STARTUPINFO.wShowWindow"
      ]
    ],
    "wait() (subprocess.popen method)": [
      [
        347,
        "subprocess.Popen.wait"
      ]
    ],
    "audio_file_encoding_adpcm_g721 (in module sunau)": [
      [
        348,
        "sunau.AUDIO_FILE_ENCODING_ADPCM_G721"
      ]
    ],
    "audio_file_encoding_adpcm_g722 (in module sunau)": [
      [
        348,
        "sunau.AUDIO_FILE_ENCODING_ADPCM_G722"
      ]
    ],
    "audio_file_encoding_adpcm_g723_3 (in module sunau)": [
      [
        348,
        "sunau.AUDIO_FILE_ENCODING_ADPCM_G723_3"
      ]
    ],
    "audio_file_encoding_adpcm_g723_5 (in module sunau)": [
      [
        348,
        "sunau.AUDIO_FILE_ENCODING_ADPCM_G723_5"
      ]
    ],
    "audio_file_encoding_alaw_8 (in module sunau)": [
      [
        348,
        "sunau.AUDIO_FILE_ENCODING_ALAW_8"
      ]
    ],
    "audio_file_encoding_double (in module sunau)": [
      [
        348,
        "sunau.AUDIO_FILE_ENCODING_DOUBLE"
      ]
    ],
    "audio_file_encoding_float (in module sunau)": [
      [
        348,
        "sunau.AUDIO_FILE_ENCODING_FLOAT"
      ]
    ],
    "audio_file_encoding_linear_16 (in module sunau)": [
      [
        348,
        "sunau.AUDIO_FILE_ENCODING_LINEAR_16"
      ]
    ],
    "audio_file_encoding_linear_24 (in module sunau)": [
      [
        348,
        "sunau.AUDIO_FILE_ENCODING_LINEAR_24"
      ]
    ],
    "audio_file_encoding_linear_32 (in module sunau)": [
      [
        348,
        "sunau.AUDIO_FILE_ENCODING_LINEAR_32"
      ]
    ],
    "audio_file_encoding_linear_8 (in module sunau)": [
      [
        348,
        "sunau.AUDIO_FILE_ENCODING_LINEAR_8"
      ]
    ],
    "audio_file_encoding_mulaw_8 (in module sunau)": [
      [
        348,
        "sunau.AUDIO_FILE_ENCODING_MULAW_8"
      ]
    ],
    "audio_file_magic (in module sunau)": [
      [
        348,
        "sunau.AUDIO_FILE_MAGIC"
      ]
    ],
    "pep 594#sunau": [
      [
        348,
        "index-0"
      ]
    ],
    "close() (sunau.au_read method)": [
      [
        348,
        "sunau.AU_read.close"
      ]
    ],
    "close() (sunau.au_write method)": [
      [
        348,
        "sunau.AU_write.close"
      ]
    ],
    "getcompname() (sunau.au_read method)": [
      [
        348,
        "sunau.AU_read.getcompname"
      ]
    ],
    "getcomptype() (sunau.au_read method)": [
      [
        348,
        "sunau.AU_read.getcomptype"
      ]
    ],
    "getframerate() (sunau.au_read method)": [
      [
        348,
        "sunau.AU_read.getframerate"
      ]
    ],
    "getmark() (sunau.au_read method)": [
      [
        348,
        "sunau.AU_read.getmark"
      ]
    ],
    "getmarkers() (sunau.au_read method)": [
      [
        348,
        "sunau.AU_read.getmarkers"
      ]
    ],
    "getnchannels() (sunau.au_read method)": [
      [
        348,
        "sunau.AU_read.getnchannels"
      ]
    ],
    "getnframes() (sunau.au_read method)": [
      [
        348,
        "sunau.AU_read.getnframes"
      ]
    ],
    "getparams() (sunau.au_read method)": [
      [
        348,
        "sunau.AU_read.getparams"
      ]
    ],
    "getsampwidth() (sunau.au_read method)": [
      [
        348,
        "sunau.AU_read.getsampwidth"
      ]
    ],
    "open() (in module sunau)": [
      [
        348,
        "sunau.open"
      ]
    ],
    "readframes() (sunau.au_read method)": [
      [
        348,
        "sunau.AU_read.readframes"
      ]
    ],
    "rewind() (sunau.au_read method)": [
      [
        348,
        "sunau.AU_read.rewind"
      ]
    ],
    "setcomptype() (sunau.au_write method)": [
      [
        348,
        "sunau.AU_write.setcomptype"
      ]
    ],
    "setframerate() (sunau.au_write method)": [
      [
        348,
        "sunau.AU_write.setframerate"
      ]
    ],
    "setnchannels() (sunau.au_write method)": [
      [
        348,
        "sunau.AU_write.setnchannels"
      ]
    ],
    "setnframes() (sunau.au_write method)": [
      [
        348,
        "sunau.AU_write.setnframes"
      ]
    ],
    "setparams() (sunau.au_write method)": [
      [
        348,
        "sunau.AU_write.setparams"
      ]
    ],
    "setpos() (sunau.au_read method)": [
      [
        348,
        "sunau.AU_read.setpos"
      ]
    ],
    "setsampwidth() (sunau.au_write method)": [
      [
        348,
        "sunau.AU_write.setsampwidth"
      ]
    ],
    "sunau": [
      [
        348,
        "module-sunau"
      ]
    ],
    "tell() (sunau.au_read method)": [
      [
        348,
        "sunau.AU_read.tell"
      ]
    ],
    "tell() (sunau.au_write method)": [
      [
        348,
        "sunau.AU_write.tell"
      ]
    ],
    "writeframes() (sunau.au_write method)": [
      [
        348,
        "sunau.AU_write.writeframes"
      ]
    ],
    "writeframesraw() (sunau.au_write method)": [
      [
        348,
        "sunau.AU_write.writeframesraw"
      ]
    ],
    "class (class in symtable)": [
      [
        350,
        "symtable.Class"
      ]
    ],
    "function (class in symtable)": [
      [
        350,
        "symtable.Function"
      ]
    ],
    "symbol (class in symtable)": [
      [
        350,
        "symtable.Symbol"
      ]
    ],
    "symboltable (class in symtable)": [
      [
        350,
        "symtable.SymbolTable"
      ]
    ],
    "get_children() (symtable.symboltable method)": [
      [
        350,
        "symtable.SymbolTable.get_children"
      ]
    ],
    "get_frees() (symtable.function method)": [
      [
        350,
        "symtable.Function.get_frees"
      ]
    ],
    "get_globals() (symtable.function method)": [
      [
        350,
        "symtable.Function.get_globals"
      ]
    ],
    "get_id() (symtable.symboltable method)": [
      [
        350,
        "symtable.SymbolTable.get_id"
      ]
    ],
    "get_identifiers() (symtable.symboltable method)": [
      [
        350,
        "symtable.SymbolTable.get_identifiers"
      ]
    ],
    "get_lineno() (symtable.symboltable method)": [
      [
        350,
        "symtable.SymbolTable.get_lineno"
      ]
    ],
    "get_locals() (symtable.function method)": [
      [
        350,
        "symtable.Function.get_locals"
      ]
    ],
    "get_methods() (symtable.class method)": [
      [
        350,
        "symtable.Class.get_methods"
      ]
    ],
    "get_name() (symtable.symbol method)": [
      [
        350,
        "symtable.Symbol.get_name"
      ]
    ],
    "get_name() (symtable.symboltable method)": [
      [
        350,
        "symtable.SymbolTable.get_name"
      ]
    ],
    "get_namespace() (symtable.symbol method)": [
      [
        350,
        "symtable.Symbol.get_namespace"
      ]
    ],
    "get_namespaces() (symtable.symbol method)": [
      [
        350,
        "symtable.Symbol.get_namespaces"
      ]
    ],
    "get_nonlocals() (symtable.function method)": [
      [
        350,
        "symtable.Function.get_nonlocals"
      ]
    ],
    "get_parameters() (symtable.function method)": [
      [
        350,
        "symtable.Function.get_parameters"
      ]
    ],
    "get_symbols() (symtable.symboltable method)": [
      [
        350,
        "symtable.SymbolTable.get_symbols"
      ]
    ],
    "get_type() (symtable.symboltable method)": [
      [
        350,
        "symtable.SymbolTable.get_type"
      ]
    ],
    "has_children() (symtable.symboltable method)": [
      [
        350,
        "symtable.SymbolTable.has_children"
      ]
    ],
    "is_annotated() (symtable.symbol method)": [
      [
        350,
        "symtable.Symbol.is_annotated"
      ]
    ],
    "is_assigned() (symtable.symbol method)": [
      [
        350,
        "symtable.Symbol.is_assigned"
      ]
    ],
    "is_declared_global() (symtable.symbol method)": [
      [
        350,
        "symtable.Symbol.is_declared_global"
      ]
    ],
    "is_free() (symtable.symbol method)": [
      [
        350,
        "symtable.Symbol.is_free"
      ]
    ],
    "is_global() (symtable.symbol method)": [
      [
        350,
        "symtable.Symbol.is_global"
      ]
    ],
    "is_imported() (symtable.symbol method)": [
      [
        350,
        "symtable.Symbol.is_imported"
      ]
    ],
    "is_local() (symtable.symbol method)": [
      [
        350,
        "symtable.Symbol.is_local"
      ]
    ],
    "is_namespace() (symtable.symbol method)": [
      [
        350,
        "symtable.Symbol.is_namespace"
      ]
    ],
    "is_nested() (symtable.symboltable method)": [
      [
        350,
        "symtable.SymbolTable.is_nested"
      ]
    ],
    "is_nonlocal() (symtable.symbol method)": [
      [
        350,
        "symtable.Symbol.is_nonlocal"
      ]
    ],
    "is_optimized() (symtable.symboltable method)": [
      [
        350,
        "symtable.SymbolTable.is_optimized"
      ]
    ],
    "is_parameter() (symtable.symbol method)": [
      [
        350,
        "symtable.Symbol.is_parameter"
      ]
    ],
    "is_referenced() (symtable.symbol method)": [
      [
        350,
        "symtable.Symbol.is_referenced"
      ]
    ],
    "lookup() (symtable.symboltable method)": [
      [
        350,
        "symtable.SymbolTable.lookup"
      ]
    ],
    "symtable": [
      [
        350,
        "module-symtable"
      ]
    ],
    "symtable() (in module symtable)": [
      [
        350,
        "symtable.symtable"
      ]
    ],
    "pep 3149": [
      [
        351,
        "index-0"
      ],
      [
        474,
        "index-6"
      ],
      [
        482,
        "index-297"
      ]
    ],
    "pep 421": [
      [
        351,
        "index-15"
      ],
      [
        351,
        "index-16"
      ],
      [
        475,
        "index-19"
      ]
    ],
    "__breakpointhook__ (in module sys)": [
      [
        351,
        "sys.__breakpointhook__"
      ]
    ],
    "__displayhook__ (in module sys)": [
      [
        351,
        "sys.__displayhook__"
      ]
    ],
    "__excepthook__ (in module sys)": [
      [
        351,
        "sys.__excepthook__"
      ]
    ],
    "__interactivehook__ (in module sys)": [
      [
        351,
        "sys.__interactivehook__"
      ]
    ],
    "__stderr__ (in module sys)": [
      [
        351,
        "sys.__stderr__"
      ]
    ],
    "__stdin__ (in module sys)": [
      [
        351,
        "sys.__stdin__"
      ]
    ],
    "__stdout__ (in module sys)": [
      [
        351,
        "sys.__stdout__"
      ]
    ],
    "__unraisablehook__ (in module sys)": [
      [
        351,
        "sys.__unraisablehook__"
      ]
    ],
    "_clear_type_cache() (in module sys)": [
      [
        351,
        "sys._clear_type_cache"
      ]
    ],
    "_current_exceptions() (in module sys)": [
      [
        351,
        "sys._current_exceptions"
      ]
    ],
    "_current_frames() (in module sys)": [
      [
        351,
        "sys._current_frames"
      ]
    ],
    "_debugmallocstats() (in module sys)": [
      [
        351,
        "sys._debugmallocstats"
      ]
    ],
    "_emscripten_info (in module sys)": [
      [
        351,
        "sys._emscripten_info"
      ]
    ],
    "_enablelegacywindowsfsencoding() (in module sys)": [
      [
        351,
        "sys._enablelegacywindowsfsencoding"
      ]
    ],
    "_getframe() (in module sys)": [
      [
        351,
        "sys._getframe"
      ]
    ],
    "_getframemodulename() (in module sys)": [
      [
        351,
        "sys._getframemodulename"
      ]
    ],
    "_xoptions (in module sys)": [
      [
        351,
        "sys._xoptions"
      ]
    ],
    "abiflags (in module sys)": [
      [
        351,
        "sys.abiflags"
      ]
    ],
    "activate_stack_trampoline() (in module sys)": [
      [
        351,
        "sys.activate_stack_trampoline"
      ]
    ],
    "addaudithook() (in module sys)": [
      [
        351,
        "sys.addaudithook"
      ]
    ],
    "algorithm (sys.hash_info attribute)": [
      [
        351,
        "sys.hash_info.algorithm"
      ]
    ],
    "api_version (in module sys)": [
      [
        351,
        "sys.api_version"
      ]
    ],
    "audit() (in module sys)": [
      [
        351,
        "sys.audit"
      ]
    ],
    "auditing": [
      [
        351,
        "index-2"
      ]
    ],
    "base_exec_prefix (in module sys)": [
      [
        351,
        "sys.base_exec_prefix"
      ]
    ],
    "base_prefix (in module sys)": [
      [
        351,
        "sys.base_prefix"
      ]
    ],
    "bits_per_digit (sys.int_info attribute)": [
      [
        351,
        "sys.int_info.bits_per_digit"
      ]
    ],
    "breakpointhook() (in module sys)": [
      [
        351,
        "sys.breakpointhook"
      ]
    ],
    "builtin_module_names (in module sys)": [
      [
        351,
        "sys.builtin_module_names"
      ]
    ],
    "byteorder (in module sys)": [
      [
        351,
        "sys.byteorder"
      ]
    ],
    "bytes_warning (sys.flags attribute)": [
      [
        351,
        "sys.flags.bytes_warning"
      ]
    ],
    "call_tracing() (in module sys)": [
      [
        351,
        "sys.call_tracing"
      ]
    ],
    "deactivate_stack_trampoline() (in module sys)": [
      [
        351,
        "sys.deactivate_stack_trampoline"
      ]
    ],
    "debug (sys.flags attribute)": [
      [
        351,
        "sys.flags.debug"
      ]
    ],
    "default_max_str_digits (sys.int_info attribute)": [
      [
        351,
        "sys.int_info.default_max_str_digits"
      ]
    ],
    "dev_mode (sys.flags attribute)": [
      [
        351,
        "sys.flags.dev_mode"
      ]
    ],
    "dig (sys.float_info attribute)": [
      [
        351,
        "sys.float_info.dig"
      ]
    ],
    "displayhook() (in module sys)": [
      [
        351,
        "sys.displayhook"
      ]
    ],
    "dllhandle (in module sys)": [
      [
        351,
        "sys.dllhandle"
      ]
    ],
    "dont_write_bytecode (in module sys)": [
      [
        351,
        "sys.dont_write_bytecode"
      ]
    ],
    "dont_write_bytecode (sys.flags attribute)": [
      [
        351,
        "sys.flags.dont_write_bytecode"
      ]
    ],
    "emscripten_version (sys._emscripten_info attribute)": [
      [
        351,
        "sys._emscripten_info.emscripten_version"
      ]
    ],
    "epsilon (sys.float_info attribute)": [
      [
        351,
        "sys.float_info.epsilon"
      ]
    ],
    "exc_info() (in module sys)": [
      [
        351,
        "sys.exc_info"
      ]
    ],
    "exception() (in module sys)": [
      [
        351,
        "sys.exception"
      ]
    ],
    "exec_prefix (in module sys)": [
      [
        351,
        "sys.exec_prefix"
      ]
    ],
    "exit() (in module sys)": [
      [
        351,
        "sys.exit"
      ]
    ],
    "flags (in module sys)": [
      [
        351,
        "sys.flags"
      ]
    ],
    "float_info (in module sys)": [
      [
        351,
        "sys.float_info"
      ]
    ],
    "float_repr_style (in module sys)": [
      [
        351,
        "sys.float_repr_style"
      ]
    ],
    "get_asyncgen_hooks() (in module sys)": [
      [
        351,
        "sys.get_asyncgen_hooks"
      ]
    ],
    "get_coroutine_origin_tracking_depth() (in module sys)": [
      [
        351,
        "sys.get_coroutine_origin_tracking_depth"
      ]
    ],
    "get_int_max_str_digits() (in module sys)": [
      [
        351,
        "sys.get_int_max_str_digits"
      ]
    ],
    "getallocatedblocks() (in module sys)": [
      [
        351,
        "sys.getallocatedblocks"
      ]
    ],
    "getandroidapilevel() (in module sys)": [
      [
        351,
        "sys.getandroidapilevel"
      ]
    ],
    "getdefaultencoding() (in module sys)": [
      [
        351,
        "sys.getdefaultencoding"
      ]
    ],
    "getdlopenflags() (in module sys)": [
      [
        351,
        "sys.getdlopenflags"
      ]
    ],
    "getfilesystemencodeerrors() (in module sys)": [
      [
        351,
        "sys.getfilesystemencodeerrors"
      ]
    ],
    "getfilesystemencoding() (in module sys)": [
      [
        351,
        "sys.getfilesystemencoding"
      ]
    ],
    "getprofile() (in module sys)": [
      [
        351,
        "sys.getprofile"
      ]
    ],
    "getrecursionlimit() (in module sys)": [
      [
        351,
        "sys.getrecursionlimit"
      ]
    ],
    "getrefcount() (in module sys)": [
      [
        351,
        "sys.getrefcount"
      ]
    ],
    "getsizeof() (in module sys)": [
      [
        351,
        "sys.getsizeof"
      ]
    ],
    "getswitchinterval() (in module sys)": [
      [
        351,
        "sys.getswitchinterval"
      ]
    ],
    "gettrace() (in module sys)": [
      [
        351,
        "sys.gettrace"
      ]
    ],
    "getunicodeinternedsize() (in module sys)": [
      [
        351,
        "sys.getunicodeinternedsize"
      ]
    ],
    "getwindowsversion() (in module sys)": [
      [
        351,
        "sys.getwindowsversion"
      ]
    ],
    "hash_bits (sys.hash_info attribute)": [
      [
        351,
        "sys.hash_info.hash_bits"
      ]
    ],
    "hash_info (in module sys)": [
      [
        351,
        "sys.hash_info"
      ]
    ],
    "hash_randomization (sys.flags attribute)": [
      [
        351,
        "sys.flags.hash_randomization"
      ]
    ],
    "hexversion (in module sys)": [
      [
        351,
        "sys.hexversion"
      ]
    ],
    "ignore_environment (sys.flags attribute)": [
      [
        351,
        "sys.flags.ignore_environment"
      ]
    ],
    "imag (sys.hash_info attribute)": [
      [
        351,
        "sys.hash_info.imag"
      ]
    ],
    "implementation (in module sys)": [
      [
        351,
        "sys.implementation"
      ]
    ],
    "inf (sys.hash_info attribute)": [
      [
        351,
        "sys.hash_info.inf"
      ]
    ],
    "inspect (sys.flags attribute)": [
      [
        351,
        "sys.flags.inspect"
      ]
    ],
    "int_info (in module sys)": [
      [
        351,
        "sys.int_info"
      ]
    ],
    "int_max_str_digits (sys.flags attribute)": [
      [
        351,
        "sys.flags.int_max_str_digits"
      ]
    ],
    "interactive (sys.flags attribute)": [
      [
        351,
        "sys.flags.interactive"
      ]
    ],
    "intern() (in module sys)": [
      [
        351,
        "sys.intern"
      ]
    ],
    "interpreter prompts": [
      [
        351,
        "index-27"
      ]
    ],
    "is_finalizing() (in module sys)": [
      [
        351,
        "sys.is_finalizing"
      ]
    ],
    "is_stack_trampoline_active() (in module sys)": [
      [
        351,
        "sys.is_stack_trampoline_active"
      ]
    ],
    "isolated (sys.flags attribute)": [
      [
        351,
        "sys.flags.isolated"
      ]
    ],
    "last_exc (in module sys)": [
      [
        351,
        "sys.last_exc"
      ]
    ],
    "last_traceback (in module sys)": [
      [
        351,
        "sys.last_traceback"
      ],
      [
        427,
        "index-66"
      ]
    ],
    "last_type (in module sys)": [
      [
        351,
        "sys.last_type"
      ]
    ],
    "last_value (in module sys)": [
      [
        351,
        "sys.last_value"
      ]
    ],
    "lock (sys.thread_info attribute)": [
      [
        351,
        "sys.thread_info.lock"
      ]
    ],
    "mant_dig (sys.float_info attribute)": [
      [
        351,
        "sys.float_info.mant_dig"
      ]
    ],
    "max (sys.float_info attribute)": [
      [
        351,
        "sys.float_info.max"
      ]
    ],
    "max_10_exp (sys.float_info attribute)": [
      [
        351,
        "sys.float_info.max_10_exp"
      ]
    ],
    "max_exp (sys.float_info attribute)": [
      [
        351,
        "sys.float_info.max_exp"
      ]
    ],
    "maxsize (in module sys)": [
      [
        351,
        "sys.maxsize"
      ]
    ],
    "maxunicode (in module sys)": [
      [
        351,
        "sys.maxunicode"
      ]
    ],
    "meta_path (in module sys)": [
      [
        351,
        "sys.meta_path"
      ]
    ],
    "min (sys.float_info attribute)": [
      [
        351,
        "sys.float_info.min"
      ]
    ],
    "min_10_exp (sys.float_info attribute)": [
      [
        351,
        "sys.float_info.min_10_exp"
      ]
    ],
    "min_exp (sys.float_info attribute)": [
      [
        351,
        "sys.float_info.min_exp"
      ]
    ],
    "modulus (sys.hash_info attribute)": [
      [
        351,
        "sys.hash_info.modulus"
      ]
    ],
    "name (sys.thread_info attribute)": [
      [
        351,
        "sys.thread_info.name"
      ]
    ],
    "nan (sys.hash_info attribute)": [
      [
        351,
        "sys.hash_info.nan"
      ]
    ],
    "no_site (sys.flags attribute)": [
      [
        351,
        "sys.flags.no_site"
      ]
    ],
    "no_user_site (sys.flags attribute)": [
      [
        351,
        "sys.flags.no_user_site"
      ]
    ],
    "optimize (sys.flags attribute)": [
      [
        351,
        "sys.flags.optimize"
      ]
    ],
    "orig_argv (in module sys)": [
      [
        351,
        "sys.orig_argv"
      ]
    ],
    "path_hooks (in module sys)": [
      [
        351,
        "sys.path_hooks"
      ]
    ],
    "path_importer_cache (in module sys)": [
      [
        351,
        "sys.path_importer_cache"
      ]
    ],
    "platlibdir (in module sys)": [
      [
        351,
        "sys.platlibdir"
      ]
    ],
    "prefix (in module sys)": [
      [
        351,
        "sys.prefix"
      ]
    ],
    "profile function": [
      [
        351,
        "index-10"
      ],
      [
        351,
        "index-28"
      ],
      [
        364,
        "index-2"
      ],
      [
        364,
        "index-3"
      ]
    ],
    "profiler": [
      [
        351,
        "index-10"
      ],
      [
        351,
        "index-28"
      ]
    ],
    "prompts, interpreter": [
      [
        351,
        "index-27"
      ]
    ],
    "ps1 (in module sys)": [
      [
        351,
        "sys.ps1"
      ]
    ],
    "ps2 (in module sys)": [
      [
        351,
        "sys.ps2"
      ]
    ],
    "pthreads (sys._emscripten_info attribute)": [
      [
        351,
        "sys._emscripten_info.pthreads"
      ]
    ],
    "pycache_prefix (in module sys)": [
      [
        351,
        "sys.pycache_prefix"
      ]
    ],
    "quiet (sys.flags attribute)": [
      [
        351,
        "sys.flags.quiet"
      ]
    ],
    "radix (sys.float_info attribute)": [
      [
        351,
        "sys.float_info.radix"
      ]
    ],
    "rounds (sys.float_info attribute)": [
      [
        351,
        "sys.float_info.rounds"
      ]
    ],
    "runtime (sys._emscripten_info attribute)": [
      [
        351,
        "sys._emscripten_info.runtime"
      ]
    ],
    "safe_path (sys.flags attribute)": [
      [
        351,
        "sys.flags.safe_path"
      ]
    ],
    "seed_bits (sys.hash_info attribute)": [
      [
        351,
        "sys.hash_info.seed_bits"
      ]
    ],
    "set_asyncgen_hooks() (in module sys)": [
      [
        351,
        "sys.set_asyncgen_hooks"
      ]
    ],
    "set_coroutine_origin_tracking_depth() (in module sys)": [
      [
        351,
        "sys.set_coroutine_origin_tracking_depth"
      ]
    ],
    "set_int_max_str_digits() (in module sys)": [
      [
        351,
        "sys.set_int_max_str_digits"
      ]
    ],
    "setdlopenflags() (in module sys)": [
      [
        351,
        "sys.setdlopenflags"
      ]
    ],
    "setprofile() (in module sys)": [
      [
        351,
        "sys.setprofile"
      ]
    ],
    "setrecursionlimit() (in module sys)": [
      [
        351,
        "sys.setrecursionlimit"
      ]
    ],
    "setswitchinterval() (in module sys)": [
      [
        351,
        "sys.setswitchinterval"
      ]
    ],
    "settrace() (in module sys)": [
      [
        351,
        "sys.settrace"
      ]
    ],
    "shared_memory (sys._emscripten_info attribute)": [
      [
        351,
        "sys._emscripten_info.shared_memory"
      ]
    ],
    "sizeof_digit (sys.int_info attribute)": [
      [
        351,
        "sys.int_info.sizeof_digit"
      ]
    ],
    "stdlib_module_names (in module sys)": [
      [
        351,
        "sys.stdlib_module_names"
      ]
    ],
    "str_digits_check_threshold (sys.int_info attribute)": [
      [
        351,
        "sys.int_info.str_digits_check_threshold"
      ]
    ],
    "thread_info (in module sys)": [
      [
        351,
        "sys.thread_info"
      ]
    ],
    "trace function": [
      [
        351,
        "index-11"
      ],
      [
        351,
        "index-29"
      ],
      [
        364,
        "index-0"
      ],
      [
        364,
        "index-1"
      ]
    ],
    "traceback": [
      [
        351,
        "index-8"
      ],
      [
        380,
        "index-0"
      ],
      [
        380,
        "module-traceback"
      ],
      [
        426,
        "index-11"
      ],
      [
        427,
        "index-66"
      ],
      [
        435,
        "index-28"
      ]
    ],
    "tracebacklimit (in module sys)": [
      [
        351,
        "sys.tracebacklimit"
      ]
    ],
    "unraisablehook() (in module sys)": [
      [
        351,
        "sys.unraisablehook"
      ]
    ],
    "utf8_mode (sys.flags attribute)": [
      [
        351,
        "sys.flags.utf8_mode"
      ]
    ],
    "verbose (sys.flags attribute)": [
      [
        351,
        "sys.flags.verbose"
      ]
    ],
    "version (sys.thread_info attribute)": [
      [
        351,
        "sys.thread_info.version"
      ]
    ],
    "version_info (in module sys)": [
      [
        351,
        "sys.version_info"
      ]
    ],
    "warn_default_encoding (sys.flags attribute)": [
      [
        351,
        "sys.flags.warn_default_encoding"
      ]
    ],
    "warnoptions (in module sys)": [
      [
        351,
        "sys.warnoptions"
      ]
    ],
    "width (sys.hash_info attribute)": [
      [
        351,
        "sys.hash_info.width"
      ]
    ],
    "winver (in module sys)": [
      [
        351,
        "sys.winver"
      ]
    ],
    "branch (monitoring event)": [
      [
        352,
        "monitoring-event-BRANCH"
      ]
    ],
    "call (monitoring event)": [
      [
        352,
        "monitoring-event-CALL"
      ]
    ],
    "c_raise (monitoring event)": [
      [
        352,
        "monitoring-event-C_RAISE"
      ]
    ],
    "c_return (monitoring event)": [
      [
        352,
        "monitoring-event-C_RETURN"
      ]
    ],
    "disable (in module sys.monitoring)": [
      [
        352,
        "sys.monitoring.DISABLE"
      ]
    ],
    "exception_handled (monitoring event)": [
      [
        352,
        "monitoring-event-EXCEPTION_HANDLED"
      ]
    ],
    "instruction (monitoring event)": [
      [
        352,
        "monitoring-event-INSTRUCTION"
      ]
    ],
    "jump (monitoring event)": [
      [
        352,
        "monitoring-event-JUMP"
      ]
    ],
    "line (monitoring event)": [
      [
        352,
        "monitoring-event-LINE"
      ]
    ],
    "missing (in module sys.monitoring)": [
      [
        352,
        "sys.monitoring.MISSING"
      ]
    ],
    "no_events (monitoring event)": [
      [
        352,
        "monitoring-event-NO_EVENTS"
      ]
    ],
    "pep 380#use-of-stopiteration-to-return-values": [
      [
        352,
        "index-0"
      ]
    ],
    "py_resume (monitoring event)": [
      [
        352,
        "monitoring-event-PY_RESUME"
      ]
    ],
    "py_return (monitoring event)": [
      [
        352,
        "monitoring-event-PY_RETURN"
      ]
    ],
    "py_start (monitoring event)": [
      [
        352,
        "monitoring-event-PY_START"
      ]
    ],
    "py_throw (monitoring event)": [
      [
        352,
        "monitoring-event-PY_THROW"
      ]
    ],
    "py_unwind (monitoring event)": [
      [
        352,
        "monitoring-event-PY_UNWIND"
      ]
    ],
    "py_yield (monitoring event)": [
      [
        352,
        "monitoring-event-PY_YIELD"
      ]
    ],
    "raise (monitoring event)": [
      [
        352,
        "monitoring-event-RAISE"
      ]
    ],
    "reraise (monitoring event)": [
      [
        352,
        "monitoring-event-RERAISE"
      ]
    ],
    "stop_iteration (monitoring event)": [
      [
        352,
        "monitoring-event-STOP_ITERATION"
      ]
    ],
    "free_tool_id() (in module sys.monitoring)": [
      [
        352,
        "sys.monitoring.free_tool_id"
      ]
    ],
    "get_events() (in module sys.monitoring)": [
      [
        352,
        "sys.monitoring.get_events"
      ]
    ],
    "get_local_events() (in module sys.monitoring)": [
      [
        352,
        "sys.monitoring.get_local_events"
      ]
    ],
    "get_tool() (in module sys.monitoring)": [
      [
        352,
        "sys.monitoring.get_tool"
      ]
    ],
    "register_callback() (in module sys.monitoring)": [
      [
        352,
        "sys.monitoring.register_callback"
      ]
    ],
    "restart_events() (in module sys.monitoring)": [
      [
        352,
        "sys.monitoring.restart_events"
      ]
    ],
    "set_events() (in module sys.monitoring)": [
      [
        352,
        "sys.monitoring.set_events"
      ]
    ],
    "set_local_events() (in module sys.monitoring)": [
      [
        352,
        "sys.monitoring.set_local_events"
      ]
    ],
    "sys.monitoring": [
      [
        352,
        "module-sys.monitoring"
      ]
    ],
    "use_tool_id() (in module sys.monitoring)": [
      [
        352,
        "sys.monitoring.use_tool_id"
      ]
    ],
    "_get_preferred_schemes() (in module sysconfig)": [
      [
        354,
        "sysconfig._get_preferred_schemes"
      ]
    ],
    "configuration information": [
      [
        354,
        "index-0"
      ]
    ],
    "get_config_h_filename() (in module sysconfig)": [
      [
        354,
        "sysconfig.get_config_h_filename"
      ]
    ],
    "get_config_var() (in module sysconfig)": [
      [
        354,
        "sysconfig.get_config_var"
      ]
    ],
    "get_config_vars() (in module sysconfig)": [
      [
        354,
        "sysconfig.get_config_vars"
      ]
    ],
    "get_default_scheme() (in module sysconfig)": [
      [
        354,
        "sysconfig.get_default_scheme"
      ]
    ],
    "get_makefile_filename() (in module sysconfig)": [
      [
        354,
        "sysconfig.get_makefile_filename"
      ]
    ],
    "get_path() (in module sysconfig)": [
      [
        354,
        "sysconfig.get_path"
      ]
    ],
    "get_path_names() (in module sysconfig)": [
      [
        354,
        "sysconfig.get_path_names"
      ]
    ],
    "get_paths() (in module sysconfig)": [
      [
        354,
        "sysconfig.get_paths"
      ]
    ],
    "get_platform() (in module sysconfig)": [
      [
        354,
        "sysconfig.get_platform"
      ]
    ],
    "get_preferred_scheme() (in module sysconfig)": [
      [
        354,
        "sysconfig.get_preferred_scheme"
      ]
    ],
    "get_python_version() (in module sysconfig)": [
      [
        354,
        "sysconfig.get_python_version"
      ]
    ],
    "get_scheme_names() (in module sysconfig)": [
      [
        354,
        "sysconfig.get_scheme_names"
      ]
    ],
    "is_python_build() (in module sysconfig)": [
      [
        354,
        "sysconfig.is_python_build"
      ]
    ],
    "parse_config_h() (in module sysconfig)": [
      [
        354,
        "sysconfig.parse_config_h"
      ]
    ],
    "sysconfig": [
      [
        354,
        "module-sysconfig"
      ]
    ],
    "closelog() (in module syslog)": [
      [
        355,
        "syslog.closelog"
      ]
    ],
    "openlog() (in module syslog)": [
      [
        355,
        "syslog.openlog"
      ]
    ],
    "setlogmask() (in module syslog)": [
      [
        355,
        "syslog.setlogmask"
      ]
    ],
    "syslog": [
      [
        355,
        "module-syslog"
      ]
    ],
    "syslog() (in module syslog)": [
      [
        355,
        "syslog.syslog"
      ]
    ],
    "nannynag": [
      [
        356,
        "tabnanny.NannyNag"
      ]
    ],
    "check() (in module tabnanny)": [
      [
        356,
        "tabnanny.check"
      ]
    ],
    "filename_only (in module tabnanny)": [
      [
        356,
        "tabnanny.filename_only"
      ]
    ],
    "process_tokens() (in module tabnanny)": [
      [
        356,
        "tabnanny.process_tokens"
      ]
    ],
    "tabnanny": [
      [
        356,
        "module-tabnanny"
      ]
    ],
    "verbose (in module tabnanny)": [
      [
        356,
        "tabnanny.verbose"
      ]
    ],
    "--create": [
      [
        357,
        "cmdoption-tarfile-create"
      ],
      [
        421,
        "cmdoption-zipfile-create"
      ]
    ],
    "--extract": [
      [
        357,
        "cmdoption-tarfile-extract"
      ],
      [
        421,
        "cmdoption-zipfile-extract"
      ]
    ],
    "--filter": [
      [
        357,
        "cmdoption-tarfile-filter"
      ]
    ],
    "--list": [
      [
        357,
        "cmdoption-tarfile-list"
      ],
      [
        421,
        "cmdoption-zipfile-list"
      ]
    ],
    "--test": [
      [
        357,
        "cmdoption-tarfile-test"
      ],
      [
        421,
        "cmdoption-zipfile-test"
      ]
    ],
    "--verbose": [
      [
        357,
        "cmdoption-tarfile-v"
      ],
      [
        366,
        "cmdoption-timeit-v"
      ],
      [
        387,
        "cmdoption-unittest-discover-v"
      ]
    ],
    "aregtype (in module tarfile)": [
      [
        357,
        "tarfile.AREGTYPE"
      ]
    ],
    "absolutelinkerror": [
      [
        357,
        "tarfile.AbsoluteLinkError"
      ]
    ],
    "absolutepatherror": [
      [
        357,
        "tarfile.AbsolutePathError"
      ]
    ],
    "blktype (in module tarfile)": [
      [
        357,
        "tarfile.BLKTYPE"
      ]
    ],
    "chrtype (in module tarfile)": [
      [
        357,
        "tarfile.CHRTYPE"
      ]
    ],
    "conttype (in module tarfile)": [
      [
        357,
        "tarfile.CONTTYPE"
      ]
    ],
    "compressionerror": [
      [
        357,
        "tarfile.CompressionError"
      ]
    ],
    "default_format (in module tarfile)": [
      [
        357,
        "tarfile.DEFAULT_FORMAT"
      ]
    ],
    "dirtype (in module tarfile)": [
      [
        357,
        "tarfile.DIRTYPE"
      ]
    ],
    "encoding (in module tarfile)": [
      [
        357,
        "tarfile.ENCODING"
      ]
    ],
    "extracterror": [
      [
        357,
        "tarfile.ExtractError"
      ]
    ],
    "fifotype (in module tarfile)": [
      [
        357,
        "tarfile.FIFOTYPE"
      ]
    ],
    "filtererror": [
      [
        357,
        "tarfile.FilterError"
      ]
    ],
    "gnutype_longlink (in module tarfile)": [
      [
        357,
        "tarfile.GNUTYPE_LONGLINK"
      ]
    ],
    "gnutype_longname (in module tarfile)": [
      [
        357,
        "tarfile.GNUTYPE_LONGNAME"
      ]
    ],
    "gnutype_sparse (in module tarfile)": [
      [
        357,
        "tarfile.GNUTYPE_SPARSE"
      ]
    ],
    "gnu_format (in module tarfile)": [
      [
        357,
        "tarfile.GNU_FORMAT"
      ]
    ],
    "headererror": [
      [
        357,
        "tarfile.HeaderError"
      ]
    ],
    "lnktype (in module tarfile)": [
      [
        357,
        "tarfile.LNKTYPE"
      ]
    ],
    "linkoutsidedestinationerror": [
      [
        357,
        "tarfile.LinkOutsideDestinationError"
      ]
    ],
    "outsidedestinationerror": [
      [
        357,
        "tarfile.OutsideDestinationError"
      ]
    ],
    "pax_format (in module tarfile)": [
      [
        357,
        "tarfile.PAX_FORMAT"
      ]
    ],
    "pep 706": [
      [
        357,
        "index-0"
      ],
      [
        471,
        "index-40"
      ],
      [
        472,
        "index-41"
      ],
      [
        473,
        "index-22"
      ],
      [
        480,
        "index-26"
      ],
      [
        481,
        "index-29"
      ]
    ],
    "regtype (in module tarfile)": [
      [
        357,
        "tarfile.REGTYPE"
      ]
    ],
    "readerror": [
      [
        357,
        "tarfile.ReadError"
      ]
    ],
    "symtype (in module tarfile)": [
      [
        357,
        "tarfile.SYMTYPE"
      ]
    ],
    "specialfileerror": [
      [
        357,
        "tarfile.SpecialFileError"
      ]
    ],
    "streamerror": [
      [
        357,
        "tarfile.StreamError"
      ]
    ],
    "tarerror": [
      [
        357,
        "tarfile.TarError"
      ]
    ],
    "tarfile (class in tarfile)": [
      [
        357,
        "tarfile.TarFile"
      ]
    ],
    "tarinfo (class in tarfile)": [
      [
        357,
        "tarfile.TarInfo"
      ]
    ],
    "ustar_format (in module tarfile)": [
      [
        357,
        "tarfile.USTAR_FORMAT"
      ]
    ],
    "add() (tarfile.tarfile method)": [
      [
        357,
        "tarfile.TarFile.add"
      ]
    ],
    "addfile() (tarfile.tarfile method)": [
      [
        357,
        "tarfile.TarFile.addfile"
      ]
    ],
    "chksum (tarfile.tarinfo attribute)": [
      [
        357,
        "tarfile.TarInfo.chksum"
      ]
    ],
    "close() (tarfile.tarfile method)": [
      [
        357,
        "tarfile.TarFile.close"
      ]
    ],
    "data_filter() (in module tarfile)": [
      [
        357,
        "tarfile.data_filter"
      ]
    ],
    "devmajor (tarfile.tarinfo attribute)": [
      [
        357,
        "tarfile.TarInfo.devmajor"
      ]
    ],
    "devminor (tarfile.tarinfo attribute)": [
      [
        357,
        "tarfile.TarInfo.devminor"
      ]
    ],
    "errorlevel (tarfile.tarfile attribute)": [
      [
        357,
        "tarfile.TarFile.errorlevel"
      ]
    ],
    "extract() (tarfile.tarfile method)": [
      [
        357,
        "tarfile.TarFile.extract"
      ]
    ],
    "extractall() (tarfile.tarfile method)": [
      [
        357,
        "tarfile.TarFile.extractall"
      ]
    ],
    "extractfile() (tarfile.tarfile method)": [
      [
        357,
        "tarfile.TarFile.extractfile"
      ]
    ],
    "extraction_filter (tarfile.tarfile attribute)": [
      [
        357,
        "tarfile.TarFile.extraction_filter"
      ]
    ],
    "frombuf() (tarfile.tarinfo class method)": [
      [
        357,
        "tarfile.TarInfo.frombuf"
      ]
    ],
    "fromtarfile() (tarfile.tarinfo class method)": [
      [
        357,
        "tarfile.TarInfo.fromtarfile"
      ]
    ],
    "fully_trusted_filter() (in module tarfile)": [
      [
        357,
        "tarfile.fully_trusted_filter"
      ]
    ],
    "getmember() (tarfile.tarfile method)": [
      [
        357,
        "tarfile.TarFile.getmember"
      ]
    ],
    "getmembers() (tarfile.tarfile method)": [
      [
        357,
        "tarfile.TarFile.getmembers"
      ]
    ],
    "getnames() (tarfile.tarfile method)": [
      [
        357,
        "tarfile.TarFile.getnames"
      ]
    ],
    "gettarinfo() (tarfile.tarfile method)": [
      [
        357,
        "tarfile.TarFile.gettarinfo"
      ]
    ],
    "gid (tarfile.tarinfo attribute)": [
      [
        357,
        "tarfile.TarInfo.gid"
      ]
    ],
    "gname (tarfile.tarinfo attribute)": [
      [
        357,
        "tarfile.TarInfo.gname"
      ]
    ],
    "is_tarfile() (in module tarfile)": [
      [
        357,
        "tarfile.is_tarfile"
      ]
    ],
    "isblk() (tarfile.tarinfo method)": [
      [
        357,
        "tarfile.TarInfo.isblk"
      ]
    ],
    "ischr() (tarfile.tarinfo method)": [
      [
        357,
        "tarfile.TarInfo.ischr"
      ]
    ],
    "isdev() (tarfile.tarinfo method)": [
      [
        357,
        "tarfile.TarInfo.isdev"
      ]
    ],
    "isdir() (tarfile.tarinfo method)": [
      [
        357,
        "tarfile.TarInfo.isdir"
      ]
    ],
    "isfifo() (tarfile.tarinfo method)": [
      [
        357,
        "tarfile.TarInfo.isfifo"
      ]
    ],
    "isfile() (tarfile.tarinfo method)": [
      [
        357,
        "tarfile.TarInfo.isfile"
      ]
    ],
    "islnk() (tarfile.tarinfo method)": [
      [
        357,
        "tarfile.TarInfo.islnk"
      ]
    ],
    "isreg() (tarfile.tarinfo method)": [
      [
        357,
        "tarfile.TarInfo.isreg"
      ]
    ],
    "issym() (tarfile.tarinfo method)": [
      [
        357,
        "tarfile.TarInfo.issym"
      ]
    ],
    "linkname (tarfile.tarinfo attribute)": [
      [
        357,
        "tarfile.TarInfo.linkname"
      ]
    ],
    "list() (tarfile.tarfile method)": [
      [
        357,
        "tarfile.TarFile.list"
      ]
    ],
    "mode (tarfile.tarinfo attribute)": [
      [
        357,
        "tarfile.TarInfo.mode"
      ]
    ],
    "mtime (tarfile.tarinfo attribute)": [
      [
        357,
        "tarfile.TarInfo.mtime"
      ]
    ],
    "name (tarfile.tarinfo attribute)": [
      [
        357,
        "tarfile.TarInfo.name"
      ]
    ],
    "next() (tarfile.tarfile method)": [
      [
        357,
        "tarfile.TarFile.next"
      ]
    ],
    "offset (tarfile.tarinfo attribute)": [
      [
        357,
        "tarfile.TarInfo.offset"
      ]
    ],
    "offset_data (tarfile.tarinfo attribute)": [
      [
        357,
        "tarfile.TarInfo.offset_data"
      ]
    ],
    "open() (in module tarfile)": [
      [
        357,
        "tarfile.open"
      ]
    ],
    "open() (tarfile.tarfile class method)": [
      [
        357,
        "tarfile.TarFile.open"
      ]
    ],
    "pax_headers (tarfile.tarfile attribute)": [
      [
        357,
        "tarfile.TarFile.pax_headers"
      ]
    ],
    "pax_headers (tarfile.tarinfo attribute)": [
      [
        357,
        "tarfile.TarInfo.pax_headers"
      ]
    ],
    "replace() (tarfile.tarinfo method)": [
      [
        357,
        "tarfile.TarInfo.replace"
      ]
    ],
    "size (tarfile.tarinfo attribute)": [
      [
        357,
        "tarfile.TarInfo.size"
      ]
    ],
    "sparse (tarfile.tarinfo attribute)": [
      [
        357,
        "tarfile.TarInfo.sparse"
      ]
    ],
    "tar_filter() (in module tarfile)": [
      [
        357,
        "tarfile.tar_filter"
      ]
    ],
    "tarfile": [
      [
        357,
        "module-tarfile"
      ]
    ],
    "tarfile command line option": [
      [
        357,
        "cmdoption-tarfile-c"
      ],
      [
        357,
        "cmdoption-tarfile-create"
      ],
      [
        357,
        "cmdoption-tarfile-e"
      ],
      [
        357,
        "cmdoption-tarfile-extract"
      ],
      [
        357,
        "cmdoption-tarfile-filter"
      ],
      [
        357,
        "cmdoption-tarfile-l"
      ],
      [
        357,
        "cmdoption-tarfile-list"
      ],
      [
        357,
        "cmdoption-tarfile-t"
      ],
      [
        357,
        "cmdoption-tarfile-test"
      ],
      [
        357,
        "cmdoption-tarfile-v"
      ]
    ],
    "tarinfo (tarfile.filtererror attribute)": [
      [
        357,
        "tarfile.FilterError.tarinfo"
      ]
    ],
    "tobuf() (tarfile.tarinfo method)": [
      [
        357,
        "tarfile.TarInfo.tobuf"
      ]
    ],
    "type (tarfile.tarinfo attribute)": [
      [
        357,
        "tarfile.TarInfo.type"
      ]
    ],
    "uid (tarfile.tarinfo attribute)": [
      [
        357,
        "tarfile.TarInfo.uid"
      ]
    ],
    "uname (tarfile.tarinfo attribute)": [
      [
        357,
        "tarfile.TarInfo.uname"
      ]
    ],
    "pep 594#telnetlib": [
      [
        358,
        "index-1"
      ]
    ],
    "rfc 854": [
      [
        358,
        "index-2"
      ],
      [
        358,
        "index-3"
      ]
    ],
    "telnet": [
      [
        358,
        "index-0"
      ]
    ],
    "telnet (class in telnetlib)": [
      [
        358,
        "telnetlib.Telnet"
      ]
    ],
    "close() (telnetlib.telnet method)": [
      [
        358,
        "telnetlib.Telnet.close"
      ]
    ],
    "expect() (telnetlib.telnet method)": [
      [
        358,
        "telnetlib.Telnet.expect"
      ]
    ],
    "fileno() (telnetlib.telnet method)": [
      [
        358,
        "telnetlib.Telnet.fileno"
      ]
    ],
    "get_socket() (telnetlib.telnet method)": [
      [
        358,
        "telnetlib.Telnet.get_socket"
      ]
    ],
    "interact() (telnetlib.telnet method)": [
      [
        358,
        "telnetlib.Telnet.interact"
      ]
    ],
    "msg() (telnetlib.telnet method)": [
      [
        358,
        "telnetlib.Telnet.msg"
      ]
    ],
    "mt_interact() (telnetlib.telnet method)": [
      [
        358,
        "telnetlib.Telnet.mt_interact"
      ]
    ],
    "open() (telnetlib.telnet method)": [
      [
        358,
        "telnetlib.Telnet.open"
      ]
    ],
    "read_all() (telnetlib.telnet method)": [
      [
        358,
        "telnetlib.Telnet.read_all"
      ]
    ],
    "read_eager() (telnetlib.telnet method)": [
      [
        358,
        "telnetlib.Telnet.read_eager"
      ]
    ],
    "read_lazy() (telnetlib.telnet method)": [
      [
        358,
        "telnetlib.Telnet.read_lazy"
      ]
    ],
    "read_sb_data() (telnetlib.telnet method)": [
      [
        358,
        "telnetlib.Telnet.read_sb_data"
      ]
    ],
    "read_some() (telnetlib.telnet method)": [
      [
        358,
        "telnetlib.Telnet.read_some"
      ]
    ],
    "read_until() (telnetlib.telnet method)": [
      [
        358,
        "telnetlib.Telnet.read_until"
      ]
    ],
    "read_very_eager() (telnetlib.telnet method)": [
      [
        358,
        "telnetlib.Telnet.read_very_eager"
      ]
    ],
    "read_very_lazy() (telnetlib.telnet method)": [
      [
        358,
        "telnetlib.Telnet.read_very_lazy"
      ]
    ],
    "set_debuglevel() (telnetlib.telnet method)": [
      [
        358,
        "telnetlib.Telnet.set_debuglevel"
      ]
    ],
    "set_option_negotiation_callback() (telnetlib.telnet method)": [
      [
        358,
        "telnetlib.Telnet.set_option_negotiation_callback"
      ]
    ],
    "telnetlib": [
      [
        358,
        "module-telnetlib"
      ]
    ],
    "write() (telnetlib.telnet method)": [
      [
        358,
        "telnetlib.Telnet.write"
      ]
    ],
    "namedtemporaryfile() (in module tempfile)": [
      [
        359,
        "tempfile.NamedTemporaryFile"
      ]
    ],
    "spooledtemporaryfile (class in tempfile)": [
      [
        359,
        "tempfile.SpooledTemporaryFile"
      ]
    ],
    "temp": [
      [
        359,
        "index-2"
      ],
      [
        460,
        "index-7"
      ]
    ],
    "tmp": [
      [
        359,
        "index-3"
      ]
    ],
    "tmpdir": [
      [
        359,
        "index-1"
      ],
      [
        482,
        "index-50"
      ]
    ],
    "temporarydirectory (class in tempfile)": [
      [
        359,
        "tempfile.TemporaryDirectory"
      ]
    ],
    "temporaryfile() (in module tempfile)": [
      [
        359,
        "tempfile.TemporaryFile"
      ]
    ],
    "cleanup() (tempfile.temporarydirectory method)": [
      [
        359,
        "tempfile.TemporaryDirectory.cleanup"
      ]
    ],
    "file name": [
      [
        359,
        "index-0"
      ]
    ],
    "gettempdir() (in module tempfile)": [
      [
        359,
        "tempfile.gettempdir"
      ]
    ],
    "gettempdirb() (in module tempfile)": [
      [
        359,
        "tempfile.gettempdirb"
      ]
    ],
    "gettempprefix() (in module tempfile)": [
      [
        359,
        "tempfile.gettempprefix"
      ]
    ],
    "gettempprefixb() (in module tempfile)": [
      [
        359,
        "tempfile.gettempprefixb"
      ]
    ],
    "mkdtemp() (in module tempfile)": [
      [
        359,
        "tempfile.mkdtemp"
      ]
    ],
    "mkstemp() (in module tempfile)": [
      [
        359,
        "tempfile.mkstemp"
      ]
    ],
    "mktemp() (in module tempfile)": [
      [
        359,
        "tempfile.mktemp"
      ]
    ],
    "name (tempfile.temporarydirectory attribute)": [
      [
        359,
        "tempfile.TemporaryDirectory.name"
      ]
    ],
    "rollover() (tempfile.spooledtemporaryfile method)": [
      [
        359,
        "tempfile.SpooledTemporaryFile.rollover"
      ]
    ],
    "tempdir (in module tempfile)": [
      [
        359,
        "tempfile.tempdir"
      ]
    ],
    "tempfile": [
      [
        359,
        "module-tempfile"
      ]
    ],
    "temporary": [
      [
        359,
        "index-0"
      ]
    ],
    "tcsadrain (in module termios)": [
      [
        360,
        "termios.TCSADRAIN"
      ]
    ],
    "tcsaflush (in module termios)": [
      [
        360,
        "termios.TCSAFLUSH"
      ]
    ],
    "tcsanow (in module termios)": [
      [
        360,
        "termios.TCSANOW"
      ]
    ],
    "tcdrain() (in module termios)": [
      [
        360,
        "termios.tcdrain"
      ]
    ],
    "tcflow() (in module termios)": [
      [
        360,
        "termios.tcflow"
      ]
    ],
    "tcflush() (in module termios)": [
      [
        360,
        "termios.tcflush"
      ]
    ],
    "tcgetattr() (in module termios)": [
      [
        360,
        "termios.tcgetattr"
      ]
    ],
    "tcgetwinsize() (in module termios)": [
      [
        360,
        "termios.tcgetwinsize"
      ]
    ],
    "tcsendbreak() (in module termios)": [
      [
        360,
        "termios.tcsendbreak"
      ]
    ],
    "tcsetattr() (in module termios)": [
      [
        360,
        "termios.tcsetattr"
      ]
    ],
    "tcsetwinsize() (in module termios)": [
      [
        360,
        "termios.tcsetwinsize"
      ]
    ],
    "termios": [
      [
        360,
        "module-termios"
      ]
    ],
    "tty": [
      [
        360,
        "index-0"
      ],
      [
        382,
        "module-tty"
      ]
    ],
    "always_eq (in module test.support)": [
      [
        361,
        "test.support.ALWAYS_EQ"
      ]
    ],
    "bytecodetestcase (class in test.support.bytecode_helper)": [
      [
        361,
        "test.support.bytecode_helper.BytecodeTestCase"
      ]
    ],
    "cleanimport (class in test.support.import_helper)": [
      [
        361,
        "test.support.import_helper.CleanImport"
      ]
    ],
    "dirsonsyspath (class in test.support.import_helper)": [
      [
        361,
        "test.support.import_helper.DirsOnSysPath"
      ]
    ],
    "environmentvarguard (class in test.support.os_helper)": [
      [
        361,
        "test.support.os_helper.EnvironmentVarGuard"
      ]
    ],
    "fs_nonascii (in module test.support.os_helper)": [
      [
        361,
        "test.support.os_helper.FS_NONASCII"
      ]
    ],
    "fakepath (class in test.support.os_helper)": [
      [
        361,
        "test.support.os_helper.FakePath"
      ]
    ],
    "have_docstrings (in module test.support)": [
      [
        361,
        "test.support.HAVE_DOCSTRINGS"
      ]
    ],
    "internet_timeout (in module test.support)": [
      [
        361,
        "test.support.INTERNET_TIMEOUT"
      ]
    ],
    "ipv6_enabled (in module test.support.socket_helper)": [
      [
        361,
        "test.support.socket_helper.IPV6_ENABLED"
      ]
    ],
    "largest (in module test.support)": [
      [
        361,
        "test.support.LARGEST"
      ]
    ],
    "long_timeout (in module test.support)": [
      [
        361,
        "test.support.LONG_TIMEOUT"
      ]
    ],
    "loopback_timeout (in module test.support)": [
      [
        361,
        "test.support.LOOPBACK_TIMEOUT"
      ]
    ],
    "max_py_ssize_t (in module test.support)": [
      [
        361,
        "test.support.MAX_Py_ssize_t"
      ]
    ],
    "missing_c_docstrings (in module test.support)": [
      [
        361,
        "test.support.MISSING_C_DOCSTRINGS"
      ]
    ],
    "matcher (class in test.support)": [
      [
        361,
        "test.support.Matcher"
      ]
    ],
    "never_eq (in module test.support)": [
      [
        361,
        "test.support.NEVER_EQ"
      ]
    ],
    "pgo (in module test.support)": [
      [
        361,
        "test.support.PGO"
      ]
    ],
    "pipe_max_size (in module test.support)": [
      [
        361,
        "test.support.PIPE_MAX_SIZE"
      ]
    ],
    "pythonusersite": [
      [
        361,
        "index-2"
      ]
    ],
    "py_debug (in module test.support)": [
      [
        361,
        "test.support.Py_DEBUG"
      ]
    ],
    "resourcedenied": [
      [
        361,
        "test.support.ResourceDenied"
      ]
    ],
    "savedcwd (in module test.support.os_helper)": [
      [
        361,
        "test.support.os_helper.SAVEDCWD"
      ]
    ],
    "short_timeout (in module test.support)": [
      [
        361,
        "test.support.SHORT_TIMEOUT"
      ]
    ],
    "smallest (in module test.support)": [
      [
        361,
        "test.support.SMALLEST"
      ]
    ],
    "sock_max_size (in module test.support)": [
      [
        361,
        "test.support.SOCK_MAX_SIZE"
      ]
    ],
    "savesignals (class in test.support)": [
      [
        361,
        "test.support.SaveSignals"
      ]
    ],
    "suppresscrashreport (class in test.support)": [
      [
        361,
        "test.support.SuppressCrashReport"
      ]
    ],
    "testfn (in module test.support.os_helper)": [
      [
        361,
        "test.support.os_helper.TESTFN"
      ]
    ],
    "testfn_nonascii (in module test.support.os_helper)": [
      [
        361,
        "test.support.os_helper.TESTFN_NONASCII"
      ]
    ],
    "testfn_undecodable (in module test.support.os_helper)": [
      [
        361,
        "test.support.os_helper.TESTFN_UNDECODABLE"
      ]
    ],
    "testfn_unencodable (in module test.support.os_helper)": [
      [
        361,
        "test.support.os_helper.TESTFN_UNENCODABLE"
      ]
    ],
    "testfn_unicode (in module test.support.os_helper)": [
      [
        361,
        "test.support.os_helper.TESTFN_UNICODE"
      ]
    ],
    "test_data_dir (in module test.support)": [
      [
        361,
        "test.support.TEST_DATA_DIR"
      ]
    ],
    "test_home_dir (in module test.support)": [
      [
        361,
        "test.support.TEST_HOME_DIR"
      ]
    ],
    "test_http_url (in module test.support)": [
      [
        361,
        "test.support.TEST_HTTP_URL"
      ]
    ],
    "test_support_dir (in module test.support)": [
      [
        361,
        "test.support.TEST_SUPPORT_DIR"
      ]
    ],
    "testfailed": [
      [
        361,
        "test.support.TestFailed"
      ]
    ],
    "warningsrecorder (class in test.support.warnings_helper)": [
      [
        361,
        "test.support.warnings_helper.WarningsRecorder"
      ]
    ],
    "adjust_int_max_str_digits() (in module test.support)": [
      [
        361,
        "test.support.adjust_int_max_str_digits"
      ]
    ],
    "anticipate_failure() (in module test.support)": [
      [
        361,
        "test.support.anticipate_failure"
      ]
    ],
    "args_from_interpreter_flags() (in module test.support)": [
      [
        361,
        "test.support.args_from_interpreter_flags"
      ]
    ],
    "assertinbytecode() (test.support.bytecode_helper.bytecodetestcase method)": [
      [
        361,
        "test.support.bytecode_helper.BytecodeTestCase.assertInBytecode"
      ]
    ],
    "assertnotinbytecode() (test.support.bytecode_helper.bytecodetestcase method)": [
      [
        361,
        "test.support.bytecode_helper.BytecodeTestCase.assertNotInBytecode"
      ]
    ],
    "assert_python_failure() (in module test.support.script_helper)": [
      [
        361,
        "test.support.script_helper.assert_python_failure"
      ]
    ],
    "assert_python_ok() (in module test.support.script_helper)": [
      [
        361,
        "test.support.script_helper.assert_python_ok"
      ]
    ],
    "bigaddrspacetest() (in module test.support)": [
      [
        361,
        "test.support.bigaddrspacetest"
      ]
    ],
    "bigmemtest() (in module test.support)": [
      [
        361,
        "test.support.bigmemtest"
      ]
    ],
    "bind_port() (in module test.support.socket_helper)": [
      [
        361,
        "test.support.socket_helper.bind_port"
      ]
    ],
    "bind_unix_socket() (in module test.support.socket_helper)": [
      [
        361,
        "test.support.socket_helper.bind_unix_socket"
      ]
    ],
    "busy_retry() (in module test.support)": [
      [
        361,
        "test.support.busy_retry"
      ]
    ],
    "calcobjsize() (in module test.support)": [
      [
        361,
        "test.support.calcobjsize"
      ]
    ],
    "calcvobjsize() (in module test.support)": [
      [
        361,
        "test.support.calcvobjsize"
      ]
    ],
    "can_symlink() (in module test.support.os_helper)": [
      [
        361,
        "test.support.os_helper.can_symlink"
      ]
    ],
    "can_xattr() (in module test.support.os_helper)": [
      [
        361,
        "test.support.os_helper.can_xattr"
      ]
    ],
    "captured_stderr() (in module test.support)": [
      [
        361,
        "test.support.captured_stderr"
      ]
    ],
    "captured_stdin() (in module test.support)": [
      [
        361,
        "test.support.captured_stdin"
      ]
    ],
    "captured_stdout() (in module test.support)": [
      [
        361,
        "test.support.captured_stdout"
      ]
    ],
    "catch_threading_exception() (in module test.support.threading_helper)": [
      [
        361,
        "test.support.threading_helper.catch_threading_exception"
      ]
    ],
    "catch_unraisable_exception() (in module test.support)": [
      [
        361,
        "test.support.catch_unraisable_exception"
      ]
    ],
    "change_cwd() (in module test.support.os_helper)": [
      [
        361,
        "test.support.os_helper.change_cwd"
      ]
    ],
    "check__all__() (in module test.support)": [
      [
        361,
        "test.support.check__all__"
      ]
    ],
    "check_disallow_instantiation() (in module test.support)": [
      [
        361,
        "test.support.check_disallow_instantiation"
      ]
    ],
    "check_free_after_iterating() (in module test.support)": [
      [
        361,
        "test.support.check_free_after_iterating"
      ]
    ],
    "check_impl_detail() (in module test.support)": [
      [
        361,
        "test.support.check_impl_detail"
      ]
    ],
    "check_no_resource_warning() (in module test.support.warnings_helper)": [
      [
        361,
        "test.support.warnings_helper.check_no_resource_warning"
      ]
    ],
    "check_syntax_error() (in module test.support)": [
      [
        361,
        "test.support.check_syntax_error"
      ]
    ],
    "check_syntax_warning() (in module test.support.warnings_helper)": [
      [
        361,
        "test.support.warnings_helper.check_syntax_warning"
      ]
    ],
    "check_warnings() (in module test.support.warnings_helper)": [
      [
        361,
        "test.support.warnings_helper.check_warnings"
      ]
    ],
    "checksizeof() (in module test.support)": [
      [
        361,
        "test.support.checksizeof"
      ]
    ],
    "cpython_only() (in module test.support)": [
      [
        361,
        "test.support.cpython_only"
      ]
    ],
    "create_empty_file() (in module test.support.os_helper)": [
      [
        361,
        "test.support.os_helper.create_empty_file"
      ]
    ],
    "detect_api_mismatch() (in module test.support)": [
      [
        361,
        "test.support.detect_api_mismatch"
      ]
    ],
    "disable_faulthandler() (in module test.support)": [
      [
        361,
        "test.support.disable_faulthandler"
      ]
    ],
    "disable_gc() (in module test.support)": [
      [
        361,
        "test.support.disable_gc"
      ]
    ],
    "fd_count() (in module test.support.os_helper)": [
      [
        361,
        "test.support.os_helper.fd_count"
      ]
    ],
    "find_unused_port() (in module test.support.socket_helper)": [
      [
        361,
        "test.support.socket_helper.find_unused_port"
      ]
    ],
    "findfile() (in module test.support)": [
      [
        361,
        "test.support.findfile"
      ]
    ],
    "flush_std_streams() (in module test.support)": [
      [
        361,
        "test.support.flush_std_streams"
      ]
    ],
    "forget() (in module test.support.import_helper)": [
      [
        361,
        "test.support.import_helper.forget"
      ]
    ],
    "fs_is_case_insensitive() (in module test.support.os_helper)": [
      [
        361,
        "test.support.os_helper.fs_is_case_insensitive"
      ]
    ],
    "gc_collect() (in module test.support)": [
      [
        361,
        "test.support.gc_collect"
      ]
    ],
    "get_attribute() (in module test.support)": [
      [
        361,
        "test.support.get_attribute"
      ]
    ],
    "get_disassembly_as_string() (test.support.bytecode_helper.bytecodetestcase method)": [
      [
        361,
        "test.support.bytecode_helper.BytecodeTestCase.get_disassembly_as_string"
      ]
    ],
    "get_original_stdout() (in module test.support)": [
      [
        361,
        "test.support.get_original_stdout"
      ]
    ],
    "get_pagesize() (in module test.support)": [
      [
        361,
        "test.support.get_pagesize"
      ]
    ],
    "ignore_warnings() (in module test.support.warnings_helper)": [
      [
        361,
        "test.support.warnings_helper.ignore_warnings"
      ]
    ],
    "impl_detail() (in module test.support)": [
      [
        361,
        "test.support.impl_detail"
      ]
    ],
    "import_fresh_module() (in module test.support.import_helper)": [
      [
        361,
        "test.support.import_helper.import_fresh_module"
      ]
    ],
    "import_module() (in module test.support.import_helper)": [
      [
        361,
        "test.support.import_helper.import_module"
      ]
    ],
    "interpreter_requires_environment() (in module test.support.script_helper)": [
      [
        361,
        "test.support.script_helper.interpreter_requires_environment"
      ]
    ],
    "is_android (in module test.support)": [
      [
        361,
        "test.support.is_android"
      ]
    ],
    "is_jython (in module test.support)": [
      [
        361,
        "test.support.is_jython"
      ]
    ],
    "is_resource_enabled() (in module test.support)": [
      [
        361,
        "test.support.is_resource_enabled"
      ]
    ],
    "join_thread() (in module test.support.threading_helper)": [
      [
        361,
        "test.support.threading_helper.join_thread"
      ]
    ],
    "kill_python() (in module test.support.script_helper)": [
      [
        361,
        "test.support.script_helper.kill_python"
      ]
    ],
    "load_package_tests() (in module test.support)": [
      [
        361,
        "test.support.load_package_tests"
      ]
    ],
    "make_bad_fd() (in module test.support.os_helper)": [
      [
        361,
        "test.support.os_helper.make_bad_fd"
      ]
    ],
    "make_legacy_pyc() (in module test.support.import_helper)": [
      [
        361,
        "test.support.import_helper.make_legacy_pyc"
      ]
    ],
    "make_pkg() (in module test.support.script_helper)": [
      [
        361,
        "test.support.script_helper.make_pkg"
      ]
    ],
    "make_script() (in module test.support.script_helper)": [
      [
        361,
        "test.support.script_helper.make_script"
      ]
    ],
    "make_zip_pkg() (in module test.support.script_helper)": [
      [
        361,
        "test.support.script_helper.make_zip_pkg"
      ]
    ],
    "make_zip_script() (in module test.support.script_helper)": [
      [
        361,
        "test.support.script_helper.make_zip_script"
      ]
    ],
    "match_value() (test.support.matcher method)": [
      [
        361,
        "test.support.Matcher.match_value"
      ]
    ],
    "matches() (test.support.matcher method)": [
      [
        361,
        "test.support.Matcher.matches"
      ]
    ],
    "max_memuse (in module test.support)": [
      [
        361,
        "test.support.max_memuse"
      ]
    ],
    "missing_compiler_executable() (in module test.support)": [
      [
        361,
        "test.support.missing_compiler_executable"
      ]
    ],
    "modules_cleanup() (in module test.support.import_helper)": [
      [
        361,
        "test.support.import_helper.modules_cleanup"
      ]
    ],
    "modules_setup() (in module test.support.import_helper)": [
      [
        361,
        "test.support.import_helper.modules_setup"
      ]
    ],
    "no_tracing() (in module test.support)": [
      [
        361,
        "test.support.no_tracing"
      ]
    ],
    "open_urlresource() (in module test.support)": [
      [
        361,
        "test.support.open_urlresource"
      ]
    ],
    "optim_args_from_interpreter_flags() (in module test.support)": [
      [
        361,
        "test.support.optim_args_from_interpreter_flags"
      ]
    ],
    "patch() (in module test.support)": [
      [
        361,
        "test.support.patch"
      ]
    ],
    "print_warning() (in module test.support)": [
      [
        361,
        "test.support.print_warning"
      ]
    ],
    "python_is_optimized() (in module test.support)": [
      [
        361,
        "test.support.python_is_optimized"
      ]
    ],
    "real_max_memuse (in module test.support)": [
      [
        361,
        "test.support.real_max_memuse"
      ]
    ],
    "reap_children() (in module test.support)": [
      [
        361,
        "test.support.reap_children"
      ]
    ],
    "reap_threads() (in module test.support.threading_helper)": [
      [
        361,
        "test.support.threading_helper.reap_threads"
      ]
    ],
    "record_original_stdout() (in module test.support)": [
      [
        361,
        "test.support.record_original_stdout"
      ]
    ],
    "refcount_test() (in module test.support)": [
      [
        361,
        "test.support.refcount_test"
      ]
    ],
    "requires() (in module test.support)": [
      [
        361,
        "test.support.requires"
      ]
    ],
    "requires_ieee_754() (in module test.support)": [
      [
        361,
        "test.support.requires_IEEE_754"
      ]
    ],
    "requires_bz2() (in module test.support)": [
      [
        361,
        "test.support.requires_bz2"
      ]
    ],
    "requires_docstrings() (in module test.support)": [
      [
        361,
        "test.support.requires_docstrings"
      ]
    ],
    "requires_freebsd_version() (in module test.support)": [
      [
        361,
        "test.support.requires_freebsd_version"
      ]
    ],
    "requires_gzip() (in module test.support)": [
      [
        361,
        "test.support.requires_gzip"
      ]
    ],
    "requires_limited_api() (in module test.support)": [
      [
        361,
        "test.support.requires_limited_api"
      ]
    ],
    "requires_linux_version() (in module test.support)": [
      [
        361,
        "test.support.requires_linux_version"
      ]
    ],
    "requires_lzma() (in module test.support)": [
      [
        361,
        "test.support.requires_lzma"
      ]
    ],
    "requires_mac_version() (in module test.support)": [
      [
        361,
        "test.support.requires_mac_version"
      ]
    ],
    "requires_resource() (in module test.support)": [
      [
        361,
        "test.support.requires_resource"
      ]
    ],
    "requires_zlib() (in module test.support)": [
      [
        361,
        "test.support.requires_zlib"
      ]
    ],
    "restore() (test.support.savesignals method)": [
      [
        361,
        "test.support.SaveSignals.restore"
      ]
    ],
    "rmdir() (in module test.support.os_helper)": [
      [
        361,
        "test.support.os_helper.rmdir"
      ]
    ],
    "rmtree() (in module test.support.os_helper)": [
      [
        361,
        "test.support.os_helper.rmtree"
      ]
    ],
    "run_in_subinterp() (in module test.support)": [
      [
        361,
        "test.support.run_in_subinterp"
      ]
    ],
    "run_python_until_end() (in module test.support.script_helper)": [
      [
        361,
        "test.support.script_helper.run_python_until_end"
      ]
    ],
    "run_with_locale() (in module test.support)": [
      [
        361,
        "test.support.run_with_locale"
      ]
    ],
    "run_with_tz() (in module test.support)": [
      [
        361,
        "test.support.run_with_tz"
      ]
    ],
    "save() (test.support.savesignals method)": [
      [
        361,
        "test.support.SaveSignals.save"
      ]
    ],
    "set() (test.support.os_helper.environmentvarguard method)": [
      [
        361,
        "test.support.os_helper.EnvironmentVarGuard.set"
      ]
    ],
    "set_memlimit() (in module test.support)": [
      [
        361,
        "test.support.set_memlimit"
      ]
    ],
    "setswitchinterval() (in module test.support)": [
      [
        361,
        "test.support.setswitchinterval"
      ]
    ],
    "skip_if_broken_multiprocessing_synchronize() (in module test.support)": [
      [
        361,
        "test.support.skip_if_broken_multiprocessing_synchronize"
      ]
    ],
    "skip_unless_bind_unix_socket() (in module test.support.socket_helper)": [
      [
        361,
        "test.support.socket_helper.skip_unless_bind_unix_socket"
      ]
    ],
    "skip_unless_symlink() (in module test.support.os_helper)": [
      [
        361,
        "test.support.os_helper.skip_unless_symlink"
      ]
    ],
    "skip_unless_xattr() (in module test.support.os_helper)": [
      [
        361,
        "test.support.os_helper.skip_unless_xattr"
      ]
    ],
    "sleeping_retry() (in module test.support)": [
      [
        361,
        "test.support.sleeping_retry"
      ]
    ],
    "sortdict() (in module test.support)": [
      [
        361,
        "test.support.sortdict"
      ]
    ],
    "spawn_python() (in module test.support.script_helper)": [
      [
        361,
        "test.support.script_helper.spawn_python"
      ]
    ],
    "start_threads() (in module test.support.threading_helper)": [
      [
        361,
        "test.support.threading_helper.start_threads"
      ]
    ],
    "swap_attr() (in module test.support)": [
      [
        361,
        "test.support.swap_attr"
      ]
    ],
    "swap_item() (in module test.support)": [
      [
        361,
        "test.support.swap_item"
      ]
    ],
    "system_must_validate_cert() (in module test.support)": [
      [
        361,
        "test.support.system_must_validate_cert"
      ]
    ],
    "temp_cwd() (in module test.support.os_helper)": [
      [
        361,
        "test.support.os_helper.temp_cwd"
      ]
    ],
    "temp_dir() (in module test.support.os_helper)": [
      [
        361,
        "test.support.os_helper.temp_dir"
      ]
    ],
    "temp_umask() (in module test.support.os_helper)": [
      [
        361,
        "test.support.os_helper.temp_umask"
      ]
    ],
    "test": [
      [
        361,
        "module-test"
      ],
      [
        429,
        "index-80"
      ],
      [
        429,
        "index-81"
      ]
    ],
    "test.regrtest": [
      [
        361,
        "module-test.regrtest"
      ]
    ],
    "test.support": [
      [
        361,
        "module-test.support"
      ]
    ],
    "test.support.bytecode_helper": [
      [
        361,
        "module-test.support.bytecode_helper"
      ]
    ],
    "test.support.import_helper": [
      [
        361,
        "module-test.support.import_helper"
      ]
    ],
    "test.support.os_helper": [
      [
        361,
        "module-test.support.os_helper"
      ]
    ],
    "test.support.script_helper": [
      [
        361,
        "module-test.support.script_helper"
      ]
    ],
    "test.support.socket_helper": [
      [
        361,
        "module-test.support.socket_helper"
      ]
    ],
    "test.support.threading_helper": [
      [
        361,
        "module-test.support.threading_helper"
      ]
    ],
    "test.support.warnings_helper": [
      [
        361,
        "module-test.support.warnings_helper"
      ]
    ],
    "threading_cleanup() (in module test.support.threading_helper)": [
      [
        361,
        "test.support.threading_helper.threading_cleanup"
      ]
    ],
    "threading_setup() (in module test.support.threading_helper)": [
      [
        361,
        "test.support.threading_helper.threading_setup"
      ]
    ],
    "transient_internet() (in module test.support.socket_helper)": [
      [
        361,
        "test.support.socket_helper.transient_internet"
      ]
    ],
    "unix_shell (in module test.support)": [
      [
        361,
        "test.support.unix_shell"
      ]
    ],
    "unlink() (in module test.support.os_helper)": [
      [
        361,
        "test.support.os_helper.unlink"
      ]
    ],
    "unload() (in module test.support.import_helper)": [
      [
        361,
        "test.support.import_helper.unload"
      ]
    ],
    "unset() (test.support.os_helper.environmentvarguard method)": [
      [
        361,
        "test.support.os_helper.EnvironmentVarGuard.unset"
      ]
    ],
    "verbose (in module test.support)": [
      [
        361,
        "test.support.verbose"
      ]
    ],
    "wait_process() (in module test.support)": [
      [
        361,
        "test.support.wait_process"
      ]
    ],
    "wait_threads_exit() (in module test.support.threading_helper)": [
      [
        361,
        "test.support.threading_helper.wait_threads_exit"
      ]
    ],
    "with_pymalloc() (in module test.support)": [
      [
        361,
        "test.support.with_pymalloc"
      ]
    ],
    "textwrapper (class in textwrap)": [
      [
        363,
        "textwrap.TextWrapper"
      ]
    ],
    "break_long_words (textwrap.textwrapper attribute)": [
      [
        363,
        "textwrap.TextWrapper.break_long_words"
      ]
    ],
    "break_on_hyphens (textwrap.textwrapper attribute)": [
      [
        363,
        "textwrap.TextWrapper.break_on_hyphens"
      ]
    ],
    "dedent() (in module textwrap)": [
      [
        363,
        "textwrap.dedent"
      ]
    ],
    "drop_whitespace (textwrap.textwrapper attribute)": [
      [
        363,
        "textwrap.TextWrapper.drop_whitespace"
      ]
    ],
    "expand_tabs (textwrap.textwrapper attribute)": [
      [
        363,
        "textwrap.TextWrapper.expand_tabs"
      ]
    ],
    "fill() (in module textwrap)": [
      [
        363,
        "textwrap.fill"
      ]
    ],
    "fill() (textwrap.textwrapper method)": [
      [
        363,
        "textwrap.TextWrapper.fill"
      ]
    ],
    "fix_sentence_endings (textwrap.textwrapper attribute)": [
      [
        363,
        "textwrap.TextWrapper.fix_sentence_endings"
      ]
    ],
    "indent() (in module textwrap)": [
      [
        363,
        "textwrap.indent"
      ]
    ],
    "initial_indent (textwrap.textwrapper attribute)": [
      [
        363,
        "textwrap.TextWrapper.initial_indent"
      ]
    ],
    "max_lines (textwrap.textwrapper attribute)": [
      [
        363,
        "textwrap.TextWrapper.max_lines"
      ]
    ],
    "placeholder (textwrap.textwrapper attribute)": [
      [
        363,
        "textwrap.TextWrapper.placeholder"
      ]
    ],
    "replace_whitespace (textwrap.textwrapper attribute)": [
      [
        363,
        "textwrap.TextWrapper.replace_whitespace"
      ]
    ],
    "shorten() (in module textwrap)": [
      [
        363,
        "textwrap.shorten"
      ]
    ],
    "subsequent_indent (textwrap.textwrapper attribute)": [
      [
        363,
        "textwrap.TextWrapper.subsequent_indent"
      ]
    ],
    "tabsize (textwrap.textwrapper attribute)": [
      [
        363,
        "textwrap.TextWrapper.tabsize"
      ]
    ],
    "textwrap": [
      [
        363,
        "module-textwrap"
      ]
    ],
    "width (textwrap.textwrapper attribute)": [
      [
        363,
        "textwrap.TextWrapper.width"
      ]
    ],
    "wrap() (in module textwrap)": [
      [
        363,
        "textwrap.wrap"
      ]
    ],
    "wrap() (textwrap.textwrapper method)": [
      [
        363,
        "textwrap.TextWrapper.wrap"
      ]
    ],
    "barrier (class in threading)": [
      [
        364,
        "threading.Barrier"
      ]
    ],
    "boundedsemaphore (class in threading)": [
      [
        364,
        "threading.BoundedSemaphore"
      ]
    ],
    "condition (class in threading)": [
      [
        364,
        "threading.Condition"
      ]
    ],
    "event (class in threading)": [
      [
        364,
        "threading.Event"
      ]
    ],
    "lock (class in threading)": [
      [
        364,
        "threading.Lock"
      ]
    ],
    "rlock (class in threading)": [
      [
        364,
        "threading.RLock"
      ]
    ],
    "semaphore (class in threading)": [
      [
        364,
        "threading.Semaphore"
      ]
    ],
    "timeout_max (in module threading)": [
      [
        364,
        "threading.TIMEOUT_MAX"
      ]
    ],
    "thread (class in threading)": [
      [
        364,
        "threading.Thread"
      ]
    ],
    "timer (class in threading)": [
      [
        364,
        "threading.Timer"
      ]
    ],
    "__excepthook__ (in module threading)": [
      [
        364,
        "threading.__excepthook__"
      ]
    ],
    "abort() (threading.barrier method)": [
      [
        364,
        "threading.Barrier.abort"
      ]
    ],
    "acquire() (threading.condition method)": [
      [
        364,
        "threading.Condition.acquire"
      ]
    ],
    "acquire() (threading.lock method)": [
      [
        364,
        "threading.Lock.acquire"
      ]
    ],
    "acquire() (threading.rlock method)": [
      [
        364,
        "threading.RLock.acquire"
      ]
    ],
    "acquire() (threading.semaphore method)": [
      [
        364,
        "threading.Semaphore.acquire"
      ]
    ],
    "active_count() (in module threading)": [
      [
        364,
        "threading.active_count"
      ]
    ],
    "broken (threading.barrier attribute)": [
      [
        364,
        "threading.Barrier.broken"
      ]
    ],
    "cancel() (threading.timer method)": [
      [
        364,
        "threading.Timer.cancel"
      ]
    ],
    "clear() (threading.event method)": [
      [
        364,
        "threading.Event.clear"
      ]
    ],
    "current_thread() (in module threading)": [
      [
        364,
        "threading.current_thread"
      ]
    ],
    "daemon (threading.thread attribute)": [
      [
        364,
        "threading.Thread.daemon"
      ]
    ],
    "enumerate() (in module threading)": [
      [
        364,
        "threading.enumerate"
      ]
    ],
    "excepthook() (in module threading)": [
      [
        364,
        "threading.excepthook"
      ]
    ],
    "getname() (threading.thread method)": [
      [
        364,
        "threading.Thread.getName"
      ]
    ],
    "get_ident() (in module threading)": [
      [
        364,
        "threading.get_ident"
      ]
    ],
    "get_native_id() (in module threading)": [
      [
        364,
        "threading.get_native_id"
      ]
    ],
    "getprofile() (in module threading)": [
      [
        364,
        "threading.getprofile"
      ]
    ],
    "gettrace() (in module threading)": [
      [
        364,
        "threading.gettrace"
      ]
    ],
    "ident (threading.thread attribute)": [
      [
        364,
        "threading.Thread.ident"
      ]
    ],
    "isdaemon() (threading.thread method)": [
      [
        364,
        "threading.Thread.isDaemon"
      ]
    ],
    "is_alive() (threading.thread method)": [
      [
        364,
        "threading.Thread.is_alive"
      ]
    ],
    "is_set() (threading.event method)": [
      [
        364,
        "threading.Event.is_set"
      ]
    ],
    "join() (threading.thread method)": [
      [
        364,
        "threading.Thread.join"
      ]
    ],
    "local (class in threading)": [
      [
        364,
        "threading.local"
      ]
    ],
    "locked() (threading.lock method)": [
      [
        364,
        "threading.Lock.locked"
      ]
    ],
    "main_thread() (in module threading)": [
      [
        364,
        "threading.main_thread"
      ]
    ],
    "n_waiting (threading.barrier attribute)": [
      [
        364,
        "threading.Barrier.n_waiting"
      ]
    ],
    "name (threading.thread attribute)": [
      [
        364,
        "threading.Thread.name"
      ]
    ],
    "native_id (threading.thread attribute)": [
      [
        364,
        "threading.Thread.native_id"
      ]
    ],
    "notify() (threading.condition method)": [
      [
        364,
        "threading.Condition.notify"
      ]
    ],
    "notify_all() (threading.condition method)": [
      [
        364,
        "threading.Condition.notify_all"
      ]
    ],
    "parties (threading.barrier attribute)": [
      [
        364,
        "threading.Barrier.parties"
      ]
    ],
    "release() (threading.condition method)": [
      [
        364,
        "threading.Condition.release"
      ]
    ],
    "release() (threading.lock method)": [
      [
        364,
        "threading.Lock.release"
      ]
    ],
    "release() (threading.rlock method)": [
      [
        364,
        "threading.RLock.release"
      ]
    ],
    "release() (threading.semaphore method)": [
      [
        364,
        "threading.Semaphore.release"
      ]
    ],
    "reset() (threading.barrier method)": [
      [
        364,
        "threading.Barrier.reset"
      ]
    ],
    "run() (threading.thread method)": [
      [
        364,
        "threading.Thread.run"
      ]
    ],
    "set() (threading.event method)": [
      [
        364,
        "threading.Event.set"
      ]
    ],
    "setdaemon() (threading.thread method)": [
      [
        364,
        "threading.Thread.setDaemon"
      ]
    ],
    "setname() (threading.thread method)": [
      [
        364,
        "threading.Thread.setName"
      ]
    ],
    "setprofile() (in module threading)": [
      [
        364,
        "threading.setprofile"
      ]
    ],
    "setprofile_all_threads() (in module threading)": [
      [
        364,
        "threading.setprofile_all_threads"
      ]
    ],
    "settrace() (in module threading)": [
      [
        364,
        "threading.settrace"
      ]
    ],
    "settrace_all_threads() (in module threading)": [
      [
        364,
        "threading.settrace_all_threads"
      ]
    ],
    "stack_size() (in module threading)": [
      [
        364,
        "threading.stack_size"
      ]
    ],
    "start() (threading.thread method)": [
      [
        364,
        "threading.Thread.start"
      ]
    ],
    "threading": [
      [
        364,
        "module-threading"
      ]
    ],
    "wait() (threading.barrier method)": [
      [
        364,
        "threading.Barrier.wait"
      ]
    ],
    "wait() (threading.condition method)": [
      [
        364,
        "threading.Condition.wait"
      ]
    ],
    "wait() (threading.event method)": [
      [
        364,
        "threading.Event.wait"
      ]
    ],
    "wait_for() (threading.condition method)": [
      [
        364,
        "threading.Condition.wait_for"
      ]
    ],
    "2-digit years": [
      [
        365,
        "index-3"
      ]
    ],
    "clock_boottime (in module time)": [
      [
        365,
        "time.CLOCK_BOOTTIME"
      ]
    ],
    "clock_highres (in module time)": [
      [
        365,
        "time.CLOCK_HIGHRES"
      ]
    ],
    "clock_monotonic (in module time)": [
      [
        365,
        "time.CLOCK_MONOTONIC"
      ]
    ],
    "clock_monotonic_raw (in module time)": [
      [
        365,
        "time.CLOCK_MONOTONIC_RAW"
      ]
    ],
    "clock_process_cputime_id (in module time)": [
      [
        365,
        "time.CLOCK_PROCESS_CPUTIME_ID"
      ]
    ],
    "clock_prof (in module time)": [
      [
        365,
        "time.CLOCK_PROF"
      ]
    ],
    "clock_realtime (in module time)": [
      [
        365,
        "time.CLOCK_REALTIME"
      ]
    ],
    "clock_tai (in module time)": [
      [
        365,
        "time.CLOCK_TAI"
      ]
    ],
    "clock_thread_cputime_id (in module time)": [
      [
        365,
        "time.CLOCK_THREAD_CPUTIME_ID"
      ]
    ],
    "clock_uptime (in module time)": [
      [
        365,
        "time.CLOCK_UPTIME"
      ]
    ],
    "clock_uptime_raw (in module time)": [
      [
        365,
        "time.CLOCK_UPTIME_RAW"
      ]
    ],
    "cpu time": [
      [
        365,
        "index-12"
      ],
      [
        365,
        "index-7"
      ]
    ],
    "coordinated universal time": [
      [
        365,
        "index-4"
      ]
    ],
    "daylight saving time": [
      [
        365,
        "index-5"
      ]
    ],
    "greenwich mean time": [
      [
        365,
        "index-4"
      ]
    ],
    "rfc 1123": [
      [
        365,
        "index-21"
      ]
    ],
    "tz": [
      [
        365,
        "index-13"
      ],
      [
        365,
        "index-14"
      ],
      [
        365,
        "index-15"
      ],
      [
        365,
        "index-16"
      ],
      [
        365,
        "index-17"
      ],
      [
        365,
        "index-18"
      ]
    ],
    "utc": [
      [
        365,
        "index-4"
      ]
    ],
    "year 2038": [
      [
        365,
        "index-2"
      ]
    ],
    "altzone (in module time)": [
      [
        365,
        "time.altzone"
      ]
    ],
    "asctime() (in module time)": [
      [
        365,
        "time.asctime"
      ]
    ],
    "benchmarking": [
      [
        365,
        "index-12"
      ],
      [
        365,
        "index-6"
      ],
      [
        365,
        "index-7"
      ],
      [
        366,
        "index-0"
      ]
    ],
    "clock_getres() (in module time)": [
      [
        365,
        "time.clock_getres"
      ]
    ],
    "clock_gettime() (in module time)": [
      [
        365,
        "time.clock_gettime"
      ]
    ],
    "clock_gettime_ns() (in module time)": [
      [
        365,
        "time.clock_gettime_ns"
      ]
    ],
    "clock_settime() (in module time)": [
      [
        365,
        "time.clock_settime"
      ]
    ],
    "clock_settime_ns() (in module time)": [
      [
        365,
        "time.clock_settime_ns"
      ]
    ],
    "ctime() (in module time)": [
      [
        365,
        "time.ctime"
      ]
    ],
    "daylight (in module time)": [
      [
        365,
        "time.daylight"
      ]
    ],
    "epoch": [
      [
        365,
        "index-0"
      ]
    ],
    "get_clock_info() (in module time)": [
      [
        365,
        "time.get_clock_info"
      ]
    ],
    "gmtime() (in module time)": [
      [
        365,
        "time.gmtime"
      ]
    ],
    "localtime() (in module time)": [
      [
        365,
        "time.localtime"
      ]
    ],
    "mktime() (in module time)": [
      [
        365,
        "time.mktime"
      ]
    ],
    "monotonic() (in module time)": [
      [
        365,
        "time.monotonic"
      ]
    ],
    "monotonic_ns() (in module time)": [
      [
        365,
        "time.monotonic_ns"
      ]
    ],
    "perf_counter() (in module time)": [
      [
        365,
        "time.perf_counter"
      ]
    ],
    "perf_counter_ns() (in module time)": [
      [
        365,
        "time.perf_counter_ns"
      ]
    ],
    "process_time() (in module time)": [
      [
        365,
        "time.process_time"
      ]
    ],
    "process_time_ns() (in module time)": [
      [
        365,
        "time.process_time_ns"
      ]
    ],
    "processor time": [
      [
        365,
        "index-12"
      ],
      [
        365,
        "index-7"
      ]
    ],
    "pthread_getcpuclockid() (in module time)": [
      [
        365,
        "time.pthread_getcpuclockid"
      ]
    ],
    "seconds since the epoch": [
      [
        365,
        "index-1"
      ]
    ],
    "sleep() (in module time)": [
      [
        365,
        "time.sleep"
      ]
    ],
    "strftime() (in module time)": [
      [
        365,
        "time.strftime"
      ]
    ],
    "strptime() (in module time)": [
      [
        365,
        "time.strptime"
      ]
    ],
    "struct_time (class in time)": [
      [
        365,
        "time.struct_time"
      ]
    ],
    "thread_time() (in module time)": [
      [
        365,
        "time.thread_time"
      ]
    ],
    "thread_time_ns() (in module time)": [
      [
        365,
        "time.thread_time_ns"
      ]
    ],
    "time": [
      [
        365,
        "module-time"
      ]
    ],
    "time() (in module time)": [
      [
        365,
        "time.time"
      ]
    ],
    "time_ns() (in module time)": [
      [
        365,
        "time.time_ns"
      ]
    ],
    "timezone (in module time)": [
      [
        365,
        "time.timezone"
      ]
    ],
    "tm_day (time.struct_time attribute)": [
      [
        365,
        "time.struct_time.tm_day"
      ]
    ],
    "tm_gmtoff (time.struct_time attribute)": [
      [
        365,
        "time.struct_time.tm_gmtoff"
      ]
    ],
    "tm_hour (time.struct_time attribute)": [
      [
        365,
        "time.struct_time.tm_hour"
      ]
    ],
    "tm_isdst (time.struct_time attribute)": [
      [
        365,
        "time.struct_time.tm_isdst"
      ]
    ],
    "tm_min (time.struct_time attribute)": [
      [
        365,
        "time.struct_time.tm_min"
      ]
    ],
    "tm_mon (time.struct_time attribute)": [
      [
        365,
        "time.struct_time.tm_mon"
      ]
    ],
    "tm_sec (time.struct_time attribute)": [
      [
        365,
        "time.struct_time.tm_sec"
      ]
    ],
    "tm_wday (time.struct_time attribute)": [
      [
        365,
        "time.struct_time.tm_wday"
      ]
    ],
    "tm_yday (time.struct_time attribute)": [
      [
        365,
        "time.struct_time.tm_yday"
      ]
    ],
    "tm_year (time.struct_time attribute)": [
      [
        365,
        "time.struct_time.tm_year"
      ]
    ],
    "tm_zone (time.struct_time attribute)": [
      [
        365,
        "time.struct_time.tm_zone"
      ]
    ],
    "tzname (in module time)": [
      [
        365,
        "time.tzname"
      ]
    ],
    "tzset() (in module time)": [
      [
        365,
        "time.tzset"
      ]
    ],
    "--number": [
      [
        366,
        "cmdoption-timeit-n"
      ]
    ],
    "--process": [
      [
        366,
        "cmdoption-timeit-p"
      ]
    ],
    "--repeat": [
      [
        366,
        "cmdoption-timeit-r"
      ]
    ],
    "--setup": [
      [
        366,
        "cmdoption-timeit-s"
      ]
    ],
    "--unit": [
      [
        366,
        "cmdoption-timeit-u"
      ]
    ],
    "-n": [
      [
        366,
        "cmdoption-timeit-n"
      ],
      [
        397,
        "cmdoption-uuid-N"
      ],
      [
        397,
        "cmdoption-uuid-n"
      ]
    ],
    "-u": [
      [
        366,
        "cmdoption-timeit-u"
      ],
      [
        397,
        "cmdoption-uuid-u"
      ],
      [
        454,
        "cmdoption-u"
      ]
    ],
    "performance": [
      [
        366,
        "index-0"
      ]
    ],
    "timer (class in timeit)": [
      [
        366,
        "timeit.Timer"
      ]
    ],
    "autorange() (timeit.timer method)": [
      [
        366,
        "timeit.Timer.autorange"
      ]
    ],
    "default_timer() (in module timeit)": [
      [
        366,
        "timeit.default_timer"
      ]
    ],
    "print_exc() (timeit.timer method)": [
      [
        366,
        "timeit.Timer.print_exc"
      ]
    ],
    "repeat() (in module timeit)": [
      [
        366,
        "timeit.repeat"
      ]
    ],
    "repeat() (timeit.timer method)": [
      [
        366,
        "timeit.Timer.repeat"
      ]
    ],
    "timeit": [
      [
        366,
        "module-timeit"
      ]
    ],
    "timeit command line option": [
      [
        366,
        "cmdoption-timeit-h"
      ],
      [
        366,
        "cmdoption-timeit-n"
      ],
      [
        366,
        "cmdoption-timeit-p"
      ],
      [
        366,
        "cmdoption-timeit-r"
      ],
      [
        366,
        "cmdoption-timeit-s"
      ],
      [
        366,
        "cmdoption-timeit-u"
      ],
      [
        366,
        "cmdoption-timeit-v"
      ]
    ],
    "timeit() (in module timeit)": [
      [
        366,
        "timeit.timeit"
      ]
    ],
    "timeit() (timeit.timer method)": [
      [
        366,
        "timeit.Timer.timeit"
      ]
    ],
    "gui": [
      [
        367,
        "index-0"
      ]
    ],
    "graphical user interface": [
      [
        367,
        "index-0"
      ]
    ],
    "tk": [
      [
        367,
        "index-0"
      ]
    ],
    "tkinter": [
      [
        367,
        "index-0"
      ],
      [
        368,
        "module-tkinter"
      ]
    ],
    "display": [
      [
        368,
        "index-0"
      ],
      [
        429,
        "index-15"
      ],
      [
        429,
        "index-16"
      ],
      [
        429,
        "index-17"
      ]
    ],
    "exception (in module _tkinter)": [
      [
        368,
        "tkinter.EXCEPTION"
      ]
    ],
    "readable (in module _tkinter)": [
      [
        368,
        "tkinter.READABLE"
      ]
    ],
    "tcl() (in module tkinter)": [
      [
        368,
        "tkinter.Tcl"
      ]
    ],
    "tk (class in tkinter)": [
      [
        368,
        "tkinter.Tk"
      ]
    ],
    "tk option data types": [
      [
        368,
        "index-4"
      ]
    ],
    "writable (in module _tkinter)": [
      [
        368,
        "tkinter.WRITABLE"
      ]
    ],
    "_tkinter": [
      [
        368,
        "module-_tkinter"
      ]
    ],
    "bind (widgets)": [
      [
        368,
        "index-5"
      ]
    ],
    "children (tkinter.tk attribute)": [
      [
        368,
        "tkinter.Tk.children"
      ]
    ],
    "createfilehandler() (_tkinter.widget.tk method)": [
      [
        368,
        "tkinter.Widget.tk.createfilehandler"
      ]
    ],
    "deletefilehandler() (_tkinter.widget.tk method)": [
      [
        368,
        "tkinter.Widget.tk.deletefilehandler"
      ]
    ],
    "events (widgets)": [
      [
        368,
        "index-5"
      ]
    ],
    "master (tkinter.tk attribute)": [
      [
        368,
        "tkinter.Tk.master"
      ]
    ],
    "packing (widgets)": [
      [
        368,
        "index-2"
      ]
    ],
    "tk (tkinter.tk attribute)": [
      [
        368,
        "tkinter.Tk.tk"
      ]
    ],
    "window manager (widgets)": [
      [
        368,
        "index-3"
      ]
    ],
    "chooser (class in tkinter.colorchooser)": [
      [
        369,
        "tkinter.colorchooser.Chooser"
      ]
    ],
    "askcolor() (in module tkinter.colorchooser)": [
      [
        369,
        "tkinter.colorchooser.askcolor"
      ]
    ],
    "tkinter.colorchooser": [
      [
        369,
        "module-tkinter.colorchooser"
      ]
    ],
    "dndhandler (class in tkinter.dnd)": [
      [
        370,
        "tkinter.dnd.DndHandler"
      ]
    ],
    "cancel() (tkinter.dnd.dndhandler method)": [
      [
        370,
        "tkinter.dnd.DndHandler.cancel"
      ]
    ],
    "dnd_start() (in module tkinter.dnd)": [
      [
        370,
        "tkinter.dnd.dnd_start"
      ]
    ],
    "finish() (tkinter.dnd.dndhandler method)": [
      [
        370,
        "tkinter.dnd.DndHandler.finish"
      ]
    ],
    "on_motion() (tkinter.dnd.dndhandler method)": [
      [
        370,
        "tkinter.dnd.DndHandler.on_motion"
      ]
    ],
    "on_release() (tkinter.dnd.dndhandler method)": [
      [
        370,
        "tkinter.dnd.DndHandler.on_release"
      ]
    ],
    "tkinter.dnd": [
      [
        370,
        "module-tkinter.dnd"
      ]
    ],
    "bold (in module tkinter.font)": [
      [
        371,
        "tkinter.font.BOLD"
      ]
    ],
    "font (class in tkinter.font)": [
      [
        371,
        "tkinter.font.Font"
      ]
    ],
    "italic (in module tkinter.font)": [
      [
        371,
        "tkinter.font.ITALIC"
      ]
    ],
    "normal (in module tkinter.font)": [
      [
        371,
        "tkinter.font.NORMAL"
      ]
    ],
    "roman (in module tkinter.font)": [
      [
        371,
        "tkinter.font.ROMAN"
      ]
    ],
    "actual() (tkinter.font.font method)": [
      [
        371,
        "tkinter.font.Font.actual"
      ]
    ],
    "cget() (tkinter.font.font method)": [
      [
        371,
        "tkinter.font.Font.cget"
      ]
    ],
    "config() (tkinter.font.font method)": [
      [
        371,
        "tkinter.font.Font.config"
      ]
    ],
    "copy() (tkinter.font.font method)": [
      [
        371,
        "tkinter.font.Font.copy"
      ]
    ],
    "families() (in module tkinter.font)": [
      [
        371,
        "tkinter.font.families"
      ]
    ],
    "measure() (tkinter.font.font method)": [
      [
        371,
        "tkinter.font.Font.measure"
      ]
    ],
    "metrics() (tkinter.font.font method)": [
      [
        371,
        "tkinter.font.Font.metrics"
      ]
    ],
    "names() (in module tkinter.font)": [
      [
        371,
        "tkinter.font.names"
      ]
    ],
    "nametofont() (in module tkinter.font)": [
      [
        371,
        "tkinter.font.nametofont"
      ]
    ],
    "tkinter.font": [
      [
        371,
        "module-tkinter.font"
      ]
    ],
    "abort (in module tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.ABORT"
      ]
    ],
    "abortretryignore (in module tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.ABORTRETRYIGNORE"
      ]
    ],
    "cancel (in module tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.CANCEL"
      ]
    ],
    "error (in module tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.ERROR"
      ]
    ],
    "ignore (in module tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.IGNORE"
      ]
    ],
    "info (in module tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.INFO"
      ]
    ],
    "message (class in tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.Message"
      ]
    ],
    "no (in module tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.NO"
      ]
    ],
    "ok (in module tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.OK"
      ]
    ],
    "okcancel (in module tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.OKCANCEL"
      ]
    ],
    "question (in module tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.QUESTION"
      ]
    ],
    "retry (in module tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.RETRY"
      ]
    ],
    "retrycancel (in module tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.RETRYCANCEL"
      ]
    ],
    "warning (in module tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.WARNING"
      ]
    ],
    "yes (in module tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.YES"
      ]
    ],
    "yesno (in module tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.YESNO"
      ]
    ],
    "yesnocancel (in module tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.YESNOCANCEL"
      ]
    ],
    "askokcancel() (in module tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.askokcancel"
      ]
    ],
    "askquestion() (in module tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.askquestion"
      ]
    ],
    "askretrycancel() (in module tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.askretrycancel"
      ]
    ],
    "askyesno() (in module tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.askyesno"
      ]
    ],
    "askyesnocancel() (in module tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.askyesnocancel"
      ]
    ],
    "show() (tkinter.messagebox.message method)": [
      [
        372,
        "tkinter.messagebox.Message.show"
      ]
    ],
    "showerror() (in module tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.showerror"
      ]
    ],
    "showinfo() (in module tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.showinfo"
      ]
    ],
    "showwarning() (in module tkinter.messagebox)": [
      [
        372,
        "tkinter.messagebox.showwarning"
      ]
    ],
    "tkinter.messagebox": [
      [
        372,
        "module-tkinter.messagebox"
      ]
    ],
    "scrolledtext (class in tkinter.scrolledtext)": [
      [
        373,
        "tkinter.scrolledtext.ScrolledText"
      ]
    ],
    "frame (tkinter.scrolledtext.scrolledtext attribute)": [
      [
        373,
        "tkinter.scrolledtext.ScrolledText.frame"
      ]
    ],
    "tkinter.scrolledtext": [
      [
        373,
        "module-tkinter.scrolledtext"
      ]
    ],
    "vbar (tkinter.scrolledtext.scrolledtext attribute)": [
      [
        373,
        "tkinter.scrolledtext.ScrolledText.vbar"
      ]
    ],
    "balloon (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.Balloon"
      ]
    ],
    "buttonbox (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.ButtonBox"
      ]
    ],
    "checklist (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.CheckList"
      ]
    ],
    "combobox (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.ComboBox"
      ]
    ],
    "control (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.Control"
      ]
    ],
    "dirlist (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.DirList"
      ]
    ],
    "dirselectbox (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.DirSelectBox"
      ]
    ],
    "dirselectdialog (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.DirSelectDialog"
      ]
    ],
    "dirtree (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.DirTree"
      ]
    ],
    "exfileselectbox (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.ExFileSelectBox"
      ]
    ],
    "fileentry (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.FileEntry"
      ]
    ],
    "fileselectbox (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.FileSelectBox"
      ]
    ],
    "form (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.Form"
      ]
    ],
    "hlist (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.HList"
      ]
    ],
    "inputonly (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.InputOnly"
      ]
    ],
    "labelentry (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.LabelEntry"
      ]
    ],
    "labelframe (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.LabelFrame"
      ]
    ],
    "listnotebook (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.ListNoteBook"
      ]
    ],
    "meter (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.Meter"
      ]
    ],
    "notebook (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.NoteBook"
      ]
    ],
    "optionmenu (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.OptionMenu"
      ]
    ],
    "panedwindow (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.PanedWindow"
      ]
    ],
    "popupmenu (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.PopupMenu"
      ]
    ],
    "select (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.Select"
      ]
    ],
    "stdbuttonbox (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.StdButtonBox"
      ]
    ],
    "tlist (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.TList"
      ]
    ],
    "tix": [
      [
        374,
        "index-0"
      ]
    ],
    "tk (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.Tk"
      ]
    ],
    "tree (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.Tree"
      ]
    ],
    "tixcommand (class in tkinter.tix)": [
      [
        374,
        "tkinter.tix.tixCommand"
      ]
    ],
    "tix_addbitmapdir() (tkinter.tix.tixcommand method)": [
      [
        374,
        "tkinter.tix.tixCommand.tix_addbitmapdir"
      ]
    ],
    "tix_cget() (tkinter.tix.tixcommand method)": [
      [
        374,
        "tkinter.tix.tixCommand.tix_cget"
      ]
    ],
    "tix_configure() (tkinter.tix.tixcommand method)": [
      [
        374,
        "tkinter.tix.tixCommand.tix_configure"
      ]
    ],
    "tix_filedialog() (tkinter.tix.tixcommand method)": [
      [
        374,
        "tkinter.tix.tixCommand.tix_filedialog"
      ]
    ],
    "tix_getbitmap() (tkinter.tix.tixcommand method)": [
      [
        374,
        "tkinter.tix.tixCommand.tix_getbitmap"
      ]
    ],
    "tix_getimage() (tkinter.tix.tixcommand method)": [
      [
        374,
        "tkinter.tix.tixCommand.tix_getimage"
      ]
    ],
    "tix_option_get() (tkinter.tix.tixcommand method)": [
      [
        374,
        "tkinter.tix.tixCommand.tix_option_get"
      ]
    ],
    "tix_resetoptions() (tkinter.tix.tixcommand method)": [
      [
        374,
        "tkinter.tix.tixCommand.tix_resetoptions"
      ]
    ],
    "tkinter.tix": [
      [
        374,
        "module-tkinter.tix"
      ]
    ],
    "combobox (class in tkinter.ttk)": [
      [
        375,
        "tkinter.ttk.Combobox"
      ]
    ],
    "notebook (class in tkinter.ttk)": [
      [
        375,
        "tkinter.ttk.Notebook"
      ]
    ],
    "progressbar (class in tkinter.ttk)": [
      [
        375,
        "tkinter.ttk.Progressbar"
      ]
    ],
    "spinbox (class in tkinter.ttk)": [
      [
        375,
        "tkinter.ttk.Spinbox"
      ]
    ],
    "style (class in tkinter.ttk)": [
      [
        375,
        "tkinter.ttk.Style"
      ]
    ],
    "treeview (class in tkinter.ttk)": [
      [
        375,
        "tkinter.ttk.Treeview"
      ]
    ],
    "widget (class in tkinter.ttk)": [
      [
        375,
        "tkinter.ttk.Widget"
      ]
    ],
    "add() (tkinter.ttk.notebook method)": [
      [
        375,
        "tkinter.ttk.Notebook.add"
      ]
    ],
    "bbox() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.bbox"
      ]
    ],
    "column() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.column"
      ]
    ],
    "configure() (tkinter.ttk.style method)": [
      [
        375,
        "tkinter.ttk.Style.configure"
      ]
    ],
    "current() (tkinter.ttk.combobox method)": [
      [
        375,
        "tkinter.ttk.Combobox.current"
      ]
    ],
    "delete() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.delete"
      ]
    ],
    "detach() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.detach"
      ]
    ],
    "element_create() (tkinter.ttk.style method)": [
      [
        375,
        "tkinter.ttk.Style.element_create"
      ]
    ],
    "element_names() (tkinter.ttk.style method)": [
      [
        375,
        "tkinter.ttk.Style.element_names"
      ]
    ],
    "element_options() (tkinter.ttk.style method)": [
      [
        375,
        "tkinter.ttk.Style.element_options"
      ]
    ],
    "enable_traversal() (tkinter.ttk.notebook method)": [
      [
        375,
        "tkinter.ttk.Notebook.enable_traversal"
      ]
    ],
    "exists() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.exists"
      ]
    ],
    "focus() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.focus"
      ]
    ],
    "forget() (tkinter.ttk.notebook method)": [
      [
        375,
        "tkinter.ttk.Notebook.forget"
      ]
    ],
    "get() (tkinter.ttk.combobox method)": [
      [
        375,
        "tkinter.ttk.Combobox.get"
      ]
    ],
    "get() (tkinter.ttk.spinbox method)": [
      [
        375,
        "tkinter.ttk.Spinbox.get"
      ]
    ],
    "get_children() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.get_children"
      ]
    ],
    "heading() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.heading"
      ]
    ],
    "hide() (tkinter.ttk.notebook method)": [
      [
        375,
        "tkinter.ttk.Notebook.hide"
      ]
    ],
    "identify() (tkinter.ttk.notebook method)": [
      [
        375,
        "tkinter.ttk.Notebook.identify"
      ]
    ],
    "identify() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.identify"
      ]
    ],
    "identify() (tkinter.ttk.widget method)": [
      [
        375,
        "tkinter.ttk.Widget.identify"
      ]
    ],
    "identify_column() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.identify_column"
      ]
    ],
    "identify_element() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.identify_element"
      ]
    ],
    "identify_region() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.identify_region"
      ]
    ],
    "identify_row() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.identify_row"
      ]
    ],
    "index() (tkinter.ttk.notebook method)": [
      [
        375,
        "tkinter.ttk.Notebook.index"
      ]
    ],
    "index() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.index"
      ]
    ],
    "insert() (tkinter.ttk.notebook method)": [
      [
        375,
        "tkinter.ttk.Notebook.insert"
      ]
    ],
    "insert() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.insert"
      ]
    ],
    "instate() (tkinter.ttk.widget method)": [
      [
        375,
        "tkinter.ttk.Widget.instate"
      ]
    ],
    "item() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.item"
      ]
    ],
    "layout() (tkinter.ttk.style method)": [
      [
        375,
        "tkinter.ttk.Style.layout"
      ]
    ],
    "lookup() (tkinter.ttk.style method)": [
      [
        375,
        "tkinter.ttk.Style.lookup"
      ]
    ],
    "map() (tkinter.ttk.style method)": [
      [
        375,
        "tkinter.ttk.Style.map"
      ]
    ],
    "move() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.move"
      ]
    ],
    "next() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.next"
      ]
    ],
    "parent() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.parent"
      ]
    ],
    "prev() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.prev"
      ]
    ],
    "reattach() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.reattach"
      ]
    ],
    "see() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.see"
      ]
    ],
    "select() (tkinter.ttk.notebook method)": [
      [
        375,
        "tkinter.ttk.Notebook.select"
      ]
    ],
    "selection() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.selection"
      ]
    ],
    "selection_add() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.selection_add"
      ]
    ],
    "selection_remove() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.selection_remove"
      ]
    ],
    "selection_set() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.selection_set"
      ]
    ],
    "selection_toggle() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.selection_toggle"
      ]
    ],
    "set() (tkinter.ttk.combobox method)": [
      [
        375,
        "tkinter.ttk.Combobox.set"
      ]
    ],
    "set() (tkinter.ttk.spinbox method)": [
      [
        375,
        "tkinter.ttk.Spinbox.set"
      ]
    ],
    "set() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.set"
      ]
    ],
    "set_children() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.set_children"
      ]
    ],
    "start() (tkinter.ttk.progressbar method)": [
      [
        375,
        "tkinter.ttk.Progressbar.start"
      ]
    ],
    "state() (tkinter.ttk.widget method)": [
      [
        375,
        "tkinter.ttk.Widget.state"
      ]
    ],
    "step() (tkinter.ttk.progressbar method)": [
      [
        375,
        "tkinter.ttk.Progressbar.step"
      ]
    ],
    "stop() (tkinter.ttk.progressbar method)": [
      [
        375,
        "tkinter.ttk.Progressbar.stop"
      ]
    ],
    "tab() (tkinter.ttk.notebook method)": [
      [
        375,
        "tkinter.ttk.Notebook.tab"
      ]
    ],
    "tabs() (tkinter.ttk.notebook method)": [
      [
        375,
        "tkinter.ttk.Notebook.tabs"
      ]
    ],
    "tag_bind() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.tag_bind"
      ]
    ],
    "tag_configure() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.tag_configure"
      ]
    ],
    "tag_has() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.tag_has"
      ]
    ],
    "theme_create() (tkinter.ttk.style method)": [
      [
        375,
        "tkinter.ttk.Style.theme_create"
      ]
    ],
    "theme_names() (tkinter.ttk.style method)": [
      [
        375,
        "tkinter.ttk.Style.theme_names"
      ]
    ],
    "theme_settings() (tkinter.ttk.style method)": [
      [
        375,
        "tkinter.ttk.Style.theme_settings"
      ]
    ],
    "theme_use() (tkinter.ttk.style method)": [
      [
        375,
        "tkinter.ttk.Style.theme_use"
      ]
    ],
    "tkinter.ttk": [
      [
        375,
        "module-tkinter.ttk"
      ]
    ],
    "ttk": [
      [
        375,
        "index-0"
      ]
    ],
    "xview() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.xview"
      ]
    ],
    "yview() (tkinter.ttk.treeview method)": [
      [
        375,
        "tkinter.ttk.Treeview.yview"
      ]
    ],
    "amper (in module token)": [
      [
        376,
        "token.AMPER"
      ]
    ],
    "amperequal (in module token)": [
      [
        376,
        "token.AMPEREQUAL"
      ]
    ],
    "async (in module token)": [
      [
        376,
        "token.ASYNC"
      ]
    ],
    "at (in module token)": [
      [
        376,
        "token.AT"
      ]
    ],
    "atequal (in module token)": [
      [
        376,
        "token.ATEQUAL"
      ]
    ],
    "await (in module token)": [
      [
        376,
        "token.AWAIT"
      ]
    ],
    "circumflex (in module token)": [
      [
        376,
        "token.CIRCUMFLEX"
      ]
    ],
    "circumflexequal (in module token)": [
      [
        376,
        "token.CIRCUMFLEXEQUAL"
      ]
    ],
    "colon (in module token)": [
      [
        376,
        "token.COLON"
      ]
    ],
    "colonequal (in module token)": [
      [
        376,
        "token.COLONEQUAL"
      ]
    ],
    "comma (in module token)": [
      [
        376,
        "token.COMMA"
      ]
    ],
    "comment (in module token)": [
      [
        376,
        "token.COMMENT"
      ]
    ],
    "dedent (in module token)": [
      [
        376,
        "token.DEDENT"
      ]
    ],
    "dot (in module token)": [
      [
        376,
        "token.DOT"
      ]
    ],
    "doubleslash (in module token)": [
      [
        376,
        "token.DOUBLESLASH"
      ]
    ],
    "doubleslashequal (in module token)": [
      [
        376,
        "token.DOUBLESLASHEQUAL"
      ]
    ],
    "doublestar (in module token)": [
      [
        376,
        "token.DOUBLESTAR"
      ]
    ],
    "doublestarequal (in module token)": [
      [
        376,
        "token.DOUBLESTAREQUAL"
      ]
    ],
    "ellipsis (in module token)": [
      [
        376,
        "token.ELLIPSIS"
      ]
    ],
    "encoding (in module token)": [
      [
        376,
        "token.ENCODING"
      ]
    ],
    "endmarker (in module token)": [
      [
        376,
        "token.ENDMARKER"
      ]
    ],
    "eqequal (in module token)": [
      [
        376,
        "token.EQEQUAL"
      ]
    ],
    "equal (in module token)": [
      [
        376,
        "token.EQUAL"
      ]
    ],
    "errortoken (in module token)": [
      [
        376,
        "token.ERRORTOKEN"
      ]
    ],
    "exclamation (in module token)": [
      [
        376,
        "token.EXCLAMATION"
      ]
    ],
    "fstring_end (in module token)": [
      [
        376,
        "token.FSTRING_END"
      ]
    ],
    "fstring_middle (in module token)": [
      [
        376,
        "token.FSTRING_MIDDLE"
      ]
    ],
    "fstring_start (in module token)": [
      [
        376,
        "token.FSTRING_START"
      ]
    ],
    "greater (in module token)": [
      [
        376,
        "token.GREATER"
      ]
    ],
    "greaterequal (in module token)": [
      [
        376,
        "token.GREATEREQUAL"
      ]
    ],
    "indent (in module token)": [
      [
        376,
        "token.INDENT"
      ]
    ],
    "iseof() (in module token)": [
      [
        376,
        "token.ISEOF"
      ]
    ],
    "isnonterminal() (in module token)": [
      [
        376,
        "token.ISNONTERMINAL"
      ]
    ],
    "isterminal() (in module token)": [
      [
        376,
        "token.ISTERMINAL"
      ]
    ],
    "lbrace (in module token)": [
      [
        376,
        "token.LBRACE"
      ]
    ],
    "leftshift (in module token)": [
      [
        376,
        "token.LEFTSHIFT"
      ]
    ],
    "leftshiftequal (in module token)": [
      [
        376,
        "token.LEFTSHIFTEQUAL"
      ]
    ],
    "less (in module token)": [
      [
        376,
        "token.LESS"
      ]
    ],
    "lessequal (in module token)": [
      [
        376,
        "token.LESSEQUAL"
      ]
    ],
    "lpar (in module token)": [
      [
        376,
        "token.LPAR"
      ]
    ],
    "lsqb (in module token)": [
      [
        376,
        "token.LSQB"
      ]
    ],
    "minequal (in module token)": [
      [
        376,
        "token.MINEQUAL"
      ]
    ],
    "minus (in module token)": [
      [
        376,
        "token.MINUS"
      ]
    ],
    "name (in module token)": [
      [
        376,
        "token.NAME"
      ]
    ],
    "newline (in module token)": [
      [
        376,
        "token.NEWLINE"
      ]
    ],
    "nl (in module token)": [
      [
        376,
        "token.NL"
      ]
    ],
    "notequal (in module token)": [
      [
        376,
        "token.NOTEQUAL"
      ]
    ],
    "nt_offset (in module token)": [
      [
        376,
        "token.NT_OFFSET"
      ]
    ],
    "number (in module token)": [
      [
        376,
        "token.NUMBER"
      ]
    ],
    "n_tokens (in module token)": [
      [
        376,
        "token.N_TOKENS"
      ]
    ],
    "op (in module token)": [
      [
        376,
        "token.OP"
      ]
    ],
    "percent (in module token)": [
      [
        376,
        "token.PERCENT"
      ]
    ],
    "percentequal (in module token)": [
      [
        376,
        "token.PERCENTEQUAL"
      ]
    ],
    "plus (in module token)": [
      [
        376,
        "token.PLUS"
      ]
    ],
    "plusequal (in module token)": [
      [
        376,
        "token.PLUSEQUAL"
      ]
    ],
    "rarrow (in module token)": [
      [
        376,
        "token.RARROW"
      ]
    ],
    "rbrace (in module token)": [
      [
        376,
        "token.RBRACE"
      ]
    ],
    "rightshift (in module token)": [
      [
        376,
        "token.RIGHTSHIFT"
      ]
    ],
    "rightshiftequal (in module token)": [
      [
        376,
        "token.RIGHTSHIFTEQUAL"
      ]
    ],
    "rpar (in module token)": [
      [
        376,
        "token.RPAR"
      ]
    ],
    "rsqb (in module token)": [
      [
        376,
        "token.RSQB"
      ]
    ],
    "semi (in module token)": [
      [
        376,
        "token.SEMI"
      ]
    ],
    "slash (in module token)": [
      [
        376,
        "token.SLASH"
      ]
    ],
    "slashequal (in module token)": [
      [
        376,
        "token.SLASHEQUAL"
      ]
    ],
    "soft_keyword (in module token)": [
      [
        376,
        "token.SOFT_KEYWORD"
      ]
    ],
    "star (in module token)": [
      [
        376,
        "token.STAR"
      ]
    ],
    "starequal (in module token)": [
      [
        376,
        "token.STAREQUAL"
      ]
    ],
    "string (in module token)": [
      [
        376,
        "token.STRING"
      ]
    ],
    "tilde (in module token)": [
      [
        376,
        "token.TILDE"
      ]
    ],
    "type_comment (in module token)": [
      [
        376,
        "token.TYPE_COMMENT"
      ]
    ],
    "type_ignore (in module token)": [
      [
        376,
        "token.TYPE_IGNORE"
      ]
    ],
    "vbar (in module token)": [
      [
        376,
        "token.VBAR"
      ]
    ],
    "vbarequal (in module token)": [
      [
        376,
        "token.VBAREQUAL"
      ]
    ],
    "tok_name (in module token)": [
      [
        376,
        "token.tok_name"
      ]
    ],
    "token": [
      [
        376,
        "module-token"
      ],
      [
        434,
        "index-0"
      ]
    ],
    "--exact": [
      [
        377,
        "cmdoption-tokenize-e"
      ]
    ],
    "tokenerror": [
      [
        377,
        "tokenize.TokenError"
      ]
    ],
    "detect_encoding() (in module tokenize)": [
      [
        377,
        "tokenize.detect_encoding"
      ]
    ],
    "generate_tokens() (in module tokenize)": [
      [
        377,
        "tokenize.generate_tokens"
      ]
    ],
    "open() (in module tokenize)": [
      [
        377,
        "tokenize.open"
      ]
    ],
    "tokenize": [
      [
        377,
        "module-tokenize"
      ]
    ],
    "tokenize command line option": [
      [
        377,
        "cmdoption-tokenize-e"
      ],
      [
        377,
        "cmdoption-tokenize-h"
      ]
    ],
    "tokenize() (in module tokenize)": [
      [
        377,
        "tokenize.tokenize"
      ]
    ],
    "untokenize() (in module tokenize)": [
      [
        377,
        "tokenize.untokenize"
      ]
    ],
    "tomldecodeerror": [
      [
        378,
        "tomllib.TOMLDecodeError"
      ]
    ],
    "load() (in module tomllib)": [
      [
        378,
        "tomllib.load"
      ]
    ],
    "loads() (in module tomllib)": [
      [
        378,
        "tomllib.loads"
      ]
    ],
    "tomllib": [
      [
        378,
        "module-tomllib"
      ]
    ],
    "--count": [
      [
        379,
        "cmdoption-trace-c"
      ]
    ],
    "--coverdir": [
      [
        379,
        "cmdoption-trace-C"
      ]
    ],
    "--file": [
      [
        379,
        "cmdoption-trace-f"
      ]
    ],
    "--ignore-dir": [
      [
        379,
        "cmdoption-trace-ignore-dir"
      ]
    ],
    "--ignore-module": [
      [
        379,
        "cmdoption-trace-ignore-module"
      ]
    ],
    "--listfuncs": [
      [
        379,
        "cmdoption-trace-l"
      ]
    ],
    "--missing": [
      [
        379,
        "cmdoption-trace-m"
      ]
    ],
    "--no-report": [
      [
        379,
        "cmdoption-trace-R"
      ]
    ],
    "--report": [
      [
        379,
        "cmdoption-trace-r"
      ]
    ],
    "--summary": [
      [
        379,
        "cmdoption-trace-s"
      ]
    ],
    "--timing": [
      [
        379,
        "cmdoption-trace-g"
      ]
    ],
    "--trace": [
      [
        379,
        "cmdoption-trace-t"
      ]
    ],
    "--trackcalls": [
      [
        379,
        "cmdoption-trace-T"
      ]
    ],
    "-g": [
      [
        379,
        "cmdoption-trace-g"
      ]
    ],
    "coverageresults (class in trace)": [
      [
        379,
        "trace.CoverageResults"
      ]
    ],
    "trace (class in trace)": [
      [
        379,
        "trace.Trace"
      ]
    ],
    "results() (trace.trace method)": [
      [
        379,
        "trace.Trace.results"
      ]
    ],
    "run() (trace.trace method)": [
      [
        379,
        "trace.Trace.run"
      ]
    ],
    "runctx() (trace.trace method)": [
      [
        379,
        "trace.Trace.runctx"
      ]
    ],
    "runfunc() (trace.trace method)": [
      [
        379,
        "trace.Trace.runfunc"
      ]
    ],
    "trace": [
      [
        379,
        "module-trace"
      ],
      [
        427,
        "index-66"
      ]
    ],
    "trace command line option": [
      [
        379,
        "cmdoption-trace-C"
      ],
      [
        379,
        "cmdoption-trace-R"
      ],
      [
        379,
        "cmdoption-trace-T"
      ],
      [
        379,
        "cmdoption-trace-c"
      ],
      [
        379,
        "cmdoption-trace-f"
      ],
      [
        379,
        "cmdoption-trace-g"
      ],
      [
        379,
        "cmdoption-trace-help"
      ],
      [
        379,
        "cmdoption-trace-ignore-dir"
      ],
      [
        379,
        "cmdoption-trace-ignore-module"
      ],
      [
        379,
        "cmdoption-trace-l"
      ],
      [
        379,
        "cmdoption-trace-m"
      ],
      [
        379,
        "cmdoption-trace-r"
      ],
      [
        379,
        "cmdoption-trace-s"
      ],
      [
        379,
        "cmdoption-trace-t"
      ],
      [
        379,
        "cmdoption-trace-version"
      ]
    ],
    "update() (trace.coverageresults method)": [
      [
        379,
        "trace.CoverageResults.update"
      ]
    ],
    "write_results() (trace.coverageresults method)": [
      [
        379,
        "trace.CoverageResults.write_results"
      ]
    ],
    "framesummary (class in traceback)": [
      [
        380,
        "traceback.FrameSummary"
      ]
    ],
    "stacksummary (class in traceback)": [
      [
        380,
        "traceback.StackSummary"
      ]
    ],
    "tracebackexception (class in traceback)": [
      [
        380,
        "traceback.TracebackException"
      ]
    ],
    "__cause__ (traceback.tracebackexception attribute)": [
      [
        380,
        "traceback.TracebackException.__cause__"
      ]
    ],
    "__context__ (traceback.tracebackexception attribute)": [
      [
        380,
        "traceback.TracebackException.__context__"
      ]
    ],
    "__notes__ (traceback.tracebackexception attribute)": [
      [
        380,
        "traceback.TracebackException.__notes__"
      ]
    ],
    "__suppress_context__ (traceback.tracebackexception attribute)": [
      [
        380,
        "traceback.TracebackException.__suppress_context__"
      ]
    ],
    "clear_frames() (in module traceback)": [
      [
        380,
        "traceback.clear_frames"
      ]
    ],
    "end_lineno (traceback.tracebackexception attribute)": [
      [
        380,
        "traceback.TracebackException.end_lineno"
      ]
    ],
    "end_offset (traceback.tracebackexception attribute)": [
      [
        380,
        "traceback.TracebackException.end_offset"
      ]
    ],
    "exc_type (traceback.tracebackexception attribute)": [
      [
        380,
        "traceback.TracebackException.exc_type"
      ]
    ],
    "exceptions (traceback.tracebackexception attribute)": [
      [
        380,
        "traceback.TracebackException.exceptions"
      ]
    ],
    "extract() (traceback.stacksummary class method)": [
      [
        380,
        "traceback.StackSummary.extract"
      ]
    ],
    "extract_stack() (in module traceback)": [
      [
        380,
        "traceback.extract_stack"
      ]
    ],
    "extract_tb() (in module traceback)": [
      [
        380,
        "traceback.extract_tb"
      ]
    ],
    "filename (traceback.framesummary attribute)": [
      [
        380,
        "traceback.FrameSummary.filename"
      ]
    ],
    "filename (traceback.tracebackexception attribute)": [
      [
        380,
        "traceback.TracebackException.filename"
      ]
    ],
    "format() (traceback.stacksummary method)": [
      [
        380,
        "traceback.StackSummary.format"
      ]
    ],
    "format() (traceback.tracebackexception method)": [
      [
        380,
        "traceback.TracebackException.format"
      ]
    ],
    "format_exc() (in module traceback)": [
      [
        380,
        "traceback.format_exc"
      ]
    ],
    "format_exception() (in module traceback)": [
      [
        380,
        "traceback.format_exception"
      ]
    ],
    "format_exception_only() (in module traceback)": [
      [
        380,
        "traceback.format_exception_only"
      ]
    ],
    "format_exception_only() (traceback.tracebackexception method)": [
      [
        380,
        "traceback.TracebackException.format_exception_only"
      ]
    ],
    "format_frame_summary() (traceback.stacksummary method)": [
      [
        380,
        "traceback.StackSummary.format_frame_summary"
      ]
    ],
    "format_list() (in module traceback)": [
      [
        380,
        "traceback.format_list"
      ]
    ],
    "format_stack() (in module traceback)": [
      [
        380,
        "traceback.format_stack"
      ]
    ],
    "format_tb() (in module traceback)": [
      [
        380,
        "traceback.format_tb"
      ]
    ],
    "from_exception() (traceback.tracebackexception class method)": [
      [
        380,
        "traceback.TracebackException.from_exception"
      ]
    ],
    "from_list() (traceback.stacksummary class method)": [
      [
        380,
        "traceback.StackSummary.from_list"
      ]
    ],
    "line (traceback.framesummary attribute)": [
      [
        380,
        "traceback.FrameSummary.line"
      ]
    ],
    "lineno (traceback.framesummary attribute)": [
      [
        380,
        "traceback.FrameSummary.lineno"
      ]
    ],
    "lineno (traceback.tracebackexception attribute)": [
      [
        380,
        "traceback.TracebackException.lineno"
      ]
    ],
    "msg (traceback.tracebackexception attribute)": [
      [
        380,
        "traceback.TracebackException.msg"
      ]
    ],
    "name (traceback.framesummary attribute)": [
      [
        380,
        "traceback.FrameSummary.name"
      ]
    ],
    "offset (traceback.tracebackexception attribute)": [
      [
        380,
        "traceback.TracebackException.offset"
      ]
    ],
    "print() (traceback.tracebackexception method)": [
      [
        380,
        "traceback.TracebackException.print"
      ]
    ],
    "print_exc() (in module traceback)": [
      [
        380,
        "traceback.print_exc"
      ]
    ],
    "print_exception() (in module traceback)": [
      [
        380,
        "traceback.print_exception"
      ]
    ],
    "print_last() (in module traceback)": [
      [
        380,
        "traceback.print_last"
      ]
    ],
    "print_stack() (in module traceback)": [
      [
        380,
        "traceback.print_stack"
      ]
    ],
    "print_tb() (in module traceback)": [
      [
        380,
        "traceback.print_tb"
      ]
    ],
    "stack (traceback.tracebackexception attribute)": [
      [
        380,
        "traceback.TracebackException.stack"
      ]
    ],
    "text (traceback.tracebackexception attribute)": [
      [
        380,
        "traceback.TracebackException.text"
      ]
    ],
    "walk_stack() (in module traceback)": [
      [
        380,
        "traceback.walk_stack"
      ]
    ],
    "walk_tb() (in module traceback)": [
      [
        380,
        "traceback.walk_tb"
      ]
    ],
    "domainfilter (class in tracemalloc)": [
      [
        381,
        "tracemalloc.DomainFilter"
      ]
    ],
    "filter (class in tracemalloc)": [
      [
        381,
        "tracemalloc.Filter"
      ]
    ],
    "frame (class in tracemalloc)": [
      [
        381,
        "tracemalloc.Frame"
      ]
    ],
    "snapshot (class in tracemalloc)": [
      [
        381,
        "tracemalloc.Snapshot"
      ]
    ],
    "statistic (class in tracemalloc)": [
      [
        381,
        "tracemalloc.Statistic"
      ]
    ],
    "statisticdiff (class in tracemalloc)": [
      [
        381,
        "tracemalloc.StatisticDiff"
      ]
    ],
    "trace (class in tracemalloc)": [
      [
        381,
        "tracemalloc.Trace"
      ]
    ],
    "traceback (class in tracemalloc)": [
      [
        381,
        "tracemalloc.Traceback"
      ]
    ],
    "all_frames (tracemalloc.filter attribute)": [
      [
        381,
        "tracemalloc.Filter.all_frames"
      ]
    ],
    "clear_traces() (in module tracemalloc)": [
      [
        381,
        "tracemalloc.clear_traces"
      ]
    ],
    "compare_to() (tracemalloc.snapshot method)": [
      [
        381,
        "tracemalloc.Snapshot.compare_to"
      ]
    ],
    "count (tracemalloc.statistic attribute)": [
      [
        381,
        "tracemalloc.Statistic.count"
      ]
    ],
    "count (tracemalloc.statisticdiff attribute)": [
      [
        381,
        "tracemalloc.StatisticDiff.count"
      ]
    ],
    "count_diff (tracemalloc.statisticdiff attribute)": [
      [
        381,
        "tracemalloc.StatisticDiff.count_diff"
      ]
    ],
    "domain (tracemalloc.domainfilter attribute)": [
      [
        381,
        "tracemalloc.DomainFilter.domain"
      ]
    ],
    "domain (tracemalloc.filter attribute)": [
      [
        381,
        "tracemalloc.Filter.domain"
      ]
    ],
    "domain (tracemalloc.trace attribute)": [
      [
        381,
        "tracemalloc.Trace.domain"
      ]
    ],
    "dump() (tracemalloc.snapshot method)": [
      [
        381,
        "tracemalloc.Snapshot.dump"
      ]
    ],
    "filename (tracemalloc.frame attribute)": [
      [
        381,
        "tracemalloc.Frame.filename"
      ]
    ],
    "filename_pattern (tracemalloc.filter attribute)": [
      [
        381,
        "tracemalloc.Filter.filename_pattern"
      ]
    ],
    "filter_traces() (tracemalloc.snapshot method)": [
      [
        381,
        "tracemalloc.Snapshot.filter_traces"
      ]
    ],
    "format() (tracemalloc.traceback method)": [
      [
        381,
        "tracemalloc.Traceback.format"
      ]
    ],
    "get_object_traceback() (in module tracemalloc)": [
      [
        381,
        "tracemalloc.get_object_traceback"
      ]
    ],
    "get_traceback_limit() (in module tracemalloc)": [
      [
        381,
        "tracemalloc.get_traceback_limit"
      ]
    ],
    "get_traced_memory() (in module tracemalloc)": [
      [
        381,
        "tracemalloc.get_traced_memory"
      ]
    ],
    "get_tracemalloc_memory() (in module tracemalloc)": [
      [
        381,
        "tracemalloc.get_tracemalloc_memory"
      ]
    ],
    "inclusive (tracemalloc.domainfilter attribute)": [
      [
        381,
        "tracemalloc.DomainFilter.inclusive"
      ]
    ],
    "inclusive (tracemalloc.filter attribute)": [
      [
        381,
        "tracemalloc.Filter.inclusive"
      ]
    ],
    "is_tracing() (in module tracemalloc)": [
      [
        381,
        "tracemalloc.is_tracing"
      ]
    ],
    "lineno (tracemalloc.filter attribute)": [
      [
        381,
        "tracemalloc.Filter.lineno"
      ]
    ],
    "lineno (tracemalloc.frame attribute)": [
      [
        381,
        "tracemalloc.Frame.lineno"
      ]
    ],
    "load() (tracemalloc.snapshot class method)": [
      [
        381,
        "tracemalloc.Snapshot.load"
      ]
    ],
    "reset_peak() (in module tracemalloc)": [
      [
        381,
        "tracemalloc.reset_peak"
      ]
    ],
    "size (tracemalloc.statistic attribute)": [
      [
        381,
        "tracemalloc.Statistic.size"
      ]
    ],
    "size (tracemalloc.statisticdiff attribute)": [
      [
        381,
        "tracemalloc.StatisticDiff.size"
      ]
    ],
    "size (tracemalloc.trace attribute)": [
      [
        381,
        "tracemalloc.Trace.size"
      ]
    ],
    "size_diff (tracemalloc.statisticdiff attribute)": [
      [
        381,
        "tracemalloc.StatisticDiff.size_diff"
      ]
    ],
    "start() (in module tracemalloc)": [
      [
        381,
        "tracemalloc.start"
      ]
    ],
    "statistics() (tracemalloc.snapshot method)": [
      [
        381,
        "tracemalloc.Snapshot.statistics"
      ]
    ],
    "stop() (in module tracemalloc)": [
      [
        381,
        "tracemalloc.stop"
      ]
    ],
    "take_snapshot() (in module tracemalloc)": [
      [
        381,
        "tracemalloc.take_snapshot"
      ]
    ],
    "total_nframe (tracemalloc.traceback attribute)": [
      [
        381,
        "tracemalloc.Traceback.total_nframe"
      ]
    ],
    "traceback (tracemalloc.statistic attribute)": [
      [
        381,
        "tracemalloc.Statistic.traceback"
      ]
    ],
    "traceback (tracemalloc.statisticdiff attribute)": [
      [
        381,
        "tracemalloc.StatisticDiff.traceback"
      ]
    ],
    "traceback (tracemalloc.trace attribute)": [
      [
        381,
        "tracemalloc.Trace.traceback"
      ]
    ],
    "traceback_limit (tracemalloc.snapshot attribute)": [
      [
        381,
        "tracemalloc.Snapshot.traceback_limit"
      ]
    ],
    "tracemalloc": [
      [
        381,
        "module-tracemalloc"
      ]
    ],
    "traces (tracemalloc.snapshot attribute)": [
      [
        381,
        "tracemalloc.Snapshot.traces"
      ]
    ],
    "cfmakecbreak() (in module tty)": [
      [
        382,
        "tty.cfmakecbreak"
      ]
    ],
    "cfmakeraw() (in module tty)": [
      [
        382,
        "tty.cfmakeraw"
      ]
    ],
    "setcbreak() (in module tty)": [
      [
        382,
        "tty.setcbreak"
      ]
    ],
    "setraw() (in module tty)": [
      [
        382,
        "tty.setraw"
      ]
    ],
    "rawpen (class in turtle)": [
      [
        383,
        "turtle.RawPen"
      ]
    ],
    "rawturtle (class in turtle)": [
      [
        383,
        "turtle.RawTurtle"
      ]
    ],
    "screen (class in turtle)": [
      [
        383,
        "turtle.Screen"
      ]
    ],
    "scrolledcanvas (class in turtle)": [
      [
        383,
        "turtle.ScrolledCanvas"
      ]
    ],
    "shape (class in turtle)": [
      [
        383,
        "turtle.Shape"
      ]
    ],
    "turtle (class in turtle)": [
      [
        383,
        "turtle.Turtle"
      ]
    ],
    "turtlescreen (class in turtle)": [
      [
        383,
        "turtle.TurtleScreen"
      ]
    ],
    "vec2d (class in turtle)": [
      [
        383,
        "turtle.Vec2D"
      ]
    ],
    "addcomponent() (turtle.shape method)": [
      [
        383,
        "turtle.Shape.addcomponent"
      ]
    ],
    "addshape() (in module turtle)": [
      [
        383,
        "turtle.addshape"
      ]
    ],
    "back() (in module turtle)": [
      [
        383,
        "turtle.back"
      ]
    ],
    "backward() (in module turtle)": [
      [
        383,
        "turtle.backward"
      ]
    ],
    "begin_fill() (in module turtle)": [
      [
        383,
        "turtle.begin_fill"
      ]
    ],
    "begin_poly() (in module turtle)": [
      [
        383,
        "turtle.begin_poly"
      ]
    ],
    "bgcolor() (in module turtle)": [
      [
        383,
        "turtle.bgcolor"
      ]
    ],
    "bgpic() (in module turtle)": [
      [
        383,
        "turtle.bgpic"
      ]
    ],
    "bk() (in module turtle)": [
      [
        383,
        "turtle.bk"
      ]
    ],
    "bye() (in module turtle)": [
      [
        383,
        "turtle.bye"
      ]
    ],
    "circle() (in module turtle)": [
      [
        383,
        "turtle.circle"
      ]
    ],
    "clear() (in module turtle)": [
      [
        383,
        "turtle.clear"
      ]
    ],
    "clearscreen() (in module turtle)": [
      [
        383,
        "turtle.clearscreen"
      ]
    ],
    "clearstamp() (in module turtle)": [
      [
        383,
        "turtle.clearstamp"
      ]
    ],
    "clearstamps() (in module turtle)": [
      [
        383,
        "turtle.clearstamps"
      ]
    ],
    "clone() (in module turtle)": [
      [
        383,
        "turtle.clone"
      ]
    ],
    "color() (in module turtle)": [
      [
        383,
        "turtle.color"
      ]
    ],
    "colormode() (in module turtle)": [
      [
        383,
        "turtle.colormode"
      ]
    ],
    "degrees() (in module turtle)": [
      [
        383,
        "turtle.degrees"
      ]
    ],
    "delay() (in module turtle)": [
      [
        383,
        "turtle.delay"
      ]
    ],
    "distance() (in module turtle)": [
      [
        383,
        "turtle.distance"
      ]
    ],
    "done() (in module turtle)": [
      [
        383,
        "turtle.done"
      ]
    ],
    "dot() (in module turtle)": [
      [
        383,
        "turtle.dot"
      ]
    ],
    "down() (in module turtle)": [
      [
        383,
        "turtle.down"
      ]
    ],
    "end_fill() (in module turtle)": [
      [
        383,
        "turtle.end_fill"
      ]
    ],
    "end_poly() (in module turtle)": [
      [
        383,
        "turtle.end_poly"
      ]
    ],
    "exitonclick() (in module turtle)": [
      [
        383,
        "turtle.exitonclick"
      ]
    ],
    "fd() (in module turtle)": [
      [
        383,
        "turtle.fd"
      ]
    ],
    "fillcolor() (in module turtle)": [
      [
        383,
        "turtle.fillcolor"
      ]
    ],
    "filling() (in module turtle)": [
      [
        383,
        "turtle.filling"
      ]
    ],
    "forward() (in module turtle)": [
      [
        383,
        "turtle.forward"
      ]
    ],
    "get_poly() (in module turtle)": [
      [
        383,
        "turtle.get_poly"
      ]
    ],
    "get_shapepoly() (in module turtle)": [
      [
        383,
        "turtle.get_shapepoly"
      ]
    ],
    "getcanvas() (in module turtle)": [
      [
        383,
        "turtle.getcanvas"
      ]
    ],
    "getpen() (in module turtle)": [
      [
        383,
        "turtle.getpen"
      ]
    ],
    "getscreen() (in module turtle)": [
      [
        383,
        "turtle.getscreen"
      ]
    ],
    "getshapes() (in module turtle)": [
      [
        383,
        "turtle.getshapes"
      ]
    ],
    "getturtle() (in module turtle)": [
      [
        383,
        "turtle.getturtle"
      ]
    ],
    "goto() (in module turtle)": [
      [
        383,
        "turtle.goto"
      ]
    ],
    "heading() (in module turtle)": [
      [
        383,
        "turtle.heading"
      ]
    ],
    "hideturtle() (in module turtle)": [
      [
        383,
        "turtle.hideturtle"
      ]
    ],
    "home() (in module turtle)": [
      [
        383,
        "turtle.home"
      ]
    ],
    "ht() (in module turtle)": [
      [
        383,
        "turtle.ht"
      ]
    ],
    "isdown() (in module turtle)": [
      [
        383,
        "turtle.isdown"
      ]
    ],
    "isvisible() (in module turtle)": [
      [
        383,
        "turtle.isvisible"
      ]
    ],
    "left() (in module turtle)": [
      [
        383,
        "turtle.left"
      ]
    ],
    "listen() (in module turtle)": [
      [
        383,
        "turtle.listen"
      ]
    ],
    "lt() (in module turtle)": [
      [
        383,
        "turtle.lt"
      ]
    ],
    "mainloop() (in module turtle)": [
      [
        383,
        "turtle.mainloop"
      ]
    ],
    "mode() (in module turtle)": [
      [
        383,
        "turtle.mode"
      ]
    ],
    "numinput() (in module turtle)": [
      [
        383,
        "turtle.numinput"
      ]
    ],
    "onclick() (in module turtle)": [
      [
        383,
        "turtle.onclick"
      ]
    ],
    "ondrag() (in module turtle)": [
      [
        383,
        "turtle.ondrag"
      ]
    ],
    "onkey() (in module turtle)": [
      [
        383,
        "turtle.onkey"
      ]
    ],
    "onkeypress() (in module turtle)": [
      [
        383,
        "turtle.onkeypress"
      ]
    ],
    "onkeyrelease() (in module turtle)": [
      [
        383,
        "turtle.onkeyrelease"
      ]
    ],
    "onrelease() (in module turtle)": [
      [
        383,
        "turtle.onrelease"
      ]
    ],
    "onscreenclick() (in module turtle)": [
      [
        383,
        "turtle.onscreenclick"
      ]
    ],
    "ontimer() (in module turtle)": [
      [
        383,
        "turtle.ontimer"
      ]
    ],
    "pd() (in module turtle)": [
      [
        383,
        "turtle.pd"
      ]
    ],
    "pen() (in module turtle)": [
      [
        383,
        "turtle.pen"
      ]
    ],
    "pencolor() (in module turtle)": [
      [
        383,
        "turtle.pencolor"
      ]
    ],
    "pendown() (in module turtle)": [
      [
        383,
        "turtle.pendown"
      ]
    ],
    "pensize() (in module turtle)": [
      [
        383,
        "turtle.pensize"
      ]
    ],
    "penup() (in module turtle)": [
      [
        383,
        "turtle.penup"
      ]
    ],
    "pos() (in module turtle)": [
      [
        383,
        "turtle.pos"
      ]
    ],
    "position() (in module turtle)": [
      [
        383,
        "turtle.position"
      ]
    ],
    "pu() (in module turtle)": [
      [
        383,
        "turtle.pu"
      ]
    ],
    "radians() (in module turtle)": [
      [
        383,
        "turtle.radians"
      ]
    ],
    "register_shape() (in module turtle)": [
      [
        383,
        "turtle.register_shape"
      ]
    ],
    "reset() (in module turtle)": [
      [
        383,
        "turtle.reset"
      ]
    ],
    "resetscreen() (in module turtle)": [
      [
        383,
        "turtle.resetscreen"
      ]
    ],
    "resizemode() (in module turtle)": [
      [
        383,
        "turtle.resizemode"
      ]
    ],
    "right() (in module turtle)": [
      [
        383,
        "turtle.right"
      ]
    ],
    "rt() (in module turtle)": [
      [
        383,
        "turtle.rt"
      ]
    ],
    "screensize() (in module turtle)": [
      [
        383,
        "turtle.screensize"
      ]
    ],
    "seth() (in module turtle)": [
      [
        383,
        "turtle.seth"
      ]
    ],
    "setheading() (in module turtle)": [
      [
        383,
        "turtle.setheading"
      ]
    ],
    "setpos() (in module turtle)": [
      [
        383,
        "turtle.setpos"
      ]
    ],
    "setposition() (in module turtle)": [
      [
        383,
        "turtle.setposition"
      ]
    ],
    "settiltangle() (in module turtle)": [
      [
        383,
        "turtle.settiltangle"
      ]
    ],
    "setundobuffer() (in module turtle)": [
      [
        383,
        "turtle.setundobuffer"
      ]
    ],
    "setup() (in module turtle)": [
      [
        383,
        "turtle.setup"
      ]
    ],
    "setworldcoordinates() (in module turtle)": [
      [
        383,
        "turtle.setworldcoordinates"
      ]
    ],
    "setx() (in module turtle)": [
      [
        383,
        "turtle.setx"
      ]
    ],
    "sety() (in module turtle)": [
      [
        383,
        "turtle.sety"
      ]
    ],
    "shape() (in module turtle)": [
      [
        383,
        "turtle.shape"
      ]
    ],
    "shapesize() (in module turtle)": [
      [
        383,
        "turtle.shapesize"
      ]
    ],
    "shapetransform() (in module turtle)": [
      [
        383,
        "turtle.shapetransform"
      ]
    ],
    "shearfactor() (in module turtle)": [
      [
        383,
        "turtle.shearfactor"
      ]
    ],
    "showturtle() (in module turtle)": [
      [
        383,
        "turtle.showturtle"
      ]
    ],
    "speed() (in module turtle)": [
      [
        383,
        "turtle.speed"
      ]
    ],
    "st() (in module turtle)": [
      [
        383,
        "turtle.st"
      ]
    ],
    "stamp() (in module turtle)": [
      [
        383,
        "turtle.stamp"
      ]
    ],
    "teleport() (in module turtle)": [
      [
        383,
        "turtle.teleport"
      ]
    ],
    "textinput() (in module turtle)": [
      [
        383,
        "turtle.textinput"
      ]
    ],
    "tilt() (in module turtle)": [
      [
        383,
        "turtle.tilt"
      ]
    ],
    "tiltangle() (in module turtle)": [
      [
        383,
        "turtle.tiltangle"
      ]
    ],
    "title() (in module turtle)": [
      [
        383,
        "turtle.title"
      ]
    ],
    "towards() (in module turtle)": [
      [
        383,
        "turtle.towards"
      ]
    ],
    "tracer() (in module turtle)": [
      [
        383,
        "turtle.tracer"
      ]
    ],
    "turtle": [
      [
        383,
        "module-turtle"
      ]
    ],
    "turtledemo": [
      [
        383,
        "module-turtledemo"
      ]
    ],
    "turtles() (in module turtle)": [
      [
        383,
        "turtle.turtles"
      ]
    ],
    "turtlesize() (in module turtle)": [
      [
        383,
        "turtle.turtlesize"
      ]
    ],
    "undo() (in module turtle)": [
      [
        383,
        "turtle.undo"
      ]
    ],
    "undobufferentries() (in module turtle)": [
      [
        383,
        "turtle.undobufferentries"
      ]
    ],
    "up() (in module turtle)": [
      [
        383,
        "turtle.up"
      ]
    ],
    "update() (in module turtle)": [
      [
        383,
        "turtle.update"
      ]
    ],
    "width() (in module turtle)": [
      [
        383,
        "turtle.width"
      ]
    ],
    "window_height() (in module turtle)": [
      [
        383,
        "turtle.window_height"
      ]
    ],
    "window_width() (in module turtle)": [
      [
        383,
        "turtle.window_width"
      ]
    ],
    "write() (in module turtle)": [
      [
        383,
        "turtle.write"
      ]
    ],
    "write_docstringdict() (in module turtle)": [
      [
        383,
        "turtle.write_docstringdict"
      ]
    ],
    "xcor() (in module turtle)": [
      [
        383,
        "turtle.xcor"
      ]
    ],
    "ycor() (in module turtle)": [
      [
        383,
        "turtle.ycor"
      ]
    ],
    "asyncgeneratortype (in module types)": [
      [
        384,
        "types.AsyncGeneratorType"
      ]
    ],
    "builtinfunctiontype (in module types)": [
      [
        384,
        "types.BuiltinFunctionType"
      ]
    ],
    "builtinmethodtype (in module types)": [
      [
        384,
        "types.BuiltinMethodType"
      ]
    ],
    "celltype (in module types)": [
      [
        384,
        "types.CellType"
      ]
    ],
    "classmethoddescriptortype (in module types)": [
      [
        384,
        "types.ClassMethodDescriptorType"
      ]
    ],
    "codetype (class in types)": [
      [
        384,
        "types.CodeType"
      ]
    ],
    "coroutinetype (in module types)": [
      [
        384,
        "types.CoroutineType"
      ]
    ],
    "dynamicclassattribute() (in module types)": [
      [
        384,
        "types.DynamicClassAttribute"
      ]
    ],
    "ellipsistype (in module types)": [
      [
        384,
        "types.EllipsisType"
      ]
    ],
    "frametype (in module types)": [
      [
        384,
        "types.FrameType"
      ]
    ],
    "functiontype (in module types)": [
      [
        384,
        "types.FunctionType"
      ]
    ],
    "generatortype (in module types)": [
      [
        384,
        "types.GeneratorType"
      ]
    ],
    "genericalias (class in types)": [
      [
        384,
        "types.GenericAlias"
      ]
    ],
    "getsetdescriptortype (in module types)": [
      [
        384,
        "types.GetSetDescriptorType"
      ]
    ],
    "lambdatype (in module types)": [
      [
        384,
        "types.LambdaType"
      ]
    ],
    "mappingproxytype (class in types)": [
      [
        384,
        "types.MappingProxyType"
      ]
    ],
    "memberdescriptortype (in module types)": [
      [
        384,
        "types.MemberDescriptorType"
      ]
    ],
    "methoddescriptortype (in module types)": [
      [
        384,
        "types.MethodDescriptorType"
      ]
    ],
    "methodwrappertype (in module types)": [
      [
        384,
        "types.MethodWrapperType"
      ]
    ],
    "moduletype (class in types)": [
      [
        384,
        "types.ModuleType"
      ]
    ],
    "nonetype (in module types)": [
      [
        384,
        "types.NoneType"
      ]
    ],
    "notimplementedtype (in module types)": [
      [
        384,
        "types.NotImplementedType"
      ]
    ],
    "pep 3115": [
      [
        384,
        "index-0"
      ],
      [
        426,
        "index-45"
      ],
      [
        427,
        "index-90"
      ],
      [
        469,
        "index-14"
      ],
      [
        475,
        "index-29"
      ]
    ],
    "pep 560": [
      [
        384,
        "index-1"
      ],
      [
        384,
        "index-2"
      ],
      [
        384,
        "index-3"
      ],
      [
        427,
        "index-87"
      ],
      [
        427,
        "index-96"
      ],
      [
        479,
        "index-21"
      ],
      [
        479,
        "index-33"
      ],
      [
        482,
        "index-238"
      ]
    ],
    "simplenamespace (class in types)": [
      [
        384,
        "types.SimpleNamespace"
      ]
    ],
    "tracebacktype (class in types)": [
      [
        384,
        "types.TracebackType"
      ]
    ],
    "uniontype (class in types)": [
      [
        384,
        "types.UnionType"
      ]
    ],
    "wrapperdescriptortype (in module types)": [
      [
        384,
        "types.WrapperDescriptorType"
      ]
    ],
    "__doc__ (types.moduletype attribute)": [
      [
        384,
        "types.ModuleType.__doc__"
      ]
    ],
    "__loader__ (types.moduletype attribute)": [
      [
        384,
        "types.ModuleType.__loader__"
      ]
    ],
    "__name__ (types.moduletype attribute)": [
      [
        384,
        "types.ModuleType.__name__"
      ]
    ],
    "__package__ (types.moduletype attribute)": [
      [
        384,
        "types.ModuleType.__package__"
      ]
    ],
    "__spec__ (types.moduletype attribute)": [
      [
        384,
        "types.ModuleType.__spec__"
      ]
    ],
    "copy() (types.mappingproxytype method)": [
      [
        384,
        "types.MappingProxyType.copy"
      ]
    ],
    "coroutine() (in module types)": [
      [
        384,
        "types.coroutine"
      ]
    ],
    "get() (types.mappingproxytype method)": [
      [
        384,
        "types.MappingProxyType.get"
      ]
    ],
    "get_original_bases() (in module types)": [
      [
        384,
        "types.get_original_bases"
      ]
    ],
    "items() (types.mappingproxytype method)": [
      [
        384,
        "types.MappingProxyType.items"
      ]
    ],
    "keys() (types.mappingproxytype method)": [
      [
        384,
        "types.MappingProxyType.keys"
      ]
    ],
    "new_class() (in module types)": [
      [
        384,
        "types.new_class"
      ]
    ],
    "prepare_class() (in module types)": [
      [
        384,
        "types.prepare_class"
      ]
    ],
    "resolve_bases() (in module types)": [
      [
        384,
        "types.resolve_bases"
      ]
    ],
    "values() (types.mappingproxytype method)": [
      [
        384,
        "types.MappingProxyType.values"
      ]
    ],
    "abstractset (class in typing)": [
      [
        385,
        "typing.AbstractSet"
      ]
    ],
    "annotated (in module typing)": [
      [
        385,
        "typing.Annotated"
      ]
    ],
    "any (in module typing)": [
      [
        385,
        "typing.Any"
      ]
    ],
    "anystr (in module typing)": [
      [
        385,
        "typing.AnyStr"
      ]
    ],
    "asynccontextmanager (class in typing)": [
      [
        385,
        "typing.AsyncContextManager"
      ]
    ],
    "asyncgenerator (class in typing)": [
      [
        385,
        "typing.AsyncGenerator"
      ]
    ],
    "asynciterable (class in typing)": [
      [
        385,
        "typing.AsyncIterable"
      ]
    ],
    "asynciterator (class in typing)": [
      [
        385,
        "typing.AsyncIterator"
      ]
    ],
    "awaitable (class in typing)": [
      [
        385,
        "typing.Awaitable"
      ]
    ],
    "binaryio (class in typing)": [
      [
        385,
        "typing.BinaryIO"
      ]
    ],
    "bytestring (class in typing)": [
      [
        385,
        "typing.ByteString"
      ]
    ],
    "callable (in module typing)": [
      [
        385,
        "typing.Callable"
      ]
    ],
    "chainmap (class in typing)": [
      [
        385,
        "typing.ChainMap"
      ]
    ],
    "classvar (in module typing)": [
      [
        385,
        "typing.ClassVar"
      ]
    ],
    "collection (class in typing)": [
      [
        385,
        "typing.Collection"
      ]
    ],
    "concatenate (in module typing)": [
      [
        385,
        "typing.Concatenate"
      ]
    ],
    "container (class in typing)": [
      [
        385,
        "typing.Container"
      ]
    ],
    "contextmanager (class in typing)": [
      [
        385,
        "typing.ContextManager"
      ]
    ],
    "coroutine (class in typing)": [
      [
        385,
        "typing.Coroutine"
      ]
    ],
    "counter (class in typing)": [
      [
        385,
        "typing.Counter"
      ]
    ],
    "defaultdict (class in typing)": [
      [
        385,
        "typing.DefaultDict"
      ]
    ],
    "deque (class in typing)": [
      [
        385,
        "typing.Deque"
      ]
    ],
    "dict (class in typing)": [
      [
        385,
        "typing.Dict"
      ]
    ],
    "final (in module typing)": [
      [
        385,
        "typing.Final"
      ]
    ],
    "forwardref (class in typing)": [
      [
        385,
        "typing.ForwardRef"
      ]
    ],
    "frozenset (class in typing)": [
      [
        385,
        "typing.FrozenSet"
      ]
    ],
    "generator (class in typing)": [
      [
        385,
        "typing.Generator"
      ]
    ],
    "generic (class in typing)": [
      [
        385,
        "typing.Generic"
      ]
    ],
    "hashable (class in typing)": [
      [
        385,
        "typing.Hashable"
      ]
    ],
    "io (class in typing)": [
      [
        385,
        "typing.IO"
      ]
    ],
    "itemsview (class in typing)": [
      [
        385,
        "typing.ItemsView"
      ]
    ],
    "iterable (class in typing)": [
      [
        385,
        "typing.Iterable"
      ]
    ],
    "iterator (class in typing)": [
      [
        385,
        "typing.Iterator"
      ]
    ],
    "keysview (class in typing)": [
      [
        385,
        "typing.KeysView"
      ]
    ],
    "list (class in typing)": [
      [
        385,
        "typing.List"
      ]
    ],
    "literal (in module typing)": [
      [
        385,
        "typing.Literal"
      ]
    ],
    "literalstring (in module typing)": [
      [
        385,
        "typing.LiteralString"
      ]
    ],
    "mapping (class in typing)": [
      [
        385,
        "typing.Mapping"
      ]
    ],
    "mappingview (class in typing)": [
      [
        385,
        "typing.MappingView"
      ]
    ],
    "match (class in typing)": [
      [
        385,
        "typing.Match"
      ]
    ],
    "mutablemapping (class in typing)": [
      [
        385,
        "typing.MutableMapping"
      ]
    ],
    "mutablesequence (class in typing)": [
      [
        385,
        "typing.MutableSequence"
      ]
    ],
    "mutableset (class in typing)": [
      [
        385,
        "typing.MutableSet"
      ]
    ],
    "namedtuple (class in typing)": [
      [
        385,
        "typing.NamedTuple"
      ]
    ],
    "never (in module typing)": [
      [
        385,
        "typing.Never"
      ]
    ],
    "newtype (class in typing)": [
      [
        385,
        "typing.NewType"
      ]
    ],
    "noreturn (in module typing)": [
      [
        385,
        "typing.NoReturn"
      ]
    ],
    "notrequired (in module typing)": [
      [
        385,
        "typing.NotRequired"
      ]
    ],
    "optional (in module typing)": [
      [
        385,
        "typing.Optional"
      ]
    ],
    "ordereddict (class in typing)": [
      [
        385,
        "typing.OrderedDict"
      ]
    ],
    "pep 544": [
      [
        385,
        "index-28"
      ],
      [
        385,
        "index-49"
      ],
      [
        385,
        "index-5"
      ],
      [
        480,
        "index-18"
      ]
    ],
    "pep 586": [
      [
        385,
        "index-33"
      ],
      [
        385,
        "index-7"
      ],
      [
        471,
        "index-31"
      ],
      [
        480,
        "index-16"
      ],
      [
        481,
        "index-27"
      ]
    ],
    "pep 589": [
      [
        385,
        "index-51"
      ],
      [
        385,
        "index-8"
      ],
      [
        480,
        "index-15"
      ]
    ],
    "pep 591": [
      [
        385,
        "index-35"
      ],
      [
        385,
        "index-55"
      ],
      [
        385,
        "index-9"
      ],
      [
        480,
        "index-17"
      ]
    ],
    "pep 593": [
      [
        385,
        "index-10"
      ],
      [
        385,
        "index-38"
      ],
      [
        385,
        "index-58"
      ],
      [
        481,
        "index-17"
      ],
      [
        481,
        "index-5"
      ],
      [
        482,
        "index-198"
      ]
    ],
    "pep 612": [
      [
        385,
        "index-12"
      ],
      [
        385,
        "index-24"
      ],
      [
        385,
        "index-25"
      ],
      [
        385,
        "index-32"
      ],
      [
        385,
        "index-47"
      ],
      [
        385,
        "index-94"
      ],
      [
        471,
        "index-22"
      ],
      [
        471,
        "index-6"
      ],
      [
        482,
        "index-113"
      ],
      [
        482,
        "index-116"
      ],
      [
        482,
        "index-118"
      ],
      [
        482,
        "index-91"
      ],
      [
        482,
        "index-98"
      ]
    ],
    "pep 613": [
      [
        385,
        "index-13"
      ],
      [
        385,
        "index-31"
      ],
      [
        471,
        "index-24"
      ],
      [
        471,
        "index-7"
      ],
      [
        482,
        "index-135"
      ]
    ],
    "pep 646": [
      [
        385,
        "index-14"
      ],
      [
        385,
        "index-44"
      ],
      [
        472,
        "index-13"
      ],
      [
        472,
        "index-14"
      ]
    ],
    "pep 647": [
      [
        385,
        "index-15"
      ],
      [
        385,
        "index-39"
      ],
      [
        471,
        "index-25"
      ],
      [
        471,
        "index-8"
      ],
      [
        482,
        "index-99"
      ]
    ],
    "pep 655": [
      [
        385,
        "index-16"
      ],
      [
        385,
        "index-36"
      ],
      [
        385,
        "index-37"
      ],
      [
        385,
        "index-52"
      ],
      [
        472,
        "index-15"
      ],
      [
        482,
        "index-60"
      ]
    ],
    "pep 673": [
      [
        385,
        "index-17"
      ],
      [
        385,
        "index-30"
      ],
      [
        472,
        "index-17"
      ],
      [
        482,
        "index-76"
      ]
    ],
    "pep 675": [
      [
        385,
        "index-18"
      ],
      [
        385,
        "index-29"
      ],
      [
        472,
        "index-18"
      ],
      [
        482,
        "index-66"
      ]
    ],
    "pep 681": [
      [
        385,
        "index-19"
      ],
      [
        385,
        "index-53"
      ],
      [
        472,
        "index-19"
      ],
      [
        482,
        "index-58"
      ]
    ],
    "pep 692": [
      [
        385,
        "index-20"
      ],
      [
        385,
        "index-40"
      ],
      [
        473,
        "index-17"
      ],
      [
        473,
        "index-18"
      ],
      [
        482,
        "index-14"
      ],
      [
        482,
        "index-21"
      ]
    ],
    "pep 695": [
      [
        385,
        "index-100"
      ],
      [
        385,
        "index-21"
      ],
      [
        385,
        "index-42"
      ],
      [
        385,
        "index-43"
      ],
      [
        385,
        "index-45"
      ],
      [
        385,
        "index-46"
      ],
      [
        428,
        "index-12"
      ],
      [
        435,
        "index-48"
      ],
      [
        473,
        "index-29"
      ],
      [
        473,
        "index-4"
      ],
      [
        473,
        "index-5"
      ],
      [
        482,
        "index-1"
      ],
      [
        482,
        "index-13"
      ],
      [
        482,
        "index-2"
      ],
      [
        482,
        "index-3"
      ],
      [
        482,
        "index-4"
      ],
      [
        482,
        "index-5"
      ],
      [
        482,
        "index-8"
      ]
    ],
    "pep 698": [
      [
        385,
        "index-22"
      ],
      [
        385,
        "index-56"
      ],
      [
        473,
        "index-19"
      ],
      [
        482,
        "index-25"
      ]
    ],
    "paramspec (class in typing)": [
      [
        385,
        "typing.ParamSpec"
      ]
    ],
    "paramspecargs (in module typing)": [
      [
        385,
        "typing.ParamSpecArgs"
      ]
    ],
    "paramspeckwargs (in module typing)": [
      [
        385,
        "typing.ParamSpecKwargs"
      ]
    ],
    "pattern (class in typing)": [
      [
        385,
        "typing.Pattern"
      ]
    ],
    "protocol (class in typing)": [
      [
        385,
        "typing.Protocol"
      ]
    ],
    "required (in module typing)": [
      [
        385,
        "typing.Required"
      ]
    ],
    "reversible (class in typing)": [
      [
        385,
        "typing.Reversible"
      ]
    ],
    "self (in module typing)": [
      [
        385,
        "typing.Self"
      ]
    ],
    "sequence (class in typing)": [
      [
        385,
        "typing.Sequence"
      ]
    ],
    "set (class in typing)": [
      [
        385,
        "typing.Set"
      ]
    ],
    "sized (class in typing)": [
      [
        385,
        "typing.Sized"
      ]
    ],
    "supportsabs (class in typing)": [
      [
        385,
        "typing.SupportsAbs"
      ]
    ],
    "supportsbytes (class in typing)": [
      [
        385,
        "typing.SupportsBytes"
      ]
    ],
    "supportscomplex (class in typing)": [
      [
        385,
        "typing.SupportsComplex"
      ]
    ],
    "supportsfloat (class in typing)": [
      [
        385,
        "typing.SupportsFloat"
      ]
    ],
    "supportsindex (class in typing)": [
      [
        385,
        "typing.SupportsIndex"
      ]
    ],
    "supportsint (class in typing)": [
      [
        385,
        "typing.SupportsInt"
      ]
    ],
    "supportsround (class in typing)": [
      [
        385,
        "typing.SupportsRound"
      ]
    ],
    "type_checking (in module typing)": [
      [
        385,
        "typing.TYPE_CHECKING"
      ]
    ],
    "text (class in typing)": [
      [
        385,
        "typing.Text"
      ]
    ],
    "textio (class in typing)": [
      [
        385,
        "typing.TextIO"
      ]
    ],
    "tuple (in module typing)": [
      [
        385,
        "typing.Tuple"
      ]
    ],
    "type (class in typing)": [
      [
        385,
        "typing.Type"
      ]
    ],
    "typealias (in module typing)": [
      [
        385,
        "typing.TypeAlias"
      ]
    ],
    "typealiastype (class in typing)": [
      [
        385,
        "typing.TypeAliasType"
      ]
    ],
    "typeguard (in module typing)": [
      [
        385,
        "typing.TypeGuard"
      ]
    ],
    "typevar (class in typing)": [
      [
        385,
        "typing.TypeVar"
      ]
    ],
    "typevartuple (class in typing)": [
      [
        385,
        "typing.TypeVarTuple"
      ]
    ],
    "typeddict (class in typing)": [
      [
        385,
        "typing.TypedDict"
      ]
    ],
    "union (in module typing)": [
      [
        385,
        "typing.Union"
      ]
    ],
    "unpack (in module typing)": [
      [
        385,
        "typing.Unpack"
      ]
    ],
    "valuesview (class in typing)": [
      [
        385,
        "typing.ValuesView"
      ]
    ],
    "__bound__ (typing.typevar attribute)": [
      [
        385,
        "typing.TypeVar.__bound__"
      ]
    ],
    "__constraints__ (typing.typevar attribute)": [
      [
        385,
        "typing.TypeVar.__constraints__"
      ]
    ],
    "__contravariant__ (typing.typevar attribute)": [
      [
        385,
        "typing.TypeVar.__contravariant__"
      ]
    ],
    "__covariant__ (typing.typevar attribute)": [
      [
        385,
        "typing.TypeVar.__covariant__"
      ]
    ],
    "__infer_variance__ (typing.typevar attribute)": [
      [
        385,
        "typing.TypeVar.__infer_variance__"
      ]
    ],
    "__module__ (typing.newtype attribute)": [
      [
        385,
        "typing.NewType.__module__"
      ]
    ],
    "__module__ (typing.typealiastype attribute)": [
      [
        385,
        "typing.TypeAliasType.__module__"
      ]
    ],
    "__name__ (typing.newtype attribute)": [
      [
        385,
        "typing.NewType.__name__"
      ]
    ],
    "__name__ (typing.paramspec attribute)": [
      [
        385,
        "typing.ParamSpec.__name__"
      ]
    ],
    "__name__ (typing.typealiastype attribute)": [
      [
        385,
        "typing.TypeAliasType.__name__"
      ]
    ],
    "__name__ (typing.typevar attribute)": [
      [
        385,
        "typing.TypeVar.__name__"
      ]
    ],
    "__name__ (typing.typevartuple attribute)": [
      [
        385,
        "typing.TypeVarTuple.__name__"
      ]
    ],
    "__optional_keys__ (typing.typeddict attribute)": [
      [
        385,
        "typing.TypedDict.__optional_keys__"
      ]
    ],
    "__required_keys__ (typing.typeddict attribute)": [
      [
        385,
        "typing.TypedDict.__required_keys__"
      ]
    ],
    "__supertype__ (typing.newtype attribute)": [
      [
        385,
        "typing.NewType.__supertype__"
      ]
    ],
    "__total__ (typing.typeddict attribute)": [
      [
        385,
        "typing.TypedDict.__total__"
      ]
    ],
    "__type_params__ (typing.typealiastype attribute)": [
      [
        385,
        "typing.TypeAliasType.__type_params__"
      ]
    ],
    "__value__ (typing.typealiastype attribute)": [
      [
        385,
        "typing.TypeAliasType.__value__"
      ]
    ],
    "args (typing.paramspec attribute)": [
      [
        385,
        "typing.ParamSpec.args"
      ]
    ],
    "assert_never() (in module typing)": [
      [
        385,
        "typing.assert_never"
      ]
    ],
    "assert_type() (in module typing)": [
      [
        385,
        "typing.assert_type"
      ]
    ],
    "cast() (in module typing)": [
      [
        385,
        "typing.cast"
      ]
    ],
    "clear_overloads() (in module typing)": [
      [
        385,
        "typing.clear_overloads"
      ]
    ],
    "dataclass_transform() (in module typing)": [
      [
        385,
        "typing.dataclass_transform"
      ]
    ],
    "final() (in module typing)": [
      [
        385,
        "typing.final"
      ]
    ],
    "get_args() (in module typing)": [
      [
        385,
        "typing.get_args"
      ]
    ],
    "get_origin() (in module typing)": [
      [
        385,
        "typing.get_origin"
      ]
    ],
    "get_overloads() (in module typing)": [
      [
        385,
        "typing.get_overloads"
      ]
    ],
    "get_type_hints() (in module typing)": [
      [
        385,
        "typing.get_type_hints"
      ]
    ],
    "is_typeddict() (in module typing)": [
      [
        385,
        "typing.is_typeddict"
      ]
    ],
    "kwargs (typing.paramspec attribute)": [
      [
        385,
        "typing.ParamSpec.kwargs"
      ]
    ],
    "no_type_check() (in module typing)": [
      [
        385,
        "typing.no_type_check"
      ]
    ],
    "no_type_check_decorator() (in module typing)": [
      [
        385,
        "typing.no_type_check_decorator"
      ]
    ],
    "overload() (in module typing)": [
      [
        385,
        "typing.overload"
      ]
    ],
    "override() (in module typing)": [
      [
        385,
        "typing.override"
      ]
    ],
    "reveal_type() (in module typing)": [
      [
        385,
        "typing.reveal_type"
      ]
    ],
    "runtime_checkable() (in module typing)": [
      [
        385,
        "typing.runtime_checkable"
      ]
    ],
    "type_check_only() (in module typing)": [
      [
        385,
        "typing.type_check_only"
      ]
    ],
    "typing": [
      [
        385,
        "module-typing"
      ]
    ],
    "bidirectional() (in module unicodedata)": [
      [
        386,
        "unicodedata.bidirectional"
      ]
    ],
    "category() (in module unicodedata)": [
      [
        386,
        "unicodedata.category"
      ]
    ],
    "character": [
      [
        386,
        "index-0"
      ],
      [
        427,
        "index-19"
      ],
      [
        429,
        "index-43"
      ]
    ],
    "combining() (in module unicodedata)": [
      [
        386,
        "unicodedata.combining"
      ]
    ],
    "database": [
      [
        386,
        "index-0"
      ]
    ],
    "decimal() (in module unicodedata)": [
      [
        386,
        "unicodedata.decimal"
      ]
    ],
    "decomposition() (in module unicodedata)": [
      [
        386,
        "unicodedata.decomposition"
      ]
    ],
    "digit() (in module unicodedata)": [
      [
        386,
        "unicodedata.digit"
      ]
    ],
    "east_asian_width() (in module unicodedata)": [
      [
        386,
        "unicodedata.east_asian_width"
      ]
    ],
    "is_normalized() (in module unicodedata)": [
      [
        386,
        "unicodedata.is_normalized"
      ]
    ],
    "lookup() (in module unicodedata)": [
      [
        386,
        "unicodedata.lookup"
      ]
    ],
    "mirrored() (in module unicodedata)": [
      [
        386,
        "unicodedata.mirrored"
      ]
    ],
    "name() (in module unicodedata)": [
      [
        386,
        "unicodedata.name"
      ]
    ],
    "normalize() (in module unicodedata)": [
      [
        386,
        "unicodedata.normalize"
      ]
    ],
    "numeric() (in module unicodedata)": [
      [
        386,
        "unicodedata.numeric"
      ]
    ],
    "ucd_3_2_0 (in module unicodedata)": [
      [
        386,
        "unicodedata.ucd_3_2_0"
      ]
    ],
    "unicodedata": [
      [
        386,
        "module-unicodedata"
      ]
    ],
    "unidata_version (in module unicodedata)": [
      [
        386,
        "unicodedata.unidata_version"
      ]
    ],
    "--buffer": [
      [
        387,
        "cmdoption-unittest-b"
      ]
    ],
    "--catch": [
      [
        387,
        "cmdoption-unittest-c"
      ]
    ],
    "--durations": [
      [
        387,
        "cmdoption-unittest-durations"
      ]
    ],
    "--failfast": [
      [
        387,
        "cmdoption-unittest-f"
      ]
    ],
    "--locals": [
      [
        387,
        "cmdoption-unittest-locals"
      ]
    ],
    "--pattern": [
      [
        387,
        "cmdoption-unittest-discover-p"
      ]
    ],
    "--start-directory": [
      [
        387,
        "cmdoption-unittest-discover-s"
      ]
    ],
    "--top-level-directory": [
      [
        387,
        "cmdoption-unittest-discover-t"
      ]
    ],
    "-k": [
      [
        387,
        "cmdoption-unittest-k"
      ]
    ],
    "functiontestcase (class in unittest)": [
      [
        387,
        "unittest.FunctionTestCase"
      ]
    ],
    "isolatedasynciotestcase (class in unittest)": [
      [
        387,
        "unittest.IsolatedAsyncioTestCase"
      ]
    ],
    "skiptest": [
      [
        387,
        "unittest.SkipTest"
      ]
    ],
    "testcase (class in unittest)": [
      [
        387,
        "unittest.TestCase"
      ]
    ],
    "testloader (class in unittest)": [
      [
        387,
        "unittest.TestLoader"
      ]
    ],
    "testresult (class in unittest)": [
      [
        387,
        "unittest.TestResult"
      ]
    ],
    "testsuite (class in unittest)": [
      [
        387,
        "unittest.TestSuite"
      ]
    ],
    "texttestresult (class in unittest)": [
      [
        387,
        "unittest.TextTestResult"
      ]
    ],
    "texttestrunner (class in unittest)": [
      [
        387,
        "unittest.TextTestRunner"
      ]
    ],
    "__iter__() (unittest.testsuite method)": [
      [
        387,
        "unittest.TestSuite.__iter__"
      ]
    ],
    "_makeresult() (unittest.texttestrunner method)": [
      [
        387,
        "unittest.TextTestRunner._makeResult"
      ]
    ],
    "addasynccleanup() (unittest.isolatedasynciotestcase method)": [
      [
        387,
        "unittest.IsolatedAsyncioTestCase.addAsyncCleanup"
      ]
    ],
    "addclasscleanup() (unittest.testcase class method)": [
      [
        387,
        "unittest.TestCase.addClassCleanup"
      ]
    ],
    "addcleanup() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.addCleanup"
      ]
    ],
    "addduration() (unittest.testresult method)": [
      [
        387,
        "unittest.TestResult.addDuration"
      ]
    ],
    "adderror() (unittest.testresult method)": [
      [
        387,
        "unittest.TestResult.addError"
      ]
    ],
    "addexpectedfailure() (unittest.testresult method)": [
      [
        387,
        "unittest.TestResult.addExpectedFailure"
      ]
    ],
    "addfailure() (unittest.testresult method)": [
      [
        387,
        "unittest.TestResult.addFailure"
      ]
    ],
    "addmodulecleanup() (in module unittest)": [
      [
        387,
        "unittest.addModuleCleanup"
      ]
    ],
    "addskip() (unittest.testresult method)": [
      [
        387,
        "unittest.TestResult.addSkip"
      ]
    ],
    "addsubtest() (unittest.testresult method)": [
      [
        387,
        "unittest.TestResult.addSubTest"
      ]
    ],
    "addsuccess() (unittest.testresult method)": [
      [
        387,
        "unittest.TestResult.addSuccess"
      ]
    ],
    "addtest() (unittest.testsuite method)": [
      [
        387,
        "unittest.TestSuite.addTest"
      ]
    ],
    "addtests() (unittest.testsuite method)": [
      [
        387,
        "unittest.TestSuite.addTests"
      ]
    ],
    "addtypeequalityfunc() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.addTypeEqualityFunc"
      ]
    ],
    "addunexpectedsuccess() (unittest.testresult method)": [
      [
        387,
        "unittest.TestResult.addUnexpectedSuccess"
      ]
    ],
    "assertalmostequal() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertAlmostEqual"
      ]
    ],
    "assertcountequal() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertCountEqual"
      ]
    ],
    "assertdictequal() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertDictEqual"
      ]
    ],
    "assertequal() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertEqual"
      ]
    ],
    "assertfalse() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertFalse"
      ]
    ],
    "assertgreater() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertGreater"
      ]
    ],
    "assertgreaterequal() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertGreaterEqual"
      ]
    ],
    "assertin() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertIn"
      ]
    ],
    "assertis() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertIs"
      ]
    ],
    "assertisinstance() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertIsInstance"
      ]
    ],
    "assertisnone() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertIsNone"
      ]
    ],
    "assertisnot() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertIsNot"
      ]
    ],
    "assertisnotnone() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertIsNotNone"
      ]
    ],
    "assertless() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertLess"
      ]
    ],
    "assertlessequal() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertLessEqual"
      ]
    ],
    "assertlistequal() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertListEqual"
      ]
    ],
    "assertlogs() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertLogs"
      ]
    ],
    "assertmultilineequal() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertMultiLineEqual"
      ]
    ],
    "assertnologs() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertNoLogs"
      ]
    ],
    "assertnotalmostequal() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertNotAlmostEqual"
      ]
    ],
    "assertnotequal() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertNotEqual"
      ]
    ],
    "assertnotin() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertNotIn"
      ]
    ],
    "assertnotisinstance() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertNotIsInstance"
      ]
    ],
    "assertnotregex() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertNotRegex"
      ]
    ],
    "assertraises() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertRaises"
      ]
    ],
    "assertraisesregex() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertRaisesRegex"
      ]
    ],
    "assertregex() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertRegex"
      ]
    ],
    "assertsequenceequal() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertSequenceEqual"
      ]
    ],
    "assertsetequal() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertSetEqual"
      ]
    ],
    "asserttrue() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertTrue"
      ]
    ],
    "asserttupleequal() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertTupleEqual"
      ]
    ],
    "assertwarns() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertWarns"
      ]
    ],
    "assertwarnsregex() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.assertWarnsRegex"
      ]
    ],
    "asyncsetup() (unittest.isolatedasynciotestcase method)": [
      [
        387,
        "unittest.IsolatedAsyncioTestCase.asyncSetUp"
      ]
    ],
    "asyncteardown() (unittest.isolatedasynciotestcase method)": [
      [
        387,
        "unittest.IsolatedAsyncioTestCase.asyncTearDown"
      ]
    ],
    "buffer (unittest.testresult attribute)": [
      [
        387,
        "unittest.TestResult.buffer"
      ]
    ],
    "collecteddurations (unittest.testresult attribute)": [
      [
        387,
        "unittest.TestResult.collectedDurations"
      ]
    ],
    "counttestcases() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.countTestCases"
      ]
    ],
    "counttestcases() (unittest.testsuite method)": [
      [
        387,
        "unittest.TestSuite.countTestCases"
      ]
    ],
    "debug() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.debug"
      ]
    ],
    "debug() (unittest.testsuite method)": [
      [
        387,
        "unittest.TestSuite.debug"
      ]
    ],
    "defaulttestloader (in module unittest)": [
      [
        387,
        "unittest.defaultTestLoader"
      ]
    ],
    "defaulttestresult() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.defaultTestResult"
      ]
    ],
    "discover() (unittest.testloader method)": [
      [
        387,
        "unittest.TestLoader.discover"
      ]
    ],
    "doclasscleanups() (unittest.testcase class method)": [
      [
        387,
        "unittest.TestCase.doClassCleanups"
      ]
    ],
    "docleanups() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.doCleanups"
      ]
    ],
    "domodulecleanups() (in module unittest)": [
      [
        387,
        "unittest.doModuleCleanups"
      ]
    ],
    "enterasynccontext() (unittest.isolatedasynciotestcase method)": [
      [
        387,
        "unittest.IsolatedAsyncioTestCase.enterAsyncContext"
      ]
    ],
    "enterclasscontext() (unittest.testcase class method)": [
      [
        387,
        "unittest.TestCase.enterClassContext"
      ]
    ],
    "entercontext() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.enterContext"
      ]
    ],
    "entermodulecontext() (in module unittest)": [
      [
        387,
        "unittest.enterModuleContext"
      ]
    ],
    "errors (unittest.testloader attribute)": [
      [
        387,
        "unittest.TestLoader.errors"
      ]
    ],
    "errors (unittest.testresult attribute)": [
      [
        387,
        "unittest.TestResult.errors"
      ]
    ],
    "expectedfailure() (in module unittest)": [
      [
        387,
        "unittest.expectedFailure"
      ]
    ],
    "expectedfailures (unittest.testresult attribute)": [
      [
        387,
        "unittest.TestResult.expectedFailures"
      ]
    ],
    "fail() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.fail"
      ]
    ],
    "failfast (unittest.testresult attribute)": [
      [
        387,
        "unittest.TestResult.failfast"
      ]
    ],
    "failureexception (unittest.testcase attribute)": [
      [
        387,
        "unittest.TestCase.failureException"
      ]
    ],
    "failures (unittest.testresult attribute)": [
      [
        387,
        "unittest.TestResult.failures"
      ]
    ],
    "gettestcasenames() (unittest.testloader method)": [
      [
        387,
        "unittest.TestLoader.getTestCaseNames"
      ]
    ],
    "id() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.id"
      ]
    ],
    "installhandler() (in module unittest)": [
      [
        387,
        "unittest.installHandler"
      ]
    ],
    "loadtestsfrommodule() (unittest.testloader method)": [
      [
        387,
        "unittest.TestLoader.loadTestsFromModule"
      ]
    ],
    "loadtestsfromname() (unittest.testloader method)": [
      [
        387,
        "unittest.TestLoader.loadTestsFromName"
      ]
    ],
    "loadtestsfromnames() (unittest.testloader method)": [
      [
        387,
        "unittest.TestLoader.loadTestsFromNames"
      ]
    ],
    "loadtestsfromtestcase() (unittest.testloader method)": [
      [
        387,
        "unittest.TestLoader.loadTestsFromTestCase"
      ]
    ],
    "longmessage (unittest.testcase attribute)": [
      [
        387,
        "unittest.TestCase.longMessage"
      ]
    ],
    "main() (in module unittest)": [
      [
        387,
        "unittest.main"
      ]
    ],
    "maxdiff (unittest.testcase attribute)": [
      [
        387,
        "unittest.TestCase.maxDiff"
      ]
    ],
    "output (unittest.testcase attribute)": [
      [
        387,
        "unittest.TestCase.output"
      ]
    ],
    "records (unittest.testcase attribute)": [
      [
        387,
        "unittest.TestCase.records"
      ]
    ],
    "registerresult() (in module unittest)": [
      [
        387,
        "unittest.registerResult"
      ]
    ],
    "removehandler() (in module unittest)": [
      [
        387,
        "unittest.removeHandler"
      ]
    ],
    "removeresult() (in module unittest)": [
      [
        387,
        "unittest.removeResult"
      ]
    ],
    "run() (unittest.isolatedasynciotestcase method)": [
      [
        387,
        "unittest.IsolatedAsyncioTestCase.run"
      ]
    ],
    "run() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.run"
      ]
    ],
    "run() (unittest.testsuite method)": [
      [
        387,
        "unittest.TestSuite.run"
      ]
    ],
    "run() (unittest.texttestrunner method)": [
      [
        387,
        "unittest.TextTestRunner.run"
      ]
    ],
    "setup() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.setUp"
      ]
    ],
    "setupclass() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.setUpClass"
      ]
    ],
    "shortdescription() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.shortDescription"
      ]
    ],
    "shouldstop (unittest.testresult attribute)": [
      [
        387,
        "unittest.TestResult.shouldStop"
      ]
    ],
    "skip() (in module unittest)": [
      [
        387,
        "unittest.skip"
      ]
    ],
    "skipif() (in module unittest)": [
      [
        387,
        "unittest.skipIf"
      ]
    ],
    "skiptest() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.skipTest"
      ]
    ],
    "skipunless() (in module unittest)": [
      [
        387,
        "unittest.skipUnless"
      ]
    ],
    "skipped (unittest.testresult attribute)": [
      [
        387,
        "unittest.TestResult.skipped"
      ]
    ],
    "sorttestmethodsusing (unittest.testloader attribute)": [
      [
        387,
        "unittest.TestLoader.sortTestMethodsUsing"
      ]
    ],
    "starttest() (unittest.testresult method)": [
      [
        387,
        "unittest.TestResult.startTest"
      ]
    ],
    "starttestrun() (unittest.testresult method)": [
      [
        387,
        "unittest.TestResult.startTestRun"
      ]
    ],
    "stop() (unittest.testresult method)": [
      [
        387,
        "unittest.TestResult.stop"
      ]
    ],
    "stoptest() (unittest.testresult method)": [
      [
        387,
        "unittest.TestResult.stopTest"
      ]
    ],
    "stoptestrun() (unittest.testresult method)": [
      [
        387,
        "unittest.TestResult.stopTestRun"
      ]
    ],
    "subtest() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.subTest"
      ]
    ],
    "suiteclass (unittest.testloader attribute)": [
      [
        387,
        "unittest.TestLoader.suiteClass"
      ]
    ],
    "tb_locals (unittest.testresult attribute)": [
      [
        387,
        "unittest.TestResult.tb_locals"
      ]
    ],
    "teardown() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.tearDown"
      ]
    ],
    "teardownclass() (unittest.testcase method)": [
      [
        387,
        "unittest.TestCase.tearDownClass"
      ]
    ],
    "testmethodprefix (unittest.testloader attribute)": [
      [
        387,
        "unittest.TestLoader.testMethodPrefix"
      ]
    ],
    "testnamepatterns (unittest.testloader attribute)": [
      [
        387,
        "unittest.TestLoader.testNamePatterns"
      ]
    ],
    "testsrun (unittest.testresult attribute)": [
      [
        387,
        "unittest.TestResult.testsRun"
      ]
    ],
    "unexpectedsuccesses (unittest.testresult attribute)": [
      [
        387,
        "unittest.TestResult.unexpectedSuccesses"
      ]
    ],
    "unittest": [
      [
        387,
        "module-unittest"
      ]
    ],
    "unittest command line option": [
      [
        387,
        "cmdoption-unittest-b"
      ],
      [
        387,
        "cmdoption-unittest-c"
      ],
      [
        387,
        "cmdoption-unittest-durations"
      ],
      [
        387,
        "cmdoption-unittest-f"
      ],
      [
        387,
        "cmdoption-unittest-k"
      ],
      [
        387,
        "cmdoption-unittest-locals"
      ]
    ],
    "unittest-discover command line option": [
      [
        387,
        "cmdoption-unittest-discover-p"
      ],
      [
        387,
        "cmdoption-unittest-discover-s"
      ],
      [
        387,
        "cmdoption-unittest-discover-t"
      ],
      [
        387,
        "cmdoption-unittest-discover-v"
      ]
    ],
    "wassuccessful() (unittest.testresult method)": [
      [
        387,
        "unittest.TestResult.wasSuccessful"
      ]
    ],
    "any (in module unittest.mock)": [
      [
        388,
        "unittest.mock.ANY"
      ]
    ],
    "asyncmock (class in unittest.mock)": [
      [
        388,
        "unittest.mock.AsyncMock"
      ]
    ],
    "default (in module unittest.mock)": [
      [
        388,
        "unittest.mock.DEFAULT"
      ]
    ],
    "filter_dir (in module unittest.mock)": [
      [
        388,
        "unittest.mock.FILTER_DIR"
      ]
    ],
    "magicmock (class in unittest.mock)": [
      [
        388,
        "unittest.mock.MagicMock"
      ]
    ],
    "mock (class in unittest.mock)": [
      [
        388,
        "unittest.mock.Mock"
      ]
    ],
    "noncallablemagicmock (class in unittest.mock)": [
      [
        388,
        "unittest.mock.NonCallableMagicMock"
      ]
    ],
    "noncallablemock (class in unittest.mock)": [
      [
        388,
        "unittest.mock.NonCallableMock"
      ]
    ],
    "propertymock (class in unittest.mock)": [
      [
        388,
        "unittest.mock.PropertyMock"
      ]
    ],
    "__class__ (unittest.mock.mock attribute)": [
      [
        388,
        "unittest.mock.Mock.__class__"
      ]
    ],
    "__dir__() (unittest.mock.mock method)": [
      [
        388,
        "unittest.mock.Mock.__dir__"
      ]
    ],
    "_get_child_mock() (unittest.mock.mock method)": [
      [
        388,
        "unittest.mock.Mock._get_child_mock"
      ]
    ],
    "assert_any_await() (unittest.mock.asyncmock method)": [
      [
        388,
        "unittest.mock.AsyncMock.assert_any_await"
      ]
    ],
    "assert_any_call() (unittest.mock.mock method)": [
      [
        388,
        "unittest.mock.Mock.assert_any_call"
      ]
    ],
    "assert_awaited() (unittest.mock.asyncmock method)": [
      [
        388,
        "unittest.mock.AsyncMock.assert_awaited"
      ]
    ],
    "assert_awaited_once() (unittest.mock.asyncmock method)": [
      [
        388,
        "unittest.mock.AsyncMock.assert_awaited_once"
      ]
    ],
    "assert_awaited_once_with() (unittest.mock.asyncmock method)": [
      [
        388,
        "unittest.mock.AsyncMock.assert_awaited_once_with"
      ]
    ],
    "assert_awaited_with() (unittest.mock.asyncmock method)": [
      [
        388,
        "unittest.mock.AsyncMock.assert_awaited_with"
      ]
    ],
    "assert_called() (unittest.mock.mock method)": [
      [
        388,
        "unittest.mock.Mock.assert_called"
      ]
    ],
    "assert_called_once() (unittest.mock.mock method)": [
      [
        388,
        "unittest.mock.Mock.assert_called_once"
      ]
    ],
    "assert_called_once_with() (unittest.mock.mock method)": [
      [
        388,
        "unittest.mock.Mock.assert_called_once_with"
      ]
    ],
    "assert_called_with() (unittest.mock.mock method)": [
      [
        388,
        "unittest.mock.Mock.assert_called_with"
      ]
    ],
    "assert_has_awaits() (unittest.mock.asyncmock method)": [
      [
        388,
        "unittest.mock.AsyncMock.assert_has_awaits"
      ]
    ],
    "assert_has_calls() (unittest.mock.mock method)": [
      [
        388,
        "unittest.mock.Mock.assert_has_calls"
      ]
    ],
    "assert_not_awaited() (unittest.mock.asyncmock method)": [
      [
        388,
        "unittest.mock.AsyncMock.assert_not_awaited"
      ]
    ],
    "assert_not_called() (unittest.mock.mock method)": [
      [
        388,
        "unittest.mock.Mock.assert_not_called"
      ]
    ],
    "attach_mock() (unittest.mock.mock method)": [
      [
        388,
        "unittest.mock.Mock.attach_mock"
      ]
    ],
    "await_args (unittest.mock.asyncmock attribute)": [
      [
        388,
        "unittest.mock.AsyncMock.await_args"
      ]
    ],
    "await_args_list (unittest.mock.asyncmock attribute)": [
      [
        388,
        "unittest.mock.AsyncMock.await_args_list"
      ]
    ],
    "await_count (unittest.mock.asyncmock attribute)": [
      [
        388,
        "unittest.mock.AsyncMock.await_count"
      ]
    ],
    "call() (in module unittest.mock)": [
      [
        388,
        "unittest.mock.call"
      ]
    ],
    "call_args (unittest.mock.mock attribute)": [
      [
        388,
        "unittest.mock.Mock.call_args"
      ]
    ],
    "call_args_list (unittest.mock.mock attribute)": [
      [
        388,
        "unittest.mock.Mock.call_args_list"
      ]
    ],
    "call_count (unittest.mock.mock attribute)": [
      [
        388,
        "unittest.mock.Mock.call_count"
      ]
    ],
    "call_list() (unittest.mock.call method)": [
      [
        388,
        "unittest.mock.call.call_list"
      ]
    ],
    "called (unittest.mock.mock attribute)": [
      [
        388,
        "unittest.mock.Mock.called"
      ]
    ],
    "configure_mock() (unittest.mock.mock method)": [
      [
        388,
        "unittest.mock.Mock.configure_mock"
      ]
    ],
    "create_autospec() (in module unittest.mock)": [
      [
        388,
        "unittest.mock.create_autospec"
      ]
    ],
    "method_calls (unittest.mock.mock attribute)": [
      [
        388,
        "unittest.mock.Mock.method_calls"
      ]
    ],
    "mock_add_spec() (unittest.mock.mock method)": [
      [
        388,
        "unittest.mock.Mock.mock_add_spec"
      ]
    ],
    "mock_calls (unittest.mock.mock attribute)": [
      [
        388,
        "unittest.mock.Mock.mock_calls"
      ]
    ],
    "mock_open() (in module unittest.mock)": [
      [
        388,
        "unittest.mock.mock_open"
      ]
    ],
    "patch() (in module unittest.mock)": [
      [
        388,
        "unittest.mock.patch"
      ]
    ],
    "patch.dict() (in module unittest.mock)": [
      [
        388,
        "unittest.mock.patch.dict"
      ]
    ],
    "patch.multiple() (in module unittest.mock)": [
      [
        388,
        "unittest.mock.patch.multiple"
      ]
    ],
    "patch.object() (in module unittest.mock)": [
      [
        388,
        "unittest.mock.patch.object"
      ]
    ],
    "patch.stopall() (in module unittest.mock)": [
      [
        388,
        "unittest.mock.patch.stopall"
      ]
    ],
    "reset_mock() (unittest.mock.asyncmock method)": [
      [
        388,
        "unittest.mock.AsyncMock.reset_mock"
      ]
    ],
    "reset_mock() (unittest.mock.mock method)": [
      [
        388,
        "unittest.mock.Mock.reset_mock"
      ]
    ],
    "return_value (unittest.mock.mock attribute)": [
      [
        388,
        "unittest.mock.Mock.return_value"
      ]
    ],
    "seal() (in module unittest.mock)": [
      [
        388,
        "unittest.mock.seal"
      ]
    ],
    "sentinel (in module unittest.mock)": [
      [
        388,
        "unittest.mock.sentinel"
      ]
    ],
    "side_effect (unittest.mock.mock attribute)": [
      [
        388,
        "unittest.mock.Mock.side_effect"
      ]
    ],
    "unittest.mock": [
      [
        388,
        "module-unittest.mock"
      ]
    ],
    "urllib": [
      [
        391,
        "module-urllib"
      ]
    ],
    "contenttooshorterror": [
      [
        392,
        "urllib.error.ContentTooShortError"
      ]
    ],
    "httperror": [
      [
        392,
        "urllib.error.HTTPError"
      ]
    ],
    "urlerror": [
      [
        392,
        "urllib.error.URLError"
      ]
    ],
    "code (urllib.error.httperror attribute)": [
      [
        392,
        "urllib.error.HTTPError.code"
      ]
    ],
    "content (urllib.error.contenttooshorterror attribute)": [
      [
        392,
        "urllib.error.ContentTooShortError.content"
      ]
    ],
    "fp (urllib.error.httperror attribute)": [
      [
        392,
        "urllib.error.HTTPError.fp"
      ]
    ],
    "headers (urllib.error.httperror attribute)": [
      [
        392,
        "urllib.error.HTTPError.headers"
      ]
    ],
    "reason (urllib.error.httperror attribute)": [
      [
        392,
        "urllib.error.HTTPError.reason"
      ]
    ],
    "reason (urllib.error.urlerror attribute)": [
      [
        392,
        "urllib.error.URLError.reason"
      ]
    ],
    "url (urllib.error.httperror attribute)": [
      [
        392,
        "urllib.error.HTTPError.url"
      ]
    ],
    "urllib.error": [
      [
        392,
        "module-urllib.error"
      ]
    ],
    "defragresult (class in urllib.parse)": [
      [
        393,
        "urllib.parse.DefragResult"
      ]
    ],
    "defragresultbytes (class in urllib.parse)": [
      [
        393,
        "urllib.parse.DefragResultBytes"
      ]
    ],
    "parseresult (class in urllib.parse)": [
      [
        393,
        "urllib.parse.ParseResult"
      ]
    ],
    "parseresultbytes (class in urllib.parse)": [
      [
        393,
        "urllib.parse.ParseResultBytes"
      ]
    ],
    "rfc 1738": [
      [
        393,
        "index-13"
      ]
    ],
    "rfc 1808": [
      [
        393,
        "index-1"
      ],
      [
        393,
        "index-12"
      ],
      [
        477,
        "index-43"
      ]
    ],
    "rfc 2368": [
      [
        393,
        "index-11"
      ]
    ],
    "rfc 2396": [
      [
        393,
        "index-10"
      ],
      [
        393,
        "index-3"
      ],
      [
        393,
        "index-6"
      ],
      [
        477,
        "index-44"
      ],
      [
        479,
        "index-34"
      ]
    ],
    "rfc 2732": [
      [
        393,
        "index-9"
      ],
      [
        468,
        "index-10"
      ],
      [
        474,
        "index-13"
      ]
    ],
    "splitresult (class in urllib.parse)": [
      [
        393,
        "urllib.parse.SplitResult"
      ]
    ],
    "splitresultbytes (class in urllib.parse)": [
      [
        393,
        "urllib.parse.SplitResultBytes"
      ]
    ],
    "geturl() (urllib.parse.urllib.parse.splitresult method)": [
      [
        393,
        "urllib.parse.urllib.parse.SplitResult.geturl"
      ]
    ],
    "parse_qs() (in module urllib.parse)": [
      [
        393,
        "urllib.parse.parse_qs"
      ]
    ],
    "parse_qsl() (in module urllib.parse)": [
      [
        393,
        "urllib.parse.parse_qsl"
      ]
    ],
    "parsing": [
      [
        393,
        "index-0"
      ]
    ],
    "quote() (in module urllib.parse)": [
      [
        393,
        "urllib.parse.quote"
      ]
    ],
    "quote_from_bytes() (in module urllib.parse)": [
      [
        393,
        "urllib.parse.quote_from_bytes"
      ]
    ],
    "quote_plus() (in module urllib.parse)": [
      [
        393,
        "urllib.parse.quote_plus"
      ]
    ],
    "relative": [
      [
        393,
        "index-0"
      ],
      [
        435,
        "index-39"
      ]
    ],
    "unquote() (in module urllib.parse)": [
      [
        393,
        "urllib.parse.unquote"
      ]
    ],
    "unquote_plus() (in module urllib.parse)": [
      [
        393,
        "urllib.parse.unquote_plus"
      ]
    ],
    "unquote_to_bytes() (in module urllib.parse)": [
      [
        393,
        "urllib.parse.unquote_to_bytes"
      ]
    ],
    "unwrap() (in module urllib.parse)": [
      [
        393,
        "urllib.parse.unwrap"
      ]
    ],
    "urldefrag() (in module urllib.parse)": [
      [
        393,
        "urllib.parse.urldefrag"
      ]
    ],
    "urlencode() (in module urllib.parse)": [
      [
        393,
        "urllib.parse.urlencode"
      ]
    ],
    "urljoin() (in module urllib.parse)": [
      [
        393,
        "urllib.parse.urljoin"
      ]
    ],
    "urllib.parse": [
      [
        393,
        "module-urllib.parse"
      ]
    ],
    "urlparse() (in module urllib.parse)": [
      [
        393,
        "urllib.parse.urlparse"
      ]
    ],
    "urlsplit() (in module urllib.parse)": [
      [
        393,
        "urllib.parse.urlsplit"
      ]
    ],
    "urlunparse() (in module urllib.parse)": [
      [
        393,
        "urllib.parse.urlunparse"
      ]
    ],
    "urlunsplit() (in module urllib.parse)": [
      [
        393,
        "urllib.parse.urlunsplit"
      ]
    ],
    "abstractbasicauthhandler (class in urllib.request)": [
      [
        394,
        "urllib.request.AbstractBasicAuthHandler"
      ]
    ],
    "abstractdigestauthhandler (class in urllib.request)": [
      [
        394,
        "urllib.request.AbstractDigestAuthHandler"
      ]
    ],
    "basehandler (class in urllib.request)": [
      [
        394,
        "urllib.request.BaseHandler"
      ]
    ],
    "cacheftphandler (class in urllib.request)": [
      [
        394,
        "urllib.request.CacheFTPHandler"
      ]
    ],
    "datahandler (class in urllib.request)": [
      [
        394,
        "urllib.request.DataHandler"
      ]
    ],
    "ftphandler (class in urllib.request)": [
      [
        394,
        "urllib.request.FTPHandler"
      ]
    ],
    "fancyurlopener (class in urllib.request)": [
      [
        394,
        "urllib.request.FancyURLopener"
      ]
    ],
    "filehandler (class in urllib.request)": [
      [
        394,
        "urllib.request.FileHandler"
      ]
    ],
    "httpbasicauthhandler (class in urllib.request)": [
      [
        394,
        "urllib.request.HTTPBasicAuthHandler"
      ]
    ],
    "httpcookieprocessor (class in urllib.request)": [
      [
        394,
        "urllib.request.HTTPCookieProcessor"
      ]
    ],
    "httpdefaulterrorhandler (class in urllib.request)": [
      [
        394,
        "urllib.request.HTTPDefaultErrorHandler"
      ]
    ],
    "httpdigestauthhandler (class in urllib.request)": [
      [
        394,
        "urllib.request.HTTPDigestAuthHandler"
      ]
    ],
    "httperrorprocessor (class in urllib.request)": [
      [
        394,
        "urllib.request.HTTPErrorProcessor"
      ]
    ],
    "httphandler (class in urllib.request)": [
      [
        394,
        "urllib.request.HTTPHandler"
      ]
    ],
    "httppasswordmgr (class in urllib.request)": [
      [
        394,
        "urllib.request.HTTPPasswordMgr"
      ]
    ],
    "httppasswordmgrwithdefaultrealm (class in urllib.request)": [
      [
        394,
        "urllib.request.HTTPPasswordMgrWithDefaultRealm"
      ]
    ],
    "httppasswordmgrwithpriorauth (class in urllib.request)": [
      [
        394,
        "urllib.request.HTTPPasswordMgrWithPriorAuth"
      ]
    ],
    "httpredirecthandler (class in urllib.request)": [
      [
        394,
        "urllib.request.HTTPRedirectHandler"
      ]
    ],
    "httpshandler (class in urllib.request)": [
      [
        394,
        "urllib.request.HTTPSHandler"
      ]
    ],
    "openerdirector (class in urllib.request)": [
      [
        394,
        "urllib.request.OpenerDirector"
      ]
    ],
    "proxybasicauthhandler (class in urllib.request)": [
      [
        394,
        "urllib.request.ProxyBasicAuthHandler"
      ]
    ],
    "proxydigestauthhandler (class in urllib.request)": [
      [
        394,
        "urllib.request.ProxyDigestAuthHandler"
      ]
    ],
    "proxyhandler (class in urllib.request)": [
      [
        394,
        "urllib.request.ProxyHandler"
      ]
    ],
    "rfc 2397": [
      [
        394,
        "index-7"
      ]
    ],
    "request (class in urllib.request)": [
      [
        394,
        "urllib.request.Request"
      ]
    ],
    "urlopener (class in urllib.request)": [
      [
        394,
        "urllib.request.URLopener"
      ]
    ],
    "unknownhandler (class in urllib.request)": [
      [
        394,
        "urllib.request.UnknownHandler"
      ]
    ],
    "add_handler() (urllib.request.openerdirector method)": [
      [
        394,
        "urllib.request.OpenerDirector.add_handler"
      ]
    ],
    "add_header() (urllib.request.request method)": [
      [
        394,
        "urllib.request.Request.add_header"
      ]
    ],
    "add_parent() (urllib.request.basehandler method)": [
      [
        394,
        "urllib.request.BaseHandler.add_parent"
      ]
    ],
    "add_password() (urllib.request.httppasswordmgr method)": [
      [
        394,
        "urllib.request.HTTPPasswordMgr.add_password"
      ]
    ],
    "add_password() (urllib.request.httppasswordmgrwithpriorauth method)": [
      [
        394,
        "urllib.request.HTTPPasswordMgrWithPriorAuth.add_password"
      ]
    ],
    "add_unredirected_header() (urllib.request.request method)": [
      [
        394,
        "urllib.request.Request.add_unredirected_header"
      ]
    ],
    "addinfourl (class in urllib.response)": [
      [
        394,
        "urllib.response.addinfourl"
      ]
    ],
    "build_opener() (in module urllib.request)": [
      [
        394,
        "urllib.request.build_opener"
      ]
    ],
    "close() (urllib.request.basehandler method)": [
      [
        394,
        "urllib.request.BaseHandler.close"
      ]
    ],
    "code (urllib.response.addinfourl attribute)": [
      [
        394,
        "urllib.response.addinfourl.code"
      ]
    ],
    "cookiejar (urllib.request.httpcookieprocessor attribute)": [
      [
        394,
        "urllib.request.HTTPCookieProcessor.cookiejar"
      ]
    ],
    "data (urllib.request.request attribute)": [
      [
        394,
        "urllib.request.Request.data"
      ]
    ],
    "data_open() (urllib.request.datahandler method)": [
      [
        394,
        "urllib.request.DataHandler.data_open"
      ]
    ],
    "default_open() (urllib.request.basehandler method)": [
      [
        394,
        "urllib.request.BaseHandler.default_open"
      ]
    ],
    "error() (urllib.request.openerdirector method)": [
      [
        394,
        "urllib.request.OpenerDirector.error"
      ]
    ],
    "file_open() (urllib.request.filehandler method)": [
      [
        394,
        "urllib.request.FileHandler.file_open"
      ]
    ],
    "find_user_password() (urllib.request.httppasswordmgr method)": [
      [
        394,
        "urllib.request.HTTPPasswordMgr.find_user_password"
      ]
    ],
    "find_user_password() (urllib.request.httppasswordmgrwithpriorauth method)": [
      [
        394,
        "urllib.request.HTTPPasswordMgrWithPriorAuth.find_user_password"
      ]
    ],
    "ftp_open() (urllib.request.ftphandler method)": [
      [
        394,
        "urllib.request.FTPHandler.ftp_open"
      ]
    ],
    "full_url (urllib.request.request attribute)": [
      [
        394,
        "urllib.request.Request.full_url"
      ]
    ],
    "get_full_url() (urllib.request.request method)": [
      [
        394,
        "urllib.request.Request.get_full_url"
      ]
    ],
    "get_header() (urllib.request.request method)": [
      [
        394,
        "urllib.request.Request.get_header"
      ]
    ],
    "get_method() (urllib.request.request method)": [
      [
        394,
        "urllib.request.Request.get_method"
      ]
    ],
    "getcode() (urllib.response.addinfourl method)": [
      [
        394,
        "urllib.response.addinfourl.getcode"
      ]
    ],
    "getproxies() (in module urllib.request)": [
      [
        394,
        "urllib.request.getproxies"
      ]
    ],
    "geturl() (urllib.response.addinfourl method)": [
      [
        394,
        "urllib.response.addinfourl.geturl"
      ]
    ],
    "has_header() (urllib.request.request method)": [
      [
        394,
        "urllib.request.Request.has_header"
      ]
    ],
    "header_items() (urllib.request.request method)": [
      [
        394,
        "urllib.request.Request.header_items"
      ]
    ],
    "headers (urllib.response.addinfourl attribute)": [
      [
        394,
        "urllib.response.addinfourl.headers"
      ]
    ],
    "host (urllib.request.request attribute)": [
      [
        394,
        "urllib.request.Request.host"
      ]
    ],
    "http_error_301() (urllib.request.httpredirecthandler method)": [
      [
        394,
        "urllib.request.HTTPRedirectHandler.http_error_301"
      ]
    ],
    "http_error_302() (urllib.request.httpredirecthandler method)": [
      [
        394,
        "urllib.request.HTTPRedirectHandler.http_error_302"
      ]
    ],
    "http_error_303() (urllib.request.httpredirecthandler method)": [
      [
        394,
        "urllib.request.HTTPRedirectHandler.http_error_303"
      ]
    ],
    "http_error_307() (urllib.request.httpredirecthandler method)": [
      [
        394,
        "urllib.request.HTTPRedirectHandler.http_error_307"
      ]
    ],
    "http_error_308() (urllib.request.httpredirecthandler method)": [
      [
        394,
        "urllib.request.HTTPRedirectHandler.http_error_308"
      ]
    ],
    "http_error_401() (urllib.request.httpbasicauthhandler method)": [
      [
        394,
        "urllib.request.HTTPBasicAuthHandler.http_error_401"
      ]
    ],
    "http_error_401() (urllib.request.httpdigestauthhandler method)": [
      [
        394,
        "urllib.request.HTTPDigestAuthHandler.http_error_401"
      ]
    ],
    "http_error_407() (urllib.request.proxybasicauthhandler method)": [
      [
        394,
        "urllib.request.ProxyBasicAuthHandler.http_error_407"
      ]
    ],
    "http_error_407() (urllib.request.proxydigestauthhandler method)": [
      [
        394,
        "urllib.request.ProxyDigestAuthHandler.http_error_407"
      ]
    ],
    "http_error_auth_reqed() (urllib.request.abstractbasicauthhandler method)": [
      [
        394,
        "urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed"
      ]
    ],
    "http_error_auth_reqed() (urllib.request.abstractdigestauthhandler method)": [
      [
        394,
        "urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed"
      ]
    ],
    "http_error_default() (urllib.request.basehandler method)": [
      [
        394,
        "urllib.request.BaseHandler.http_error_default"
      ]
    ],
    "http_open() (urllib.request.httphandler method)": [
      [
        394,
        "urllib.request.HTTPHandler.http_open"
      ]
    ],
    "http_response() (urllib.request.httperrorprocessor method)": [
      [
        394,
        "urllib.request.HTTPErrorProcessor.http_response"
      ]
    ],
    "https_open() (urllib.request.httpshandler method)": [
      [
        394,
        "urllib.request.HTTPSHandler.https_open"
      ]
    ],
    "https_response() (urllib.request.httperrorprocessor method)": [
      [
        394,
        "urllib.request.HTTPErrorProcessor.https_response"
      ]
    ],
    "info() (urllib.response.addinfourl method)": [
      [
        394,
        "urllib.response.addinfourl.info"
      ]
    ],
    "install_opener() (in module urllib.request)": [
      [
        394,
        "urllib.request.install_opener"
      ]
    ],
    "is_authenticated() (urllib.request.httppasswordmgrwithpriorauth method)": [
      [
        394,
        "urllib.request.HTTPPasswordMgrWithPriorAuth.is_authenticated"
      ]
    ],
    "method (urllib.request.request attribute)": [
      [
        394,
        "urllib.request.Request.method"
      ]
    ],
    "no_proxy": [
      [
        394,
        "index-3"
      ]
    ],
    "open() (urllib.request.openerdirector method)": [
      [
        394,
        "urllib.request.OpenerDirector.open"
      ]
    ],
    "open() (urllib.request.urlopener method)": [
      [
        394,
        "urllib.request.URLopener.open"
      ]
    ],
    "open_unknown() (urllib.request.urlopener method)": [
      [
        394,
        "urllib.request.URLopener.open_unknown"
      ]
    ],
    "origin_req_host (urllib.request.request attribute)": [
      [
        394,
        "urllib.request.Request.origin_req_host"
      ]
    ],
    "parent (urllib.request.basehandler attribute)": [
      [
        394,
        "urllib.request.BaseHandler.parent"
      ]
    ],
    "pathname2url() (in module urllib.request)": [
      [
        394,
        "urllib.request.pathname2url"
      ]
    ],
    "prompt_user_passwd() (urllib.request.fancyurlopener method)": [
      [
        394,
        "urllib.request.FancyURLopener.prompt_user_passwd"
      ]
    ],
    "redirect_request() (urllib.request.httpredirecthandler method)": [
      [
        394,
        "urllib.request.HTTPRedirectHandler.redirect_request"
      ]
    ],
    "remove_header() (urllib.request.request method)": [
      [
        394,
        "urllib.request.Request.remove_header"
      ]
    ],
    "retrieve() (urllib.request.urlopener method)": [
      [
        394,
        "urllib.request.URLopener.retrieve"
      ]
    ],
    "selector (urllib.request.request attribute)": [
      [
        394,
        "urllib.request.Request.selector"
      ]
    ],
    "setmaxconns() (urllib.request.cacheftphandler method)": [
      [
        394,
        "urllib.request.CacheFTPHandler.setMaxConns"
      ]
    ],
    "settimeout() (urllib.request.cacheftphandler method)": [
      [
        394,
        "urllib.request.CacheFTPHandler.setTimeout"
      ]
    ],
    "set_proxy() (urllib.request.request method)": [
      [
        394,
        "urllib.request.Request.set_proxy"
      ]
    ],
    "status (urllib.response.addinfourl attribute)": [
      [
        394,
        "urllib.response.addinfourl.status"
      ]
    ],
    "type (urllib.request.request attribute)": [
      [
        394,
        "urllib.request.Request.type"
      ]
    ],
    "unknown_open() (urllib.request.basehandler method)": [
      [
        394,
        "urllib.request.BaseHandler.unknown_open"
      ]
    ],
    "unknown_open() (urllib.request.unknownhandler method)": [
      [
        394,
        "urllib.request.UnknownHandler.unknown_open"
      ]
    ],
    "unverifiable (urllib.request.request attribute)": [
      [
        394,
        "urllib.request.Request.unverifiable"
      ]
    ],
    "update_authenticated() (urllib.request.httppasswordmgrwithpriorauth method)": [
      [
        394,
        "urllib.request.HTTPPasswordMgrWithPriorAuth.update_authenticated"
      ]
    ],
    "url (urllib.response.addinfourl attribute)": [
      [
        394,
        "urllib.response.addinfourl.url"
      ]
    ],
    "url2pathname() (in module urllib.request)": [
      [
        394,
        "urllib.request.url2pathname"
      ]
    ],
    "urlcleanup() (in module urllib.request)": [
      [
        394,
        "urllib.request.urlcleanup"
      ]
    ],
    "urllib.response": [
      [
        394,
        "module-urllib.response"
      ]
    ],
    "urlopen() (in module urllib.request)": [
      [
        394,
        "urllib.request.urlopen"
      ]
    ],
    "urlretrieve() (in module urllib.request)": [
      [
        394,
        "urllib.request.urlretrieve"
      ]
    ],
    "version (urllib.request.urlopener attribute)": [
      [
        394,
        "urllib.request.URLopener.version"
      ]
    ],
    "robotfileparser (class in urllib.robotparser)": [
      [
        395,
        "urllib.robotparser.RobotFileParser"
      ]
    ],
    "can_fetch() (urllib.robotparser.robotfileparser method)": [
      [
        395,
        "urllib.robotparser.RobotFileParser.can_fetch"
      ]
    ],
    "crawl_delay() (urllib.robotparser.robotfileparser method)": [
      [
        395,
        "urllib.robotparser.RobotFileParser.crawl_delay"
      ]
    ],
    "modified() (urllib.robotparser.robotfileparser method)": [
      [
        395,
        "urllib.robotparser.RobotFileParser.modified"
      ]
    ],
    "mtime() (urllib.robotparser.robotfileparser method)": [
      [
        395,
        "urllib.robotparser.RobotFileParser.mtime"
      ]
    ],
    "parse() (urllib.robotparser.robotfileparser method)": [
      [
        395,
        "urllib.robotparser.RobotFileParser.parse"
      ]
    ],
    "read() (urllib.robotparser.robotfileparser method)": [
      [
        395,
        "urllib.robotparser.RobotFileParser.read"
      ]
    ],
    "request_rate() (urllib.robotparser.robotfileparser method)": [
      [
        395,
        "urllib.robotparser.RobotFileParser.request_rate"
      ]
    ],
    "robots.txt": [
      [
        395,
        "index-0"
      ]
    ],
    "set_url() (urllib.robotparser.robotfileparser method)": [
      [
        395,
        "urllib.robotparser.RobotFileParser.set_url"
      ]
    ],
    "site_maps() (urllib.robotparser.robotfileparser method)": [
      [
        395,
        "urllib.robotparser.RobotFileParser.site_maps"
      ]
    ],
    "urllib.robotparser": [
      [
        395,
        "module-urllib.robotparser"
      ]
    ],
    "ellinghouse, lance": [
      [
        396,
        "index-1"
      ]
    ],
    "jansen, jack": [
      [
        396,
        "index-1"
      ]
    ],
    "pep 594#uu-and-the-uu-encoding": [
      [
        396,
        "index-0"
      ]
    ],
    "decode() (in module uu)": [
      [
        396,
        "uu.decode"
      ]
    ],
    "encode() (in module uu)": [
      [
        396,
        "uu.encode"
      ]
    ],
    "--name": [
      [
        397,
        "cmdoption-uuid-name"
      ]
    ],
    "--namespace": [
      [
        397,
        "cmdoption-uuid-namespace"
      ]
    ],
    "--uuid": [
      [
        397,
        "cmdoption-uuid-uuid"
      ]
    ],
    "namespace_dns (in module uuid)": [
      [
        397,
        "uuid.NAMESPACE_DNS"
      ]
    ],
    "namespace_oid (in module uuid)": [
      [
        397,
        "uuid.NAMESPACE_OID"
      ]
    ],
    "namespace_url (in module uuid)": [
      [
        397,
        "uuid.NAMESPACE_URL"
      ]
    ],
    "namespace_x500 (in module uuid)": [
      [
        397,
        "uuid.NAMESPACE_X500"
      ]
    ],
    "reserved_future (in module uuid)": [
      [
        397,
        "uuid.RESERVED_FUTURE"
      ]
    ],
    "reserved_microsoft (in module uuid)": [
      [
        397,
        "uuid.RESERVED_MICROSOFT"
      ]
    ],
    "reserved_ncs (in module uuid)": [
      [
        397,
        "uuid.RESERVED_NCS"
      ]
    ],
    "rfc_4122 (in module uuid)": [
      [
        397,
        "uuid.RFC_4122"
      ]
    ],
    "safeuuid (class in uuid)": [
      [
        397,
        "uuid.SafeUUID"
      ]
    ],
    "uuid (class in uuid)": [
      [
        397,
        "uuid.UUID"
      ]
    ],
    "bytes (uuid.uuid attribute)": [
      [
        397,
        "uuid.UUID.bytes"
      ]
    ],
    "bytes_le (uuid.uuid attribute)": [
      [
        397,
        "uuid.UUID.bytes_le"
      ]
    ],
    "clock_seq (uuid.uuid attribute)": [
      [
        397,
        "uuid.UUID.clock_seq"
      ]
    ],
    "clock_seq_hi_variant (uuid.uuid attribute)": [
      [
        397,
        "uuid.UUID.clock_seq_hi_variant"
      ]
    ],
    "clock_seq_low (uuid.uuid attribute)": [
      [
        397,
        "uuid.UUID.clock_seq_low"
      ]
    ],
    "fields (uuid.uuid attribute)": [
      [
        397,
        "uuid.UUID.fields"
      ]
    ],
    "getnode": [
      [
        397,
        "index-5"
      ]
    ],
    "getnode() (in module uuid)": [
      [
        397,
        "uuid.getnode"
      ]
    ],
    "hex (uuid.uuid attribute)": [
      [
        397,
        "uuid.UUID.hex"
      ]
    ],
    "int (uuid.uuid attribute)": [
      [
        397,
        "uuid.UUID.int"
      ]
    ],
    "is_safe (uuid.uuid attribute)": [
      [
        397,
        "uuid.UUID.is_safe"
      ]
    ],
    "node (uuid.uuid attribute)": [
      [
        397,
        "uuid.UUID.node"
      ]
    ],
    "safe (uuid.safeuuid attribute)": [
      [
        397,
        "uuid.SafeUUID.safe"
      ]
    ],
    "time (uuid.uuid attribute)": [
      [
        397,
        "uuid.UUID.time"
      ]
    ],
    "time_hi_version (uuid.uuid attribute)": [
      [
        397,
        "uuid.UUID.time_hi_version"
      ]
    ],
    "time_low (uuid.uuid attribute)": [
      [
        397,
        "uuid.UUID.time_low"
      ]
    ],
    "time_mid (uuid.uuid attribute)": [
      [
        397,
        "uuid.UUID.time_mid"
      ]
    ],
    "unknown (uuid.safeuuid attribute)": [
      [
        397,
        "uuid.SafeUUID.unknown"
      ]
    ],
    "unsafe (uuid.safeuuid attribute)": [
      [
        397,
        "uuid.SafeUUID.unsafe"
      ]
    ],
    "urn (uuid.uuid attribute)": [
      [
        397,
        "uuid.UUID.urn"
      ]
    ],
    "uuid": [
      [
        397,
        "module-uuid"
      ]
    ],
    "uuid command line option": [
      [
        397,
        "cmdoption-uuid-N"
      ],
      [
        397,
        "cmdoption-uuid-h"
      ],
      [
        397,
        "cmdoption-uuid-n"
      ],
      [
        397,
        "cmdoption-uuid-name"
      ],
      [
        397,
        "cmdoption-uuid-namespace"
      ],
      [
        397,
        "cmdoption-uuid-u"
      ],
      [
        397,
        "cmdoption-uuid-uuid"
      ]
    ],
    "uuid1": [
      [
        397,
        "index-6"
      ]
    ],
    "uuid1() (in module uuid)": [
      [
        397,
        "uuid.uuid1"
      ]
    ],
    "uuid3": [
      [
        397,
        "index-7"
      ]
    ],
    "uuid3() (in module uuid)": [
      [
        397,
        "uuid.uuid3"
      ]
    ],
    "uuid4": [
      [
        397,
        "index-8"
      ]
    ],
    "uuid4() (in module uuid)": [
      [
        397,
        "uuid.uuid4"
      ]
    ],
    "uuid5": [
      [
        397,
        "index-9"
      ]
    ],
    "uuid5() (in module uuid)": [
      [
        397,
        "uuid.uuid5"
      ]
    ],
    "variant (uuid.uuid attribute)": [
      [
        397,
        "uuid.UUID.variant"
      ]
    ],
    "version (uuid.uuid attribute)": [
      [
        397,
        "uuid.UUID.version"
      ]
    ],
    "envbuilder (class in venv)": [
      [
        398,
        "venv.EnvBuilder"
      ]
    ],
    "environments": [
      [
        398,
        "index-0"
      ]
    ],
    "pep 405": [
      [
        398,
        "index-1"
      ],
      [
        475,
        "index-1"
      ]
    ],
    "create() (in module venv)": [
      [
        398,
        "venv.create"
      ]
    ],
    "create() (venv.envbuilder method)": [
      [
        398,
        "venv.EnvBuilder.create"
      ]
    ],
    "create_configuration() (venv.envbuilder method)": [
      [
        398,
        "venv.EnvBuilder.create_configuration"
      ]
    ],
    "ensure_directories() (venv.envbuilder method)": [
      [
        398,
        "venv.EnvBuilder.ensure_directories"
      ]
    ],
    "install_scripts() (venv.envbuilder method)": [
      [
        398,
        "venv.EnvBuilder.install_scripts"
      ]
    ],
    "post_setup() (venv.envbuilder method)": [
      [
        398,
        "venv.EnvBuilder.post_setup"
      ]
    ],
    "setup_python() (venv.envbuilder method)": [
      [
        398,
        "venv.EnvBuilder.setup_python"
      ]
    ],
    "setup_scripts() (venv.envbuilder method)": [
      [
        398,
        "venv.EnvBuilder.setup_scripts"
      ]
    ],
    "upgrade_dependencies() (venv.envbuilder method)": [
      [
        398,
        "venv.EnvBuilder.upgrade_dependencies"
      ]
    ],
    "venv": [
      [
        398,
        "module-venv"
      ]
    ],
    "virtual": [
      [
        398,
        "index-0"
      ]
    ],
    "catch_warnings (class in warnings)": [
      [
        399,
        "warnings.catch_warnings"
      ]
    ],
    "filterwarnings() (in module warnings)": [
      [
        399,
        "warnings.filterwarnings"
      ]
    ],
    "formatwarning() (in module warnings)": [
      [
        399,
        "warnings.formatwarning"
      ]
    ],
    "resetwarnings() (in module warnings)": [
      [
        399,
        "warnings.resetwarnings"
      ]
    ],
    "showwarning() (in module warnings)": [
      [
        399,
        "warnings.showwarning"
      ]
    ],
    "simplefilter() (in module warnings)": [
      [
        399,
        "warnings.simplefilter"
      ]
    ],
    "warn() (in module warnings)": [
      [
        399,
        "warnings.warn"
      ]
    ],
    "warn_explicit() (in module warnings)": [
      [
        399,
        "warnings.warn_explicit"
      ]
    ],
    "warnings": [
      [
        399,
        "index-0"
      ],
      [
        399,
        "module-warnings"
      ]
    ],
    "wave_read (class in wave)": [
      [
        400,
        "wave.Wave_read"
      ]
    ],
    "wave_write (class in wave)": [
      [
        400,
        "wave.Wave_write"
      ]
    ],
    "close() (wave.wave_read method)": [
      [
        400,
        "wave.Wave_read.close"
      ]
    ],
    "close() (wave.wave_write method)": [
      [
        400,
        "wave.Wave_write.close"
      ]
    ],
    "getcompname() (wave.wave_read method)": [
      [
        400,
        "wave.Wave_read.getcompname"
      ]
    ],
    "getcomptype() (wave.wave_read method)": [
      [
        400,
        "wave.Wave_read.getcomptype"
      ]
    ],
    "getframerate() (wave.wave_read method)": [
      [
        400,
        "wave.Wave_read.getframerate"
      ]
    ],
    "getmark() (wave.wave_read method)": [
      [
        400,
        "wave.Wave_read.getmark"
      ]
    ],
    "getmarkers() (wave.wave_read method)": [
      [
        400,
        "wave.Wave_read.getmarkers"
      ]
    ],
    "getnchannels() (wave.wave_read method)": [
      [
        400,
        "wave.Wave_read.getnchannels"
      ]
    ],
    "getnframes() (wave.wave_read method)": [
      [
        400,
        "wave.Wave_read.getnframes"
      ]
    ],
    "getparams() (wave.wave_read method)": [
      [
        400,
        "wave.Wave_read.getparams"
      ]
    ],
    "getsampwidth() (wave.wave_read method)": [
      [
        400,
        "wave.Wave_read.getsampwidth"
      ]
    ],
    "open() (in module wave)": [
      [
        400,
        "wave.open"
      ]
    ],
    "readframes() (wave.wave_read method)": [
      [
        400,
        "wave.Wave_read.readframes"
      ]
    ],
    "rewind() (wave.wave_read method)": [
      [
        400,
        "wave.Wave_read.rewind"
      ]
    ],
    "setcomptype() (wave.wave_write method)": [
      [
        400,
        "wave.Wave_write.setcomptype"
      ]
    ],
    "setframerate() (wave.wave_write method)": [
      [
        400,
        "wave.Wave_write.setframerate"
      ]
    ],
    "setnchannels() (wave.wave_write method)": [
      [
        400,
        "wave.Wave_write.setnchannels"
      ]
    ],
    "setnframes() (wave.wave_write method)": [
      [
        400,
        "wave.Wave_write.setnframes"
      ]
    ],
    "setparams() (wave.wave_write method)": [
      [
        400,
        "wave.Wave_write.setparams"
      ]
    ],
    "setpos() (wave.wave_read method)": [
      [
        400,
        "wave.Wave_read.setpos"
      ]
    ],
    "setsampwidth() (wave.wave_write method)": [
      [
        400,
        "wave.Wave_write.setsampwidth"
      ]
    ],
    "tell() (wave.wave_read method)": [
      [
        400,
        "wave.Wave_read.tell"
      ]
    ],
    "tell() (wave.wave_write method)": [
      [
        400,
        "wave.Wave_write.tell"
      ]
    ],
    "wave": [
      [
        400,
        "module-wave"
      ]
    ],
    "writeframes() (wave.wave_write method)": [
      [
        400,
        "wave.Wave_write.writeframes"
      ]
    ],
    "writeframesraw() (wave.wave_write method)": [
      [
        400,
        "wave.Wave_write.writeframesraw"
      ]
    ],
    "callableproxytype (in module weakref)": [
      [
        401,
        "weakref.CallableProxyType"
      ]
    ],
    "pep 205": [
      [
        401,
        "index-2"
      ],
      [
        462,
        "index-9"
      ]
    ],
    "proxytype (in module weakref)": [
      [
        401,
        "weakref.ProxyType"
      ]
    ],
    "proxytypes (in module weakref)": [
      [
        401,
        "weakref.ProxyTypes"
      ]
    ],
    "referencetype (in module weakref)": [
      [
        401,
        "weakref.ReferenceType"
      ]
    ],
    "weakkeydictionary (class in weakref)": [
      [
        401,
        "weakref.WeakKeyDictionary"
      ]
    ],
    "weakmethod (class in weakref)": [
      [
        401,
        "weakref.WeakMethod"
      ]
    ],
    "weakset (class in weakref)": [
      [
        401,
        "weakref.WeakSet"
      ]
    ],
    "weakvaluedictionary (class in weakref)": [
      [
        401,
        "weakref.WeakValueDictionary"
      ]
    ],
    "__call__() (weakref.finalize method)": [
      [
        401,
        "weakref.finalize.__call__"
      ]
    ],
    "__callback__ (weakref.ref attribute)": [
      [
        401,
        "weakref.ref.__callback__"
      ]
    ],
    "alive (weakref.finalize attribute)": [
      [
        401,
        "weakref.finalize.alive"
      ]
    ],
    "atexit (weakref.finalize attribute)": [
      [
        401,
        "weakref.finalize.atexit"
      ]
    ],
    "detach() (weakref.finalize method)": [
      [
        401,
        "weakref.finalize.detach"
      ]
    ],
    "finalize (class in weakref)": [
      [
        401,
        "weakref.finalize"
      ]
    ],
    "getweakrefcount() (in module weakref)": [
      [
        401,
        "weakref.getweakrefcount"
      ]
    ],
    "getweakrefs() (in module weakref)": [
      [
        401,
        "weakref.getweakrefs"
      ]
    ],
    "keyrefs() (weakref.weakkeydictionary method)": [
      [
        401,
        "weakref.WeakKeyDictionary.keyrefs"
      ]
    ],
    "peek() (weakref.finalize method)": [
      [
        401,
        "weakref.finalize.peek"
      ]
    ],
    "proxy() (in module weakref)": [
      [
        401,
        "weakref.proxy"
      ]
    ],
    "ref (class in weakref)": [
      [
        401,
        "weakref.ref"
      ]
    ],
    "valuerefs() (weakref.weakvaluedictionary method)": [
      [
        401,
        "weakref.WeakValueDictionary.valuerefs"
      ]
    ],
    "weakref": [
      [
        401,
        "module-weakref"
      ]
    ],
    "browser": [
      [
        402,
        "index-0"
      ],
      [
        402,
        "index-1"
      ]
    ],
    "kdedir": [
      [
        402,
        "index-2"
      ]
    ],
    "get() (in module webbrowser)": [
      [
        402,
        "webbrowser.get"
      ]
    ],
    "name (in module webbrowser)": [
      [
        402,
        "webbrowser.name"
      ]
    ],
    "open() (in module webbrowser)": [
      [
        402,
        "webbrowser.open"
      ]
    ],
    "open() (webbrowser.controller method)": [
      [
        402,
        "webbrowser.controller.open"
      ]
    ],
    "open_new() (in module webbrowser)": [
      [
        402,
        "webbrowser.open_new"
      ]
    ],
    "open_new() (webbrowser.controller method)": [
      [
        402,
        "webbrowser.controller.open_new"
      ]
    ],
    "open_new_tab() (in module webbrowser)": [
      [
        402,
        "webbrowser.open_new_tab"
      ]
    ],
    "open_new_tab() (webbrowser.controller method)": [
      [
        402,
        "webbrowser.controller.open_new_tab"
      ]
    ],
    "register() (in module webbrowser)": [
      [
        402,
        "webbrowser.register"
      ]
    ],
    "webbrowser": [
      [
        402,
        "module-webbrowser"
      ]
    ],
    "close() (winreg.pyhkey method)": [
      [
        404,
        "winreg.PyHKEY.Close"
      ]
    ],
    "closekey() (in module winreg)": [
      [
        404,
        "winreg.CloseKey"
      ]
    ],
    "connectregistry() (in module winreg)": [
      [
        404,
        "winreg.ConnectRegistry"
      ]
    ],
    "createkey() (in module winreg)": [
      [
        404,
        "winreg.CreateKey"
      ]
    ],
    "createkeyex() (in module winreg)": [
      [
        404,
        "winreg.CreateKeyEx"
      ]
    ],
    "deletekey() (in module winreg)": [
      [
        404,
        "winreg.DeleteKey"
      ]
    ],
    "deletekeyex() (in module winreg)": [
      [
        404,
        "winreg.DeleteKeyEx"
      ]
    ],
    "deletevalue() (in module winreg)": [
      [
        404,
        "winreg.DeleteValue"
      ]
    ],
    "detach() (winreg.pyhkey method)": [
      [
        404,
        "winreg.PyHKEY.Detach"
      ]
    ],
    "disablereflectionkey() (in module winreg)": [
      [
        404,
        "winreg.DisableReflectionKey"
      ]
    ],
    "enablereflectionkey() (in module winreg)": [
      [
        404,
        "winreg.EnableReflectionKey"
      ]
    ],
    "enumkey() (in module winreg)": [
      [
        404,
        "winreg.EnumKey"
      ]
    ],
    "enumvalue() (in module winreg)": [
      [
        404,
        "winreg.EnumValue"
      ]
    ],
    "expandenvironmentstrings() (in module winreg)": [
      [
        404,
        "winreg.ExpandEnvironmentStrings"
      ]
    ],
    "flushkey() (in module winreg)": [
      [
        404,
        "winreg.FlushKey"
      ]
    ],
    "hkey_classes_root (in module winreg)": [
      [
        404,
        "winreg.HKEY_CLASSES_ROOT"
      ]
    ],
    "hkey_current_config (in module winreg)": [
      [
        404,
        "winreg.HKEY_CURRENT_CONFIG"
      ]
    ],
    "hkey_current_user (in module winreg)": [
      [
        404,
        "winreg.HKEY_CURRENT_USER"
      ]
    ],
    "hkey_dyn_data (in module winreg)": [
      [
        404,
        "winreg.HKEY_DYN_DATA"
      ]
    ],
    "hkey_local_machine (in module winreg)": [
      [
        404,
        "winreg.HKEY_LOCAL_MACHINE"
      ]
    ],
    "hkey_performance_data (in module winreg)": [
      [
        404,
        "winreg.HKEY_PERFORMANCE_DATA"
      ]
    ],
    "hkey_users (in module winreg)": [
      [
        404,
        "winreg.HKEY_USERS"
      ]
    ],
    "key_all_access (in module winreg)": [
      [
        404,
        "winreg.KEY_ALL_ACCESS"
      ]
    ],
    "key_create_link (in module winreg)": [
      [
        404,
        "winreg.KEY_CREATE_LINK"
      ]
    ],
    "key_create_sub_key (in module winreg)": [
      [
        404,
        "winreg.KEY_CREATE_SUB_KEY"
      ]
    ],
    "key_enumerate_sub_keys (in module winreg)": [
      [
        404,
        "winreg.KEY_ENUMERATE_SUB_KEYS"
      ]
    ],
    "key_execute (in module winreg)": [
      [
        404,
        "winreg.KEY_EXECUTE"
      ]
    ],
    "key_notify (in module winreg)": [
      [
        404,
        "winreg.KEY_NOTIFY"
      ]
    ],
    "key_query_value (in module winreg)": [
      [
        404,
        "winreg.KEY_QUERY_VALUE"
      ]
    ],
    "key_read (in module winreg)": [
      [
        404,
        "winreg.KEY_READ"
      ]
    ],
    "key_set_value (in module winreg)": [
      [
        404,
        "winreg.KEY_SET_VALUE"
      ]
    ],
    "key_wow64_32key (in module winreg)": [
      [
        404,
        "winreg.KEY_WOW64_32KEY"
      ]
    ],
    "key_wow64_64key (in module winreg)": [
      [
        404,
        "winreg.KEY_WOW64_64KEY"
      ]
    ],
    "key_write (in module winreg)": [
      [
        404,
        "winreg.KEY_WRITE"
      ]
    ],
    "loadkey() (in module winreg)": [
      [
        404,
        "winreg.LoadKey"
      ]
    ],
    "openkey() (in module winreg)": [
      [
        404,
        "winreg.OpenKey"
      ]
    ],
    "openkeyex() (in module winreg)": [
      [
        404,
        "winreg.OpenKeyEx"
      ]
    ],
    "queryinfokey() (in module winreg)": [
      [
        404,
        "winreg.QueryInfoKey"
      ]
    ],
    "queryreflectionkey() (in module winreg)": [
      [
        404,
        "winreg.QueryReflectionKey"
      ]
    ],
    "queryvalue() (in module winreg)": [
      [
        404,
        "winreg.QueryValue"
      ]
    ],
    "queryvalueex() (in module winreg)": [
      [
        404,
        "winreg.QueryValueEx"
      ]
    ],
    "reg_binary (in module winreg)": [
      [
        404,
        "winreg.REG_BINARY"
      ]
    ],
    "reg_dword (in module winreg)": [
      [
        404,
        "winreg.REG_DWORD"
      ]
    ],
    "reg_dword_big_endian (in module winreg)": [
      [
        404,
        "winreg.REG_DWORD_BIG_ENDIAN"
      ]
    ],
    "reg_dword_little_endian (in module winreg)": [
      [
        404,
        "winreg.REG_DWORD_LITTLE_ENDIAN"
      ]
    ],
    "reg_expand_sz (in module winreg)": [
      [
        404,
        "winreg.REG_EXPAND_SZ"
      ]
    ],
    "reg_full_resource_descriptor (in module winreg)": [
      [
        404,
        "winreg.REG_FULL_RESOURCE_DESCRIPTOR"
      ]
    ],
    "reg_link (in module winreg)": [
      [
        404,
        "winreg.REG_LINK"
      ]
    ],
    "reg_multi_sz (in module winreg)": [
      [
        404,
        "winreg.REG_MULTI_SZ"
      ]
    ],
    "reg_none (in module winreg)": [
      [
        404,
        "winreg.REG_NONE"
      ]
    ],
    "reg_qword (in module winreg)": [
      [
        404,
        "winreg.REG_QWORD"
      ]
    ],
    "reg_qword_little_endian (in module winreg)": [
      [
        404,
        "winreg.REG_QWORD_LITTLE_ENDIAN"
      ]
    ],
    "reg_resource_list (in module winreg)": [
      [
        404,
        "winreg.REG_RESOURCE_LIST"
      ]
    ],
    "reg_resource_requirements_list (in module winreg)": [
      [
        404,
        "winreg.REG_RESOURCE_REQUIREMENTS_LIST"
      ]
    ],
    "reg_sz (in module winreg)": [
      [
        404,
        "winreg.REG_SZ"
      ]
    ],
    "savekey() (in module winreg)": [
      [
        404,
        "winreg.SaveKey"
      ]
    ],
    "setvalue() (in module winreg)": [
      [
        404,
        "winreg.SetValue"
      ]
    ],
    "setvalueex() (in module winreg)": [
      [
        404,
        "winreg.SetValueEx"
      ]
    ],
    "__enter__() (winreg.pyhkey method)": [
      [
        404,
        "winreg.PyHKEY.__enter__"
      ]
    ],
    "__exit__() (winreg.pyhkey method)": [
      [
        404,
        "winreg.PyHKEY.__exit__"
      ]
    ],
    "winreg": [
      [
        404,
        "module-winreg"
      ]
    ],
    "beep() (in module winsound)": [
      [
        405,
        "winsound.Beep"
      ]
    ],
    "mb_iconasterisk (in module winsound)": [
      [
        405,
        "winsound.MB_ICONASTERISK"
      ]
    ],
    "mb_iconexclamation (in module winsound)": [
      [
        405,
        "winsound.MB_ICONEXCLAMATION"
      ]
    ],
    "mb_iconhand (in module winsound)": [
      [
        405,
        "winsound.MB_ICONHAND"
      ]
    ],
    "mb_iconquestion (in module winsound)": [
      [
        405,
        "winsound.MB_ICONQUESTION"
      ]
    ],
    "mb_ok (in module winsound)": [
      [
        405,
        "winsound.MB_OK"
      ]
    ],
    "messagebeep() (in module winsound)": [
      [
        405,
        "winsound.MessageBeep"
      ]
    ],
    "playsound() (in module winsound)": [
      [
        405,
        "winsound.PlaySound"
      ]
    ],
    "snd_alias (in module winsound)": [
      [
        405,
        "winsound.SND_ALIAS"
      ]
    ],
    "snd_async (in module winsound)": [
      [
        405,
        "winsound.SND_ASYNC"
      ]
    ],
    "snd_filename (in module winsound)": [
      [
        405,
        "winsound.SND_FILENAME"
      ]
    ],
    "snd_loop (in module winsound)": [
      [
        405,
        "winsound.SND_LOOP"
      ]
    ],
    "snd_memory (in module winsound)": [
      [
        405,
        "winsound.SND_MEMORY"
      ]
    ],
    "snd_nodefault (in module winsound)": [
      [
        405,
        "winsound.SND_NODEFAULT"
      ]
    ],
    "snd_nostop (in module winsound)": [
      [
        405,
        "winsound.SND_NOSTOP"
      ]
    ],
    "snd_nowait (in module winsound)": [
      [
        405,
        "winsound.SND_NOWAIT"
      ]
    ],
    "snd_purge (in module winsound)": [
      [
        405,
        "winsound.SND_PURGE"
      ]
    ],
    "winsound": [
      [
        405,
        "module-winsound"
      ]
    ],
    "basecgihandler (class in wsgiref.handlers)": [
      [
        406,
        "wsgiref.handlers.BaseCGIHandler"
      ]
    ],
    "basehandler (class in wsgiref.handlers)": [
      [
        406,
        "wsgiref.handlers.BaseHandler"
      ]
    ],
    "cgihandler (class in wsgiref.handlers)": [
      [
        406,
        "wsgiref.handlers.CGIHandler"
      ]
    ],
    "errorstream (class in wsgiref.types)": [
      [
        406,
        "wsgiref.types.ErrorStream"
      ]
    ],
    "filewrapper (class in wsgiref.types)": [
      [
        406,
        "wsgiref.types.FileWrapper"
      ]
    ],
    "filewrapper (class in wsgiref.util)": [
      [
        406,
        "wsgiref.util.FileWrapper"
      ]
    ],
    "headers (class in wsgiref.headers)": [
      [
        406,
        "wsgiref.headers.Headers"
      ]
    ],
    "iiscgihandler (class in wsgiref.handlers)": [
      [
        406,
        "wsgiref.handlers.IISCGIHandler"
      ]
    ],
    "inputstream (class in wsgiref.types)": [
      [
        406,
        "wsgiref.types.InputStream"
      ]
    ],
    "pep 3333": [
      [
        406,
        "index-0"
      ],
      [
        406,
        "index-1"
      ],
      [
        406,
        "index-11"
      ],
      [
        406,
        "index-12"
      ],
      [
        406,
        "index-13"
      ],
      [
        406,
        "index-14"
      ],
      [
        406,
        "index-15"
      ],
      [
        406,
        "index-16"
      ],
      [
        406,
        "index-17"
      ],
      [
        406,
        "index-18"
      ],
      [
        406,
        "index-2"
      ],
      [
        406,
        "index-3"
      ],
      [
        406,
        "index-4"
      ],
      [
        406,
        "index-6"
      ],
      [
        406,
        "index-7"
      ],
      [
        406,
        "index-8"
      ],
      [
        406,
        "index-9"
      ],
      [
        472,
        "index-25"
      ],
      [
        474,
        "index-9"
      ]
    ],
    "simplehandler (class in wsgiref.handlers)": [
      [
        406,
        "wsgiref.handlers.SimpleHandler"
      ]
    ],
    "startresponse (class in wsgiref.types)": [
      [
        406,
        "wsgiref.types.StartResponse"
      ]
    ],
    "wsgiapplication (in module wsgiref.types)": [
      [
        406,
        "wsgiref.types.WSGIApplication"
      ]
    ],
    "wsgienvironment (in module wsgiref.types)": [
      [
        406,
        "wsgiref.types.WSGIEnvironment"
      ]
    ],
    "wsgirequesthandler (class in wsgiref.simple_server)": [
      [
        406,
        "wsgiref.simple_server.WSGIRequestHandler"
      ]
    ],
    "wsgiserver (class in wsgiref.simple_server)": [
      [
        406,
        "wsgiref.simple_server.WSGIServer"
      ]
    ],
    "_flush() (wsgiref.handlers.basehandler method)": [
      [
        406,
        "wsgiref.handlers.BaseHandler._flush"
      ]
    ],
    "_write() (wsgiref.handlers.basehandler method)": [
      [
        406,
        "wsgiref.handlers.BaseHandler._write"
      ]
    ],
    "add_cgi_vars() (wsgiref.handlers.basehandler method)": [
      [
        406,
        "wsgiref.handlers.BaseHandler.add_cgi_vars"
      ]
    ],
    "add_header() (wsgiref.headers.headers method)": [
      [
        406,
        "wsgiref.headers.Headers.add_header"
      ]
    ],
    "application_uri() (in module wsgiref.util)": [
      [
        406,
        "wsgiref.util.application_uri"
      ]
    ],
    "demo_app() (in module wsgiref.simple_server)": [
      [
        406,
        "wsgiref.simple_server.demo_app"
      ]
    ],
    "error_body (wsgiref.handlers.basehandler attribute)": [
      [
        406,
        "wsgiref.handlers.BaseHandler.error_body"
      ]
    ],
    "error_headers (wsgiref.handlers.basehandler attribute)": [
      [
        406,
        "wsgiref.handlers.BaseHandler.error_headers"
      ]
    ],
    "error_output() (wsgiref.handlers.basehandler method)": [
      [
        406,
        "wsgiref.handlers.BaseHandler.error_output"
      ]
    ],
    "error_status (wsgiref.handlers.basehandler attribute)": [
      [
        406,
        "wsgiref.handlers.BaseHandler.error_status"
      ]
    ],
    "get_all() (wsgiref.headers.headers method)": [
      [
        406,
        "wsgiref.headers.Headers.get_all"
      ]
    ],
    "get_app() (wsgiref.simple_server.wsgiserver method)": [
      [
        406,
        "wsgiref.simple_server.WSGIServer.get_app"
      ]
    ],
    "get_environ() (wsgiref.simple_server.wsgirequesthandler method)": [
      [
        406,
        "wsgiref.simple_server.WSGIRequestHandler.get_environ"
      ]
    ],
    "get_scheme() (wsgiref.handlers.basehandler method)": [
      [
        406,
        "wsgiref.handlers.BaseHandler.get_scheme"
      ]
    ],
    "get_stderr() (wsgiref.handlers.basehandler method)": [
      [
        406,
        "wsgiref.handlers.BaseHandler.get_stderr"
      ]
    ],
    "get_stderr() (wsgiref.simple_server.wsgirequesthandler method)": [
      [
        406,
        "wsgiref.simple_server.WSGIRequestHandler.get_stderr"
      ]
    ],
    "get_stdin() (wsgiref.handlers.basehandler method)": [
      [
        406,
        "wsgiref.handlers.BaseHandler.get_stdin"
      ]
    ],
    "guess_scheme() (in module wsgiref.util)": [
      [
        406,
        "wsgiref.util.guess_scheme"
      ]
    ],
    "handle() (wsgiref.simple_server.wsgirequesthandler method)": [
      [
        406,
        "wsgiref.simple_server.WSGIRequestHandler.handle"
      ]
    ],
    "http_version (wsgiref.handlers.basehandler attribute)": [
      [
        406,
        "wsgiref.handlers.BaseHandler.http_version"
      ]
    ],
    "is_hop_by_hop() (in module wsgiref.util)": [
      [
        406,
        "wsgiref.util.is_hop_by_hop"
      ]
    ],
    "log_exception() (wsgiref.handlers.basehandler method)": [
      [
        406,
        "wsgiref.handlers.BaseHandler.log_exception"
      ]
    ],
    "make_server() (in module wsgiref.simple_server)": [
      [
        406,
        "wsgiref.simple_server.make_server"
      ]
    ],
    "origin_server (wsgiref.handlers.basehandler attribute)": [
      [
        406,
        "wsgiref.handlers.BaseHandler.origin_server"
      ]
    ],
    "os_environ (wsgiref.handlers.basehandler attribute)": [
      [
        406,
        "wsgiref.handlers.BaseHandler.os_environ"
      ]
    ],
    "read_environ() (in module wsgiref.handlers)": [
      [
        406,
        "wsgiref.handlers.read_environ"
      ]
    ],
    "request_uri() (in module wsgiref.util)": [
      [
        406,
        "wsgiref.util.request_uri"
      ]
    ],
    "run() (wsgiref.handlers.basehandler method)": [
      [
        406,
        "wsgiref.handlers.BaseHandler.run"
      ]
    ],
    "sendfile() (wsgiref.handlers.basehandler method)": [
      [
        406,
        "wsgiref.handlers.BaseHandler.sendfile"
      ]
    ],
    "server_software (wsgiref.handlers.basehandler attribute)": [
      [
        406,
        "wsgiref.handlers.BaseHandler.server_software"
      ]
    ],
    "set_app() (wsgiref.simple_server.wsgiserver method)": [
      [
        406,
        "wsgiref.simple_server.WSGIServer.set_app"
      ]
    ],
    "setup_environ() (wsgiref.handlers.basehandler method)": [
      [
        406,
        "wsgiref.handlers.BaseHandler.setup_environ"
      ]
    ],
    "setup_testing_defaults() (in module wsgiref.util)": [
      [
        406,
        "wsgiref.util.setup_testing_defaults"
      ]
    ],
    "shift_path_info() (in module wsgiref.util)": [
      [
        406,
        "wsgiref.util.shift_path_info"
      ]
    ],
    "traceback_limit (wsgiref.handlers.basehandler attribute)": [
      [
        406,
        "wsgiref.handlers.BaseHandler.traceback_limit"
      ]
    ],
    "validator() (in module wsgiref.validate)": [
      [
        406,
        "wsgiref.validate.validator"
      ]
    ],
    "wsgi_file_wrapper (wsgiref.handlers.basehandler attribute)": [
      [
        406,
        "wsgiref.handlers.BaseHandler.wsgi_file_wrapper"
      ]
    ],
    "wsgi_multiprocess (wsgiref.handlers.basehandler attribute)": [
      [
        406,
        "wsgiref.handlers.BaseHandler.wsgi_multiprocess"
      ]
    ],
    "wsgi_multithread (wsgiref.handlers.basehandler attribute)": [
      [
        406,
        "wsgiref.handlers.BaseHandler.wsgi_multithread"
      ]
    ],
    "wsgi_run_once (wsgiref.handlers.basehandler attribute)": [
      [
        406,
        "wsgiref.handlers.BaseHandler.wsgi_run_once"
      ]
    ],
    "wsgiref": [
      [
        406,
        "module-wsgiref"
      ]
    ],
    "wsgiref.handlers": [
      [
        406,
        "module-wsgiref.handlers"
      ]
    ],
    "wsgiref.headers": [
      [
        406,
        "module-wsgiref.headers"
      ]
    ],
    "wsgiref.simple_server": [
      [
        406,
        "module-wsgiref.simple_server"
      ]
    ],
    "wsgiref.types": [
      [
        406,
        "module-wsgiref.types"
      ]
    ],
    "wsgiref.util": [
      [
        406,
        "module-wsgiref.util"
      ]
    ],
    "wsgiref.validate": [
      [
        406,
        "module-wsgiref.validate"
      ]
    ],
    "conversionerror": [
      [
        407,
        "xdrlib.ConversionError"
      ]
    ],
    "pep 594#xdrlib": [
      [
        407,
        "index-1"
      ]
    ],
    "packer (class in xdrlib)": [
      [
        407,
        "xdrlib.Packer"
      ]
    ],
    "rfc 1014": [
      [
        407,
        "index-2"
      ],
      [
        407,
        "index-3"
      ]
    ],
    "rfc 1832": [
      [
        407,
        "index-4"
      ],
      [
        407,
        "index-5"
      ]
    ],
    "unpacker (class in xdrlib)": [
      [
        407,
        "xdrlib.Unpacker"
      ]
    ],
    "xdr": [
      [
        407,
        "index-0"
      ]
    ],
    "done() (xdrlib.unpacker method)": [
      [
        407,
        "xdrlib.Unpacker.done"
      ]
    ],
    "get_buffer() (xdrlib.packer method)": [
      [
        407,
        "xdrlib.Packer.get_buffer"
      ]
    ],
    "get_buffer() (xdrlib.unpacker method)": [
      [
        407,
        "xdrlib.Unpacker.get_buffer"
      ]
    ],
    "get_position() (xdrlib.unpacker method)": [
      [
        407,
        "xdrlib.Unpacker.get_position"
      ]
    ],
    "pack_array() (xdrlib.packer method)": [
      [
        407,
        "xdrlib.Packer.pack_array"
      ]
    ],
    "pack_bytes() (xdrlib.packer method)": [
      [
        407,
        "xdrlib.Packer.pack_bytes"
      ]
    ],
    "pack_double() (xdrlib.packer method)": [
      [
        407,
        "xdrlib.Packer.pack_double"
      ]
    ],
    "pack_farray() (xdrlib.packer method)": [
      [
        407,
        "xdrlib.Packer.pack_farray"
      ]
    ],
    "pack_float() (xdrlib.packer method)": [
      [
        407,
        "xdrlib.Packer.pack_float"
      ]
    ],
    "pack_fopaque() (xdrlib.packer method)": [
      [
        407,
        "xdrlib.Packer.pack_fopaque"
      ]
    ],
    "pack_fstring() (xdrlib.packer method)": [
      [
        407,
        "xdrlib.Packer.pack_fstring"
      ]
    ],
    "pack_list() (xdrlib.packer method)": [
      [
        407,
        "xdrlib.Packer.pack_list"
      ]
    ],
    "pack_opaque() (xdrlib.packer method)": [
      [
        407,
        "xdrlib.Packer.pack_opaque"
      ]
    ],
    "pack_string() (xdrlib.packer method)": [
      [
        407,
        "xdrlib.Packer.pack_string"
      ]
    ],
    "reset() (xdrlib.packer method)": [
      [
        407,
        "xdrlib.Packer.reset"
      ]
    ],
    "reset() (xdrlib.unpacker method)": [
      [
        407,
        "xdrlib.Unpacker.reset"
      ]
    ],
    "set_position() (xdrlib.unpacker method)": [
      [
        407,
        "xdrlib.Unpacker.set_position"
      ]
    ],
    "unpack_array() (xdrlib.unpacker method)": [
      [
        407,
        "xdrlib.Unpacker.unpack_array"
      ]
    ],
    "unpack_bytes() (xdrlib.unpacker method)": [
      [
        407,
        "xdrlib.Unpacker.unpack_bytes"
      ]
    ],
    "unpack_double() (xdrlib.unpacker method)": [
      [
        407,
        "xdrlib.Unpacker.unpack_double"
      ]
    ],
    "unpack_farray() (xdrlib.unpacker method)": [
      [
        407,
        "xdrlib.Unpacker.unpack_farray"
      ]
    ],
    "unpack_float() (xdrlib.unpacker method)": [
      [
        407,
        "xdrlib.Unpacker.unpack_float"
      ]
    ],
    "unpack_fopaque() (xdrlib.unpacker method)": [
      [
        407,
        "xdrlib.Unpacker.unpack_fopaque"
      ]
    ],
    "unpack_fstring() (xdrlib.unpacker method)": [
      [
        407,
        "xdrlib.Unpacker.unpack_fstring"
      ]
    ],
    "unpack_list() (xdrlib.unpacker method)": [
      [
        407,
        "xdrlib.Unpacker.unpack_list"
      ]
    ],
    "unpack_opaque() (xdrlib.unpacker method)": [
      [
        407,
        "xdrlib.Unpacker.unpack_opaque"
      ]
    ],
    "unpack_string() (xdrlib.unpacker method)": [
      [
        407,
        "xdrlib.Unpacker.unpack_string"
      ]
    ],
    "xdrlib": [
      [
        407,
        "module-xdrlib"
      ]
    ],
    "xml": [
      [
        408,
        "module-xml"
      ]
    ],
    "domexception": [
      [
        409,
        "xml.dom.DOMException"
      ]
    ],
    "domstringsizeerr": [
      [
        409,
        "xml.dom.DomstringSizeErr"
      ]
    ],
    "empty_namespace (in module xml.dom)": [
      [
        409,
        "xml.dom.EMPTY_NAMESPACE"
      ]
    ],
    "hierarchyrequesterr": [
      [
        409,
        "xml.dom.HierarchyRequestErr"
      ]
    ],
    "indexsizeerr": [
      [
        409,
        "xml.dom.IndexSizeErr"
      ]
    ],
    "inuseattributeerr": [
      [
        409,
        "xml.dom.InuseAttributeErr"
      ]
    ],
    "invalidaccesserr": [
      [
        409,
        "xml.dom.InvalidAccessErr"
      ]
    ],
    "invalidcharactererr": [
      [
        409,
        "xml.dom.InvalidCharacterErr"
      ]
    ],
    "invalidmodificationerr": [
      [
        409,
        "xml.dom.InvalidModificationErr"
      ]
    ],
    "invalidstateerr": [
      [
        409,
        "xml.dom.InvalidStateErr"
      ]
    ],
    "namespaceerr": [
      [
        409,
        "xml.dom.NamespaceErr"
      ]
    ],
    "nodataallowederr": [
      [
        409,
        "xml.dom.NoDataAllowedErr"
      ]
    ],
    "nomodificationallowederr": [
      [
        409,
        "xml.dom.NoModificationAllowedErr"
      ]
    ],
    "notfounderr": [
      [
        409,
        "xml.dom.NotFoundErr"
      ]
    ],
    "notsupportederr": [
      [
        409,
        "xml.dom.NotSupportedErr"
      ]
    ],
    "python_dom": [
      [
        409,
        "index-0"
      ]
    ],
    "syntaxerr": [
      [
        409,
        "xml.dom.SyntaxErr"
      ]
    ],
    "wrongdocumenterr": [
      [
        409,
        "xml.dom.WrongDocumentErr"
      ]
    ],
    "xhtml_namespace (in module xml.dom)": [
      [
        409,
        "xml.dom.XHTML_NAMESPACE"
      ]
    ],
    "xmlns_namespace (in module xml.dom)": [
      [
        409,
        "xml.dom.XMLNS_NAMESPACE"
      ]
    ],
    "xml_namespace (in module xml.dom)": [
      [
        409,
        "xml.dom.XML_NAMESPACE"
      ]
    ],
    "appendchild() (xml.dom.node method)": [
      [
        409,
        "xml.dom.Node.appendChild"
      ]
    ],
    "attributes (xml.dom.node attribute)": [
      [
        409,
        "xml.dom.Node.attributes"
      ]
    ],
    "childnodes (xml.dom.node attribute)": [
      [
        409,
        "xml.dom.Node.childNodes"
      ]
    ],
    "clonenode() (xml.dom.node method)": [
      [
        409,
        "xml.dom.Node.cloneNode"
      ]
    ],
    "createattribute() (xml.dom.document method)": [
      [
        409,
        "xml.dom.Document.createAttribute"
      ]
    ],
    "createattributens() (xml.dom.document method)": [
      [
        409,
        "xml.dom.Document.createAttributeNS"
      ]
    ],
    "createcomment() (xml.dom.document method)": [
      [
        409,
        "xml.dom.Document.createComment"
      ]
    ],
    "createdocument() (xml.dom.domimplementation method)": [
      [
        409,
        "xml.dom.DOMImplementation.createDocument"
      ]
    ],
    "createdocumenttype() (xml.dom.domimplementation method)": [
      [
        409,
        "xml.dom.DOMImplementation.createDocumentType"
      ]
    ],
    "createelement() (xml.dom.document method)": [
      [
        409,
        "xml.dom.Document.createElement"
      ]
    ],
    "createelementns() (xml.dom.document method)": [
      [
        409,
        "xml.dom.Document.createElementNS"
      ]
    ],
    "createprocessinginstruction() (xml.dom.document method)": [
      [
        409,
        "xml.dom.Document.createProcessingInstruction"
      ]
    ],
    "createtextnode() (xml.dom.document method)": [
      [
        409,
        "xml.dom.Document.createTextNode"
      ]
    ],
    "data (xml.dom.comment attribute)": [
      [
        409,
        "xml.dom.Comment.data"
      ]
    ],
    "data (xml.dom.processinginstruction attribute)": [
      [
        409,
        "xml.dom.ProcessingInstruction.data"
      ]
    ],
    "data (xml.dom.text attribute)": [
      [
        409,
        "xml.dom.Text.data"
      ]
    ],
    "documentelement (xml.dom.document attribute)": [
      [
        409,
        "xml.dom.Document.documentElement"
      ]
    ],
    "entities (xml.dom.documenttype attribute)": [
      [
        409,
        "xml.dom.DocumentType.entities"
      ]
    ],
    "firstchild (xml.dom.node attribute)": [
      [
        409,
        "xml.dom.Node.firstChild"
      ]
    ],
    "getattribute() (xml.dom.element method)": [
      [
        409,
        "xml.dom.Element.getAttribute"
      ]
    ],
    "getattributens() (xml.dom.element method)": [
      [
        409,
        "xml.dom.Element.getAttributeNS"
      ]
    ],
    "getattributenode() (xml.dom.element method)": [
      [
        409,
        "xml.dom.Element.getAttributeNode"
      ]
    ],
    "getattributenodens() (xml.dom.element method)": [
      [
        409,
        "xml.dom.Element.getAttributeNodeNS"
      ]
    ],
    "getdomimplementation() (in module xml.dom)": [
      [
        409,
        "xml.dom.getDOMImplementation"
      ]
    ],
    "getelementsbytagname() (xml.dom.document method)": [
      [
        409,
        "xml.dom.Document.getElementsByTagName"
      ]
    ],
    "getelementsbytagname() (xml.dom.element method)": [
      [
        409,
        "xml.dom.Element.getElementsByTagName"
      ]
    ],
    "getelementsbytagnamens() (xml.dom.document method)": [
      [
        409,
        "xml.dom.Document.getElementsByTagNameNS"
      ]
    ],
    "getelementsbytagnamens() (xml.dom.element method)": [
      [
        409,
        "xml.dom.Element.getElementsByTagNameNS"
      ]
    ],
    "hasattribute() (xml.dom.element method)": [
      [
        409,
        "xml.dom.Element.hasAttribute"
      ]
    ],
    "hasattributens() (xml.dom.element method)": [
      [
        409,
        "xml.dom.Element.hasAttributeNS"
      ]
    ],
    "hasattributes() (xml.dom.node method)": [
      [
        409,
        "xml.dom.Node.hasAttributes"
      ]
    ],
    "haschildnodes() (xml.dom.node method)": [
      [
        409,
        "xml.dom.Node.hasChildNodes"
      ]
    ],
    "hasfeature() (xml.dom.domimplementation method)": [
      [
        409,
        "xml.dom.DOMImplementation.hasFeature"
      ]
    ],
    "insertbefore() (xml.dom.node method)": [
      [
        409,
        "xml.dom.Node.insertBefore"
      ]
    ],
    "internalsubset (xml.dom.documenttype attribute)": [
      [
        409,
        "xml.dom.DocumentType.internalSubset"
      ]
    ],
    "issamenode() (xml.dom.node method)": [
      [
        409,
        "xml.dom.Node.isSameNode"
      ]
    ],
    "item() (xml.dom.namednodemap method)": [
      [
        409,
        "xml.dom.NamedNodeMap.item"
      ]
    ],
    "item() (xml.dom.nodelist method)": [
      [
        409,
        "xml.dom.NodeList.item"
      ]
    ],
    "lastchild (xml.dom.node attribute)": [
      [
        409,
        "xml.dom.Node.lastChild"
      ]
    ],
    "length (xml.dom.namednodemap attribute)": [
      [
        409,
        "xml.dom.NamedNodeMap.length"
      ]
    ],
    "length (xml.dom.nodelist attribute)": [
      [
        409,
        "xml.dom.NodeList.length"
      ]
    ],
    "localname (xml.dom.attr attribute)": [
      [
        409,
        "xml.dom.Attr.localName"
      ]
    ],
    "localname (xml.dom.node attribute)": [
      [
        409,
        "xml.dom.Node.localName"
      ]
    ],
    "name (xml.dom.attr attribute)": [
      [
        409,
        "xml.dom.Attr.name"
      ]
    ],
    "name (xml.dom.documenttype attribute)": [
      [
        409,
        "xml.dom.DocumentType.name"
      ]
    ],
    "namespaceuri (xml.dom.node attribute)": [
      [
        409,
        "xml.dom.Node.namespaceURI"
      ]
    ],
    "nextsibling (xml.dom.node attribute)": [
      [
        409,
        "xml.dom.Node.nextSibling"
      ]
    ],
    "nodename (xml.dom.node attribute)": [
      [
        409,
        "xml.dom.Node.nodeName"
      ]
    ],
    "nodetype (xml.dom.node attribute)": [
      [
        409,
        "xml.dom.Node.nodeType"
      ]
    ],
    "nodevalue (xml.dom.node attribute)": [
      [
        409,
        "xml.dom.Node.nodeValue"
      ]
    ],
    "normalize() (xml.dom.node method)": [
      [
        409,
        "xml.dom.Node.normalize"
      ]
    ],
    "notations (xml.dom.documenttype attribute)": [
      [
        409,
        "xml.dom.DocumentType.notations"
      ]
    ],
    "parentnode (xml.dom.node attribute)": [
      [
        409,
        "xml.dom.Node.parentNode"
      ]
    ],
    "prefix (xml.dom.attr attribute)": [
      [
        409,
        "xml.dom.Attr.prefix"
      ]
    ],
    "prefix (xml.dom.node attribute)": [
      [
        409,
        "xml.dom.Node.prefix"
      ]
    ],
    "previoussibling (xml.dom.node attribute)": [
      [
        409,
        "xml.dom.Node.previousSibling"
      ]
    ],
    "publicid (xml.dom.documenttype attribute)": [
      [
        409,
        "xml.dom.DocumentType.publicId"
      ]
    ],
    "registerdomimplementation() (in module xml.dom)": [
      [
        409,
        "xml.dom.registerDOMImplementation"
      ]
    ],
    "removeattribute() (xml.dom.element method)": [
      [
        409,
        "xml.dom.Element.removeAttribute"
      ]
    ],
    "removeattributens() (xml.dom.element method)": [
      [
        409,
        "xml.dom.Element.removeAttributeNS"
      ]
    ],
    "removeattributenode() (xml.dom.element method)": [
      [
        409,
        "xml.dom.Element.removeAttributeNode"
      ]
    ],
    "removechild() (xml.dom.node method)": [
      [
        409,
        "xml.dom.Node.removeChild"
      ]
    ],
    "replacechild() (xml.dom.node method)": [
      [
        409,
        "xml.dom.Node.replaceChild"
      ]
    ],
    "setattribute() (xml.dom.element method)": [
      [
        409,
        "xml.dom.Element.setAttribute"
      ]
    ],
    "setattributens() (xml.dom.element method)": [
      [
        409,
        "xml.dom.Element.setAttributeNS"
      ]
    ],
    "setattributenode() (xml.dom.element method)": [
      [
        409,
        "xml.dom.Element.setAttributeNode"
      ]
    ],
    "setattributenodens() (xml.dom.element method)": [
      [
        409,
        "xml.dom.Element.setAttributeNodeNS"
      ]
    ],
    "systemid (xml.dom.documenttype attribute)": [
      [
        409,
        "xml.dom.DocumentType.systemId"
      ]
    ],
    "tagname (xml.dom.element attribute)": [
      [
        409,
        "xml.dom.Element.tagName"
      ]
    ],
    "target (xml.dom.processinginstruction attribute)": [
      [
        409,
        "xml.dom.ProcessingInstruction.target"
      ]
    ],
    "value (xml.dom.attr attribute)": [
      [
        409,
        "xml.dom.Attr.value"
      ]
    ],
    "xml.dom": [
      [
        409,
        "module-xml.dom"
      ]
    ],
    "parse() (in module xml.dom.minidom)": [
      [
        410,
        "xml.dom.minidom.parse"
      ]
    ],
    "parsestring() (in module xml.dom.minidom)": [
      [
        410,
        "xml.dom.minidom.parseString"
      ]
    ],
    "toprettyxml() (xml.dom.minidom.node method)": [
      [
        410,
        "xml.dom.minidom.Node.toprettyxml"
      ]
    ],
    "toxml() (xml.dom.minidom.node method)": [
      [
        410,
        "xml.dom.minidom.Node.toxml"
      ]
    ],
    "unlink() (xml.dom.minidom.node method)": [
      [
        410,
        "xml.dom.minidom.Node.unlink"
      ]
    ],
    "writexml() (xml.dom.minidom.node method)": [
      [
        410,
        "xml.dom.minidom.Node.writexml"
      ]
    ],
    "xml.dom.minidom": [
      [
        410,
        "module-xml.dom.minidom"
      ]
    ],
    "domeventstream (class in xml.dom.pulldom)": [
      [
        411,
        "xml.dom.pulldom.DOMEventStream"
      ]
    ],
    "pulldom (class in xml.dom.pulldom)": [
      [
        411,
        "xml.dom.pulldom.PullDom"
      ]
    ],
    "sax2dom (class in xml.dom.pulldom)": [
      [
        411,
        "xml.dom.pulldom.SAX2DOM"
      ]
    ],
    "default_bufsize (in module xml.dom.pulldom)": [
      [
        411,
        "xml.dom.pulldom.default_bufsize"
      ]
    ],
    "expandnode() (xml.dom.pulldom.domeventstream method)": [
      [
        411,
        "xml.dom.pulldom.DOMEventStream.expandNode"
      ]
    ],
    "getevent() (xml.dom.pulldom.domeventstream method)": [
      [
        411,
        "xml.dom.pulldom.DOMEventStream.getEvent"
      ]
    ],
    "parse() (in module xml.dom.pulldom)": [
      [
        411,
        "xml.dom.pulldom.parse"
      ]
    ],
    "parsestring() (in module xml.dom.pulldom)": [
      [
        411,
        "xml.dom.pulldom.parseString"
      ]
    ],
    "reset() (xml.dom.pulldom.domeventstream method)": [
      [
        411,
        "xml.dom.pulldom.DOMEventStream.reset"
      ]
    ],
    "xml.dom.pulldom": [
      [
        411,
        "module-xml.dom.pulldom"
      ]
    ],
    "c14nwritertarget (class in xml.etree.elementtree)": [
      [
        412,
        "xml.etree.ElementTree.C14NWriterTarget"
      ]
    ],
    "comment() (in module xml.etree.elementtree)": [
      [
        412,
        "xml.etree.ElementTree.Comment"
      ]
    ],
    "element (class in xml.etree.elementtree)": [
      [
        412,
        "xml.etree.ElementTree.Element"
      ]
    ],
    "elementtree (class in xml.etree.elementtree)": [
      [
        412,
        "xml.etree.ElementTree.ElementTree"
      ]
    ],
    "parseerror (class in xml.etree.elementtree)": [
      [
        412,
        "xml.etree.ElementTree.ParseError"
      ]
    ],
    "processinginstruction() (in module xml.etree.elementtree)": [
      [
        412,
        "xml.etree.ElementTree.ProcessingInstruction"
      ]
    ],
    "qname (class in xml.etree.elementtree)": [
      [
        412,
        "xml.etree.ElementTree.QName"
      ]
    ],
    "subelement() (in module xml.etree.elementtree)": [
      [
        412,
        "xml.etree.ElementTree.SubElement"
      ]
    ],
    "treebuilder (class in xml.etree.elementtree)": [
      [
        412,
        "xml.etree.ElementTree.TreeBuilder"
      ]
    ],
    "xml() (in module xml.etree.elementtree)": [
      [
        412,
        "xml.etree.ElementTree.XML"
      ]
    ],
    "xmlid() (in module xml.etree.elementtree)": [
      [
        412,
        "xml.etree.ElementTree.XMLID"
      ]
    ],
    "xmlparser (class in xml.etree.elementtree)": [
      [
        412,
        "xml.etree.ElementTree.XMLParser"
      ]
    ],
    "xmlpullparser (class in xml.etree.elementtree)": [
      [
        412,
        "xml.etree.ElementTree.XMLPullParser"
      ]
    ],
    "_setroot() (xml.etree.elementtree.elementtree method)": [
      [
        412,
        "xml.etree.ElementTree.ElementTree._setroot"
      ]
    ],
    "append() (xml.etree.elementtree.element method)": [
      [
        412,
        "xml.etree.ElementTree.Element.append"
      ]
    ],
    "attrib (xml.etree.elementtree.element attribute)": [
      [
        412,
        "xml.etree.ElementTree.Element.attrib"
      ]
    ],
    "canonicalize() (in module xml.etree.elementtree)": [
      [
        412,
        "xml.etree.ElementTree.canonicalize"
      ]
    ],
    "clear() (xml.etree.elementtree.element method)": [
      [
        412,
        "xml.etree.ElementTree.Element.clear"
      ]
    ],
    "close() (xml.etree.elementtree.treebuilder method)": [
      [
        412,
        "xml.etree.ElementTree.TreeBuilder.close"
      ]
    ],
    "close() (xml.etree.elementtree.xmlparser method)": [
      [
        412,
        "xml.etree.ElementTree.XMLParser.close"
      ]
    ],
    "close() (xml.etree.elementtree.xmlpullparser method)": [
      [
        412,
        "xml.etree.ElementTree.XMLPullParser.close"
      ]
    ],
    "code (xml.etree.elementtree.parseerror attribute)": [
      [
        412,
        "xml.etree.ElementTree.ParseError.code"
      ]
    ],
    "comment() (xml.etree.elementtree.treebuilder method)": [
      [
        412,
        "xml.etree.ElementTree.TreeBuilder.comment"
      ]
    ],
    "data() (xml.etree.elementtree.treebuilder method)": [
      [
        412,
        "xml.etree.ElementTree.TreeBuilder.data"
      ]
    ],
    "doctype() (xml.etree.elementtree.treebuilder method)": [
      [
        412,
        "xml.etree.ElementTree.TreeBuilder.doctype"
      ]
    ],
    "dump() (in module xml.etree.elementtree)": [
      [
        412,
        "xml.etree.ElementTree.dump"
      ]
    ],
    "end() (xml.etree.elementtree.treebuilder method)": [
      [
        412,
        "xml.etree.ElementTree.TreeBuilder.end"
      ]
    ],
    "end_ns() (xml.etree.elementtree.treebuilder method)": [
      [
        412,
        "xml.etree.ElementTree.TreeBuilder.end_ns"
      ]
    ],
    "extend() (xml.etree.elementtree.element method)": [
      [
        412,
        "xml.etree.ElementTree.Element.extend"
      ]
    ],
    "feed() (xml.etree.elementtree.xmlparser method)": [
      [
        412,
        "xml.etree.ElementTree.XMLParser.feed"
      ]
    ],
    "feed() (xml.etree.elementtree.xmlpullparser method)": [
      [
        412,
        "xml.etree.ElementTree.XMLPullParser.feed"
      ]
    ],
    "find() (xml.etree.elementtree.element method)": [
      [
        412,
        "xml.etree.ElementTree.Element.find"
      ]
    ],
    "find() (xml.etree.elementtree.elementtree method)": [
      [
        412,
        "xml.etree.ElementTree.ElementTree.find"
      ]
    ],
    "findall() (xml.etree.elementtree.element method)": [
      [
        412,
        "xml.etree.ElementTree.Element.findall"
      ]
    ],
    "findall() (xml.etree.elementtree.elementtree method)": [
      [
        412,
        "xml.etree.ElementTree.ElementTree.findall"
      ]
    ],
    "findtext() (xml.etree.elementtree.element method)": [
      [
        412,
        "xml.etree.ElementTree.Element.findtext"
      ]
    ],
    "findtext() (xml.etree.elementtree.elementtree method)": [
      [
        412,
        "xml.etree.ElementTree.ElementTree.findtext"
      ]
    ],
    "fromstring() (in module xml.etree.elementtree)": [
      [
        412,
        "xml.etree.ElementTree.fromstring"
      ]
    ],
    "fromstringlist() (in module xml.etree.elementtree)": [
      [
        412,
        "xml.etree.ElementTree.fromstringlist"
      ]
    ],
    "get() (xml.etree.elementtree.element method)": [
      [
        412,
        "xml.etree.ElementTree.Element.get"
      ]
    ],
    "getroot() (xml.etree.elementtree.elementtree method)": [
      [
        412,
        "xml.etree.ElementTree.ElementTree.getroot"
      ]
    ],
    "indent() (in module xml.etree.elementtree)": [
      [
        412,
        "xml.etree.ElementTree.indent"
      ]
    ],
    "insert() (xml.etree.elementtree.element method)": [
      [
        412,
        "xml.etree.ElementTree.Element.insert"
      ]
    ],
    "iselement() (in module xml.etree.elementtree)": [
      [
        412,
        "xml.etree.ElementTree.iselement"
      ]
    ],
    "items() (xml.etree.elementtree.element method)": [
      [
        412,
        "xml.etree.ElementTree.Element.items"
      ]
    ],
    "iter() (xml.etree.elementtree.element method)": [
      [
        412,
        "xml.etree.ElementTree.Element.iter"
      ]
    ],
    "iter() (xml.etree.elementtree.elementtree method)": [
      [
        412,
        "xml.etree.ElementTree.ElementTree.iter"
      ]
    ],
    "iterfind() (xml.etree.elementtree.element method)": [
      [
        412,
        "xml.etree.ElementTree.Element.iterfind"
      ]
    ],
    "iterfind() (xml.etree.elementtree.elementtree method)": [
      [
        412,
        "xml.etree.ElementTree.ElementTree.iterfind"
      ]
    ],
    "iterparse() (in module xml.etree.elementtree)": [
      [
        412,
        "xml.etree.ElementTree.iterparse"
      ]
    ],
    "itertext() (xml.etree.elementtree.element method)": [
      [
        412,
        "xml.etree.ElementTree.Element.itertext"
      ]
    ],
    "keys() (xml.etree.elementtree.element method)": [
      [
        412,
        "xml.etree.ElementTree.Element.keys"
      ]
    ],
    "makeelement() (xml.etree.elementtree.element method)": [
      [
        412,
        "xml.etree.ElementTree.Element.makeelement"
      ]
    ],
    "parse() (in module xml.etree.elementtree)": [
      [
        412,
        "xml.etree.ElementTree.parse"
      ]
    ],
    "parse() (xml.etree.elementtree.elementtree method)": [
      [
        412,
        "xml.etree.ElementTree.ElementTree.parse"
      ]
    ],
    "pi() (xml.etree.elementtree.treebuilder method)": [
      [
        412,
        "xml.etree.ElementTree.TreeBuilder.pi"
      ]
    ],
    "position (xml.etree.elementtree.parseerror attribute)": [
      [
        412,
        "xml.etree.ElementTree.ParseError.position"
      ]
    ],
    "read_events() (xml.etree.elementtree.xmlpullparser method)": [
      [
        412,
        "xml.etree.ElementTree.XMLPullParser.read_events"
      ]
    ],
    "register_namespace() (in module xml.etree.elementtree)": [
      [
        412,
        "xml.etree.ElementTree.register_namespace"
      ]
    ],
    "remove() (xml.etree.elementtree.element method)": [
      [
        412,
        "xml.etree.ElementTree.Element.remove"
      ]
    ],
    "set() (xml.etree.elementtree.element method)": [
      [
        412,
        "xml.etree.ElementTree.Element.set"
      ]
    ],
    "start() (xml.etree.elementtree.treebuilder method)": [
      [
        412,
        "xml.etree.ElementTree.TreeBuilder.start"
      ]
    ],
    "start_ns() (xml.etree.elementtree.treebuilder method)": [
      [
        412,
        "xml.etree.ElementTree.TreeBuilder.start_ns"
      ]
    ],
    "tag (xml.etree.elementtree.element attribute)": [
      [
        412,
        "xml.etree.ElementTree.Element.tag"
      ]
    ],
    "tail (xml.etree.elementtree.element attribute)": [
      [
        412,
        "xml.etree.ElementTree.Element.tail"
      ]
    ],
    "text (xml.etree.elementtree.element attribute)": [
      [
        412,
        "xml.etree.ElementTree.Element.text"
      ]
    ],
    "tostring() (in module xml.etree.elementtree)": [
      [
        412,
        "xml.etree.ElementTree.tostring"
      ]
    ],
    "tostringlist() (in module xml.etree.elementtree)": [
      [
        412,
        "xml.etree.ElementTree.tostringlist"
      ]
    ],
    "write() (xml.etree.elementtree.elementtree method)": [
      [
        412,
        "xml.etree.ElementTree.ElementTree.write"
      ]
    ],
    "xml.etree.elementinclude": [
      [
        412,
        "module-xml.etree.ElementInclude"
      ]
    ],
    "xml.etree.elementinclude.default_loader()": [
      [
        412,
        "xml.etree.ElementInclude.default_loader"
      ]
    ],
    "xml.etree.elementinclude.include()": [
      [
        412,
        "xml.etree.ElementInclude.include"
      ]
    ],
    "xml.etree.elementtree": [
      [
        412,
        "module-xml.etree.ElementTree"
      ]
    ],
    "saxexception": [
      [
        413,
        "xml.sax.SAXException"
      ]
    ],
    "saxnotrecognizedexception": [
      [
        413,
        "xml.sax.SAXNotRecognizedException"
      ]
    ],
    "saxnotsupportedexception": [
      [
        413,
        "xml.sax.SAXNotSupportedException"
      ]
    ],
    "saxparseexception": [
      [
        413,
        "xml.sax.SAXParseException"
      ]
    ],
    "getexception() (xml.sax.saxexception method)": [
      [
        413,
        "xml.sax.SAXException.getException"
      ]
    ],
    "getmessage() (xml.sax.saxexception method)": [
      [
        413,
        "xml.sax.SAXException.getMessage"
      ]
    ],
    "make_parser() (in module xml.sax)": [
      [
        413,
        "xml.sax.make_parser"
      ]
    ],
    "parse() (in module xml.sax)": [
      [
        413,
        "xml.sax.parse"
      ]
    ],
    "parsestring() (in module xml.sax)": [
      [
        413,
        "xml.sax.parseString"
      ]
    ],
    "xml.sax": [
      [
        413,
        "module-xml.sax"
      ]
    ],
    "contenthandler (class in xml.sax.handler)": [
      [
        414,
        "xml.sax.handler.ContentHandler"
      ]
    ],
    "dtdhandler (class in xml.sax.handler)": [
      [
        414,
        "xml.sax.handler.DTDHandler"
      ]
    ],
    "entityresolver (class in xml.sax.handler)": [
      [
        414,
        "xml.sax.handler.EntityResolver"
      ]
    ],
    "errorhandler (class in xml.sax.handler)": [
      [
        414,
        "xml.sax.handler.ErrorHandler"
      ]
    ],
    "lexicalhandler (class in xml.sax.handler)": [
      [
        414,
        "xml.sax.handler.LexicalHandler"
      ]
    ],
    "all_features (in module xml.sax.handler)": [
      [
        414,
        "xml.sax.handler.all_features"
      ]
    ],
    "all_properties (in module xml.sax.handler)": [
      [
        414,
        "xml.sax.handler.all_properties"
      ]
    ],
    "characters() (xml.sax.handler.contenthandler method)": [
      [
        414,
        "xml.sax.handler.ContentHandler.characters"
      ]
    ],
    "comment() (xml.sax.handler.lexicalhandler method)": [
      [
        414,
        "xml.sax.handler.LexicalHandler.comment"
      ]
    ],
    "endcdata() (xml.sax.handler.lexicalhandler method)": [
      [
        414,
        "xml.sax.handler.LexicalHandler.endCDATA"
      ]
    ],
    "enddtd() (xml.sax.handler.lexicalhandler method)": [
      [
        414,
        "xml.sax.handler.LexicalHandler.endDTD"
      ]
    ],
    "enddocument() (xml.sax.handler.contenthandler method)": [
      [
        414,
        "xml.sax.handler.ContentHandler.endDocument"
      ]
    ],
    "endelement() (xml.sax.handler.contenthandler method)": [
      [
        414,
        "xml.sax.handler.ContentHandler.endElement"
      ]
    ],
    "endelementns() (xml.sax.handler.contenthandler method)": [
      [
        414,
        "xml.sax.handler.ContentHandler.endElementNS"
      ]
    ],
    "endprefixmapping() (xml.sax.handler.contenthandler method)": [
      [
        414,
        "xml.sax.handler.ContentHandler.endPrefixMapping"
      ]
    ],
    "error() (xml.sax.handler.errorhandler method)": [
      [
        414,
        "xml.sax.handler.ErrorHandler.error"
      ]
    ],
    "fatalerror() (xml.sax.handler.errorhandler method)": [
      [
        414,
        "xml.sax.handler.ErrorHandler.fatalError"
      ]
    ],
    "feature_external_ges (in module xml.sax.handler)": [
      [
        414,
        "xml.sax.handler.feature_external_ges"
      ]
    ],
    "feature_external_pes (in module xml.sax.handler)": [
      [
        414,
        "xml.sax.handler.feature_external_pes"
      ]
    ],
    "feature_namespace_prefixes (in module xml.sax.handler)": [
      [
        414,
        "xml.sax.handler.feature_namespace_prefixes"
      ]
    ],
    "feature_namespaces (in module xml.sax.handler)": [
      [
        414,
        "xml.sax.handler.feature_namespaces"
      ]
    ],
    "feature_string_interning (in module xml.sax.handler)": [
      [
        414,
        "xml.sax.handler.feature_string_interning"
      ]
    ],
    "feature_validation (in module xml.sax.handler)": [
      [
        414,
        "xml.sax.handler.feature_validation"
      ]
    ],
    "ignorablewhitespace() (xml.sax.handler.contenthandler method)": [
      [
        414,
        "xml.sax.handler.ContentHandler.ignorableWhitespace"
      ]
    ],
    "notationdecl() (xml.sax.handler.dtdhandler method)": [
      [
        414,
        "xml.sax.handler.DTDHandler.notationDecl"
      ]
    ],
    "processinginstruction() (xml.sax.handler.contenthandler method)": [
      [
        414,
        "xml.sax.handler.ContentHandler.processingInstruction"
      ]
    ],
    "property_declaration_handler (in module xml.sax.handler)": [
      [
        414,
        "xml.sax.handler.property_declaration_handler"
      ]
    ],
    "property_dom_node (in module xml.sax.handler)": [
      [
        414,
        "xml.sax.handler.property_dom_node"
      ]
    ],
    "property_lexical_handler (in module xml.sax.handler)": [
      [
        414,
        "xml.sax.handler.property_lexical_handler"
      ]
    ],
    "property_xml_string (in module xml.sax.handler)": [
      [
        414,
        "xml.sax.handler.property_xml_string"
      ]
    ],
    "resolveentity() (xml.sax.handler.entityresolver method)": [
      [
        414,
        "xml.sax.handler.EntityResolver.resolveEntity"
      ]
    ],
    "setdocumentlocator() (xml.sax.handler.contenthandler method)": [
      [
        414,
        "xml.sax.handler.ContentHandler.setDocumentLocator"
      ]
    ],
    "skippedentity() (xml.sax.handler.contenthandler method)": [
      [
        414,
        "xml.sax.handler.ContentHandler.skippedEntity"
      ]
    ],
    "startcdata() (xml.sax.handler.lexicalhandler method)": [
      [
        414,
        "xml.sax.handler.LexicalHandler.startCDATA"
      ]
    ],
    "startdtd() (xml.sax.handler.lexicalhandler method)": [
      [
        414,
        "xml.sax.handler.LexicalHandler.startDTD"
      ]
    ],
    "startdocument() (xml.sax.handler.contenthandler method)": [
      [
        414,
        "xml.sax.handler.ContentHandler.startDocument"
      ]
    ],
    "startelement() (xml.sax.handler.contenthandler method)": [
      [
        414,
        "xml.sax.handler.ContentHandler.startElement"
      ]
    ],
    "startelementns() (xml.sax.handler.contenthandler method)": [
      [
        414,
        "xml.sax.handler.ContentHandler.startElementNS"
      ]
    ],
    "startprefixmapping() (xml.sax.handler.contenthandler method)": [
      [
        414,
        "xml.sax.handler.ContentHandler.startPrefixMapping"
      ]
    ],
    "unparsedentitydecl() (xml.sax.handler.dtdhandler method)": [
      [
        414,
        "xml.sax.handler.DTDHandler.unparsedEntityDecl"
      ]
    ],
    "warning() (xml.sax.handler.errorhandler method)": [
      [
        414,
        "xml.sax.handler.ErrorHandler.warning"
      ]
    ],
    "xml.sax.handler": [
      [
        414,
        "module-xml.sax.handler"
      ]
    ],
    "attributesimpl (class in xml.sax.xmlreader)": [
      [
        415,
        "xml.sax.xmlreader.AttributesImpl"
      ]
    ],
    "attributesnsimpl (class in xml.sax.xmlreader)": [
      [
        415,
        "xml.sax.xmlreader.AttributesNSImpl"
      ]
    ],
    "incrementalparser (class in xml.sax.xmlreader)": [
      [
        415,
        "xml.sax.xmlreader.IncrementalParser"
      ]
    ],
    "inputsource (class in xml.sax.xmlreader)": [
      [
        415,
        "xml.sax.xmlreader.InputSource"
      ]
    ],
    "locator (class in xml.sax.xmlreader)": [
      [
        415,
        "xml.sax.xmlreader.Locator"
      ]
    ],
    "xmlreader (class in xml.sax.xmlreader)": [
      [
        415,
        "xml.sax.xmlreader.XMLReader"
      ]
    ],
    "close() (xml.sax.xmlreader.incrementalparser method)": [
      [
        415,
        "xml.sax.xmlreader.IncrementalParser.close"
      ]
    ],
    "feed() (xml.sax.xmlreader.incrementalparser method)": [
      [
        415,
        "xml.sax.xmlreader.IncrementalParser.feed"
      ]
    ],
    "getbytestream() (xml.sax.xmlreader.inputsource method)": [
      [
        415,
        "xml.sax.xmlreader.InputSource.getByteStream"
      ]
    ],
    "getcharacterstream() (xml.sax.xmlreader.inputsource method)": [
      [
        415,
        "xml.sax.xmlreader.InputSource.getCharacterStream"
      ]
    ],
    "getcolumnnumber() (xml.sax.xmlreader.locator method)": [
      [
        415,
        "xml.sax.xmlreader.Locator.getColumnNumber"
      ]
    ],
    "getcontenthandler() (xml.sax.xmlreader.xmlreader method)": [
      [
        415,
        "xml.sax.xmlreader.XMLReader.getContentHandler"
      ]
    ],
    "getdtdhandler() (xml.sax.xmlreader.xmlreader method)": [
      [
        415,
        "xml.sax.xmlreader.XMLReader.getDTDHandler"
      ]
    ],
    "getencoding() (xml.sax.xmlreader.inputsource method)": [
      [
        415,
        "xml.sax.xmlreader.InputSource.getEncoding"
      ]
    ],
    "getentityresolver() (xml.sax.xmlreader.xmlreader method)": [
      [
        415,
        "xml.sax.xmlreader.XMLReader.getEntityResolver"
      ]
    ],
    "geterrorhandler() (xml.sax.xmlreader.xmlreader method)": [
      [
        415,
        "xml.sax.xmlreader.XMLReader.getErrorHandler"
      ]
    ],
    "getfeature() (xml.sax.xmlreader.xmlreader method)": [
      [
        415,
        "xml.sax.xmlreader.XMLReader.getFeature"
      ]
    ],
    "getlength() (xml.sax.xmlreader.attributes method)": [
      [
        415,
        "xml.sax.xmlreader.Attributes.getLength"
      ]
    ],
    "getlinenumber() (xml.sax.xmlreader.locator method)": [
      [
        415,
        "xml.sax.xmlreader.Locator.getLineNumber"
      ]
    ],
    "getnamebyqname() (xml.sax.xmlreader.attributesns method)": [
      [
        415,
        "xml.sax.xmlreader.AttributesNS.getNameByQName"
      ]
    ],
    "getnames() (xml.sax.xmlreader.attributes method)": [
      [
        415,
        "xml.sax.xmlreader.Attributes.getNames"
      ]
    ],
    "getproperty() (xml.sax.xmlreader.xmlreader method)": [
      [
        415,
        "xml.sax.xmlreader.XMLReader.getProperty"
      ]
    ],
    "getpublicid() (xml.sax.xmlreader.inputsource method)": [
      [
        415,
        "xml.sax.xmlreader.InputSource.getPublicId"
      ]
    ],
    "getpublicid() (xml.sax.xmlreader.locator method)": [
      [
        415,
        "xml.sax.xmlreader.Locator.getPublicId"
      ]
    ],
    "getqnamebyname() (xml.sax.xmlreader.attributesns method)": [
      [
        415,
        "xml.sax.xmlreader.AttributesNS.getQNameByName"
      ]
    ],
    "getqnames() (xml.sax.xmlreader.attributesns method)": [
      [
        415,
        "xml.sax.xmlreader.AttributesNS.getQNames"
      ]
    ],
    "getsystemid() (xml.sax.xmlreader.inputsource method)": [
      [
        415,
        "xml.sax.xmlreader.InputSource.getSystemId"
      ]
    ],
    "getsystemid() (xml.sax.xmlreader.locator method)": [
      [
        415,
        "xml.sax.xmlreader.Locator.getSystemId"
      ]
    ],
    "gettype() (xml.sax.xmlreader.attributes method)": [
      [
        415,
        "xml.sax.xmlreader.Attributes.getType"
      ]
    ],
    "getvalue() (xml.sax.xmlreader.attributes method)": [
      [
        415,
        "xml.sax.xmlreader.Attributes.getValue"
      ]
    ],
    "getvaluebyqname() (xml.sax.xmlreader.attributesns method)": [
      [
        415,
        "xml.sax.xmlreader.AttributesNS.getValueByQName"
      ]
    ],
    "parse() (xml.sax.xmlreader.xmlreader method)": [
      [
        415,
        "xml.sax.xmlreader.XMLReader.parse"
      ]
    ],
    "reset() (xml.sax.xmlreader.incrementalparser method)": [
      [
        415,
        "xml.sax.xmlreader.IncrementalParser.reset"
      ]
    ],
    "setbytestream() (xml.sax.xmlreader.inputsource method)": [
      [
        415,
        "xml.sax.xmlreader.InputSource.setByteStream"
      ]
    ],
    "setcharacterstream() (xml.sax.xmlreader.inputsource method)": [
      [
        415,
        "xml.sax.xmlreader.InputSource.setCharacterStream"
      ]
    ],
    "setcontenthandler() (xml.sax.xmlreader.xmlreader method)": [
      [
        415,
        "xml.sax.xmlreader.XMLReader.setContentHandler"
      ]
    ],
    "setdtdhandler() (xml.sax.xmlreader.xmlreader method)": [
      [
        415,
        "xml.sax.xmlreader.XMLReader.setDTDHandler"
      ]
    ],
    "setencoding() (xml.sax.xmlreader.inputsource method)": [
      [
        415,
        "xml.sax.xmlreader.InputSource.setEncoding"
      ]
    ],
    "setentityresolver() (xml.sax.xmlreader.xmlreader method)": [
      [
        415,
        "xml.sax.xmlreader.XMLReader.setEntityResolver"
      ]
    ],
    "seterrorhandler() (xml.sax.xmlreader.xmlreader method)": [
      [
        415,
        "xml.sax.xmlreader.XMLReader.setErrorHandler"
      ]
    ],
    "setfeature() (xml.sax.xmlreader.xmlreader method)": [
      [
        415,
        "xml.sax.xmlreader.XMLReader.setFeature"
      ]
    ],
    "setlocale() (xml.sax.xmlreader.xmlreader method)": [
      [
        415,
        "xml.sax.xmlreader.XMLReader.setLocale"
      ]
    ],
    "setproperty() (xml.sax.xmlreader.xmlreader method)": [
      [
        415,
        "xml.sax.xmlreader.XMLReader.setProperty"
      ]
    ],
    "setpublicid() (xml.sax.xmlreader.inputsource method)": [
      [
        415,
        "xml.sax.xmlreader.InputSource.setPublicId"
      ]
    ],
    "setsystemid() (xml.sax.xmlreader.inputsource method)": [
      [
        415,
        "xml.sax.xmlreader.InputSource.setSystemId"
      ]
    ],
    "xml.sax.xmlreader": [
      [
        415,
        "module-xml.sax.xmlreader"
      ]
    ],
    "xmlfilterbase (class in xml.sax.saxutils)": [
      [
        416,
        "xml.sax.saxutils.XMLFilterBase"
      ]
    ],
    "xmlgenerator (class in xml.sax.saxutils)": [
      [
        416,
        "xml.sax.saxutils.XMLGenerator"
      ]
    ],
    "escape() (in module xml.sax.saxutils)": [
      [
        416,
        "xml.sax.saxutils.escape"
      ]
    ],
    "prepare_input_source() (in module xml.sax.saxutils)": [
      [
        416,
        "xml.sax.saxutils.prepare_input_source"
      ]
    ],
    "quoteattr() (in module xml.sax.saxutils)": [
      [
        416,
        "xml.sax.saxutils.quoteattr"
      ]
    ],
    "unescape() (in module xml.sax.saxutils)": [
      [
        416,
        "xml.sax.saxutils.unescape"
      ]
    ],
    "xml.sax.saxutils": [
      [
        416,
        "module-xml.sax.saxutils"
      ]
    ],
    "binary (class in xmlrpc.client)": [
      [
        418,
        "xmlrpc.client.Binary"
      ]
    ],
    "datetime (class in xmlrpc.client)": [
      [
        418,
        "xmlrpc.client.DateTime"
      ]
    ],
    "fault (class in xmlrpc.client)": [
      [
        418,
        "xmlrpc.client.Fault"
      ]
    ],
    "multicall (class in xmlrpc.client)": [
      [
        418,
        "xmlrpc.client.MultiCall"
      ]
    ],
    "protocolerror (class in xmlrpc.client)": [
      [
        418,
        "xmlrpc.client.ProtocolError"
      ]
    ],
    "rfc 2045#section-6.8": [
      [
        418,
        "index-0"
      ]
    ],
    "serverproxy (class in xmlrpc.client)": [
      [
        418,
        "xmlrpc.client.ServerProxy"
      ]
    ],
    "data (xmlrpc.client.binary attribute)": [
      [
        418,
        "xmlrpc.client.Binary.data"
      ]
    ],
    "decode() (xmlrpc.client.binary method)": [
      [
        418,
        "xmlrpc.client.Binary.decode"
      ]
    ],
    "decode() (xmlrpc.client.datetime method)": [
      [
        418,
        "xmlrpc.client.DateTime.decode"
      ]
    ],
    "dumps() (in module xmlrpc.client)": [
      [
        418,
        "xmlrpc.client.dumps"
      ]
    ],
    "encode() (xmlrpc.client.binary method)": [
      [
        418,
        "xmlrpc.client.Binary.encode"
      ]
    ],
    "encode() (xmlrpc.client.datetime method)": [
      [
        418,
        "xmlrpc.client.DateTime.encode"
      ]
    ],
    "errcode (xmlrpc.client.protocolerror attribute)": [
      [
        418,
        "xmlrpc.client.ProtocolError.errcode"
      ]
    ],
    "errmsg (xmlrpc.client.protocolerror attribute)": [
      [
        418,
        "xmlrpc.client.ProtocolError.errmsg"
      ]
    ],
    "faultcode (xmlrpc.client.fault attribute)": [
      [
        418,
        "xmlrpc.client.Fault.faultCode"
      ]
    ],
    "faultstring (xmlrpc.client.fault attribute)": [
      [
        418,
        "xmlrpc.client.Fault.faultString"
      ]
    ],
    "headers (xmlrpc.client.protocolerror attribute)": [
      [
        418,
        "xmlrpc.client.ProtocolError.headers"
      ]
    ],
    "listmethods() (xmlrpc.client.serverproxy.system method)": [
      [
        418,
        "xmlrpc.client.ServerProxy.system.listMethods"
      ]
    ],
    "loads() (in module xmlrpc.client)": [
      [
        418,
        "xmlrpc.client.loads"
      ]
    ],
    "methodhelp() (xmlrpc.client.serverproxy.system method)": [
      [
        418,
        "xmlrpc.client.ServerProxy.system.methodHelp"
      ]
    ],
    "methodsignature() (xmlrpc.client.serverproxy.system method)": [
      [
        418,
        "xmlrpc.client.ServerProxy.system.methodSignature"
      ]
    ],
    "url (xmlrpc.client.protocolerror attribute)": [
      [
        418,
        "xmlrpc.client.ProtocolError.url"
      ]
    ],
    "xmlrpc.client": [
      [
        418,
        "module-xmlrpc.client"
      ]
    ],
    "cgixmlrpcrequesthandler (class in xmlrpc.server)": [
      [
        419,
        "xmlrpc.server.CGIXMLRPCRequestHandler"
      ]
    ],
    "doccgixmlrpcrequesthandler (class in xmlrpc.server)": [
      [
        419,
        "xmlrpc.server.DocCGIXMLRPCRequestHandler"
      ]
    ],
    "docxmlrpcrequesthandler (class in xmlrpc.server)": [
      [
        419,
        "xmlrpc.server.DocXMLRPCRequestHandler"
      ]
    ],
    "docxmlrpcserver (class in xmlrpc.server)": [
      [
        419,
        "xmlrpc.server.DocXMLRPCServer"
      ]
    ],
    "simplexmlrpcrequesthandler (class in xmlrpc.server)": [
      [
        419,
        "xmlrpc.server.SimpleXMLRPCRequestHandler"
      ]
    ],
    "simplexmlrpcserver (class in xmlrpc.server)": [
      [
        419,
        "xmlrpc.server.SimpleXMLRPCServer"
      ]
    ],
    "handle_request() (xmlrpc.server.cgixmlrpcrequesthandler method)": [
      [
        419,
        "xmlrpc.server.CGIXMLRPCRequestHandler.handle_request"
      ]
    ],
    "register_function() (xmlrpc.server.cgixmlrpcrequesthandler method)": [
      [
        419,
        "xmlrpc.server.CGIXMLRPCRequestHandler.register_function"
      ]
    ],
    "register_function() (xmlrpc.server.simplexmlrpcserver method)": [
      [
        419,
        "xmlrpc.server.SimpleXMLRPCServer.register_function"
      ]
    ],
    "register_instance() (xmlrpc.server.cgixmlrpcrequesthandler method)": [
      [
        419,
        "xmlrpc.server.CGIXMLRPCRequestHandler.register_instance"
      ]
    ],
    "register_instance() (xmlrpc.server.simplexmlrpcserver method)": [
      [
        419,
        "xmlrpc.server.SimpleXMLRPCServer.register_instance"
      ]
    ],
    "register_introspection_functions() (xmlrpc.server.cgixmlrpcrequesthandler method)": [
      [
        419,
        "xmlrpc.server.CGIXMLRPCRequestHandler.register_introspection_functions"
      ]
    ],
    "register_introspection_functions() (xmlrpc.server.simplexmlrpcserver method)": [
      [
        419,
        "xmlrpc.server.SimpleXMLRPCServer.register_introspection_functions"
      ]
    ],
    "register_multicall_functions() (xmlrpc.server.cgixmlrpcrequesthandler method)": [
      [
        419,
        "xmlrpc.server.CGIXMLRPCRequestHandler.register_multicall_functions"
      ]
    ],
    "register_multicall_functions() (xmlrpc.server.simplexmlrpcserver method)": [
      [
        419,
        "xmlrpc.server.SimpleXMLRPCServer.register_multicall_functions"
      ]
    ],
    "rpc_paths (xmlrpc.server.simplexmlrpcrequesthandler attribute)": [
      [
        419,
        "xmlrpc.server.SimpleXMLRPCRequestHandler.rpc_paths"
      ]
    ],
    "set_server_documentation() (xmlrpc.server.doccgixmlrpcrequesthandler method)": [
      [
        419,
        "xmlrpc.server.DocCGIXMLRPCRequestHandler.set_server_documentation"
      ]
    ],
    "set_server_documentation() (xmlrpc.server.docxmlrpcserver method)": [
      [
        419,
        "xmlrpc.server.DocXMLRPCServer.set_server_documentation"
      ]
    ],
    "set_server_name() (xmlrpc.server.doccgixmlrpcrequesthandler method)": [
      [
        419,
        "xmlrpc.server.DocCGIXMLRPCRequestHandler.set_server_name"
      ]
    ],
    "set_server_name() (xmlrpc.server.docxmlrpcserver method)": [
      [
        419,
        "xmlrpc.server.DocXMLRPCServer.set_server_name"
      ]
    ],
    "set_server_title() (xmlrpc.server.doccgixmlrpcrequesthandler method)": [
      [
        419,
        "xmlrpc.server.DocCGIXMLRPCRequestHandler.set_server_title"
      ]
    ],
    "set_server_title() (xmlrpc.server.docxmlrpcserver method)": [
      [
        419,
        "xmlrpc.server.DocXMLRPCServer.set_server_title"
      ]
    ],
    "xmlrpc.server": [
      [
        419,
        "module-xmlrpc.server"
      ]
    ],
    "--compress": [
      [
        420,
        "cmdoption-zipapp-c"
      ]
    ],
    "--info": [
      [
        420,
        "cmdoption-zipapp-info"
      ]
    ],
    "--main": [
      [
        420,
        "cmdoption-zipapp-m"
      ]
    ],
    "--python": [
      [
        420,
        "cmdoption-zipapp-p"
      ]
    ],
    "executable zip files": [
      [
        420,
        "index-0"
      ]
    ],
    "create_archive() (in module zipapp)": [
      [
        420,
        "zipapp.create_archive"
      ]
    ],
    "get_interpreter() (in module zipapp)": [
      [
        420,
        "zipapp.get_interpreter"
      ]
    ],
    "zipapp": [
      [
        420,
        "module-zipapp"
      ]
    ],
    "zipapp command line option": [
      [
        420,
        "cmdoption-zipapp-c"
      ],
      [
        420,
        "cmdoption-zipapp-h"
      ],
      [
        420,
        "cmdoption-zipapp-info"
      ],
      [
        420,
        "cmdoption-zipapp-m"
      ],
      [
        420,
        "cmdoption-zipapp-o"
      ],
      [
        420,
        "cmdoption-zipapp-p"
      ]
    ],
    "--metadata-encoding": [
      [
        421,
        "cmdoption-zipfile-metadata-encoding"
      ]
    ],
    "badzipfile": [
      [
        421,
        "zipfile.BadZipFile"
      ],
      [
        421,
        "zipfile.BadZipfile"
      ]
    ],
    "crc (zipfile.zipinfo attribute)": [
      [
        421,
        "zipfile.ZipInfo.CRC"
      ]
    ],
    "largezipfile": [
      [
        421,
        "zipfile.LargeZipFile"
      ]
    ],
    "path (class in zipfile)": [
      [
        421,
        "zipfile.Path"
      ]
    ],
    "path.stem (in module zipfile)": [
      [
        421,
        "zipfile.Path.stem"
      ]
    ],
    "path.suffix (in module zipfile)": [
      [
        421,
        "zipfile.Path.suffix"
      ]
    ],
    "path.suffixes (in module zipfile)": [
      [
        421,
        "zipfile.Path.suffixes"
      ]
    ],
    "pyzipfile (class in zipfile)": [
      [
        421,
        "zipfile.PyZipFile"
      ]
    ],
    "zip_bzip2 (in module zipfile)": [
      [
        421,
        "zipfile.ZIP_BZIP2"
      ]
    ],
    "zip_deflated (in module zipfile)": [
      [
        421,
        "zipfile.ZIP_DEFLATED"
      ]
    ],
    "zip_lzma (in module zipfile)": [
      [
        421,
        "zipfile.ZIP_LZMA"
      ]
    ],
    "zip_stored (in module zipfile)": [
      [
        421,
        "zipfile.ZIP_STORED"
      ]
    ],
    "zipfile (class in zipfile)": [
      [
        421,
        "zipfile.ZipFile"
      ]
    ],
    "zipinfo (class in zipfile)": [
      [
        421,
        "zipfile.ZipInfo"
      ]
    ],
    "close() (zipfile.zipfile method)": [
      [
        421,
        "zipfile.ZipFile.close"
      ]
    ],
    "comment (zipfile.zipfile attribute)": [
      [
        421,
        "zipfile.ZipFile.comment"
      ]
    ],
    "comment (zipfile.zipinfo attribute)": [
      [
        421,
        "zipfile.ZipInfo.comment"
      ]
    ],
    "compress_size (zipfile.zipinfo attribute)": [
      [
        421,
        "zipfile.ZipInfo.compress_size"
      ]
    ],
    "compress_type (zipfile.zipinfo attribute)": [
      [
        421,
        "zipfile.ZipInfo.compress_type"
      ]
    ],
    "create_system (zipfile.zipinfo attribute)": [
      [
        421,
        "zipfile.ZipInfo.create_system"
      ]
    ],
    "create_version (zipfile.zipinfo attribute)": [
      [
        421,
        "zipfile.ZipInfo.create_version"
      ]
    ],
    "date_time (zipfile.zipinfo attribute)": [
      [
        421,
        "zipfile.ZipInfo.date_time"
      ]
    ],
    "debug (zipfile.zipfile attribute)": [
      [
        421,
        "zipfile.ZipFile.debug"
      ]
    ],
    "exists() (zipfile.path method)": [
      [
        421,
        "zipfile.Path.exists"
      ]
    ],
    "external_attr (zipfile.zipinfo attribute)": [
      [
        421,
        "zipfile.ZipInfo.external_attr"
      ]
    ],
    "extra (zipfile.zipinfo attribute)": [
      [
        421,
        "zipfile.ZipInfo.extra"
      ]
    ],
    "extract() (zipfile.zipfile method)": [
      [
        421,
        "zipfile.ZipFile.extract"
      ]
    ],
    "extract_version (zipfile.zipinfo attribute)": [
      [
        421,
        "zipfile.ZipInfo.extract_version"
      ]
    ],
    "extractall() (zipfile.zipfile method)": [
      [
        421,
        "zipfile.ZipFile.extractall"
      ]
    ],
    "file_size (zipfile.zipinfo attribute)": [
      [
        421,
        "zipfile.ZipInfo.file_size"
      ]
    ],
    "filename (zipfile.zipfile attribute)": [
      [
        421,
        "zipfile.ZipFile.filename"
      ]
    ],
    "filename (zipfile.zipinfo attribute)": [
      [
        421,
        "zipfile.ZipInfo.filename"
      ]
    ],
    "flag_bits (zipfile.zipinfo attribute)": [
      [
        421,
        "zipfile.ZipInfo.flag_bits"
      ]
    ],
    "from_file() (zipfile.zipinfo class method)": [
      [
        421,
        "zipfile.ZipInfo.from_file"
      ]
    ],
    "getinfo() (zipfile.zipfile method)": [
      [
        421,
        "zipfile.ZipFile.getinfo"
      ]
    ],
    "header_offset (zipfile.zipinfo attribute)": [
      [
        421,
        "zipfile.ZipInfo.header_offset"
      ]
    ],
    "infolist() (zipfile.zipfile method)": [
      [
        421,
        "zipfile.ZipFile.infolist"
      ]
    ],
    "internal_attr (zipfile.zipinfo attribute)": [
      [
        421,
        "zipfile.ZipInfo.internal_attr"
      ]
    ],
    "is_dir() (zipfile.path method)": [
      [
        421,
        "zipfile.Path.is_dir"
      ]
    ],
    "is_dir() (zipfile.zipinfo method)": [
      [
        421,
        "zipfile.ZipInfo.is_dir"
      ]
    ],
    "is_file() (zipfile.path method)": [
      [
        421,
        "zipfile.Path.is_file"
      ]
    ],
    "is_zipfile() (in module zipfile)": [
      [
        421,
        "zipfile.is_zipfile"
      ]
    ],
    "iterdir() (zipfile.path method)": [
      [
        421,
        "zipfile.Path.iterdir"
      ]
    ],
    "joinpath() (zipfile.path method)": [
      [
        421,
        "zipfile.Path.joinpath"
      ]
    ],
    "mkdir() (zipfile.zipfile method)": [
      [
        421,
        "zipfile.ZipFile.mkdir"
      ]
    ],
    "name (zipfile.path attribute)": [
      [
        421,
        "zipfile.Path.name"
      ]
    ],
    "namelist() (zipfile.zipfile method)": [
      [
        421,
        "zipfile.ZipFile.namelist"
      ]
    ],
    "open() (zipfile.path method)": [
      [
        421,
        "zipfile.Path.open"
      ]
    ],
    "open() (zipfile.zipfile method)": [
      [
        421,
        "zipfile.ZipFile.open"
      ]
    ],
    "printdir() (zipfile.zipfile method)": [
      [
        421,
        "zipfile.ZipFile.printdir"
      ]
    ],
    "read() (zipfile.zipfile method)": [
      [
        421,
        "zipfile.ZipFile.read"
      ]
    ],
    "read_bytes() (zipfile.path method)": [
      [
        421,
        "zipfile.Path.read_bytes"
      ]
    ],
    "read_text() (zipfile.path method)": [
      [
        421,
        "zipfile.Path.read_text"
      ]
    ],
    "reserved (zipfile.zipinfo attribute)": [
      [
        421,
        "zipfile.ZipInfo.reserved"
      ]
    ],
    "setpassword() (zipfile.zipfile method)": [
      [
        421,
        "zipfile.ZipFile.setpassword"
      ]
    ],
    "testzip() (zipfile.zipfile method)": [
      [
        421,
        "zipfile.ZipFile.testzip"
      ]
    ],
    "volume (zipfile.zipinfo attribute)": [
      [
        421,
        "zipfile.ZipInfo.volume"
      ]
    ],
    "write() (zipfile.zipfile method)": [
      [
        421,
        "zipfile.ZipFile.write"
      ]
    ],
    "writepy() (zipfile.pyzipfile method)": [
      [
        421,
        "zipfile.PyZipFile.writepy"
      ]
    ],
    "writestr() (zipfile.zipfile method)": [
      [
        421,
        "zipfile.ZipFile.writestr"
      ]
    ],
    "zipfile": [
      [
        421,
        "module-zipfile"
      ]
    ],
    "zipfile command line option": [
      [
        421,
        "cmdoption-zipfile-c"
      ],
      [
        421,
        "cmdoption-zipfile-create"
      ],
      [
        421,
        "cmdoption-zipfile-e"
      ],
      [
        421,
        "cmdoption-zipfile-extract"
      ],
      [
        421,
        "cmdoption-zipfile-l"
      ],
      [
        421,
        "cmdoption-zipfile-list"
      ],
      [
        421,
        "cmdoption-zipfile-metadata-encoding"
      ],
      [
        421,
        "cmdoption-zipfile-t"
      ],
      [
        421,
        "cmdoption-zipfile-test"
      ]
    ],
    "pep 273": [
      [
        422,
        "index-0"
      ],
      [
        422,
        "index-1"
      ],
      [
        464,
        "index-4"
      ],
      [
        464,
        "index-5"
      ]
    ],
    "zipimporterror": [
      [
        422,
        "zipimport.ZipImportError"
      ]
    ],
    "archive (zipimport.zipimporter attribute)": [
      [
        422,
        "zipimport.zipimporter.archive"
      ]
    ],
    "create_module() (zipimport.zipimporter method)": [
      [
        422,
        "zipimport.zipimporter.create_module"
      ]
    ],
    "exec_module() (zipimport.zipimporter method)": [
      [
        422,
        "zipimport.zipimporter.exec_module"
      ]
    ],
    "find_spec() (zipimport.zipimporter method)": [
      [
        422,
        "zipimport.zipimporter.find_spec"
      ]
    ],
    "get_code() (zipimport.zipimporter method)": [
      [
        422,
        "zipimport.zipimporter.get_code"
      ]
    ],
    "get_data() (zipimport.zipimporter method)": [
      [
        422,
        "zipimport.zipimporter.get_data"
      ]
    ],
    "get_filename() (zipimport.zipimporter method)": [
      [
        422,
        "zipimport.zipimporter.get_filename"
      ]
    ],
    "get_source() (zipimport.zipimporter method)": [
      [
        422,
        "zipimport.zipimporter.get_source"
      ]
    ],
    "invalidate_caches() (zipimport.zipimporter method)": [
      [
        422,
        "zipimport.zipimporter.invalidate_caches"
      ]
    ],
    "is_package() (zipimport.zipimporter method)": [
      [
        422,
        "zipimport.zipimporter.is_package"
      ]
    ],
    "load_module() (zipimport.zipimporter method)": [
      [
        422,
        "zipimport.zipimporter.load_module"
      ]
    ],
    "prefix (zipimport.zipimporter attribute)": [
      [
        422,
        "zipimport.zipimporter.prefix"
      ]
    ],
    "zipimport": [
      [
        422,
        "module-zipimport"
      ]
    ],
    "zipimporter (class in zipimport)": [
      [
        422,
        "zipimport.zipimporter"
      ]
    ],
    "cyclic redundancy check": [
      [
        423,
        "index-0"
      ]
    ],
    "zlib_runtime_version (in module zlib)": [
      [
        423,
        "zlib.ZLIB_RUNTIME_VERSION"
      ]
    ],
    "zlib_version (in module zlib)": [
      [
        423,
        "zlib.ZLIB_VERSION"
      ]
    ],
    "adler32() (in module zlib)": [
      [
        423,
        "zlib.adler32"
      ]
    ],
    "checksum": [
      [
        423,
        "index-0"
      ]
    ],
    "compress() (in module zlib)": [
      [
        423,
        "zlib.compress"
      ]
    ],
    "compress() (zlib.compress method)": [
      [
        423,
        "zlib.Compress.compress"
      ]
    ],
    "compressobj() (in module zlib)": [
      [
        423,
        "zlib.compressobj"
      ]
    ],
    "copy() (zlib.compress method)": [
      [
        423,
        "zlib.Compress.copy"
      ]
    ],
    "copy() (zlib.decompress method)": [
      [
        423,
        "zlib.Decompress.copy"
      ]
    ],
    "crc32() (in module zlib)": [
      [
        423,
        "zlib.crc32"
      ]
    ],
    "decompress() (in module zlib)": [
      [
        423,
        "zlib.decompress"
      ]
    ],
    "decompress() (zlib.decompress method)": [
      [
        423,
        "zlib.Decompress.decompress"
      ]
    ],
    "decompressobj() (in module zlib)": [
      [
        423,
        "zlib.decompressobj"
      ]
    ],
    "eof (zlib.decompress attribute)": [
      [
        423,
        "zlib.Decompress.eof"
      ]
    ],
    "flush() (zlib.compress method)": [
      [
        423,
        "zlib.Compress.flush"
      ]
    ],
    "flush() (zlib.decompress method)": [
      [
        423,
        "zlib.Decompress.flush"
      ]
    ],
    "unconsumed_tail (zlib.decompress attribute)": [
      [
        423,
        "zlib.Decompress.unconsumed_tail"
      ]
    ],
    "unused_data (zlib.decompress attribute)": [
      [
        423,
        "zlib.Decompress.unused_data"
      ]
    ],
    "zlib": [
      [
        423,
        "module-zlib"
      ]
    ],
    "invalidtzpathwarning": [
      [
        424,
        "zoneinfo.InvalidTZPathWarning"
      ]
    ],
    "pep 495": [
      [
        424,
        "index-1"
      ],
      [
        478,
        "index-17"
      ],
      [
        478,
        "index-18"
      ],
      [
        482,
        "index-273"
      ]
    ],
    "pep 615": [
      [
        424,
        "index-0"
      ],
      [
        481,
        "index-16"
      ],
      [
        481,
        "index-9"
      ],
      [
        482,
        "index-162"
      ]
    ],
    "pythontzpath": [
      [
        424,
        "envvar-PYTHONTZPATH"
      ],
      [
        424,
        "index-2"
      ]
    ],
    "tzpath (in module zoneinfo)": [
      [
        424,
        "zoneinfo.TZPATH"
      ]
    ],
    "zoneinfo (class in zoneinfo)": [
      [
        424,
        "zoneinfo.ZoneInfo"
      ]
    ],
    "zoneinfonotfounderror": [
      [
        424,
        "zoneinfo.ZoneInfoNotFoundError"
      ]
    ],
    "available_timezones() (in module zoneinfo)": [
      [
        424,
        "zoneinfo.available_timezones"
      ]
    ],
    "clear_cache() (zoneinfo.zoneinfo class method)": [
      [
        424,
        "zoneinfo.ZoneInfo.clear_cache"
      ]
    ],
    "from_file() (zoneinfo.zoneinfo class method)": [
      [
        424,
        "zoneinfo.ZoneInfo.from_file"
      ]
    ],
    "key (zoneinfo.zoneinfo attribute)": [
      [
        424,
        "zoneinfo.ZoneInfo.key"
      ]
    ],
    "no_cache() (zoneinfo.zoneinfo class method)": [
      [
        424,
        "zoneinfo.ZoneInfo.no_cache"
      ]
    ],
    "reset_tzpath() (in module zoneinfo)": [
      [
        424,
        "zoneinfo.reset_tzpath"
      ]
    ],
    "zoneinfo": [
      [
        424,
        "module-zoneinfo"
      ]
    ],
    "! patterns": [
      [
        426,
        "index-23"
      ]
    ],
    "->": [
      [
        426,
        "index-34"
      ],
      [
        440,
        "index-6"
      ]
    ],
    "as pattern, or pattern, capture pattern, wildcard pattern": [
      [
        426,
        "index-23"
      ]
    ],
    "dedent token": [
      [
        426,
        "index-2"
      ],
      [
        434,
        "index-9"
      ]
    ],
    "newline token": [
      [
        426,
        "index-2"
      ],
      [
        434,
        "index-3"
      ]
    ],
    "pep 3107": [
      [
        426,
        "index-36"
      ],
      [
        440,
        "index-7"
      ],
      [
        469,
        "index-6"
      ],
      [
        477,
        "index-9"
      ],
      [
        479,
        "index-0"
      ]
    ],
    "pep 3129": [
      [
        426,
        "index-41"
      ],
      [
        426,
        "index-46"
      ],
      [
        467,
        "index-18"
      ]
    ],
    "pep 318": [
      [
        426,
        "index-40"
      ],
      [
        426,
        "index-47"
      ],
      [
        465,
        "index-12"
      ],
      [
        465,
        "index-4"
      ],
      [
        465,
        "index-5"
      ]
    ],
    "pep 570": [
      [
        426,
        "index-33"
      ],
      [
        480,
        "index-1"
      ],
      [
        480,
        "index-23"
      ],
      [
        482,
        "index-213"
      ]
    ],
    "pep 614": [
      [
        426,
        "index-30"
      ],
      [
        426,
        "index-44"
      ],
      [
        481,
        "index-15"
      ],
      [
        481,
        "index-3"
      ],
      [
        482,
        "index-185"
      ]
    ],
    "pep 636": [
      [
        426,
        "index-20"
      ],
      [
        426,
        "index-26"
      ],
      [
        440,
        "index-1"
      ],
      [
        471,
        "index-17"
      ],
      [
        471,
        "index-2"
      ]
    ],
    "annotations": [
      [
        426,
        "index-34"
      ],
      [
        440,
        "index-6"
      ]
    ],
    "as": [
      [
        426,
        "index-10"
      ],
      [
        426,
        "index-16"
      ],
      [
        426,
        "index-18"
      ],
      [
        426,
        "index-9"
      ],
      [
        435,
        "index-34"
      ],
      [
        435,
        "index-35"
      ]
    ],
    "async": [
      [
        426,
        "index-49"
      ]
    ],
    "async def": [
      [
        426,
        "index-48"
      ]
    ],
    "async for": [
      [
        426,
        "index-50"
      ],
      [
        429,
        "index-12"
      ]
    ],
    "async with": [
      [
        426,
        "index-51"
      ]
    ],
    "await": [
      [
        426,
        "index-49"
      ],
      [
        429,
        "index-13"
      ],
      [
        429,
        "index-57"
      ]
    ],
    "binding": [
      [
        426,
        "index-28"
      ],
      [
        426,
        "index-42"
      ],
      [
        428,
        "index-4"
      ],
      [
        435,
        "index-34"
      ],
      [
        435,
        "index-36"
      ],
      [
        435,
        "index-4"
      ],
      [
        435,
        "index-43"
      ]
    ],
    "break": [
      [
        426,
        "index-13"
      ],
      [
        426,
        "index-15"
      ],
      [
        426,
        "index-5"
      ],
      [
        426,
        "index-7"
      ],
      [
        435,
        "index-30"
      ]
    ],
    "case": [
      [
        426,
        "index-18"
      ],
      [
        426,
        "index-18"
      ]
    ],
    "case block": [
      [
        426,
        "index-22"
      ]
    ],
    "class definition": [
      [
        426,
        "index-42"
      ],
      [
        426,
        "index-43"
      ],
      [
        427,
        "index-86"
      ]
    ],
    "clause": [
      [
        426,
        "index-1"
      ]
    ],
    "compound": [
      [
        426,
        "index-0"
      ]
    ],
    "compound statement": [
      [
        426,
        "index-16"
      ],
      [
        426,
        "index-18"
      ],
      [
        426,
        "index-28"
      ],
      [
        426,
        "index-3"
      ],
      [
        426,
        "index-4"
      ],
      [
        426,
        "index-42"
      ],
      [
        426,
        "index-6"
      ],
      [
        426,
        "index-9"
      ]
    ],
    "continue": [
      [
        426,
        "index-13"
      ],
      [
        426,
        "index-15"
      ],
      [
        426,
        "index-5"
      ],
      [
        426,
        "index-7"
      ],
      [
        435,
        "index-33"
      ]
    ],
    "dangling": [
      [
        426,
        "index-2"
      ]
    ],
    "def": [
      [
        426,
        "index-28"
      ]
    ],
    "default": [
      [
        426,
        "index-31"
      ]
    ],
    "definition": [
      [
        426,
        "index-28"
      ],
      [
        426,
        "index-42"
      ],
      [
        435,
        "index-24"
      ]
    ],
    "elif": [
      [
        426,
        "index-3"
      ]
    ],
    "else": [
      [
        426,
        "index-13"
      ],
      [
        426,
        "index-2"
      ],
      [
        426,
        "index-3"
      ],
      [
        426,
        "index-4"
      ],
      [
        426,
        "index-6"
      ],
      [
        426,
        "index-9"
      ],
      [
        429,
        "index-88"
      ],
      [
        435,
        "index-31"
      ]
    ],
    "except clause": [
      [
        426,
        "index-10"
      ]
    ],
    "except_star": [
      [
        426,
        "index-12"
      ]
    ],
    "execution": [
      [
        426,
        "index-42"
      ],
      [
        427,
        "index-66"
      ],
      [
        428,
        "index-13"
      ],
      [
        428,
        "index-2"
      ]
    ],
    "expression list": [
      [
        426,
        "index-42"
      ],
      [
        429,
        "index-15"
      ],
      [
        429,
        "index-16"
      ],
      [
        429,
        "index-91"
      ],
      [
        435,
        "index-18"
      ]
    ],
    "finally": [
      [
        426,
        "index-14"
      ],
      [
        426,
        "index-9"
      ],
      [
        435,
        "index-25"
      ],
      [
        435,
        "index-32"
      ],
      [
        435,
        "index-33"
      ]
    ],
    "for": [
      [
        426,
        "index-6"
      ],
      [
        429,
        "index-12"
      ],
      [
        435,
        "index-30"
      ],
      [
        435,
        "index-33"
      ],
      [
        440,
        "index-0"
      ]
    ],
    "frame": [
      [
        426,
        "index-42"
      ],
      [
        427,
        "index-63"
      ],
      [
        428,
        "index-2"
      ]
    ],
    "function annotations": [
      [
        426,
        "index-34"
      ],
      [
        440,
        "index-6"
      ]
    ],
    "function definition": [
      [
        426,
        "index-27"
      ],
      [
        426,
        "index-28"
      ],
      [
        426,
        "index-29"
      ],
      [
        426,
        "index-31"
      ],
      [
        426,
        "index-32"
      ]
    ],
    "guard": [
      [
        426,
        "index-21"
      ]
    ],
    "inheritance": [
      [
        426,
        "index-42"
      ]
    ],
    "irrefutable case block": [
      [
        426,
        "index-22"
      ]
    ],
    "match": [
      [
        426,
        "index-18"
      ],
      [
        426,
        "index-18"
      ]
    ],
    "match statement": [
      [
        426,
        "index-18"
      ]
    ],
    "name": [
      [
        426,
        "index-28"
      ],
      [
        426,
        "index-42"
      ],
      [
        428,
        "index-4"
      ],
      [
        429,
        "index-3"
      ],
      [
        429,
        "index-5"
      ],
      [
        434,
        "index-10"
      ],
      [
        435,
        "index-22"
      ],
      [
        435,
        "index-34"
      ],
      [
        435,
        "index-36"
      ],
      [
        435,
        "index-4"
      ],
      [
        435,
        "index-43"
      ],
      [
        439,
        "index-1"
      ]
    ],
    "parameter list": [
      [
        426,
        "index-28"
      ]
    ],
    "pattern matching": [
      [
        426,
        "index-18"
      ]
    ],
    "return": [
      [
        426,
        "index-13"
      ],
      [
        426,
        "index-15"
      ],
      [
        435,
        "index-24"
      ]
    ],
    "suite": [
      [
        426,
        "index-1"
      ]
    ],
    "target": [
      [
        426,
        "index-6"
      ],
      [
        435,
        "index-21"
      ],
      [
        435,
        "index-31"
      ],
      [
        435,
        "index-5"
      ],
      [
        435,
        "index-6"
      ]
    ],
    "type parameters": [
      [
        426,
        "index-53"
      ]
    ],
    "user-defined function": [
      [
        426,
        "index-28"
      ],
      [
        427,
        "index-34"
      ],
      [
        429,
        "index-52"
      ]
    ],
    "with": [
      [
        426,
        "index-16"
      ],
      [
        427,
        "index-106"
      ]
    ],
    "with statement": [
      [
        426,
        "index-16"
      ]
    ],
    "ellipsis": [
      [
        427,
        "index-8"
      ]
    ],
    "java": [
      [
        427,
        "index-13"
      ]
    ],
    "notimplemented": [
      [
        427,
        "index-7"
      ]
    ],
    "pep 252": [
      [
        427,
        "index-85"
      ],
      [
        463,
        "index-2"
      ],
      [
        463,
        "index-4"
      ]
    ],
    "pep 3135": [
      [
        427,
        "index-93"
      ],
      [
        469,
        "index-31"
      ]
    ],
    "pep 562": [
      [
        427,
        "index-84"
      ],
      [
        479,
        "index-16"
      ],
      [
        482,
        "index-234"
      ],
      [
        482,
        "index-239"
      ]
    ],
    "__abs__() (object method)": [
      [
        427,
        "object.__abs__"
      ]
    ],
    "__add__() (object method)": [
      [
        427,
        "object.__add__"
      ]
    ],
    "__aenter__() (object method)": [
      [
        427,
        "object.__aenter__"
      ]
    ],
    "__aexit__() (object method)": [
      [
        427,
        "object.__aexit__"
      ]
    ],
    "__aiter__() (object method)": [
      [
        427,
        "object.__aiter__"
      ]
    ],
    "__and__() (object method)": [
      [
        427,
        "object.__and__"
      ]
    ],
    "__anext__() (object method)": [
      [
        427,
        "object.__anext__"
      ]
    ],
    "__annotations__ (class attribute)": [
      [
        427,
        "index-50"
      ]
    ],
    "__annotations__ (function attribute)": [
      [
        427,
        "function.__annotations__"
      ],
      [
        427,
        "index-36"
      ]
    ],
    "__annotations__ (module attribute)": [
      [
        427,
        "index-45"
      ]
    ],
    "__await__() (object method)": [
      [
        427,
        "object.__await__"
      ]
    ],
    "__bool__() (object method)": [
      [
        427,
        "index-98"
      ],
      [
        427,
        "object.__bool__"
      ]
    ],
    "__buffer__() (object method)": [
      [
        427,
        "object.__buffer__"
      ]
    ],
    "__bytes__() (object method)": [
      [
        427,
        "object.__bytes__"
      ]
    ],
    "__call__() (object method)": [
      [
        427,
        "object.__call__"
      ],
      [
        429,
        "index-56"
      ]
    ],
    "__ceil__() (object method)": [
      [
        427,
        "object.__ceil__"
      ]
    ],
    "__class__ (method cell)": [
      [
        427,
        "index-92"
      ]
    ],
    "__class__ (module attribute)": [
      [
        427,
        "index-83"
      ]
    ],
    "__class_getitem__() (object class method)": [
      [
        427,
        "object.__class_getitem__"
      ]
    ],
    "__classcell__ (class namespace entry)": [
      [
        427,
        "index-92"
      ]
    ],
    "__closure__ (function attribute)": [
      [
        427,
        "function.__closure__"
      ],
      [
        427,
        "index-35"
      ]
    ],
    "__code__ (function attribute)": [
      [
        427,
        "function.__code__"
      ],
      [
        427,
        "index-36"
      ]
    ],
    "__complex__() (object method)": [
      [
        427,
        "object.__complex__"
      ]
    ],
    "__contains__() (object method)": [
      [
        427,
        "object.__contains__"
      ]
    ],
    "__defaults__ (function attribute)": [
      [
        427,
        "function.__defaults__"
      ],
      [
        427,
        "index-36"
      ]
    ],
    "__del__() (object method)": [
      [
        427,
        "object.__del__"
      ]
    ],
    "__delattr__() (object method)": [
      [
        427,
        "object.__delattr__"
      ]
    ],
    "__delete__() (object method)": [
      [
        427,
        "object.__delete__"
      ]
    ],
    "__delitem__() (object method)": [
      [
        427,
        "object.__delitem__"
      ]
    ],
    "__dict__ (class attribute)": [
      [
        427,
        "index-50"
      ]
    ],
    "__dict__ (function attribute)": [
      [
        427,
        "function.__dict__"
      ],
      [
        427,
        "index-36"
      ]
    ],
    "__dict__ (instance attribute)": [
      [
        427,
        "index-54"
      ]
    ],
    "__dir__ (module attribute)": [
      [
        427,
        "index-83"
      ]
    ],
    "__dir__() (object method)": [
      [
        427,
        "object.__dir__"
      ]
    ],
    "__divmod__() (object method)": [
      [
        427,
        "object.__divmod__"
      ]
    ],
    "__doc__ (class attribute)": [
      [
        427,
        "index-50"
      ]
    ],
    "__doc__ (function attribute)": [
      [
        427,
        "function.__doc__"
      ],
      [
        427,
        "index-36"
      ]
    ],
    "__doc__ (method attribute)": [
      [
        427,
        "index-38"
      ],
      [
        427,
        "method.__doc__"
      ]
    ],
    "__enter__() (object method)": [
      [
        427,
        "object.__enter__"
      ]
    ],
    "__eq__() (object method)": [
      [
        427,
        "object.__eq__"
      ]
    ],
    "__exit__() (object method)": [
      [
        427,
        "object.__exit__"
      ]
    ],
    "__float__() (object method)": [
      [
        427,
        "object.__float__"
      ]
    ],
    "__floor__() (object method)": [
      [
        427,
        "object.__floor__"
      ]
    ],
    "__floordiv__() (object method)": [
      [
        427,
        "object.__floordiv__"
      ]
    ],
    "__format__() (object method)": [
      [
        427,
        "index-78"
      ],
      [
        427,
        "object.__format__"
      ]
    ],
    "__func__ (method attribute)": [
      [
        427,
        "index-38"
      ],
      [
        427,
        "method.__func__"
      ]
    ],
    "__ge__() (object method)": [
      [
        427,
        "object.__ge__"
      ]
    ],
    "__get__() (object method)": [
      [
        427,
        "object.__get__"
      ]
    ],
    "__getattr__ (module attribute)": [
      [
        427,
        "index-83"
      ]
    ],
    "__getattr__() (object method)": [
      [
        427,
        "object.__getattr__"
      ]
    ],
    "__getattribute__() (object method)": [
      [
        427,
        "object.__getattribute__"
      ]
    ],
    "__getitem__() (mapping object method)": [
      [
        427,
        "index-71"
      ]
    ],
    "__getitem__() (object method)": [
      [
        427,
        "object.__getitem__"
      ]
    ],
    "__globals__ (function attribute)": [
      [
        427,
        "function.__globals__"
      ],
      [
        427,
        "index-35"
      ]
    ],
    "__gt__() (object method)": [
      [
        427,
        "object.__gt__"
      ]
    ],
    "__hash__() (object method)": [
      [
        427,
        "object.__hash__"
      ]
    ],
    "__iadd__() (object method)": [
      [
        427,
        "object.__iadd__"
      ]
    ],
    "__iand__() (object method)": [
      [
        427,
        "object.__iand__"
      ]
    ],
    "__ifloordiv__() (object method)": [
      [
        427,
        "object.__ifloordiv__"
      ]
    ],
    "__ilshift__() (object method)": [
      [
        427,
        "object.__ilshift__"
      ]
    ],
    "__imatmul__() (object method)": [
      [
        427,
        "object.__imatmul__"
      ]
    ],
    "__imod__() (object method)": [
      [
        427,
        "object.__imod__"
      ]
    ],
    "__imul__() (object method)": [
      [
        427,
        "object.__imul__"
      ]
    ],
    "__index__() (object method)": [
      [
        427,
        "object.__index__"
      ]
    ],
    "__init__() (object method)": [
      [
        427,
        "object.__init__"
      ]
    ],
    "__init_subclass__() (object class method)": [
      [
        427,
        "object.__init_subclass__"
      ]
    ],
    "__instancecheck__() (class method)": [
      [
        427,
        "class.__instancecheck__"
      ]
    ],
    "__int__() (object method)": [
      [
        427,
        "object.__int__"
      ]
    ],
    "__invert__() (object method)": [
      [
        427,
        "object.__invert__"
      ]
    ],
    "__ior__() (object method)": [
      [
        427,
        "object.__ior__"
      ]
    ],
    "__ipow__() (object method)": [
      [
        427,
        "object.__ipow__"
      ]
    ],
    "__irshift__() (object method)": [
      [
        427,
        "object.__irshift__"
      ]
    ],
    "__isub__() (object method)": [
      [
        427,
        "object.__isub__"
      ]
    ],
    "__iter__() (object method)": [
      [
        427,
        "object.__iter__"
      ]
    ],
    "__itruediv__() (object method)": [
      [
        427,
        "object.__itruediv__"
      ]
    ],
    "__ixor__() (object method)": [
      [
        427,
        "object.__ixor__"
      ]
    ],
    "__kwdefaults__ (function attribute)": [
      [
        427,
        "function.__kwdefaults__"
      ],
      [
        427,
        "index-36"
      ]
    ],
    "__le__() (object method)": [
      [
        427,
        "object.__le__"
      ]
    ],
    "__len__() (mapping object method)": [
      [
        427,
        "index-82"
      ]
    ],
    "__len__() (object method)": [
      [
        427,
        "object.__len__"
      ]
    ],
    "__length_hint__() (object method)": [
      [
        427,
        "object.__length_hint__"
      ]
    ],
    "__lshift__() (object method)": [
      [
        427,
        "object.__lshift__"
      ]
    ],
    "__lt__() (object method)": [
      [
        427,
        "object.__lt__"
      ]
    ],
    "__matmul__() (object method)": [
      [
        427,
        "object.__matmul__"
      ]
    ],
    "__missing__() (object method)": [
      [
        427,
        "object.__missing__"
      ]
    ],
    "__mod__() (object method)": [
      [
        427,
        "object.__mod__"
      ]
    ],
    "__module__ (class attribute)": [
      [
        427,
        "index-50"
      ]
    ],
    "__module__ (function attribute)": [
      [
        427,
        "function.__module__"
      ],
      [
        427,
        "index-36"
      ]
    ],
    "__module__ (method attribute)": [
      [
        427,
        "index-38"
      ],
      [
        427,
        "method.__module__"
      ]
    ],
    "__mro_entries__() (object method)": [
      [
        427,
        "object.__mro_entries__"
      ]
    ],
    "__mul__() (object method)": [
      [
        427,
        "object.__mul__"
      ]
    ],
    "__name__ (class attribute)": [
      [
        427,
        "index-50"
      ]
    ],
    "__name__ (function attribute)": [
      [
        427,
        "function.__name__"
      ],
      [
        427,
        "index-36"
      ]
    ],
    "__name__ (method attribute)": [
      [
        427,
        "index-38"
      ],
      [
        427,
        "method.__name__"
      ]
    ],
    "__ne__() (object method)": [
      [
        427,
        "object.__ne__"
      ]
    ],
    "__neg__() (object method)": [
      [
        427,
        "object.__neg__"
      ]
    ],
    "__new__() (object method)": [
      [
        427,
        "object.__new__"
      ]
    ],
    "__objclass__ (object attribute)": [
      [
        427,
        "object.__objclass__"
      ]
    ],
    "__or__() (object method)": [
      [
        427,
        "object.__or__"
      ]
    ],
    "__pos__() (object method)": [
      [
        427,
        "object.__pos__"
      ]
    ],
    "__pow__() (object method)": [
      [
        427,
        "object.__pow__"
      ]
    ],
    "__prepare__ (metaclass method)": [
      [
        427,
        "index-89"
      ]
    ],
    "__qualname__ (function attribute)": [
      [
        427,
        "function.__qualname__"
      ]
    ],
    "__radd__() (object method)": [
      [
        427,
        "object.__radd__"
      ]
    ],
    "__rand__() (object method)": [
      [
        427,
        "object.__rand__"
      ]
    ],
    "__rdivmod__() (object method)": [
      [
        427,
        "object.__rdivmod__"
      ]
    ],
    "__release_buffer__() (object method)": [
      [
        427,
        "object.__release_buffer__"
      ]
    ],
    "__repr__() (object method)": [
      [
        427,
        "index-75"
      ],
      [
        427,
        "object.__repr__"
      ]
    ],
    "__reversed__() (object method)": [
      [
        427,
        "object.__reversed__"
      ]
    ],
    "__rfloordiv__() (object method)": [
      [
        427,
        "object.__rfloordiv__"
      ]
    ],
    "__rlshift__() (object method)": [
      [
        427,
        "object.__rlshift__"
      ]
    ],
    "__rmatmul__() (object method)": [
      [
        427,
        "object.__rmatmul__"
      ]
    ],
    "__rmod__() (object method)": [
      [
        427,
        "object.__rmod__"
      ]
    ],
    "__rmul__() (object method)": [
      [
        427,
        "object.__rmul__"
      ]
    ],
    "__ror__() (object method)": [
      [
        427,
        "object.__ror__"
      ]
    ],
    "__round__() (object method)": [
      [
        427,
        "object.__round__"
      ]
    ],
    "__rpow__() (object method)": [
      [
        427,
        "object.__rpow__"
      ]
    ],
    "__rrshift__() (object method)": [
      [
        427,
        "object.__rrshift__"
      ]
    ],
    "__rshift__() (object method)": [
      [
        427,
        "object.__rshift__"
      ]
    ],
    "__rsub__() (object method)": [
      [
        427,
        "object.__rsub__"
      ]
    ],
    "__rtruediv__() (object method)": [
      [
        427,
        "object.__rtruediv__"
      ]
    ],
    "__rxor__() (object method)": [
      [
        427,
        "object.__rxor__"
      ]
    ],
    "__self__ (method attribute)": [
      [
        427,
        "index-38"
      ],
      [
        427,
        "method.__self__"
      ]
    ],
    "__set__() (object method)": [
      [
        427,
        "object.__set__"
      ]
    ],
    "__set_name__() (object method)": [
      [
        427,
        "object.__set_name__"
      ]
    ],
    "__setattr__() (object method)": [
      [
        427,
        "object.__setattr__"
      ]
    ],
    "__setitem__() (object method)": [
      [
        427,
        "object.__setitem__"
      ]
    ],
    "__str__() (object method)": [
      [
        427,
        "index-76"
      ],
      [
        427,
        "object.__str__"
      ]
    ],
    "__sub__() (object method)": [
      [
        427,
        "object.__sub__"
      ]
    ],
    "__subclasscheck__() (class method)": [
      [
        427,
        "class.__subclasscheck__"
      ]
    ],
    "__truediv__() (object method)": [
      [
        427,
        "object.__truediv__"
      ]
    ],
    "__trunc__() (object method)": [
      [
        427,
        "object.__trunc__"
      ]
    ],
    "__type_params__ (class attribute)": [
      [
        427,
        "index-50"
      ]
    ],
    "__type_params__ (function attribute)": [
      [
        427,
        "function.__type_params__"
      ],
      [
        427,
        "index-36"
      ]
    ],
    "__xor__() (object method)": [
      [
        427,
        "object.__xor__"
      ]
    ],
    "body": [
      [
        427,
        "index-91"
      ]
    ],
    "built-in method": [
      [
        427,
        "index-43"
      ],
      [
        429,
        "index-53"
      ]
    ],
    "byte": [
      [
        427,
        "index-21"
      ]
    ],
    "call": [
      [
        427,
        "index-33"
      ],
      [
        427,
        "index-47"
      ],
      [
        427,
        "index-49"
      ],
      [
        427,
        "index-97"
      ],
      [
        429,
        "index-47"
      ],
      [
        429,
        "index-52"
      ],
      [
        429,
        "index-53"
      ],
      [
        429,
        "index-54"
      ],
      [
        429,
        "index-55"
      ],
      [
        429,
        "index-56"
      ],
      [
        435,
        "index-3"
      ]
    ],
    "chr": [
      [
        427,
        "index-19"
      ]
    ],
    "class instance": [
      [
        427,
        "index-47"
      ],
      [
        427,
        "index-51"
      ],
      [
        427,
        "index-52"
      ],
      [
        429,
        "index-55"
      ]
    ],
    "class object": [
      [
        427,
        "index-47"
      ],
      [
        427,
        "index-49"
      ],
      [
        429,
        "index-54"
      ]
    ],
    "clear() (frame method)": [
      [
        427,
        "frame.clear"
      ]
    ],
    "close() (coroutine method)": [
      [
        427,
        "coroutine.close"
      ]
    ],
    "co_argcount (code object attribute)": [
      [
        427,
        "index-58"
      ]
    ],
    "co_argcount (codeobject attribute)": [
      [
        427,
        "codeobject.co_argcount"
      ]
    ],
    "co_cellvars (code object attribute)": [
      [
        427,
        "index-58"
      ]
    ],
    "co_cellvars (codeobject attribute)": [
      [
        427,
        "codeobject.co_cellvars"
      ]
    ],
    "co_code (code object attribute)": [
      [
        427,
        "index-58"
      ]
    ],
    "co_code (codeobject attribute)": [
      [
        427,
        "codeobject.co_code"
      ]
    ],
    "co_consts (code object attribute)": [
      [
        427,
        "index-58"
      ]
    ],
    "co_consts (codeobject attribute)": [
      [
        427,
        "codeobject.co_consts"
      ]
    ],
    "co_filename (code object attribute)": [
      [
        427,
        "index-58"
      ]
    ],
    "co_filename (codeobject attribute)": [
      [
        427,
        "codeobject.co_filename"
      ]
    ],
    "co_firstlineno (code object attribute)": [
      [
        427,
        "index-58"
      ]
    ],
    "co_firstlineno (codeobject attribute)": [
      [
        427,
        "codeobject.co_firstlineno"
      ]
    ],
    "co_flags (code object attribute)": [
      [
        427,
        "index-58"
      ]
    ],
    "co_flags (codeobject attribute)": [
      [
        427,
        "codeobject.co_flags"
      ]
    ],
    "co_freevars (code object attribute)": [
      [
        427,
        "index-58"
      ]
    ],
    "co_freevars (codeobject attribute)": [
      [
        427,
        "codeobject.co_freevars"
      ]
    ],
    "co_kwonlyargcount (code object attribute)": [
      [
        427,
        "index-58"
      ]
    ],
    "co_kwonlyargcount (codeobject attribute)": [
      [
        427,
        "codeobject.co_kwonlyargcount"
      ]
    ],
    "co_lines() (codeobject method)": [
      [
        427,
        "codeobject.co_lines"
      ]
    ],
    "co_lnotab (code object attribute)": [
      [
        427,
        "index-58"
      ]
    ],
    "co_lnotab (codeobject attribute)": [
      [
        427,
        "codeobject.co_lnotab"
      ]
    ],
    "co_name (code object attribute)": [
      [
        427,
        "index-58"
      ]
    ],
    "co_name (codeobject attribute)": [
      [
        427,
        "codeobject.co_name"
      ]
    ],
    "co_names (code object attribute)": [
      [
        427,
        "index-58"
      ]
    ],
    "co_names (codeobject attribute)": [
      [
        427,
        "codeobject.co_names"
      ]
    ],
    "co_nlocals (code object attribute)": [
      [
        427,
        "index-58"
      ]
    ],
    "co_nlocals (codeobject attribute)": [
      [
        427,
        "codeobject.co_nlocals"
      ]
    ],
    "co_positions() (codeobject method)": [
      [
        427,
        "codeobject.co_positions"
      ]
    ],
    "co_posonlyargcount (code object attribute)": [
      [
        427,
        "index-58"
      ]
    ],
    "co_posonlyargcount (codeobject attribute)": [
      [
        427,
        "codeobject.co_posonlyargcount"
      ]
    ],
    "co_qualname (code object attribute)": [
      [
        427,
        "index-58"
      ]
    ],
    "co_qualname (codeobject attribute)": [
      [
        427,
        "codeobject.co_qualname"
      ]
    ],
    "co_stacksize (code object attribute)": [
      [
        427,
        "index-58"
      ]
    ],
    "co_stacksize (codeobject attribute)": [
      [
        427,
        "codeobject.co_stacksize"
      ]
    ],
    "co_varnames (code object attribute)": [
      [
        427,
        "index-58"
      ]
    ],
    "co_varnames (codeobject attribute)": [
      [
        427,
        "codeobject.co_varnames"
      ]
    ],
    "constructor": [
      [
        427,
        "index-73"
      ]
    ],
    "conversion": [
      [
        427,
        "index-78"
      ],
      [
        429,
        "index-1"
      ],
      [
        435,
        "index-3"
      ]
    ],
    "destructor": [
      [
        427,
        "index-74"
      ],
      [
        435,
        "index-7"
      ]
    ],
    "documentation string": [
      [
        427,
        "index-60"
      ]
    ],
    "extension": [
      [
        427,
        "index-4"
      ]
    ],
    "f_back (frame attribute)": [
      [
        427,
        "frame.f_back"
      ],
      [
        427,
        "index-64"
      ]
    ],
    "f_builtins (frame attribute)": [
      [
        427,
        "frame.f_builtins"
      ],
      [
        427,
        "index-64"
      ]
    ],
    "f_code (frame attribute)": [
      [
        427,
        "frame.f_code"
      ],
      [
        427,
        "index-64"
      ]
    ],
    "f_globals (frame attribute)": [
      [
        427,
        "frame.f_globals"
      ],
      [
        427,
        "index-64"
      ]
    ],
    "f_lasti (frame attribute)": [
      [
        427,
        "frame.f_lasti"
      ],
      [
        427,
        "index-64"
      ]
    ],
    "f_lineno (frame attribute)": [
      [
        427,
        "frame.f_lineno"
      ],
      [
        427,
        "index-65"
      ]
    ],
    "f_locals (frame attribute)": [
      [
        427,
        "frame.f_locals"
      ],
      [
        427,
        "index-64"
      ]
    ],
    "f_trace (frame attribute)": [
      [
        427,
        "frame.f_trace"
      ],
      [
        427,
        "index-65"
      ]
    ],
    "f_trace_lines (frame attribute)": [
      [
        427,
        "frame.f_trace_lines"
      ],
      [
        427,
        "index-65"
      ]
    ],
    "f_trace_opcodes (frame attribute)": [
      [
        427,
        "frame.f_trace_opcodes"
      ],
      [
        427,
        "index-65"
      ]
    ],
    "finalizer": [
      [
        427,
        "index-74"
      ]
    ],
    "global": [
      [
        427,
        "index-35"
      ],
      [
        435,
        "index-22"
      ],
      [
        435,
        "index-43"
      ],
      [
        435,
        "index-43"
      ]
    ],
    "handler": [
      [
        427,
        "index-66"
      ]
    ],
    "hierarchy": [
      [
        427,
        "index-4"
      ]
    ],
    "identity of an object": [
      [
        427,
        "index-1"
      ]
    ],
    "immutable object": [
      [
        427,
        "index-1"
      ]
    ],
    "immutable sequence": [
      [
        427,
        "index-17"
      ]
    ],
    "immutable sequences": [
      [
        427,
        "index-18"
      ]
    ],
    "immutable types": [
      [
        427,
        "index-72"
      ]
    ],
    "index operation": [
      [
        427,
        "index-15"
      ]
    ],
    "indices() (slice method)": [
      [
        427,
        "slice.indices"
      ]
    ],
    "instance": [
      [
        427,
        "index-47"
      ],
      [
        427,
        "index-51"
      ],
      [
        427,
        "index-97"
      ],
      [
        429,
        "index-55"
      ],
      [
        429,
        "index-56"
      ]
    ],
    "internal type": [
      [
        427,
        "index-56"
      ]
    ],
    "invocation": [
      [
        427,
        "index-33"
      ]
    ],
    "item selection": [
      [
        427,
        "index-15"
      ]
    ],
    "makefile() (socket method)": [
      [
        427,
        "index-55"
      ]
    ],
    "metaclass hint": [
      [
        427,
        "index-88"
      ]
    ],
    "mutable object": [
      [
        427,
        "index-1"
      ]
    ],
    "number": [
      [
        427,
        "index-13"
      ],
      [
        427,
        "index-14"
      ],
      [
        434,
        "index-27"
      ]
    ],
    "object.__match_args__ (built-in variable)": [
      [
        427,
        "object.__match_args__"
      ]
    ],
    "object.__slots__ (built-in variable)": [
      [
        427,
        "object.__slots__"
      ]
    ],
    "open": [
      [
        427,
        "index-55"
      ],
      [
        445,
        "index-0"
      ]
    ],
    "ord": [
      [
        427,
        "index-19"
      ]
    ],
    "overloading": [
      [
        427,
        "index-71"
      ]
    ],
    "print": [
      [
        427,
        "index-78"
      ]
    ],
    "print() (built-in function)": [
      [
        427,
        "index-76"
      ]
    ],
    "reference counting": [
      [
        427,
        "index-2"
      ]
    ],
    "replace() (codeobject method)": [
      [
        427,
        "codeobject.replace"
      ]
    ],
    "repr() (built-in function)": [
      [
        427,
        "index-75"
      ]
    ],
    "representation": [
      [
        427,
        "index-11"
      ]
    ],
    "round": [
      [
        427,
        "index-105"
      ]
    ],
    "send() (coroutine method)": [
      [
        427,
        "coroutine.send"
      ]
    ],
    "set type": [
      [
        427,
        "index-27"
      ]
    ],
    "singleton": [
      [
        427,
        "index-20"
      ]
    ],
    "slicing": [
      [
        427,
        "index-16"
      ],
      [
        427,
        "index-22"
      ],
      [
        429,
        "index-44"
      ],
      [
        435,
        "index-12"
      ]
    ],
    "stack": [
      [
        427,
        "index-66"
      ]
    ],
    "start (slice object attribute)": [
      [
        427,
        "index-70"
      ],
      [
        429,
        "index-46"
      ]
    ],
    "stdio": [
      [
        427,
        "index-55"
      ]
    ],
    "step (slice object attribute)": [
      [
        427,
        "index-70"
      ],
      [
        429,
        "index-46"
      ]
    ],
    "stop (slice object attribute)": [
      [
        427,
        "index-70"
      ],
      [
        429,
        "index-46"
      ]
    ],
    "subclassing": [
      [
        427,
        "index-72"
      ]
    ],
    "subscription": [
      [
        427,
        "index-15"
      ],
      [
        427,
        "index-22"
      ],
      [
        427,
        "index-30"
      ],
      [
        429,
        "index-41"
      ],
      [
        435,
        "index-9"
      ]
    ],
    "sys.exc_info": [
      [
        427,
        "index-66"
      ]
    ],
    "sys.exception": [
      [
        427,
        "index-66"
      ]
    ],
    "sys.last_traceback": [
      [
        427,
        "index-66"
      ]
    ],
    "sys.stderr": [
      [
        427,
        "index-55"
      ]
    ],
    "sys.stdin": [
      [
        427,
        "index-55"
      ]
    ],
    "sys.stdout": [
      [
        427,
        "index-55"
      ]
    ],
    "tb_frame (traceback attribute)": [
      [
        427,
        "index-67"
      ],
      [
        427,
        "traceback.tb_frame"
      ]
    ],
    "tb_lasti (traceback attribute)": [
      [
        427,
        "index-67"
      ],
      [
        427,
        "traceback.tb_lasti"
      ]
    ],
    "tb_lineno (traceback attribute)": [
      [
        427,
        "index-67"
      ],
      [
        427,
        "traceback.tb_lineno"
      ]
    ],
    "tb_next (traceback attribute)": [
      [
        427,
        "index-68"
      ],
      [
        427,
        "traceback.tb_next"
      ]
    ],
    "throw() (coroutine method)": [
      [
        427,
        "coroutine.throw"
      ]
    ],
    "type of an object": [
      [
        427,
        "index-1"
      ]
    ],
    "types, internal": [
      [
        427,
        "index-56"
      ]
    ],
    "unreachable object": [
      [
        427,
        "index-2"
      ]
    ],
    "user-defined": [
      [
        427,
        "index-34"
      ],
      [
        427,
        "index-37"
      ],
      [
        429,
        "index-52"
      ]
    ],
    "user-defined method": [
      [
        427,
        "index-37"
      ]
    ],
    "value of an object": [
      [
        427,
        "index-1"
      ]
    ],
    "nameerror (built-in exception)": [
      [
        428,
        "index-9"
      ]
    ],
    "systemexit (built-in exception)": [
      [
        428,
        "index-17"
      ]
    ],
    "block": [
      [
        428,
        "index-0"
      ],
      [
        428,
        "index-1"
      ]
    ],
    "environment": [
      [
        428,
        "index-8"
      ]
    ],
    "error handling": [
      [
        428,
        "index-15"
      ]
    ],
    "exception handler": [
      [
        428,
        "index-15"
      ]
    ],
    "execution model": [
      [
        428,
        "index-0"
      ]
    ],
    "free": [
      [
        428,
        "index-6"
      ]
    ],
    "from": [
      [
        428,
        "index-5"
      ],
      [
        429,
        "index-23"
      ],
      [
        429,
        "index-25"
      ],
      [
        435,
        "index-34"
      ],
      [
        435,
        "index-36"
      ]
    ],
    "handle an exception": [
      [
        428,
        "index-15"
      ]
    ],
    "import statement": [
      [
        428,
        "index-5"
      ],
      [
        435,
        "index-34"
      ],
      [
        435,
        "index-35"
      ],
      [
        435,
        "index-36"
      ],
      [
        435,
        "index-37"
      ]
    ],
    "raise an exception": [
      [
        428,
        "index-15"
      ]
    ],
    "restricted": [
      [
        428,
        "index-13"
      ]
    ],
    "scope": [
      [
        428,
        "index-3"
      ],
      [
        428,
        "index-7"
      ]
    ],
    "termination model": [
      [
        428,
        "index-16"
      ]
    ],
    "variable": [
      [
        428,
        "index-6"
      ]
    ],
    ":= (colon equals)": [
      [
        429,
        "index-86"
      ]
    ],
    "bnf": [
      [
        429,
        "index-0"
      ],
      [
        433,
        "index-0"
      ]
    ],
    "conditional": [
      [
        429,
        "index-82"
      ],
      [
        429,
        "index-88"
      ]
    ],
    "pep 308": [
      [
        429,
        "index-89"
      ],
      [
        466,
        "index-1"
      ],
      [
        466,
        "index-2"
      ]
    ],
    "pep 380": [
      [
        429,
        "index-28"
      ],
      [
        475,
        "index-12"
      ]
    ],
    "pep 448": [
      [
        429,
        "index-19"
      ],
      [
        429,
        "index-51"
      ],
      [
        429,
        "index-94"
      ],
      [
        477,
        "index-5"
      ],
      [
        477,
        "index-6"
      ],
      [
        482,
        "index-281"
      ],
      [
        482,
        "index-292"
      ],
      [
        482,
        "index-293"
      ],
      [
        482,
        "index-294"
      ]
    ],
    "pep 530": [
      [
        429,
        "index-14"
      ],
      [
        478,
        "index-11"
      ],
      [
        478,
        "index-12"
      ],
      [
        482,
        "index-267"
      ]
    ],
    "__anext__() (agen method)": [
      [
        429,
        "agen.__anext__"
      ]
    ],
    "__next__() (generator method)": [
      [
        429,
        "generator.__next__"
      ]
    ],
    "aclose() (agen method)": [
      [
        429,
        "agen.aclose"
      ]
    ],
    "addition": [
      [
        429,
        "index-69"
      ]
    ],
    "anonymous": [
      [
        429,
        "index-90"
      ]
    ],
    "argument list": [
      [
        429,
        "index-47"
      ]
    ],
    "asend() (agen method)": [
      [
        429,
        "agen.asend"
      ]
    ],
    "assignment expression": [
      [
        429,
        "index-86"
      ]
    ],
    "asynchronous-generator": [
      [
        429,
        "index-35"
      ]
    ],
    "athrow() (agen method)": [
      [
        429,
        "agen.athrow"
      ]
    ],
    "atom": [
      [
        429,
        "index-2"
      ]
    ],
    "attribute reference": [
      [
        429,
        "index-39"
      ]
    ],
    "call semantics": [
      [
        429,
        "index-47"
      ],
      [
        429,
        "index-48"
      ]
    ],
    "close() (generator method)": [
      [
        429,
        "generator.close"
      ]
    ],
    "comma": [
      [
        429,
        "index-10"
      ],
      [
        429,
        "index-95"
      ]
    ],
    "comprehensions": [
      [
        429,
        "index-11"
      ],
      [
        429,
        "index-15"
      ],
      [
        429,
        "index-16"
      ],
      [
        429,
        "index-17"
      ]
    ],
    "conditional expression": [
      [
        429,
        "index-88"
      ]
    ],
    "dictionary expression": [
      [
        429,
        "index-17"
      ]
    ],
    "division": [
      [
        429,
        "index-67"
      ]
    ],
    "evaluation": [
      [
        429,
        "index-96"
      ]
    ],
    "examples": [
      [
        429,
        "index-34"
      ]
    ],
    "exclusive": [
      [
        429,
        "index-75"
      ]
    ],
    "form": [
      [
        429,
        "index-90"
      ]
    ],
    "identifier": [
      [
        429,
        "index-3"
      ],
      [
        434,
        "index-10"
      ]
    ],
    "identity": [
      [
        429,
        "index-81"
      ]
    ],
    "in comprehensions": [
      [
        429,
        "index-12"
      ],
      [
        429,
        "index-13"
      ]
    ],
    "in dictionary displays": [
      [
        429,
        "index-17"
      ],
      [
        429,
        "index-18"
      ]
    ],
    "in dictionary expressions": [
      [
        429,
        "index-17"
      ]
    ],
    "in expression lists": [
      [
        429,
        "index-93"
      ]
    ],
    "in function calls": [
      [
        429,
        "index-47"
      ],
      [
        429,
        "index-49"
      ],
      [
        429,
        "index-50"
      ],
      [
        440,
        "index-3"
      ],
      [
        440,
        "index-4"
      ]
    ],
    "inclusive": [
      [
        429,
        "index-76"
      ]
    ],
    "inversion": [
      [
        429,
        "index-62"
      ]
    ],
    "item": [
      [
        429,
        "index-42"
      ],
      [
        429,
        "index-43"
      ]
    ],
    "key": [
      [
        429,
        "index-17"
      ]
    ],
    "key/value pair": [
      [
        429,
        "index-17"
      ]
    ],
    "lambda expression": [
      [
        429,
        "index-90"
      ]
    ],
    "list expression": [
      [
        429,
        "index-15"
      ]
    ],
    "literal": [
      [
        429,
        "index-6"
      ],
      [
        434,
        "index-16"
      ]
    ],
    "mangling": [
      [
        429,
        "index-5"
      ],
      [
        439,
        "index-1"
      ]
    ],
    "matrix multiplication": [
      [
        429,
        "index-66"
      ]
    ],
    "membership": [
      [
        429,
        "index-80"
      ]
    ],
    "minus": [
      [
        429,
        "index-60"
      ]
    ],
    "modulo": [
      [
        429,
        "index-68"
      ]
    ],
    "multiplication": [
      [
        429,
        "index-65"
      ]
    ],
    "named expression": [
      [
        429,
        "index-86"
      ]
    ],
    "names": [
      [
        429,
        "index-5"
      ]
    ],
    "negation": [
      [
        429,
        "index-60"
      ]
    ],
    "order": [
      [
        429,
        "index-96"
      ]
    ],
    "parenthesized form": [
      [
        429,
        "index-8"
      ]
    ],
    "plus": [
      [
        429,
        "index-61"
      ]
    ],
    "power": [
      [
        429,
        "index-58"
      ]
    ],
    "precedence": [
      [
        429,
        "index-97"
      ]
    ],
    "primary": [
      [
        429,
        "index-38"
      ]
    ],
    "private": [
      [
        429,
        "index-5"
      ]
    ],
    "reference": [
      [
        429,
        "index-39"
      ]
    ],
    "send() (generator method)": [
      [
        429,
        "generator.send"
      ]
    ],
    "set expression": [
      [
        429,
        "index-16"
      ]
    ],
    "subtraction": [
      [
        429,
        "index-70"
      ]
    ],
    "ternary": [
      [
        429,
        "index-88"
      ]
    ],
    "throw() (generator method)": [
      [
        429,
        "generator.throw"
      ]
    ],
    "trailing": [
      [
        429,
        "index-95"
      ]
    ],
    "tuple display": [
      [
        429,
        "index-8"
      ]
    ],
    "unary": [
      [
        429,
        "index-59"
      ]
    ],
    "unpacking": [
      [
        429,
        "index-18"
      ],
      [
        429,
        "index-49"
      ],
      [
        429,
        "index-93"
      ]
    ],
    "walrus operator": [
      [
        429,
        "index-86"
      ]
    ],
    "xor": [
      [
        429,
        "index-75"
      ]
    ],
    "yield": [
      [
        429,
        "index-23"
      ],
      [
        429,
        "index-34"
      ],
      [
        435,
        "index-26"
      ],
      [
        475,
        "index-11"
      ]
    ],
    "yield from expression": [
      [
        429,
        "index-25"
      ]
    ],
    "__cached__": [
      [
        431,
        "cached__"
      ]
    ],
    "__file__": [
      [
        431,
        "file__"
      ]
    ],
    "__loader__": [
      [
        431,
        "loader__"
      ]
    ],
    "__name__": [
      [
        431,
        "name__"
      ]
    ],
    "__package__": [
      [
        431,
        "package__"
      ]
    ],
    "__path__": [
      [
        431,
        "path__"
      ]
    ],
    "__spec__": [
      [
        431,
        "spec__"
      ]
    ],
    "find_spec": [
      [
        431,
        "index-10"
      ]
    ],
    "hooks": [
      [
        431,
        "index-9"
      ]
    ],
    "import hooks": [
      [
        431,
        "index-9"
      ]
    ],
    "import machinery": [
      [
        431,
        "index-0"
      ]
    ],
    "meta": [
      [
        431,
        "index-9"
      ]
    ],
    "meta hooks": [
      [
        431,
        "index-9"
      ]
    ],
    "path hooks": [
      [
        431,
        "index-9"
      ]
    ],
    "regular": [
      [
        431,
        "index-4"
      ]
    ],
    "sys.meta_path": [
      [
        431,
        "index-10"
      ]
    ],
    "sys.modules": [
      [
        431,
        "index-7"
      ]
    ],
    "sys.path": [
      [
        431,
        "index-17"
      ]
    ],
    "sys.path_hooks": [
      [
        431,
        "index-17"
      ]
    ],
    "sys.path_importer_cache": [
      [
        431,
        "index-17"
      ]
    ],
    "grammar": [
      [
        433,
        "index-0"
      ]
    ],
    "lexical definitions": [
      [
        433,
        "index-1"
      ]
    ],
    "notation": [
      [
        433,
        "index-0"
      ]
    ],
    "syntax": [
      [
        433,
        "index-0"
      ]
    ],
    "\" (double quote)": [
      [
        434,
        "index-17"
      ]
    ],
    "\"\"\"": [
      [
        434,
        "index-18"
      ]
    ],
    "' (single quote)": [
      [
        434,
        "index-17"
      ]
    ],
    "'''": [
      [
        434,
        "index-18"
      ]
    ],
    "0b": [
      [
        434,
        "index-28"
      ]
    ],
    "0o": [
      [
        434,
        "index-28"
      ]
    ],
    "0x": [
      [
        434,
        "index-28"
      ]
    ],
    "indent token": [
      [
        434,
        "index-9"
      ]
    ],
    "pep 3131": [
      [
        434,
        "index-11"
      ],
      [
        434,
        "index-12"
      ],
      [
        469,
        "index-5"
      ],
      [
        482,
        "index-219"
      ]
    ],
    "pep 414": [
      [
        434,
        "index-21"
      ],
      [
        475,
        "index-14"
      ]
    ],
    "standard c": [
      [
        434,
        "index-23"
      ]
    ],
    "unicode consortium": [
      [
        434,
        "index-18"
      ]
    ],
    "_, identifiers": [
      [
        434,
        "index-15"
      ]
    ],
    "__, identifiers": [
      [
        434,
        "index-15"
      ]
    ],
    "b\"": [
      [
        434,
        "index-19"
      ]
    ],
    "b'": [
      [
        434,
        "index-19"
      ]
    ],
    "backslash character": [
      [
        434,
        "index-6"
      ]
    ],
    "binary literal": [
      [
        434,
        "index-27"
      ]
    ],
    "blank line": [
      [
        434,
        "index-7"
      ]
    ],
    "bytes literal": [
      [
        434,
        "index-17"
      ],
      [
        434,
        "index-19"
      ]
    ],
    "complex literal": [
      [
        434,
        "index-27"
      ]
    ],
    "constant": [
      [
        434,
        "index-16"
      ]
    ],
    "decimal literal": [
      [
        434,
        "index-27"
      ]
    ],
    "delimiters": [
      [
        434,
        "index-32"
      ]
    ],
    "e": [
      [
        434,
        "index-29"
      ]
    ],
    "encoding declarations (source file)": [
      [
        434,
        "index-5"
      ]
    ],
    "f\"": [
      [
        434,
        "index-22"
      ]
    ],
    "f'": [
      [
        434,
        "index-22"
      ]
    ],
    "floating point literal": [
      [
        434,
        "index-27"
      ]
    ],
    "for help in debugging using string literals": [
      [
        434,
        "index-25"
      ]
    ],
    "formatted literal": [
      [
        434,
        "index-25"
      ]
    ],
    "formatted string literal": [
      [
        434,
        "index-22"
      ],
      [
        434,
        "index-25"
      ]
    ],
    "fstring": [
      [
        434,
        "index-25"
      ]
    ],
    "grouping": [
      [
        434,
        "index-8"
      ]
    ],
    "hash character": [
      [
        434,
        "index-4"
      ]
    ],
    "hexadecimal literal": [
      [
        434,
        "index-27"
      ]
    ],
    "imaginary literal": [
      [
        434,
        "index-27"
      ]
    ],
    "in formatted string literal": [
      [
        434,
        "index-25"
      ]
    ],
    "in numeric literal": [
      [
        434,
        "index-28"
      ],
      [
        434,
        "index-29"
      ],
      [
        434,
        "index-30"
      ]
    ],
    "indentation": [
      [
        434,
        "index-8"
      ]
    ],
    "integer literal": [
      [
        434,
        "index-27"
      ],
      [
        434,
        "index-28"
      ]
    ],
    "interpolated literal": [
      [
        434,
        "index-25"
      ]
    ],
    "interpolated string literal": [
      [
        434,
        "index-25"
      ]
    ],
    "j": [
      [
        434,
        "index-30"
      ]
    ],
    "leading whitespace": [
      [
        434,
        "index-8"
      ]
    ],
    "lexical analysis": [
      [
        434,
        "index-0"
      ]
    ],
    "line continuation": [
      [
        434,
        "index-6"
      ]
    ],
    "line joining": [
      [
        434,
        "index-3"
      ],
      [
        434,
        "index-6"
      ]
    ],
    "line structure": [
      [
        434,
        "index-2"
      ]
    ],
    "logical line": [
      [
        434,
        "index-3"
      ]
    ],
    "numeric literal": [
      [
        434,
        "index-27"
      ]
    ],
    "octal literal": [
      [
        434,
        "index-27"
      ]
    ],
    "operators": [
      [
        434,
        "index-31"
      ]
    ],
    "parser": [
      [
        434,
        "index-0"
      ]
    ],
    "physical line": [
      [
        434,
        "index-23"
      ],
      [
        434,
        "index-3"
      ],
      [
        434,
        "index-6"
      ]
    ],
    "r\"": [
      [
        434,
        "index-20"
      ]
    ],
    "r'": [
      [
        434,
        "index-20"
      ]
    ],
    "raw string": [
      [
        434,
        "index-18"
      ]
    ],
    "raw string literal": [
      [
        434,
        "index-20"
      ]
    ],
    "reserved word": [
      [
        434,
        "index-13"
      ]
    ],
    "soft keyword": [
      [
        434,
        "index-14"
      ]
    ],
    "source character set": [
      [
        434,
        "index-5"
      ]
    ],
    "source encoding declaration": [
      [
        434,
        "index-5"
      ]
    ],
    "statement grouping": [
      [
        434,
        "index-8"
      ]
    ],
    "string literal": [
      [
        434,
        "index-17"
      ],
      [
        434,
        "index-18"
      ]
    ],
    "tab": [
      [
        434,
        "index-8"
      ]
    ],
    "u\"": [
      [
        434,
        "index-17"
      ]
    ],
    "u'": [
      [
        434,
        "index-17"
      ]
    ],
    "unrecognized escape sequence": [
      [
        434,
        "index-24"
      ]
    ],
    "%=": [
      [
        435,
        "index-14"
      ]
    ],
    "&=": [
      [
        435,
        "index-14"
      ]
    ],
    "**=": [
      [
        435,
        "index-14"
      ]
    ],
    "*=": [
      [
        435,
        "index-14"
      ]
    ],
    "+=": [
      [
        435,
        "index-14"
      ]
    ],
    "-=": [
      [
        435,
        "index-14"
      ]
    ],
    "//=": [
      [
        435,
        "index-14"
      ]
    ],
    "/=": [
      [
        435,
        "index-14"
      ]
    ],
    "<<=": [
      [
        435,
        "index-14"
      ]
    ],
    ">>=": [
      [
        435,
        "index-14"
      ]
    ],
    "pep 3104": [
      [
        435,
        "index-46"
      ],
      [
        469,
        "index-8"
      ]
    ],
    "pep 3132": [
      [
        435,
        "index-13"
      ],
      [
        469,
        "index-9"
      ]
    ],
    "^=": [
      [
        435,
        "index-14"
      ]
    ],
    "__all__ (optional module attribute)": [
      [
        435,
        "index-38"
      ]
    ],
    "__debug__": [
      [
        435,
        "index-19"
      ]
    ],
    "__traceback__ (exception attribute)": [
      [
        435,
        "index-27"
      ]
    ],
    "annotated": [
      [
        435,
        "index-15"
      ]
    ],
    "annotated variable": [
      [
        435,
        "index-15"
      ]
    ],
    "assertions": [
      [
        435,
        "index-18"
      ]
    ],
    "assignment statement": [
      [
        435,
        "index-4"
      ]
    ],
    "assignment, annotated": [
      [
        435,
        "index-15"
      ]
    ],
    "assignment, augmented": [
      [
        435,
        "index-14"
      ]
    ],
    "augmented": [
      [
        435,
        "index-14"
      ]
    ],
    "augmented assignment": [
      [
        435,
        "index-14"
      ]
    ],
    "deletion": [
      [
        435,
        "index-21"
      ],
      [
        435,
        "index-23"
      ]
    ],
    "future": [
      [
        435,
        "index-40"
      ]
    ],
    "future statement": [
      [
        435,
        "index-40"
      ]
    ],
    "identifier list": [
      [
        435,
        "index-43"
      ],
      [
        435,
        "index-45"
      ]
    ],
    "in assignment target list": [
      [
        435,
        "index-6"
      ]
    ],
    "in target list": [
      [
        435,
        "index-6"
      ]
    ],
    "loop control": [
      [
        435,
        "index-31"
      ]
    ],
    "nonlocal": [
      [
        435,
        "index-45"
      ]
    ],
    "null": [
      [
        435,
        "index-20"
      ]
    ],
    "output": [
      [
        435,
        "index-3"
      ]
    ],
    "pass": [
      [
        435,
        "index-20"
      ]
    ],
    "procedure": [
      [
        435,
        "index-3"
      ]
    ],
    "raising": [
      [
        435,
        "index-27"
      ]
    ],
    "rebinding": [
      [
        435,
        "index-4"
      ]
    ],
    "simple": [
      [
        435,
        "index-0"
      ]
    ],
    "standard": [
      [
        435,
        "index-3"
      ]
    ],
    "unbinding": [
      [
        435,
        "index-22"
      ]
    ],
    "writing": [
      [
        435,
        "index-3"
      ]
    ],
    "|=": [
      [
        435,
        "index-14"
      ]
    ],
    "windows": [
      [
        436,
        "index-4"
      ]
    ],
    "command line": [
      [
        436,
        "index-4"
      ]
    ],
    "input": [
      [
        436,
        "index-5"
      ]
    ],
    "interactive mode": [
      [
        436,
        "index-3"
      ]
    ],
    "interpreter": [
      [
        436,
        "index-0"
      ]
    ],
    "program": [
      [
        436,
        "index-1"
      ]
    ],
    "standard input": [
      [
        436,
        "index-4"
      ]
    ],
    "coding": [
      [
        440,
        "index-9"
      ]
    ],
    "docstrings": [
      [
        440,
        "index-2"
      ],
      [
        440,
        "index-5"
      ]
    ],
    "documentation strings": [
      [
        440,
        "index-2"
      ],
      [
        440,
        "index-5"
      ]
    ],
    "strings, documentation": [
      [
        440,
        "index-2"
      ],
      [
        440,
        "index-5"
      ]
    ],
    "style": [
      [
        440,
        "index-9"
      ]
    ],
    "--check-hash-based-pycs": [
      [
        454,
        "cmdoption-check-hash-based-pycs"
      ]
    ],
    "--help-all": [
      [
        454,
        "cmdoption-help-all"
      ]
    ],
    "--help-env": [
      [
        454,
        "cmdoption-help-env"
      ]
    ],
    "--help-xoptions": [
      [
        454,
        "cmdoption-help-xoptions"
      ]
    ],
    "-?": [
      [
        454,
        "cmdoption-0"
      ]
    ],
    "-oo": [
      [
        454,
        "cmdoption-OO"
      ]
    ],
    "pythondumprefsfile=filename": [
      [
        454,
        "envvar-PYTHONDUMPREFSFILE-FILENAME"
      ]
    ],
    "command line option": [
      [
        454,
        "cmdoption-0"
      ],
      [
        454,
        "cmdoption-B"
      ],
      [
        454,
        "cmdoption-E"
      ],
      [
        454,
        "cmdoption-I"
      ],
      [
        454,
        "cmdoption-J"
      ],
      [
        454,
        "cmdoption-O"
      ],
      [
        454,
        "cmdoption-OO"
      ],
      [
        454,
        "cmdoption-P"
      ],
      [
        454,
        "cmdoption-R"
      ],
      [
        454,
        "cmdoption-S"
      ],
      [
        454,
        "cmdoption-V"
      ],
      [
        454,
        "cmdoption-W"
      ],
      [
        454,
        "cmdoption-X"
      ],
      [
        454,
        "cmdoption-b"
      ],
      [
        454,
        "cmdoption-c"
      ],
      [
        454,
        "cmdoption-check-hash-based-pycs"
      ],
      [
        454,
        "cmdoption-d"
      ],
      [
        454,
        "cmdoption-h"
      ],
      [
        454,
        "cmdoption-help"
      ],
      [
        454,
        "cmdoption-help-all"
      ],
      [
        454,
        "cmdoption-help-env"
      ],
      [
        454,
        "cmdoption-help-xoptions"
      ],
      [
        454,
        "cmdoption-i"
      ],
      [
        454,
        "cmdoption-m"
      ],
      [
        454,
        "cmdoption-q"
      ],
      [
        454,
        "cmdoption-s"
      ],
      [
        454,
        "cmdoption-u"
      ],
      [
        454,
        "cmdoption-v"
      ],
      [
        454,
        "cmdoption-version"
      ],
      [
        454,
        "cmdoption-x"
      ],
      [
        455,
        "cmdoption-0"
      ],
      [
        455,
        "cmdoption-1"
      ],
      [
        455,
        "cmdoption-arg-CONFIG_SITE"
      ],
      [
        455,
        "cmdoption-build"
      ],
      [
        455,
        "cmdoption-disable-ipv6"
      ],
      [
        455,
        "cmdoption-disable-test-modules"
      ],
      [
        455,
        "cmdoption-enable-big-digits"
      ],
      [
        455,
        "cmdoption-enable-bolt"
      ],
      [
        455,
        "cmdoption-enable-framework"
      ],
      [
        455,
        "cmdoption-enable-loadable-sqlite-extensions"
      ],
      [
        455,
        "cmdoption-enable-optimizations"
      ],
      [
        455,
        "cmdoption-enable-profiling"
      ],
      [
        455,
        "cmdoption-enable-pystats"
      ],
      [
        455,
        "cmdoption-enable-shared"
      ],
      [
        455,
        "cmdoption-enable-universalsdk"
      ],
      [
        455,
        "cmdoption-enable-wasm-dynamic-linking"
      ],
      [
        455,
        "cmdoption-enable-wasm-pthreads"
      ],
      [
        455,
        "cmdoption-exec-prefix"
      ],
      [
        455,
        "cmdoption-host"
      ],
      [
        455,
        "cmdoption-prefix"
      ],
      [
        455,
        "cmdoption-with-address-sanitizer"
      ],
      [
        455,
        "cmdoption-with-assertions"
      ],
      [
        455,
        "cmdoption-with-build-python"
      ],
      [
        455,
        "cmdoption-with-builtin-hashlib-hashes"
      ],
      [
        455,
        "cmdoption-with-computed-gotos"
      ],
      [
        455,
        "cmdoption-with-dbmliborder"
      ],
      [
        455,
        "cmdoption-with-dtrace"
      ],
      [
        455,
        "cmdoption-with-emscripten-target"
      ],
      [
        455,
        "cmdoption-with-ensurepip"
      ],
      [
        455,
        "cmdoption-with-framework-name"
      ],
      [
        455,
        "cmdoption-with-hash-algorithm"
      ],
      [
        455,
        "cmdoption-with-libc"
      ],
      [
        455,
        "cmdoption-with-libm"
      ],
      [
        455,
        "cmdoption-with-libs"
      ],
      [
        455,
        "cmdoption-with-lto"
      ],
      [
        455,
        "cmdoption-with-memory-sanitizer"
      ],
      [
        455,
        "cmdoption-with-openssl"
      ],
      [
        455,
        "cmdoption-with-openssl-rpath"
      ],
      [
        455,
        "cmdoption-with-pkg-config"
      ],
      [
        455,
        "cmdoption-with-platlibdir"
      ],
      [
        455,
        "cmdoption-with-pydebug"
      ],
      [
        455,
        "cmdoption-with-readline"
      ],
      [
        455,
        "cmdoption-with-ssl-default-suites"
      ],
      [
        455,
        "cmdoption-with-strict-overflow"
      ],
      [
        455,
        "cmdoption-with-suffix"
      ],
      [
        455,
        "cmdoption-with-system-expat"
      ],
      [
        455,
        "cmdoption-with-system-libmpdec"
      ],
      [
        455,
        "cmdoption-with-trace-refs"
      ],
      [
        455,
        "cmdoption-with-tzpath"
      ],
      [
        455,
        "cmdoption-with-undefined-behavior-sanitizer"
      ],
      [
        455,
        "cmdoption-with-universal-archs"
      ],
      [
        455,
        "cmdoption-with-valgrind"
      ],
      [
        455,
        "cmdoption-with-wheel-pkg-dir"
      ],
      [
        455,
        "cmdoption-without-c-locale-coercion"
      ],
      [
        455,
        "cmdoption-without-decimal-contextvar"
      ],
      [
        455,
        "cmdoption-without-doc-strings"
      ],
      [
        455,
        "cmdoption-without-freelists"
      ],
      [
        455,
        "cmdoption-without-pymalloc"
      ],
      [
        455,
        "cmdoption-without-readline"
      ],
      [
        455,
        "cmdoption-without-static-libpython"
      ]
    ],
    "--build": [
      [
        455,
        "cmdoption-build"
      ]
    ],
    "--disable-ipv6": [
      [
        455,
        "cmdoption-disable-ipv6"
      ]
    ],
    "--disable-test-modules": [
      [
        455,
        "cmdoption-disable-test-modules"
      ]
    ],
    "--enable-big-digits": [
      [
        455,
        "cmdoption-enable-big-digits"
      ]
    ],
    "--enable-bolt": [
      [
        455,
        "cmdoption-enable-bolt"
      ]
    ],
    "--enable-framework": [
      [
        455,
        "cmdoption-1"
      ],
      [
        455,
        "cmdoption-enable-framework"
      ]
    ],
    "--enable-loadable-sqlite-extensions": [
      [
        455,
        "cmdoption-enable-loadable-sqlite-extensions"
      ]
    ],
    "--enable-optimizations": [
      [
        455,
        "cmdoption-enable-optimizations"
      ]
    ],
    "--enable-profiling": [
      [
        455,
        "cmdoption-enable-profiling"
      ]
    ],
    "--enable-pystats": [
      [
        455,
        "cmdoption-enable-pystats"
      ]
    ],
    "--enable-shared": [
      [
        455,
        "cmdoption-enable-shared"
      ]
    ],
    "--enable-universalsdk": [
      [
        455,
        "cmdoption-0"
      ],
      [
        455,
        "cmdoption-enable-universalsdk"
      ]
    ],
    "--enable-wasm-dynamic-linking": [
      [
        455,
        "cmdoption-enable-wasm-dynamic-linking"
      ]
    ],
    "--enable-wasm-pthreads": [
      [
        455,
        "cmdoption-enable-wasm-pthreads"
      ]
    ],
    "--exec-prefix": [
      [
        455,
        "cmdoption-exec-prefix"
      ]
    ],
    "--host": [
      [
        455,
        "cmdoption-host"
      ]
    ],
    "--prefix": [
      [
        455,
        "cmdoption-prefix"
      ]
    ],
    "--with-address-sanitizer": [
      [
        455,
        "cmdoption-with-address-sanitizer"
      ]
    ],
    "--with-assertions": [
      [
        455,
        "cmdoption-with-assertions"
      ]
    ],
    "--with-build-python": [
      [
        455,
        "cmdoption-with-build-python"
      ]
    ],
    "--with-builtin-hashlib-hashes": [
      [
        455,
        "cmdoption-with-builtin-hashlib-hashes"
      ]
    ],
    "--with-computed-gotos": [
      [
        455,
        "cmdoption-with-computed-gotos"
      ]
    ],
    "--with-dbmliborder": [
      [
        455,
        "cmdoption-with-dbmliborder"
      ]
    ],
    "--with-dtrace": [
      [
        455,
        "cmdoption-with-dtrace"
      ]
    ],
    "--with-emscripten-target": [
      [
        455,
        "cmdoption-with-emscripten-target"
      ]
    ],
    "--with-ensurepip": [
      [
        455,
        "cmdoption-with-ensurepip"
      ]
    ],
    "--with-framework-name": [
      [
        455,
        "cmdoption-with-framework-name"
      ]
    ],
    "--with-hash-algorithm": [
      [
        455,
        "cmdoption-with-hash-algorithm"
      ]
    ],
    "--with-libc": [
      [
        455,
        "cmdoption-with-libc"
      ]
    ],
    "--with-libm": [
      [
        455,
        "cmdoption-with-libm"
      ]
    ],
    "--with-libs": [
      [
        455,
        "cmdoption-with-libs"
      ]
    ],
    "--with-lto": [
      [
        455,
        "cmdoption-with-lto"
      ]
    ],
    "--with-memory-sanitizer": [
      [
        455,
        "cmdoption-with-memory-sanitizer"
      ]
    ],
    "--with-openssl": [
      [
        455,
        "cmdoption-with-openssl"
      ]
    ],
    "--with-openssl-rpath": [
      [
        455,
        "cmdoption-with-openssl-rpath"
      ]
    ],
    "--with-pkg-config": [
      [
        455,
        "cmdoption-with-pkg-config"
      ]
    ],
    "--with-platlibdir": [
      [
        455,
        "cmdoption-with-platlibdir"
      ]
    ],
    "--with-pydebug": [
      [
        455,
        "cmdoption-with-pydebug"
      ]
    ],
    "--with-readline": [
      [
        455,
        "cmdoption-with-readline"
      ]
    ],
    "--with-ssl-default-suites": [
      [
        455,
        "cmdoption-with-ssl-default-suites"
      ]
    ],
    "--with-strict-overflow": [
      [
        455,
        "cmdoption-with-strict-overflow"
      ]
    ],
    "--with-suffix": [
      [
        455,
        "cmdoption-with-suffix"
      ]
    ],
    "--with-system-expat": [
      [
        455,
        "cmdoption-with-system-expat"
      ]
    ],
    "--with-system-libmpdec": [
      [
        455,
        "cmdoption-with-system-libmpdec"
      ]
    ],
    "--with-trace-refs": [
      [
        455,
        "cmdoption-with-trace-refs"
      ]
    ],
    "--with-tzpath": [
      [
        455,
        "cmdoption-with-tzpath"
      ]
    ],
    "--with-undefined-behavior-sanitizer": [
      [
        455,
        "cmdoption-with-undefined-behavior-sanitizer"
      ]
    ],
    "--with-universal-archs": [
      [
        455,
        "cmdoption-with-universal-archs"
      ]
    ],
    "--with-valgrind": [
      [
        455,
        "cmdoption-with-valgrind"
      ]
    ],
    "--with-wheel-pkg-dir": [
      [
        455,
        "cmdoption-with-wheel-pkg-dir"
      ]
    ],
    "--without-c-locale-coercion": [
      [
        455,
        "cmdoption-without-c-locale-coercion"
      ]
    ],
    "--without-decimal-contextvar": [
      [
        455,
        "cmdoption-without-decimal-contextvar"
      ]
    ],
    "--without-doc-strings": [
      [
        455,
        "cmdoption-without-doc-strings"
      ]
    ],
    "--without-freelists": [
      [
        455,
        "cmdoption-without-freelists"
      ]
    ],
    "--without-pymalloc": [
      [
        455,
        "cmdoption-without-pymalloc"
      ]
    ],
    "--without-readline": [
      [
        455,
        "cmdoption-without-readline"
      ]
    ],
    "--without-static-libpython": [
      [
        455,
        "cmdoption-without-static-libpython"
      ]
    ],
    "basecflags": [
      [
        455,
        "envvar-BASECFLAGS"
      ]
    ],
    "basecppflags": [
      [
        455,
        "envvar-BASECPPFLAGS"
      ]
    ],
    "bldshared": [
      [
        455,
        "envvar-BLDSHARED"
      ]
    ],
    "cc": [
      [
        455,
        "envvar-CC"
      ],
      [
        464,
        "index-24"
      ]
    ],
    "ccshared": [
      [
        455,
        "envvar-CCSHARED"
      ]
    ],
    "cflags": [
      [
        455,
        "envvar-CFLAGS"
      ],
      [
        455,
        "index-13"
      ],
      [
        455,
        "index-14"
      ],
      [
        455,
        "index-15"
      ],
      [
        455,
        "index-16"
      ],
      [
        455,
        "index-19"
      ],
      [
        464,
        "index-25"
      ]
    ],
    "cflagsforshared": [
      [
        455,
        "envvar-CFLAGSFORSHARED"
      ]
    ],
    "cflags_aliasing": [
      [
        455,
        "envvar-CFLAGS_ALIASING"
      ]
    ],
    "cflags_nodist": [
      [
        455,
        "envvar-CFLAGS_NODIST"
      ],
      [
        455,
        "index-12"
      ],
      [
        455,
        "index-17"
      ],
      [
        455,
        "index-22"
      ]
    ],
    "compileall_opts": [
      [
        455,
        "envvar-COMPILEALL_OPTS"
      ]
    ],
    "configure_cflags": [
      [
        455,
        "envvar-CONFIGURE_CFLAGS"
      ]
    ],
    "configure_cflags_nodist": [
      [
        455,
        "envvar-CONFIGURE_CFLAGS_NODIST"
      ]
    ],
    "configure_cppflags": [
      [
        455,
        "envvar-CONFIGURE_CPPFLAGS"
      ]
    ],
    "configure_ldflags": [
      [
        455,
        "envvar-CONFIGURE_LDFLAGS"
      ]
    ],
    "configure_ldflags_nodist": [
      [
        455,
        "envvar-CONFIGURE_LDFLAGS_NODIST"
      ]
    ],
    "config_site": [
      [
        455,
        "cmdoption-arg-CONFIG_SITE"
      ]
    ],
    "cppflags": [
      [
        455,
        "envvar-CPPFLAGS"
      ],
      [
        455,
        "index-10"
      ],
      [
        455,
        "index-27"
      ],
      [
        455,
        "index-9"
      ],
      [
        464,
        "index-27"
      ]
    ],
    "cxx": [
      [
        455,
        "envvar-CXX"
      ]
    ],
    "extra_cflags": [
      [
        455,
        "envvar-EXTRA_CFLAGS"
      ]
    ],
    "ldflags": [
      [
        455,
        "envvar-LDFLAGS"
      ],
      [
        455,
        "index-11"
      ],
      [
        455,
        "index-18"
      ],
      [
        455,
        "index-20"
      ],
      [
        455,
        "index-23"
      ],
      [
        455,
        "index-24"
      ],
      [
        455,
        "index-25"
      ],
      [
        455,
        "index-28"
      ],
      [
        464,
        "index-26"
      ]
    ],
    "ldflags_nodist": [
      [
        455,
        "envvar-LDFLAGS_NODIST"
      ],
      [
        455,
        "index-21"
      ],
      [
        455,
        "index-26"
      ]
    ],
    "ldshared": [
      [
        455,
        "envvar-LDSHARED"
      ]
    ],
    "libs": [
      [
        455,
        "envvar-LIBS"
      ]
    ],
    "linkcc": [
      [
        455,
        "envvar-LINKCC"
      ]
    ],
    "opt": [
      [
        455,
        "envvar-OPT"
      ],
      [
        455,
        "index-8"
      ]
    ],
    "pep 11": [
      [
        455,
        "index-1"
      ],
      [
        460,
        "index-0"
      ],
      [
        460,
        "index-38"
      ],
      [
        469,
        "index-19"
      ],
      [
        472,
        "index-33"
      ],
      [
        477,
        "index-48"
      ],
      [
        479,
        "index-5"
      ],
      [
        482,
        "index-252"
      ],
      [
        482,
        "index-51"
      ],
      [
        482,
        "index-52"
      ]
    ],
    "profile_task": [
      [
        455,
        "envvar-PROFILE_TASK"
      ],
      [
        455,
        "index-4"
      ]
    ],
    "purify": [
      [
        455,
        "envvar-PURIFY"
      ]
    ],
    "py_builtin_module_cflags": [
      [
        455,
        "envvar-PY_BUILTIN_MODULE_CFLAGS"
      ]
    ],
    "py_cflags": [
      [
        455,
        "envvar-PY_CFLAGS"
      ]
    ],
    "py_cflags_nodist": [
      [
        455,
        "envvar-PY_CFLAGS_NODIST"
      ]
    ],
    "py_core_cflags": [
      [
        455,
        "envvar-PY_CORE_CFLAGS"
      ]
    ],
    "py_core_ldflags": [
      [
        455,
        "envvar-PY_CORE_LDFLAGS"
      ]
    ],
    "py_cppflags": [
      [
        455,
        "envvar-PY_CPPFLAGS"
      ]
    ],
    "py_ldflags": [
      [
        455,
        "envvar-PY_LDFLAGS"
      ]
    ],
    "py_ldflags_nodist": [
      [
        455,
        "envvar-PY_LDFLAGS_NODIST"
      ]
    ],
    "py_stdmodule_cflags": [
      [
        455,
        "envvar-PY_STDMODULE_CFLAGS"
      ]
    ],
    "%appdata%": [
      [
        460,
        "index-8"
      ]
    ],
    "pathext": [
      [
        460,
        "index-4"
      ],
      [
        460,
        "index-6"
      ],
      [
        476,
        "index-50"
      ],
      [
        482,
        "index-136"
      ]
    ],
    "pep 397": [
      [
        460,
        "index-19"
      ],
      [
        475,
        "index-9"
      ],
      [
        477,
        "index-22"
      ]
    ],
    "pep 514": [
      [
        460,
        "index-21"
      ],
      [
        472,
        "index-10"
      ],
      [
        482,
        "index-274"
      ],
      [
        482,
        "index-74"
      ]
    ],
    "pylauncher_allow_install": [
      [
        460,
        "index-29"
      ],
      [
        482,
        "index-0"
      ],
      [
        482,
        "index-75"
      ]
    ],
    "pylauncher_always_install": [
      [
        460,
        "index-30"
      ]
    ],
    "pylauncher_debug": [
      [
        460,
        "index-27"
      ]
    ],
    "pylauncher_dryrun": [
      [
        460,
        "index-28"
      ],
      [
        460,
        "index-31"
      ]
    ],
    "pylauncher_no_search_path": [
      [
        460,
        "index-24"
      ]
    ],
    "py_python": [
      [
        460,
        "index-26"
      ]
    ],
    "pep 100": [
      [
        461,
        "index-3"
      ]
    ],
    "pep 201": [
      [
        461,
        "index-2"
      ]
    ],
    "pep 207": [
      [
        462,
        "index-4"
      ],
      [
        462,
        "index-5"
      ]
    ],
    "pep 208": [
      [
        462,
        "index-13"
      ]
    ],
    "pep 217": [
      [
        462,
        "index-12"
      ]
    ],
    "pep 229": [
      [
        462,
        "index-8"
      ]
    ],
    "pep 230": [
      [
        462,
        "index-7"
      ]
    ],
    "pep 232": [
      [
        462,
        "index-10"
      ]
    ],
    "pep 241": [
      [
        462,
        "index-14"
      ],
      [
        462,
        "index-15"
      ],
      [
        462,
        "index-16"
      ]
    ],
    "pep 243": [
      [
        462,
        "index-17"
      ]
    ],
    "pep 234": [
      [
        463,
        "index-7"
      ]
    ],
    "pep 253": [
      [
        463,
        "index-0"
      ],
      [
        463,
        "index-1"
      ],
      [
        463,
        "index-3"
      ],
      [
        463,
        "index-5"
      ],
      [
        463,
        "index-6"
      ]
    ],
    "pep 261": [
      [
        463,
        "index-14"
      ],
      [
        463,
        "index-15"
      ]
    ],
    "pep 264": [
      [
        463,
        "index-22"
      ]
    ],
    "rfc 2487": [
      [
        463,
        "index-18"
      ]
    ],
    "pep 218": [
      [
        464,
        "index-0"
      ],
      [
        465,
        "index-0"
      ],
      [
        465,
        "index-13"
      ]
    ],
    "pep 277": [
      [
        464,
        "index-7"
      ]
    ],
    "pep 279": [
      [
        464,
        "index-10"
      ]
    ],
    "pep 285": [
      [
        464,
        "index-13"
      ],
      [
        464,
        "index-14"
      ]
    ],
    "pep 293": [
      [
        464,
        "index-15"
      ]
    ],
    "pep 301": [
      [
        464,
        "index-16"
      ]
    ],
    "what's new": [
      [
        464,
        "index-8"
      ],
      [
        465,
        "index-7"
      ],
      [
        466,
        "index-20"
      ],
      [
        467,
        "index-13"
      ]
    ],
    "pep 322": [
      [
        465,
        "index-14"
      ],
      [
        465,
        "index-6"
      ]
    ],
    "pep 327": [
      [
        465,
        "index-9"
      ]
    ],
    "pep 331": [
      [
        465,
        "index-11"
      ]
    ],
    "pep 288": [
      [
        466,
        "index-12"
      ]
    ],
    "pep 309": [
      [
        466,
        "index-3"
      ]
    ],
    "pep 314": [
      [
        466,
        "index-4"
      ]
    ],
    "pep 325": [
      [
        466,
        "index-13"
      ]
    ],
    "pep 333": [
      [
        466,
        "index-26"
      ],
      [
        466,
        "index-27"
      ]
    ],
    "pep 339": [
      [
        466,
        "index-30"
      ]
    ],
    "pep 341": [
      [
        466,
        "index-8"
      ]
    ],
    "pep 347": [
      [
        466,
        "index-28"
      ]
    ],
    "pep 352": [
      [
        466,
        "index-15"
      ],
      [
        467,
        "index-25"
      ],
      [
        469,
        "index-25"
      ]
    ],
    "pep 356": [
      [
        466,
        "index-0"
      ]
    ],
    "pep 357": [
      [
        466,
        "index-18"
      ]
    ],
    "appdata": [
      [
        467,
        "index-5"
      ]
    ],
    "pep 3000": [
      [
        467,
        "index-1"
      ]
    ],
    "pep 3100": [
      [
        467,
        "index-2"
      ]
    ],
    "pep 3110": [
      [
        467,
        "index-11"
      ],
      [
        469,
        "index-13"
      ],
      [
        469,
        "index-27"
      ]
    ],
    "pep 3127": [
      [
        467,
        "index-17"
      ]
    ],
    "pep 361": [
      [
        467,
        "index-0"
      ]
    ],
    "pep 371": [
      [
        467,
        "index-8"
      ]
    ],
    "rfc 2033": [
      [
        467,
        "index-22"
      ]
    ],
    "rfc 3207": [
      [
        467,
        "index-23"
      ]
    ],
    "ldcxxshared": [
      [
        468,
        "index-11"
      ]
    ],
    "pep 3106": [
      [
        468,
        "index-6"
      ]
    ],
    "pep 3137": [
      [
        468,
        "index-7"
      ]
    ],
    "pep 372": [
      [
        468,
        "index-2"
      ],
      [
        470,
        "index-0"
      ]
    ],
    "pep 389": [
      [
        468,
        "index-4"
      ],
      [
        474,
        "index-2"
      ]
    ],
    "pep 391": [
      [
        468,
        "index-5"
      ],
      [
        474,
        "index-3"
      ]
    ],
    "pep 466": [
      [
        468,
        "index-14"
      ],
      [
        468,
        "index-15"
      ],
      [
        468,
        "index-16"
      ],
      [
        468,
        "index-17"
      ]
    ],
    "pep 476": [
      [
        468,
        "index-22"
      ]
    ],
    "pep 477": [
      [
        468,
        "index-18"
      ]
    ],
    "pep 493": [
      [
        468,
        "index-23"
      ]
    ],
    "pep 274": [
      [
        469,
        "index-10"
      ]
    ],
    "pep 3102": [
      [
        469,
        "index-7"
      ]
    ],
    "pep 3108": [
      [
        469,
        "index-17"
      ],
      [
        469,
        "index-20"
      ],
      [
        469,
        "index-22"
      ]
    ],
    "pep 3109": [
      [
        469,
        "index-11"
      ],
      [
        469,
        "index-26"
      ]
    ],
    "pep 3111": [
      [
        469,
        "index-32"
      ]
    ],
    "pep 3113": [
      [
        469,
        "index-15"
      ]
    ],
    "pep 3114": [
      [
        469,
        "index-30"
      ]
    ],
    "pep 3123": [
      [
        469,
        "index-35"
      ]
    ],
    "pep 3138": [
      [
        469,
        "index-3"
      ]
    ],
    "pep 4": [
      [
        469,
        "index-18"
      ]
    ],
    "pep 384": [
      [
        471,
        "index-39"
      ],
      [
        474,
        "index-1"
      ],
      [
        482,
        "index-107"
      ]
    ],
    "pep 618": [
      [
        471,
        "index-26"
      ],
      [
        471,
        "index-3"
      ],
      [
        482,
        "index-150"
      ]
    ],
    "pep 624": [
      [
        471,
        "index-12"
      ],
      [
        472,
        "index-3"
      ],
      [
        472,
        "index-39"
      ],
      [
        482,
        "index-96"
      ]
    ],
    "pep 632": [
      [
        471,
        "index-10"
      ],
      [
        471,
        "index-28"
      ],
      [
        473,
        "index-2"
      ],
      [
        473,
        "index-33"
      ],
      [
        482,
        "index-37"
      ]
    ],
    "pep 635": [
      [
        471,
        "index-1"
      ],
      [
        471,
        "index-16"
      ]
    ],
    "pep 652": [
      [
        471,
        "index-36"
      ],
      [
        482,
        "index-102"
      ]
    ],
    "pep 11#tier-3": [
      [
        472,
        "index-34"
      ]
    ],
    "pep 484#annotating-instance-and-class-methods": [
      [
        472,
        "index-16"
      ]
    ],
    "pep 624#alternative-apis": [
      [
        472,
        "index-40"
      ]
    ],
    "pep 654": [
      [
        472,
        "index-30"
      ],
      [
        472,
        "index-7"
      ],
      [
        472,
        "index-8"
      ],
      [
        482,
        "index-41"
      ],
      [
        482,
        "index-79"
      ],
      [
        482,
        "index-82"
      ]
    ],
    "pep 657": [
      [
        472,
        "index-27"
      ],
      [
        472,
        "index-5"
      ],
      [
        482,
        "index-59"
      ],
      [
        482,
        "index-87"
      ]
    ],
    "pep 659": [
      [
        472,
        "index-28"
      ],
      [
        472,
        "index-29"
      ]
    ],
    "pep 670": [
      [
        472,
        "index-35"
      ],
      [
        472,
        "index-4"
      ]
    ],
    "pep 678": [
      [
        472,
        "index-9"
      ],
      [
        473,
        "index-21"
      ],
      [
        482,
        "index-23"
      ],
      [
        482,
        "index-56"
      ],
      [
        482,
        "index-9"
      ]
    ],
    "pep 680": [
      [
        472,
        "index-0"
      ],
      [
        472,
        "index-24"
      ],
      [
        482,
        "index-70"
      ]
    ],
    "pep 669": [
      [
        473,
        "index-11"
      ],
      [
        482,
        "index-10"
      ]
    ],
    "pep 683": [
      [
        473,
        "index-43"
      ],
      [
        482,
        "index-7"
      ]
    ],
    "pep 684": [
      [
        473,
        "index-44"
      ],
      [
        473,
        "index-9"
      ]
    ],
    "pep 693": [
      [
        473,
        "index-0"
      ]
    ],
    "pep 697": [
      [
        473,
        "index-40"
      ],
      [
        473,
        "index-42"
      ],
      [
        482,
        "index-22"
      ]
    ],
    "pep 699": [
      [
        473,
        "index-45"
      ],
      [
        473,
        "index-46"
      ],
      [
        482,
        "index-30"
      ]
    ],
    "pep 701": [
      [
        473,
        "index-25"
      ],
      [
        473,
        "index-27"
      ],
      [
        473,
        "index-37"
      ],
      [
        473,
        "index-38"
      ],
      [
        473,
        "index-39"
      ],
      [
        473,
        "index-6"
      ],
      [
        473,
        "index-7"
      ]
    ],
    "pep 709": [
      [
        473,
        "index-13"
      ],
      [
        473,
        "index-14"
      ],
      [
        473,
        "index-28"
      ],
      [
        482,
        "index-12"
      ]
    ],
    "pep 385": [
      [
        474,
        "index-14"
      ]
    ],
    "pep 392": [
      [
        474,
        "index-0"
      ]
    ],
    "rfc 2818": [
      [
        474,
        "index-12"
      ]
    ],
    "pep 3144": [
      [
        475,
        "index-25"
      ]
    ],
    "pep 398": [
      [
        475,
        "index-0"
      ]
    ],
    "pep 409": [
      [
        475,
        "index-13"
      ]
    ],
    "pep 418": [
      [
        475,
        "index-28"
      ]
    ],
    "rfc 1870": [
      [
        475,
        "index-27"
      ]
    ],
    "yield from (in what's new)": [
      [
        475,
        "index-11"
      ]
    ],
    "pep 247": [
      [
        476,
        "index-37"
      ]
    ],
    "pep 3156": [
      [
        476,
        "index-25"
      ],
      [
        476,
        "index-26"
      ],
      [
        476,
        "index-31"
      ],
      [
        476,
        "index-4"
      ],
      [
        476,
        "index-8"
      ]
    ],
    "pep 424": [
      [
        476,
        "index-24"
      ],
      [
        476,
        "index-38"
      ]
    ],
    "pep 429": [
      [
        476,
        "index-0"
      ]
    ],
    "pep 435": [
      [
        476,
        "index-28"
      ],
      [
        476,
        "index-29"
      ],
      [
        476,
        "index-6"
      ]
    ],
    "pep 436": [
      [
        476,
        "index-18"
      ],
      [
        476,
        "index-48"
      ],
      [
        476,
        "index-49"
      ]
    ],
    "pep 445": [
      [
        476,
        "index-17"
      ],
      [
        476,
        "index-43"
      ],
      [
        476,
        "index-44"
      ],
      [
        476,
        "index-51"
      ]
    ],
    "pep 446": [
      [
        476,
        "index-14"
      ],
      [
        476,
        "index-2"
      ],
      [
        476,
        "index-21"
      ],
      [
        476,
        "index-22"
      ]
    ],
    "pep 450": [
      [
        476,
        "index-32"
      ],
      [
        476,
        "index-33"
      ],
      [
        476,
        "index-9"
      ]
    ],
    "pep 454": [
      [
        476,
        "index-10"
      ],
      [
        476,
        "index-34"
      ],
      [
        476,
        "index-35"
      ]
    ],
    "pep 441": [
      [
        477,
        "index-29"
      ],
      [
        477,
        "index-30"
      ]
    ],
    "pep 465": [
      [
        477,
        "index-3"
      ],
      [
        477,
        "index-4"
      ],
      [
        477,
        "index-46"
      ],
      [
        482,
        "index-304"
      ]
    ],
    "pep 471": [
      [
        477,
        "index-13"
      ],
      [
        477,
        "index-14"
      ],
      [
        482,
        "index-300"
      ]
    ],
    "pep 478": [
      [
        477,
        "index-0"
      ]
    ],
    "pep 486": [
      [
        477,
        "index-21"
      ],
      [
        477,
        "index-23"
      ],
      [
        482,
        "index-301"
      ]
    ],
    "rfc 6152": [
      [
        477,
        "index-37"
      ]
    ],
    "pep 487": [
      [
        478,
        "index-13"
      ],
      [
        478,
        "index-14"
      ],
      [
        478,
        "index-15"
      ],
      [
        478,
        "index-37"
      ],
      [
        482,
        "index-251"
      ],
      [
        482,
        "index-261"
      ],
      [
        482,
        "index-270"
      ]
    ],
    "pep 494": [
      [
        478,
        "index-0"
      ]
    ],
    "pep 511": [
      [
        478,
        "index-36"
      ]
    ],
    "pep 520": [
      [
        478,
        "index-23"
      ]
    ],
    "pep 628": [
      [
        478,
        "index-29"
      ],
      [
        478,
        "index-30"
      ],
      [
        482,
        "index-272"
      ]
    ],
    "pep 545": [
      [
        479,
        "index-24"
      ],
      [
        479,
        "index-25"
      ]
    ],
    "pep 553": [
      [
        479,
        "index-13"
      ],
      [
        482,
        "index-245"
      ]
    ],
    "pep 564": [
      [
        479,
        "index-17"
      ],
      [
        479,
        "index-18"
      ],
      [
        479,
        "index-32"
      ],
      [
        482,
        "index-243"
      ]
    ],
    "pep 573": [
      [
        481,
        "index-23"
      ],
      [
        481,
        "index-6"
      ],
      [
        482,
        "index-158"
      ],
      [
        482,
        "index-163"
      ]
    ],
    "pep 596": [
      [
        481,
        "index-0"
      ]
    ],
    "pep 616": [
      [
        481,
        "index-12"
      ],
      [
        481,
        "index-4"
      ],
      [
        482,
        "index-170"
      ]
    ],
    "enablecontrolflowguard": [
      [
        482,
        "index-93"
      ]
    ],
    "pep 676": [
      [
        482,
        "index-72"
      ]
    ],
    "pep 687": [
      [
        482,
        "index-15"
      ],
      [
        482,
        "index-16"
      ],
      [
        482,
        "index-17"
      ],
      [
        482,
        "index-18"
      ],
      [
        482,
        "index-19"
      ],
      [
        482,
        "index-20"
      ],
      [
        482,
        "index-24"
      ],
      [
        482,
        "index-26"
      ],
      [
        482,
        "index-27"
      ]
    ],
    "pep 689": [
      [
        482,
        "index-28"
      ]
    ],
    "pip_user": [
      [
        482,
        "index-207"
      ]
    ],
    "pythondumprefsfile": [
      [
        482,
        "index-86"
      ]
    ],
    "pythonregrtest_unicode_guard": [
      [
        482,
        "index-63"
      ]
    ],
    "rfc 3491": [
      [
        482,
        "index-35"
      ]
    ],
    "rfc 5894": [
      [
        482,
        "index-34"
      ]
    ],
    "rfc 7538": [
      [
        482,
        "index-84"
      ]
    ],
    "rfc 9239": [
      [
        482,
        "index-43"
      ]
    ]
  },
  "docnames": [
    "about",
    "bugs",
    "c-api/abstract",
    "c-api/allocation",
    "c-api/apiabiversion",
    "c-api/arg",
    "c-api/bool",
    "c-api/buffer",
    "c-api/bytearray",
    "c-api/bytes",
    "c-api/call",
    "c-api/capsule",
    "c-api/cell",
    "c-api/code",
    "c-api/codec",
    "c-api/complex",
    "c-api/concrete",
    "c-api/contextvars",
    "c-api/conversion",
    "c-api/coro",
    "c-api/datetime",
    "c-api/descriptor",
    "c-api/dict",
    "c-api/exceptions",
    "c-api/file",
    "c-api/float",
    "c-api/frame",
    "c-api/function",
    "c-api/gcsupport",
    "c-api/gen",
    "c-api/hash",
    "c-api/import",
    "c-api/index",
    "c-api/init",
    "c-api/init_config",
    "c-api/intro",
    "c-api/iter",
    "c-api/iterator",
    "c-api/list",
    "c-api/long",
    "c-api/mapping",
    "c-api/marshal",
    "c-api/memory",
    "c-api/memoryview",
    "c-api/method",
    "c-api/module",
    "c-api/none",
    "c-api/number",
    "c-api/objbuffer",
    "c-api/object",
    "c-api/objimpl",
    "c-api/perfmaps",
    "c-api/refcounting",
    "c-api/reflection",
    "c-api/sequence",
    "c-api/set",
    "c-api/slice",
    "c-api/stable",
    "c-api/structures",
    "c-api/sys",
    "c-api/tuple",
    "c-api/type",
    "c-api/typehints",
    "c-api/typeobj",
    "c-api/unicode",
    "c-api/utilities",
    "c-api/veryhigh",
    "c-api/weakref",
    "contents",
    "copyright",
    "distributing/index",
    "extending/building",
    "extending/embedding",
    "extending/extending",
    "extending/index",
    "extending/newtypes",
    "extending/newtypes_tutorial",
    "extending/windows",
    "faq/design",
    "faq/extending",
    "faq/general",
    "faq/gui",
    "faq/index",
    "faq/installed",
    "faq/library",
    "faq/programming",
    "faq/windows",
    "glossary",
    "howto/annotations",
    "howto/argparse",
    "howto/clinic",
    "howto/cporting",
    "howto/curses",
    "howto/descriptor",
    "howto/enum",
    "howto/functional",
    "howto/gdb_helpers",
    "howto/index",
    "howto/instrumentation",
    "howto/ipaddress",
    "howto/isolating-extensions",
    "howto/logging",
    "howto/logging-cookbook",
    "howto/perf_profiling",
    "howto/pyporting",
    "howto/regex",
    "howto/sockets",
    "howto/sorting",
    "howto/unicode",
    "howto/urllib2",
    "installing/index",
    "library/2to3",
    "library/__future__",
    "library/__main__",
    "library/_thread",
    "library/abc",
    "library/aifc",
    "library/allos",
    "library/archiving",
    "library/argparse",
    "library/array",
    "library/ast",
    "library/asyncio",
    "library/asyncio-api-index",
    "library/asyncio-dev",
    "library/asyncio-eventloop",
    "library/asyncio-exceptions",
    "library/asyncio-extending",
    "library/asyncio-future",
    "library/asyncio-llapi-index",
    "library/asyncio-platforms",
    "library/asyncio-policy",
    "library/asyncio-protocol",
    "library/asyncio-queue",
    "library/asyncio-runner",
    "library/asyncio-stream",
    "library/asyncio-subprocess",
    "library/asyncio-sync",
    "library/asyncio-task",
    "library/atexit",
    "library/audioop",
    "library/audit_events",
    "library/base64",
    "library/bdb",
    "library/binary",
    "library/binascii",
    "library/bisect",
    "library/builtins",
    "library/bz2",
    "library/calendar",
    "library/cgi",
    "library/cgitb",
    "library/chunk",
    "library/cmath",
    "library/cmd",
    "library/cmdline",
    "library/code",
    "library/codecs",
    "library/codeop",
    "library/collections",
    "library/collections.abc",
    "library/colorsys",
    "library/compileall",
    "library/concurrency",
    "library/concurrent",
    "library/concurrent.futures",
    "library/configparser",
    "library/constants",
    "library/contextlib",
    "library/contextvars",
    "library/copy",
    "library/copyreg",
    "library/crypt",
    "library/crypto",
    "library/csv",
    "library/ctypes",
    "library/curses",
    "library/curses.ascii",
    "library/curses.panel",
    "library/custominterp",
    "library/dataclasses",
    "library/datatypes",
    "library/datetime",
    "library/dbm",
    "library/debug",
    "library/decimal",
    "library/development",
    "library/devmode",
    "library/dialog",
    "library/difflib",
    "library/dis",
    "library/distribution",
    "library/doctest",
    "library/email",
    "library/email.charset",
    "library/email.compat32-message",
    "library/email.contentmanager",
    "library/email.encoders",
    "library/email.errors",
    "library/email.examples",
    "library/email.generator",
    "library/email.header",
    "library/email.headerregistry",
    "library/email.iterators",
    "library/email.message",
    "library/email.mime",
    "library/email.parser",
    "library/email.policy",
    "library/email.utils",
    "library/ensurepip",
    "library/enum",
    "library/errno",
    "library/exceptions",
    "library/faulthandler",
    "library/fcntl",
    "library/filecmp",
    "library/fileformats",
    "library/fileinput",
    "library/filesys",
    "library/fnmatch",
    "library/fractions",
    "library/frameworks",
    "library/ftplib",
    "library/functional",
    "library/functions",
    "library/functools",
    "library/gc",
    "library/getopt",
    "library/getpass",
    "library/gettext",
    "library/glob",
    "library/graphlib",
    "library/grp",
    "library/gzip",
    "library/hashlib",
    "library/heapq",
    "library/hmac",
    "library/html",
    "library/html.entities",
    "library/html.parser",
    "library/http",
    "library/http.client",
    "library/http.cookiejar",
    "library/http.cookies",
    "library/http.server",
    "library/i18n",
    "library/idle",
    "library/imaplib",
    "library/imghdr",
    "library/importlib",
    "library/importlib.metadata",
    "library/importlib.resources",
    "library/importlib.resources.abc",
    "library/index",
    "library/inspect",
    "library/internet",
    "library/intro",
    "library/io",
    "library/ipaddress",
    "library/ipc",
    "library/itertools",
    "library/json",
    "library/keyword",
    "library/language",
    "library/linecache",
    "library/locale",
    "library/logging",
    "library/logging.config",
    "library/logging.handlers",
    "library/lzma",
    "library/mailbox",
    "library/mailcap",
    "library/markup",
    "library/marshal",
    "library/math",
    "library/mimetypes",
    "library/mm",
    "library/mmap",
    "library/modulefinder",
    "library/modules",
    "library/msilib",
    "library/msvcrt",
    "library/multiprocessing",
    "library/multiprocessing.shared_memory",
    "library/netdata",
    "library/netrc",
    "library/nis",
    "library/nntplib",
    "library/numbers",
    "library/numeric",
    "library/operator",
    "library/optparse",
    "library/os",
    "library/os.path",
    "library/ossaudiodev",
    "library/pathlib",
    "library/pdb",
    "library/persistence",
    "library/pickle",
    "library/pickletools",
    "library/pipes",
    "library/pkgutil",
    "library/platform",
    "library/plistlib",
    "library/poplib",
    "library/posix",
    "library/pprint",
    "library/profile",
    "library/pty",
    "library/pwd",
    "library/py_compile",
    "library/pyclbr",
    "library/pydoc",
    "library/pyexpat",
    "library/python",
    "library/queue",
    "library/quopri",
    "library/random",
    "library/re",
    "library/readline",
    "library/reprlib",
    "library/resource",
    "library/rlcompleter",
    "library/runpy",
    "library/sched",
    "library/secrets",
    "library/security_warnings",
    "library/select",
    "library/selectors",
    "library/shelve",
    "library/shlex",
    "library/shutil",
    "library/signal",
    "library/site",
    "library/smtplib",
    "library/sndhdr",
    "library/socket",
    "library/socketserver",
    "library/spwd",
    "library/sqlite3",
    "library/ssl",
    "library/stat",
    "library/statistics",
    "library/stdtypes",
    "library/string",
    "library/stringprep",
    "library/struct",
    "library/subprocess",
    "library/sunau",
    "library/superseded",
    "library/symtable",
    "library/sys",
    "library/sys.monitoring",
    "library/sys_path_init",
    "library/sysconfig",
    "library/syslog",
    "library/tabnanny",
    "library/tarfile",
    "library/telnetlib",
    "library/tempfile",
    "library/termios",
    "library/test",
    "library/text",
    "library/textwrap",
    "library/threading",
    "library/time",
    "library/timeit",
    "library/tk",
    "library/tkinter",
    "library/tkinter.colorchooser",
    "library/tkinter.dnd",
    "library/tkinter.font",
    "library/tkinter.messagebox",
    "library/tkinter.scrolledtext",
    "library/tkinter.tix",
    "library/tkinter.ttk",
    "library/token",
    "library/tokenize",
    "library/tomllib",
    "library/trace",
    "library/traceback",
    "library/tracemalloc",
    "library/tty",
    "library/turtle",
    "library/types",
    "library/typing",
    "library/unicodedata",
    "library/unittest",
    "library/unittest.mock",
    "library/unittest.mock-examples",
    "library/unix",
    "library/urllib",
    "library/urllib.error",
    "library/urllib.parse",
    "library/urllib.request",
    "library/urllib.robotparser",
    "library/uu",
    "library/uuid",
    "library/venv",
    "library/warnings",
    "library/wave",
    "library/weakref",
    "library/webbrowser",
    "library/windows",
    "library/winreg",
    "library/winsound",
    "library/wsgiref",
    "library/xdrlib",
    "library/xml",
    "library/xml.dom",
    "library/xml.dom.minidom",
    "library/xml.dom.pulldom",
    "library/xml.etree.elementtree",
    "library/xml.sax",
    "library/xml.sax.handler",
    "library/xml.sax.reader",
    "library/xml.sax.utils",
    "library/xmlrpc",
    "library/xmlrpc.client",
    "library/xmlrpc.server",
    "library/zipapp",
    "library/zipfile",
    "library/zipimport",
    "library/zlib",
    "library/zoneinfo",
    "license",
    "reference/compound_stmts",
    "reference/datamodel",
    "reference/executionmodel",
    "reference/expressions",
    "reference/grammar",
    "reference/import",
    "reference/index",
    "reference/introduction",
    "reference/lexical_analysis",
    "reference/simple_stmts",
    "reference/toplevel_components",
    "tutorial/appendix",
    "tutorial/appetite",
    "tutorial/classes",
    "tutorial/controlflow",
    "tutorial/datastructures",
    "tutorial/errors",
    "tutorial/floatingpoint",
    "tutorial/index",
    "tutorial/inputoutput",
    "tutorial/interactive",
    "tutorial/interpreter",
    "tutorial/introduction",
    "tutorial/modules",
    "tutorial/stdlib",
    "tutorial/stdlib2",
    "tutorial/venv",
    "tutorial/whatnow",
    "using/cmdline",
    "using/configure",
    "using/editors",
    "using/index",
    "using/mac",
    "using/unix",
    "using/windows",
    "whatsnew/2.0",
    "whatsnew/2.1",
    "whatsnew/2.2",
    "whatsnew/2.3",
    "whatsnew/2.4",
    "whatsnew/2.5",
    "whatsnew/2.6",
    "whatsnew/2.7",
    "whatsnew/3.0",
    "whatsnew/3.1",
    "whatsnew/3.10",
    "whatsnew/3.11",
    "whatsnew/3.12",
    "whatsnew/3.2",
    "whatsnew/3.3",
    "whatsnew/3.4",
    "whatsnew/3.5",
    "whatsnew/3.6",
    "whatsnew/3.7",
    "whatsnew/3.8",
    "whatsnew/3.9",
    "whatsnew/changelog",
    "whatsnew/index"
  ]
}
